!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABS	spice-common/spice-protocol/spice/macros.h	118;"	d
ABS	spice-common/spice-protocol/spice/macros.h	119;"	d
APP	win32/makefile	/^APP=libspice_glib.a$/;"	m
APPS	glib/makefile	/^APPS=libspice_without_gtk.a$/;"	m
APPS	spice-common/common/makefile	/^APPS=$(COMMONCLIENT)$/;"	m
AR	spice-common/common/makefile	/^AR=ar cr$/;"	m
ARRAY_CARDINALITY	win32/virt-viewer-util.h	37;"	d
ATTR_PACKED	glib/decode-glz.c	205;"	d	file:
ATTR_PACKED	glib/decode-glz.c	207;"	d	file:
ATTR_PACKED	glib/decode-glz.c	239;"	d	file:
ATTR_PACKED	spice-common/common/lz.c	386;"	d	file:
ATTR_PACKED	spice-common/common/lz.c	388;"	d	file:
ATTR_PACKED	spice-common/common/lz.c	420;"	d	file:
ATTR_PACKED	spice-common/common/quic.c	771;"	d	file:
ATTR_PACKED	spice-common/common/quic.c	773;"	d	file:
ATTR_PACKED	spice-common/common/quic.c	814;"	d	file:
AUTO_CONNECT_FAILED	glib/usb-device-manager.c	/^    AUTO_CONNECT_FAILED,$/;"	e	enum:__anon14	file:
AVABufferSinkParams	ffmpeg/include/libavfilter/buffersink.h	/^} AVABufferSinkParams;$/;"	t	typeref:struct:__anon31
AVActiveFormatDescription	ffmpeg/include/libavutil/frame.h	/^enum AVActiveFormatDescription {$/;"	g
AVAppToDevMessageType	ffmpeg/include/libavdevice/avdevice.h	/^enum AVAppToDevMessageType {$/;"	g
AVAudioFifo	ffmpeg/include/libavutil/audio_fifo.h	/^typedef struct AVAudioFifo AVAudioFifo;$/;"	t	typeref:struct:AVAudioFifo
AVAudioServiceType	ffmpeg/include/libavcodec/avcodec.h	/^enum AVAudioServiceType {$/;"	g
AVBitStreamFilter	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVBitStreamFilter {$/;"	s
AVBitStreamFilter	ffmpeg/include/libavcodec/avcodec.h	/^} AVBitStreamFilter;$/;"	t	typeref:struct:AVBitStreamFilter
AVBitStreamFilterContext	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVBitStreamFilterContext {$/;"	s
AVBitStreamFilterContext	ffmpeg/include/libavcodec/avcodec.h	/^} AVBitStreamFilterContext;$/;"	t	typeref:struct:AVBitStreamFilterContext
AVBlowfish	ffmpeg/include/libavutil/blowfish.h	/^typedef struct AVBlowfish AVBlowfish;$/;"	t	typeref:struct:AVBlowfish
AVBlowfish	ffmpeg/include/libavutil/blowfish.h	/^typedef struct AVBlowfish {$/;"	s
AVBlowfish	ffmpeg/include/libavutil/blowfish.h	/^} AVBlowfish;$/;"	t	typeref:struct:AVBlowfish
AVBuffer	ffmpeg/include/libavutil/buffer.h	/^typedef struct AVBuffer AVBuffer;$/;"	t	typeref:struct:AVBuffer
AVBufferPool	ffmpeg/include/libavutil/buffer.h	/^typedef struct AVBufferPool AVBufferPool;$/;"	t	typeref:struct:AVBufferPool
AVBufferRef	ffmpeg/include/libavutil/buffer.h	/^typedef struct AVBufferRef {$/;"	s
AVBufferRef	ffmpeg/include/libavutil/buffer.h	/^} AVBufferRef;$/;"	t	typeref:struct:AVBufferRef
AVBufferSinkParams	ffmpeg/include/libavfilter/buffersink.h	/^} AVBufferSinkParams;$/;"	t	typeref:struct:__anon30
AVCHROMA_LOC_BOTTOM	ffmpeg/include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_BOTTOM      = 6,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_BOTTOMLEFT	ffmpeg/include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_BOTTOMLEFT  = 5,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_CENTER	ffmpeg/include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_CENTER      = 2, \/\/\/< mpeg1 4:2:0, jpeg 4:2:0, h263 4:2:0$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_LEFT	ffmpeg/include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_LEFT        = 1, \/\/\/< mpeg2\/4 4:2:0, h264 default for 4:2:0$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_NB	ffmpeg/include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_NB,              \/\/\/< Not part of ABI$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_TOP	ffmpeg/include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_TOP         = 4,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_TOPLEFT	ffmpeg/include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_TOPLEFT     = 3, \/\/\/< ITU-R 601, SMPTE 274M 296M S314M(DV 4:1:1), mpeg2 4:2:2$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_UNSPECIFIED	ffmpeg/include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_UNSPECIFIED = 0,$/;"	e	enum:AVChromaLocation
AVCODEC_AVCODEC_H	ffmpeg/include/libavcodec/avcodec.h	22;"	d
AVCODEC_AVFFT_H	ffmpeg/include/libavcodec/avfft.h	20;"	d
AVCODEC_D3D11VA_H	ffmpeg/include/libavcodec/d3d11va.h	25;"	d
AVCODEC_DV_PROFILE_H	ffmpeg/include/libavcodec/dv_profile.h	20;"	d
AVCODEC_DXVA_H	ffmpeg/include/libavcodec/dxva2.h	24;"	d
AVCODEC_OLD_CODEC_IDS_H	ffmpeg/include/libavcodec/old_codec_ids.h	20;"	d
AVCODEC_QSV_H	ffmpeg/include/libavcodec/qsv.h	22;"	d
AVCODEC_VAAPI_H	ffmpeg/include/libavcodec/vaapi.h	25;"	d
AVCODEC_VDA_H	ffmpeg/include/libavcodec/vda.h	24;"	d
AVCODEC_VDPAU_H	ffmpeg/include/libavcodec/vdpau.h	25;"	d
AVCODEC_VERSION_H	ffmpeg/include/libavcodec/version.h	21;"	d
AVCODEC_VIDEOTOOLBOX_H	ffmpeg/include/libavcodec/videotoolbox.h	24;"	d
AVCODEC_VORBIS_PARSE_H	ffmpeg/include/libavcodec/vorbis_parser.h	28;"	d
AVCODEC_XVMC_H	ffmpeg/include/libavcodec/xvmc.h	22;"	d
AVCOL_PRI_BT2020	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_BT2020      = 9, \/\/\/< ITU-R BT2020$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT470BG	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_BT470BG     = 5, \/\/\/< also ITU-R BT601-6 625 \/ ITU-R BT1358 625 \/ ITU-R BT1700 625 PAL & SECAM$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT470M	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_BT470M      = 4, \/\/\/< also FCC Title 47 Code of Federal Regulations 73.682 (a)(20)$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT709	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_BT709       = 1, \/\/\/< also ITU-R BT1361 \/ IEC 61966-2-4 \/ SMPTE RP177 Annex B$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_FILM	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_FILM        = 8, \/\/\/< colour filters using Illuminant C$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_NB	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_NB,              \/\/\/< Not part of ABI$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_RESERVED	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_RESERVED    = 3,$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_RESERVED0	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_RESERVED0   = 0,$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE170M	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_SMPTE170M   = 6, \/\/\/< also ITU-R BT601-6 525 \/ ITU-R BT1358 525 \/ ITU-R BT1700 NTSC$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE240M	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_SMPTE240M   = 7, \/\/\/< functionally identical to above$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_UNSPECIFIED	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_PRI_UNSPECIFIED = 2,$/;"	e	enum:AVColorPrimaries
AVCOL_RANGE_JPEG	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_RANGE_JPEG        = 2, \/\/\/< the normal     2^n-1   "JPEG" YUV ranges$/;"	e	enum:AVColorRange
AVCOL_RANGE_MPEG	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_RANGE_MPEG        = 1, \/\/\/< the normal 219*2^(n-8) "MPEG" YUV ranges$/;"	e	enum:AVColorRange
AVCOL_RANGE_NB	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_RANGE_NB,              \/\/\/< Not part of ABI$/;"	e	enum:AVColorRange
AVCOL_RANGE_UNSPECIFIED	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_RANGE_UNSPECIFIED = 0,$/;"	e	enum:AVColorRange
AVCOL_SPC_BT2020_CL	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_BT2020_CL   = 10, \/\/\/< ITU-R BT2020 constant luminance system$/;"	e	enum:AVColorSpace
AVCOL_SPC_BT2020_NCL	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_BT2020_NCL  = 9,  \/\/\/< ITU-R BT2020 non-constant luminance system$/;"	e	enum:AVColorSpace
AVCOL_SPC_BT470BG	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_BT470BG     = 5,  \/\/\/< also ITU-R BT601-6 625 \/ ITU-R BT1358 625 \/ ITU-R BT1700 625 PAL & SECAM \/ IEC 61966-2-4 xvYCC601$/;"	e	enum:AVColorSpace
AVCOL_SPC_BT709	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_BT709       = 1,  \/\/\/< also ITU-R BT1361 \/ IEC 61966-2-4 xvYCC709 \/ SMPTE RP177 Annex B$/;"	e	enum:AVColorSpace
AVCOL_SPC_FCC	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_FCC         = 4,  \/\/\/< FCC Title 47 Code of Federal Regulations 73.682 (a)(20)$/;"	e	enum:AVColorSpace
AVCOL_SPC_NB	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_NB,               \/\/\/< Not part of ABI$/;"	e	enum:AVColorSpace
AVCOL_SPC_RESERVED	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_RESERVED    = 3,$/;"	e	enum:AVColorSpace
AVCOL_SPC_RGB	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_RGB         = 0,  \/\/\/< order of coefficients is actually GBR, also IEC 61966-2-1 (sRGB)$/;"	e	enum:AVColorSpace
AVCOL_SPC_SMPTE170M	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_SMPTE170M   = 6,  \/\/\/< also ITU-R BT601-6 525 \/ ITU-R BT1358 525 \/ ITU-R BT1700 NTSC \/ functionally identical to above$/;"	e	enum:AVColorSpace
AVCOL_SPC_SMPTE240M	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_SMPTE240M   = 7,$/;"	e	enum:AVColorSpace
AVCOL_SPC_UNSPECIFIED	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_UNSPECIFIED = 2,$/;"	e	enum:AVColorSpace
AVCOL_SPC_YCGCO	ffmpeg/include/libavutil/pixfmt.h	519;"	d
AVCOL_SPC_YCOCG	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_SPC_YCOCG       = 8,  \/\/\/< Used by Dirac \/ VC-2 and H.264 FRext, see ITU-T SG16$/;"	e	enum:AVColorSpace
AVCOL_TRC_BT1361_ECG	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_BT1361_ECG   = 12, \/\/\/< ITU-R BT1361 Extended Colour Gamut$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_BT2020_10	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_BT2020_10    = 14, \/\/\/< ITU-R BT2020 for 10 bit system$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_BT2020_12	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_BT2020_12    = 15, \/\/\/< ITU-R BT2020 for 12 bit system$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_BT709	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_BT709        = 1,  \/\/\/< also ITU-R BT1361$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_GAMMA22	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_GAMMA22      = 4,  \/\/\/< also ITU-R BT470M \/ ITU-R BT1700 625 PAL & SECAM$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_GAMMA28	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_GAMMA28      = 5,  \/\/\/< also ITU-R BT470BG$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_IEC61966_2_1	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_IEC61966_2_1 = 13, \/\/\/< IEC 61966-2-1 (sRGB or sYCC)$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_IEC61966_2_4	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_IEC61966_2_4 = 11, \/\/\/< IEC 61966-2-4$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_LINEAR	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_LINEAR       = 8,  \/\/\/< "Linear transfer characteristics"$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_LOG	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_LOG          = 9,  \/\/\/< "Logarithmic transfer characteristic (100:1 range)"$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_LOG_SQRT	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_LOG_SQRT     = 10, \/\/\/< "Logarithmic transfer characteristic (100 * Sqrt(10) : 1 range)"$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_NB	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_NB,                \/\/\/< Not part of ABI$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_RESERVED	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_RESERVED     = 3,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_RESERVED0	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_RESERVED0    = 0,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_SMPTE170M	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_SMPTE170M    = 6,  \/\/\/< also ITU-R BT601-6 525 or 625 \/ ITU-R BT1358 525 or 625 \/ ITU-R BT1700 NTSC$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_SMPTE240M	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_SMPTE240M    = 7,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_UNSPECIFIED	ffmpeg/include/libavutil/pixfmt.h	/^    AVCOL_TRC_UNSPECIFIED  = 2,$/;"	e	enum:AVColorTransferCharacteristic
AVCRC	ffmpeg/include/libavutil/crc.h	/^typedef uint32_t AVCRC;$/;"	t
AVCRCId	ffmpeg/include/libavutil/crc.h	/^}AVCRCId;$/;"	t	typeref:enum:__anon40
AVChapter	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVChapter {$/;"	s
AVChapter	ffmpeg/include/libavformat/avformat.h	/^} AVChapter;$/;"	t	typeref:struct:AVChapter
AVChromaLocation	ffmpeg/include/libavutil/pixfmt.h	/^enum AVChromaLocation {$/;"	g
AVClass	ffmpeg/include/libavutil/log.h	/^typedef struct AVClass {$/;"	s
AVClass	ffmpeg/include/libavutil/log.h	/^} AVClass;$/;"	t	typeref:struct:AVClass
AVClassCategory	ffmpeg/include/libavutil/log.h	/^}AVClassCategory;$/;"	t	typeref:enum:__anon41
AVCodec	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVCodec {$/;"	s
AVCodec	ffmpeg/include/libavcodec/avcodec.h	/^} AVCodec;$/;"	t	typeref:struct:AVCodec
AVCodecContext	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVCodecContext {$/;"	s
AVCodecContext	ffmpeg/include/libavcodec/avcodec.h	/^} AVCodecContext;$/;"	t	typeref:struct:AVCodecContext
AVCodecDefault	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVCodecDefault AVCodecDefault;$/;"	t	typeref:struct:AVCodecDefault
AVCodecDescriptor	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVCodecDescriptor {$/;"	s
AVCodecDescriptor	ffmpeg/include/libavcodec/avcodec.h	/^} AVCodecDescriptor;$/;"	t	typeref:struct:AVCodecDescriptor
AVCodecID	ffmpeg/include/libavcodec/avcodec.h	/^enum AVCodecID {$/;"	g
AVCodecParser	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVCodecParser {$/;"	s
AVCodecParser	ffmpeg/include/libavcodec/avcodec.h	/^} AVCodecParser;$/;"	t	typeref:struct:AVCodecParser
AVCodecParserContext	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVCodecParserContext {$/;"	s
AVCodecParserContext	ffmpeg/include/libavcodec/avcodec.h	/^} AVCodecParserContext;$/;"	t	typeref:struct:AVCodecParserContext
AVColorPrimaries	ffmpeg/include/libavutil/pixfmt.h	/^enum AVColorPrimaries {$/;"	g
AVColorRange	ffmpeg/include/libavutil/pixfmt.h	/^enum AVColorRange {$/;"	g
AVColorSpace	ffmpeg/include/libavutil/pixfmt.h	/^enum AVColorSpace {$/;"	g
AVColorTransferCharacteristic	ffmpeg/include/libavutil/pixfmt.h	/^enum AVColorTransferCharacteristic {$/;"	g
AVComponentDescriptor	ffmpeg/include/libavutil/pixdesc.h	/^typedef struct AVComponentDescriptor {$/;"	s
AVComponentDescriptor	ffmpeg/include/libavutil/pixdesc.h	/^} AVComponentDescriptor;$/;"	t	typeref:struct:AVComponentDescriptor
AVD3D11VAContext	ffmpeg/include/libavcodec/d3d11va.h	/^struct AVD3D11VAContext {$/;"	s
AVDEVICE_AVDEVICE_H	ffmpeg/include/libavdevice/avdevice.h	20;"	d
AVDEVICE_VERSION_H	ffmpeg/include/libavdevice/version.h	20;"	d
AVDISCARD_ALL	ffmpeg/include/libavcodec/avcodec.h	/^    AVDISCARD_ALL     = 48, \/\/\/< discard all$/;"	e	enum:AVDiscard
AVDISCARD_BIDIR	ffmpeg/include/libavcodec/avcodec.h	/^    AVDISCARD_BIDIR   = 16, \/\/\/< discard all bidirectional frames$/;"	e	enum:AVDiscard
AVDISCARD_DEFAULT	ffmpeg/include/libavcodec/avcodec.h	/^    AVDISCARD_DEFAULT =  0, \/\/\/< discard useless packets like 0 size packets in avi$/;"	e	enum:AVDiscard
AVDISCARD_NONE	ffmpeg/include/libavcodec/avcodec.h	/^    AVDISCARD_NONE    =-16, \/\/\/< discard nothing$/;"	e	enum:AVDiscard
AVDISCARD_NONINTRA	ffmpeg/include/libavcodec/avcodec.h	/^    AVDISCARD_NONINTRA= 24, \/\/\/< discard all non intra frames$/;"	e	enum:AVDiscard
AVDISCARD_NONKEY	ffmpeg/include/libavcodec/avcodec.h	/^    AVDISCARD_NONKEY  = 32, \/\/\/< discard all frames except keyframes$/;"	e	enum:AVDiscard
AVDISCARD_NONREF	ffmpeg/include/libavcodec/avcodec.h	/^    AVDISCARD_NONREF  =  8, \/\/\/< discard all non reference$/;"	e	enum:AVDiscard
AVDVProfile	ffmpeg/include/libavcodec/dv_profile.h	/^typedef struct AVDVProfile {$/;"	s
AVDVProfile	ffmpeg/include/libavcodec/dv_profile.h	/^} AVDVProfile;$/;"	t	typeref:struct:AVDVProfile
AVDevToAppMessageType	ffmpeg/include/libavdevice/avdevice.h	/^enum AVDevToAppMessageType {$/;"	g
AVDeviceCapabilitiesQuery	ffmpeg/include/libavdevice/avdevice.h	/^typedef struct AVDeviceCapabilitiesQuery {$/;"	s
AVDeviceCapabilitiesQuery	ffmpeg/include/libavdevice/avdevice.h	/^} AVDeviceCapabilitiesQuery;$/;"	t	typeref:struct:AVDeviceCapabilitiesQuery
AVDeviceInfo	ffmpeg/include/libavdevice/avdevice.h	/^typedef struct AVDeviceInfo {$/;"	s
AVDeviceInfo	ffmpeg/include/libavdevice/avdevice.h	/^} AVDeviceInfo;$/;"	t	typeref:struct:AVDeviceInfo
AVDeviceInfoList	ffmpeg/include/libavdevice/avdevice.h	/^typedef struct AVDeviceInfoList {$/;"	s
AVDeviceInfoList	ffmpeg/include/libavdevice/avdevice.h	/^} AVDeviceInfoList;$/;"	t	typeref:struct:AVDeviceInfoList
AVDeviceRect	ffmpeg/include/libavdevice/avdevice.h	/^typedef struct AVDeviceRect {$/;"	s
AVDeviceRect	ffmpeg/include/libavdevice/avdevice.h	/^} AVDeviceRect;$/;"	t	typeref:struct:AVDeviceRect
AVDictionary	ffmpeg/include/libavutil/dict.h	/^typedef struct AVDictionary AVDictionary;$/;"	t	typeref:struct:AVDictionary
AVDictionaryEntry	ffmpeg/include/libavutil/dict.h	/^typedef struct AVDictionaryEntry {$/;"	s
AVDictionaryEntry	ffmpeg/include/libavutil/dict.h	/^} AVDictionaryEntry;$/;"	t	typeref:struct:AVDictionaryEntry
AVDiscard	ffmpeg/include/libavcodec/avcodec.h	/^enum AVDiscard{$/;"	g
AVDownmixInfo	ffmpeg/include/libavutil/downmix_info.h	/^typedef struct AVDownmixInfo {$/;"	s
AVDownmixInfo	ffmpeg/include/libavutil/downmix_info.h	/^} AVDownmixInfo;$/;"	t	typeref:struct:AVDownmixInfo
AVDownmixType	ffmpeg/include/libavutil/downmix_info.h	/^enum AVDownmixType {$/;"	g
AVDurationEstimationMethod	ffmpeg/include/libavformat/avformat.h	/^enum AVDurationEstimationMethod {$/;"	g
AVERROR	ffmpeg/include/libavutil/error.h	39;"	d
AVERROR	ffmpeg/include/libavutil/error.h	43;"	d
AVERROR_BSF_NOT_FOUND	ffmpeg/include/libavutil/error.h	49;"	d
AVERROR_BUFFER_TOO_SMALL	ffmpeg/include/libavutil/error.h	51;"	d
AVERROR_BUG	ffmpeg/include/libavutil/error.h	50;"	d
AVERROR_BUG2	ffmpeg/include/libavutil/error.h	70;"	d
AVERROR_DECODER_NOT_FOUND	ffmpeg/include/libavutil/error.h	52;"	d
AVERROR_DEMUXER_NOT_FOUND	ffmpeg/include/libavutil/error.h	53;"	d
AVERROR_ENCODER_NOT_FOUND	ffmpeg/include/libavutil/error.h	54;"	d
AVERROR_EOF	ffmpeg/include/libavutil/error.h	55;"	d
AVERROR_EXIT	ffmpeg/include/libavutil/error.h	56;"	d
AVERROR_EXPERIMENTAL	ffmpeg/include/libavutil/error.h	72;"	d
AVERROR_EXTERNAL	ffmpeg/include/libavutil/error.h	57;"	d
AVERROR_FILTER_NOT_FOUND	ffmpeg/include/libavutil/error.h	58;"	d
AVERROR_HTTP_BAD_REQUEST	ffmpeg/include/libavutil/error.h	76;"	d
AVERROR_HTTP_FORBIDDEN	ffmpeg/include/libavutil/error.h	78;"	d
AVERROR_HTTP_NOT_FOUND	ffmpeg/include/libavutil/error.h	79;"	d
AVERROR_HTTP_OTHER_4XX	ffmpeg/include/libavutil/error.h	80;"	d
AVERROR_HTTP_SERVER_ERROR	ffmpeg/include/libavutil/error.h	81;"	d
AVERROR_HTTP_UNAUTHORIZED	ffmpeg/include/libavutil/error.h	77;"	d
AVERROR_INPUT_CHANGED	ffmpeg/include/libavutil/error.h	73;"	d
AVERROR_INVALIDDATA	ffmpeg/include/libavutil/error.h	59;"	d
AVERROR_MUXER_NOT_FOUND	ffmpeg/include/libavutil/error.h	60;"	d
AVERROR_OPTION_NOT_FOUND	ffmpeg/include/libavutil/error.h	61;"	d
AVERROR_OUTPUT_CHANGED	ffmpeg/include/libavutil/error.h	74;"	d
AVERROR_PATCHWELCOME	ffmpeg/include/libavutil/error.h	62;"	d
AVERROR_PROTOCOL_NOT_FOUND	ffmpeg/include/libavutil/error.h	63;"	d
AVERROR_STREAM_NOT_FOUND	ffmpeg/include/libavutil/error.h	65;"	d
AVERROR_UNKNOWN	ffmpeg/include/libavutil/error.h	71;"	d
AVEscapeMode	ffmpeg/include/libavutil/avstring.h	/^enum AVEscapeMode {$/;"	g
AVExpr	ffmpeg/include/libavutil/eval.h	/^typedef struct AVExpr AVExpr;$/;"	t	typeref:struct:AVExpr
AVFILTER_ALIGN	ffmpeg/include/libavfilter/avfilter.h	118;"	d
AVFILTER_ASRC_ABUFFER_H	ffmpeg/include/libavfilter/asrc_abuffer.h	20;"	d
AVFILTER_AUTO_CONVERT_ALL	ffmpeg/include/libavfilter/avfilter.h	/^    AVFILTER_AUTO_CONVERT_ALL  =  0, \/**< all automatic conversions enabled *\/$/;"	e	enum:__anon34
AVFILTER_AUTO_CONVERT_NONE	ffmpeg/include/libavfilter/avfilter.h	/^    AVFILTER_AUTO_CONVERT_NONE = -1, \/**< all automatic conversions disabled *\/$/;"	e	enum:__anon34
AVFILTER_AVCODEC_H	ffmpeg/include/libavfilter/avcodec.h	20;"	d
AVFILTER_AVFILTERGRAPH_H	ffmpeg/include/libavfilter/avfiltergraph.h	23;"	d
AVFILTER_AVFILTER_H	ffmpeg/include/libavfilter/avfilter.h	23;"	d
AVFILTER_BUFFERSINK_H	ffmpeg/include/libavfilter/buffersink.h	20;"	d
AVFILTER_BUFFERSRC_H	ffmpeg/include/libavfilter/buffersrc.h	21;"	d
AVFILTER_CMD_FLAG_FAST	ffmpeg/include/libavfilter/avfilter.h	964;"	d
AVFILTER_CMD_FLAG_ONE	ffmpeg/include/libavfilter/avfilter.h	963;"	d
AVFILTER_FLAG_DYNAMIC_INPUTS	ffmpeg/include/libavfilter/avfilter.h	431;"	d
AVFILTER_FLAG_DYNAMIC_OUTPUTS	ffmpeg/include/libavfilter/avfilter.h	437;"	d
AVFILTER_FLAG_SLICE_THREADS	ffmpeg/include/libavfilter/avfilter.h	442;"	d
AVFILTER_FLAG_SUPPORT_TIMELINE	ffmpeg/include/libavfilter/avfilter.h	464;"	d
AVFILTER_FLAG_SUPPORT_TIMELINE_GENERIC	ffmpeg/include/libavfilter/avfilter.h	451;"	d
AVFILTER_FLAG_SUPPORT_TIMELINE_INTERNAL	ffmpeg/include/libavfilter/avfilter.h	459;"	d
AVFILTER_THREAD_SLICE	ffmpeg/include/libavfilter/avfilter.h	628;"	d
AVFILTER_VERSION_H	ffmpeg/include/libavfilter/version.h	22;"	d
AVFMTCTX_NOHEADER	ffmpeg/include/libavformat/avformat.h	1223;"	d
AVFMT_ALLOW_FLUSH	ffmpeg/include/libavformat/avformat.h	480;"	d
AVFMT_AVOID_NEG_TS_AUTO	ffmpeg/include/libavformat/avformat.h	1565;"	d
AVFMT_AVOID_NEG_TS_MAKE_NON_NEGATIVE	ffmpeg/include/libavformat/avformat.h	1566;"	d
AVFMT_AVOID_NEG_TS_MAKE_ZERO	ffmpeg/include/libavformat/avformat.h	1567;"	d
AVFMT_DURATION_FROM_BITRATE	ffmpeg/include/libavformat/avformat.h	/^    AVFMT_DURATION_FROM_BITRATE \/\/\/< Duration estimated from bitrate (less accurate)$/;"	e	enum:AVDurationEstimationMethod
AVFMT_DURATION_FROM_PTS	ffmpeg/include/libavformat/avformat.h	/^    AVFMT_DURATION_FROM_PTS,    \/\/\/< Duration accurately estimated from PTSes$/;"	e	enum:AVDurationEstimationMethod
AVFMT_DURATION_FROM_STREAM	ffmpeg/include/libavformat/avformat.h	/^    AVFMT_DURATION_FROM_STREAM, \/\/\/< Duration estimated from a stream with a known duration$/;"	e	enum:AVDurationEstimationMethod
AVFMT_EVENT_FLAG_METADATA_UPDATED	ffmpeg/include/libavformat/avformat.h	1549;"	d
AVFMT_FLAG_BITEXACT	ffmpeg/include/libavformat/avformat.h	1391;"	d
AVFMT_FLAG_CUSTOM_IO	ffmpeg/include/libavformat/avformat.h	1382;"	d
AVFMT_FLAG_DISCARD_CORRUPT	ffmpeg/include/libavformat/avformat.h	1383;"	d
AVFMT_FLAG_FAST_SEEK	ffmpeg/include/libavformat/avformat.h	1396;"	d
AVFMT_FLAG_FLUSH_PACKETS	ffmpeg/include/libavformat/avformat.h	1384;"	d
AVFMT_FLAG_GENPTS	ffmpeg/include/libavformat/avformat.h	1375;"	d
AVFMT_FLAG_IGNDTS	ffmpeg/include/libavformat/avformat.h	1378;"	d
AVFMT_FLAG_IGNIDX	ffmpeg/include/libavformat/avformat.h	1376;"	d
AVFMT_FLAG_KEEP_SIDE_DATA	ffmpeg/include/libavformat/avformat.h	1395;"	d
AVFMT_FLAG_MP4A_LATM	ffmpeg/include/libavformat/avformat.h	1392;"	d
AVFMT_FLAG_NOBUFFER	ffmpeg/include/libavformat/avformat.h	1381;"	d
AVFMT_FLAG_NOFILLIN	ffmpeg/include/libavformat/avformat.h	1379;"	d
AVFMT_FLAG_NONBLOCK	ffmpeg/include/libavformat/avformat.h	1377;"	d
AVFMT_FLAG_NOPARSE	ffmpeg/include/libavformat/avformat.h	1380;"	d
AVFMT_FLAG_PRIV_OPT	ffmpeg/include/libavformat/avformat.h	1394;"	d
AVFMT_FLAG_SORT_DTS	ffmpeg/include/libavformat/avformat.h	1393;"	d
AVFMT_GENERIC_INDEX	ffmpeg/include/libavformat/avformat.h	472;"	d
AVFMT_GLOBALHEADER	ffmpeg/include/libavformat/avformat.h	470;"	d
AVFMT_NEEDNUMBER	ffmpeg/include/libavformat/avformat.h	466;"	d
AVFMT_NOBINSEARCH	ffmpeg/include/libavformat/avformat.h	477;"	d
AVFMT_NODIMENSIONS	ffmpeg/include/libavformat/avformat.h	475;"	d
AVFMT_NOFILE	ffmpeg/include/libavformat/avformat.h	465;"	d
AVFMT_NOGENSEARCH	ffmpeg/include/libavformat/avformat.h	478;"	d
AVFMT_NOSTREAMS	ffmpeg/include/libavformat/avformat.h	476;"	d
AVFMT_NOTIMESTAMPS	ffmpeg/include/libavformat/avformat.h	471;"	d
AVFMT_NO_BYTE_SEEK	ffmpeg/include/libavformat/avformat.h	479;"	d
AVFMT_RAWPICTURE	ffmpeg/include/libavformat/avformat.h	468;"	d
AVFMT_SEEK_TO_PTS	ffmpeg/include/libavformat/avformat.h	498;"	d
AVFMT_SHOW_IDS	ffmpeg/include/libavformat/avformat.h	467;"	d
AVFMT_TS_DISCONT	ffmpeg/include/libavformat/avformat.h	473;"	d
AVFMT_TS_NEGATIVE	ffmpeg/include/libavformat/avformat.h	489;"	d
AVFMT_TS_NONSTRICT	ffmpeg/include/libavformat/avformat.h	482;"	d
AVFMT_TS_NONSTRICT	ffmpeg/include/libavformat/avformat.h	484;"	d
AVFMT_VARIABLE_FPS	ffmpeg/include/libavformat/avformat.h	474;"	d
AVFORMAT_AVFORMAT_H	ffmpeg/include/libavformat/avformat.h	22;"	d
AVFORMAT_AVIO_H	ffmpeg/include/libavformat/avio.h	21;"	d
AVFORMAT_VERSION_H	ffmpeg/include/libavformat/version.h	22;"	d
AVFieldOrder	ffmpeg/include/libavcodec/avcodec.h	/^enum AVFieldOrder {$/;"	g
AVFifoBuffer	ffmpeg/include/libavutil/fifo.h	/^typedef struct AVFifoBuffer {$/;"	s
AVFifoBuffer	ffmpeg/include/libavutil/fifo.h	/^} AVFifoBuffer;$/;"	t	typeref:struct:AVFifoBuffer
AVFilter	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilter {$/;"	s
AVFilter	ffmpeg/include/libavfilter/avfilter.h	/^} AVFilter;$/;"	t	typeref:struct:AVFilter
AVFilterBuffer	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterBuffer {$/;"	s
AVFilterBuffer	ffmpeg/include/libavfilter/avfilter.h	/^} AVFilterBuffer;$/;"	t	typeref:struct:AVFilterBuffer
AVFilterBufferRef	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterBufferRef {$/;"	s
AVFilterBufferRef	ffmpeg/include/libavfilter/avfilter.h	/^} AVFilterBufferRef;$/;"	t	typeref:struct:AVFilterBufferRef
AVFilterBufferRefAudioProps	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterBufferRefAudioProps {$/;"	s
AVFilterBufferRefAudioProps	ffmpeg/include/libavfilter/avfilter.h	/^} AVFilterBufferRefAudioProps;$/;"	t	typeref:struct:AVFilterBufferRefAudioProps
AVFilterBufferRefVideoProps	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterBufferRefVideoProps {$/;"	s
AVFilterBufferRefVideoProps	ffmpeg/include/libavfilter/avfilter.h	/^} AVFilterBufferRefVideoProps;$/;"	t	typeref:struct:AVFilterBufferRefVideoProps
AVFilterContext	ffmpeg/include/libavfilter/avfilter.h	/^struct AVFilterContext {$/;"	s
AVFilterContext	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterContext AVFilterContext;$/;"	t	typeref:struct:AVFilterContext
AVFilterFormats	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterFormats AVFilterFormats;$/;"	t	typeref:struct:AVFilterFormats
AVFilterGraph	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterGraph {$/;"	s
AVFilterGraph	ffmpeg/include/libavfilter/avfilter.h	/^} AVFilterGraph;$/;"	t	typeref:struct:AVFilterGraph
AVFilterGraphInternal	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterGraphInternal AVFilterGraphInternal;$/;"	t	typeref:struct:AVFilterGraphInternal
AVFilterInOut	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterInOut {$/;"	s
AVFilterInOut	ffmpeg/include/libavfilter/avfilter.h	/^} AVFilterInOut;$/;"	t	typeref:struct:AVFilterInOut
AVFilterInternal	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterInternal AVFilterInternal;$/;"	t	typeref:struct:AVFilterInternal
AVFilterLink	ffmpeg/include/libavfilter/avfilter.h	/^struct AVFilterLink {$/;"	s
AVFilterLink	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterLink    AVFilterLink;$/;"	t	typeref:struct:AVFilterLink
AVFilterPad	ffmpeg/include/libavfilter/avfilter.h	/^struct AVFilterPad {$/;"	s
AVFilterPad	ffmpeg/include/libavfilter/avfilter.h	/^typedef struct AVFilterPad     AVFilterPad;$/;"	t	typeref:struct:AVFilterPad
AVFormatContext	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVFormatContext {$/;"	s
AVFormatContext	ffmpeg/include/libavformat/avformat.h	/^} AVFormatContext;$/;"	t	typeref:struct:AVFormatContext
AVFormatInternal	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVFormatInternal AVFormatInternal;$/;"	t	typeref:struct:AVFormatInternal
AVFrac	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVFrac {$/;"	s
AVFrac	ffmpeg/include/libavformat/avformat.h	/^} AVFrac;$/;"	t	typeref:struct:AVFrac
AVFrame	ffmpeg/include/libavutil/frame.h	/^typedef struct AVFrame {$/;"	s
AVFrame	ffmpeg/include/libavutil/frame.h	/^} AVFrame;$/;"	t	typeref:struct:AVFrame
AVFrameSideData	ffmpeg/include/libavutil/frame.h	/^typedef struct AVFrameSideData {$/;"	s
AVFrameSideData	ffmpeg/include/libavutil/frame.h	/^} AVFrameSideData;$/;"	t	typeref:struct:AVFrameSideData
AVFrameSideDataType	ffmpeg/include/libavutil/frame.h	/^enum AVFrameSideDataType {$/;"	g
AVHMAC	ffmpeg/include/libavutil/hmac.h	/^typedef struct AVHMAC AVHMAC;$/;"	t	typeref:struct:AVHMAC
AVHMACType	ffmpeg/include/libavutil/hmac.h	/^enum AVHMACType {$/;"	g
AVHWAccel	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVHWAccel {$/;"	s
AVHWAccel	ffmpeg/include/libavcodec/avcodec.h	/^} AVHWAccel;$/;"	t	typeref:struct:AVHWAccel
AVINDEX_KEYFRAME	ffmpeg/include/libavformat/avformat.h	783;"	d
AVIOContext	ffmpeg/include/libavformat/avio.h	/^typedef struct AVIOContext {$/;"	s
AVIOContext	ffmpeg/include/libavformat/avio.h	/^} AVIOContext;$/;"	t	typeref:struct:AVIOContext
AVIODirContext	ffmpeg/include/libavformat/avio.h	/^typedef struct AVIODirContext {$/;"	s
AVIODirContext	ffmpeg/include/libavformat/avio.h	/^} AVIODirContext;$/;"	t	typeref:struct:AVIODirContext
AVIODirEntry	ffmpeg/include/libavformat/avio.h	/^typedef struct AVIODirEntry {$/;"	s
AVIODirEntry	ffmpeg/include/libavformat/avio.h	/^} AVIODirEntry;$/;"	t	typeref:struct:AVIODirEntry
AVIODirEntryType	ffmpeg/include/libavformat/avio.h	/^enum AVIODirEntryType {$/;"	g
AVIOInterruptCB	ffmpeg/include/libavformat/avio.h	/^typedef struct AVIOInterruptCB {$/;"	s
AVIOInterruptCB	ffmpeg/include/libavformat/avio.h	/^} AVIOInterruptCB;$/;"	t	typeref:struct:AVIOInterruptCB
AVIO_ENTRY_BLOCK_DEVICE	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_BLOCK_DEVICE,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_CHARACTER_DEVICE	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_CHARACTER_DEVICE,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_DIRECTORY	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_DIRECTORY,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_FILE	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_FILE,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_NAMED_PIPE	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_NAMED_PIPE,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_SERVER	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_SERVER,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_SHARE	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_SHARE,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_SOCKET	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_SOCKET,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_SYMBOLIC_LINK	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_SYMBOLIC_LINK,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_UNKNOWN	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_UNKNOWN,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_WORKGROUP	ffmpeg/include/libavformat/avio.h	/^    AVIO_ENTRY_WORKGROUP,$/;"	e	enum:AVIODirEntryType
AVIO_FLAG_DIRECT	ffmpeg/include/libavformat/avio.h	512;"	d
AVIO_FLAG_NONBLOCK	ffmpeg/include/libavformat/avio.h	504;"	d
AVIO_FLAG_READ	ffmpeg/include/libavformat/avio.h	485;"	d
AVIO_FLAG_READ_WRITE	ffmpeg/include/libavformat/avio.h	487;"	d
AVIO_FLAG_WRITE	ffmpeg/include/libavformat/avio.h	486;"	d
AVIO_SEEKABLE_NORMAL	ffmpeg/include/libavformat/avio.h	37;"	d
AVIndexEntry	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVIndexEntry {$/;"	s
AVIndexEntry	ffmpeg/include/libavformat/avformat.h	/^} AVIndexEntry;$/;"	t	typeref:struct:AVIndexEntry
AVInputFormat	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVInputFormat {$/;"	s
AVInputFormat	ffmpeg/include/libavformat/avformat.h	/^} AVInputFormat;$/;"	t	typeref:struct:AVInputFormat
AVLFG	ffmpeg/include/libavutil/lfg.h	/^typedef struct AVLFG {$/;"	s
AVLFG	ffmpeg/include/libavutil/lfg.h	/^} AVLFG;$/;"	t	typeref:struct:AVLFG
AVLINK_INIT	ffmpeg/include/libavfilter/avfilter.h	/^        AVLINK_INIT             \/\/\/< complete$/;"	e	enum:AVFilterLink::__anon33
AVLINK_STARTINIT	ffmpeg/include/libavfilter/avfilter.h	/^        AVLINK_STARTINIT,       \/\/\/< started, but incomplete$/;"	e	enum:AVFilterLink::__anon33
AVLINK_UNINIT	ffmpeg/include/libavfilter/avfilter.h	/^        AVLINK_UNINIT = 0,      \/\/\/< not started$/;"	e	enum:AVFilterLink::__anon33
AVLockOp	ffmpeg/include/libavcodec/avcodec.h	/^enum AVLockOp {$/;"	g
AVMEDIA_TYPE_ATTACHMENT	ffmpeg/include/libavutil/avutil.h	/^    AVMEDIA_TYPE_ATTACHMENT,    \/\/\/< Opaque data information usually sparse$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_AUDIO	ffmpeg/include/libavutil/avutil.h	/^    AVMEDIA_TYPE_AUDIO,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_DATA	ffmpeg/include/libavutil/avutil.h	/^    AVMEDIA_TYPE_DATA,          \/\/\/< Opaque data information usually continuous$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_NB	ffmpeg/include/libavutil/avutil.h	/^    AVMEDIA_TYPE_NB$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_SUBTITLE	ffmpeg/include/libavutil/avutil.h	/^    AVMEDIA_TYPE_SUBTITLE,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_UNKNOWN	ffmpeg/include/libavutil/avutil.h	/^    AVMEDIA_TYPE_UNKNOWN = -1,  \/\/\/< Usually treated as AVMEDIA_TYPE_DATA$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_VIDEO	ffmpeg/include/libavutil/avutil.h	/^    AVMEDIA_TYPE_VIDEO,$/;"	e	enum:AVMediaType
AVMatrixEncoding	ffmpeg/include/libavutil/channel_layout.h	/^enum AVMatrixEncoding {$/;"	g
AVMediaType	ffmpeg/include/libavutil/avutil.h	/^enum AVMediaType {$/;"	g
AVMotionVector	ffmpeg/include/libavutil/motion_vector.h	/^typedef struct AVMotionVector {$/;"	s
AVMotionVector	ffmpeg/include/libavutil/motion_vector.h	/^} AVMotionVector;$/;"	t	typeref:struct:AVMotionVector
AVOpenCallback	ffmpeg/include/libavformat/avformat.h	/^typedef int (*AVOpenCallback)(struct AVFormatContext *s, AVIOContext **pb, const char *url, int flags,$/;"	t
AVOption	ffmpeg/include/libavutil/opt.h	/^typedef struct AVOption {$/;"	s
AVOption	ffmpeg/include/libavutil/opt.h	/^} AVOption;$/;"	t	typeref:struct:AVOption
AVOptionRange	ffmpeg/include/libavutil/opt.h	/^typedef struct AVOptionRange {$/;"	s
AVOptionRange	ffmpeg/include/libavutil/opt.h	/^} AVOptionRange;$/;"	t	typeref:struct:AVOptionRange
AVOptionRanges	ffmpeg/include/libavutil/opt.h	/^typedef struct AVOptionRanges {$/;"	s
AVOptionRanges	ffmpeg/include/libavutil/opt.h	/^} AVOptionRanges;$/;"	t	typeref:struct:AVOptionRanges
AVOptionType	ffmpeg/include/libavutil/opt.h	/^enum AVOptionType{$/;"	g
AVOutputFormat	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVOutputFormat {$/;"	s
AVOutputFormat	ffmpeg/include/libavformat/avformat.h	/^} AVOutputFormat;$/;"	t	typeref:struct:AVOutputFormat
AVPALETTE_COUNT	ffmpeg/include/libavutil/pixfmt.h	34;"	d
AVPALETTE_SIZE	ffmpeg/include/libavutil/pixfmt.h	33;"	d
AVPROBE_PADDING_SIZE	ffmpeg/include/libavformat/avformat.h	462;"	d
AVPROBE_SCORE_EXTENSION	ffmpeg/include/libavformat/avformat.h	458;"	d
AVPROBE_SCORE_MAX	ffmpeg/include/libavformat/avformat.h	460;"	d
AVPROBE_SCORE_MIME	ffmpeg/include/libavformat/avformat.h	459;"	d
AVPROBE_SCORE_RETRY	ffmpeg/include/libavformat/avformat.h	455;"	d
AVPROBE_SCORE_STREAM_RETRY	ffmpeg/include/libavformat/avformat.h	456;"	d
AVPacket	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVPacket {$/;"	s
AVPacket	ffmpeg/include/libavcodec/avcodec.h	/^} AVPacket;$/;"	t	typeref:struct:AVPacket
AVPacketList	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVPacketList {$/;"	s
AVPacketList	ffmpeg/include/libavformat/avformat.h	/^} AVPacketList;$/;"	t	typeref:struct:AVPacketList
AVPacketSideData	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVPacketSideData {$/;"	s
AVPacketSideData	ffmpeg/include/libavcodec/avcodec.h	/^} AVPacketSideData;$/;"	t	typeref:struct:AVPacketSideData
AVPacketSideDataType	ffmpeg/include/libavcodec/avcodec.h	/^enum AVPacketSideDataType {$/;"	g
AVPanScan	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVPanScan{$/;"	s
AVPanScan	ffmpeg/include/libavcodec/avcodec.h	/^}AVPanScan;$/;"	t	typeref:struct:AVPanScan
AVPicture	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVPicture {$/;"	s
AVPicture	ffmpeg/include/libavcodec/avcodec.h	/^} AVPicture;$/;"	t	typeref:struct:AVPicture
AVPictureStructure	ffmpeg/include/libavcodec/avcodec.h	/^enum AVPictureStructure {$/;"	g
AVPictureType	ffmpeg/include/libavutil/avutil.h	/^enum AVPictureType {$/;"	g
AVPixFmtDescriptor	ffmpeg/include/libavutil/pixdesc.h	/^typedef struct AVPixFmtDescriptor {$/;"	s
AVPixFmtDescriptor	ffmpeg/include/libavutil/pixdesc.h	/^} AVPixFmtDescriptor;$/;"	t	typeref:struct:AVPixFmtDescriptor
AVPixelFormat	ffmpeg/include/libavutil/pixfmt.h	/^enum AVPixelFormat {$/;"	g
AVProbeData	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVProbeData {$/;"	s
AVProbeData	ffmpeg/include/libavformat/avformat.h	/^} AVProbeData;$/;"	t	typeref:struct:AVProbeData
AVProfile	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVProfile {$/;"	s
AVProfile	ffmpeg/include/libavcodec/avcodec.h	/^} AVProfile;$/;"	t	typeref:struct:AVProfile
AVProgram	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVProgram {$/;"	s
AVProgram	ffmpeg/include/libavformat/avformat.h	/^} AVProgram;$/;"	t	typeref:struct:AVProgram
AVQSVContext	ffmpeg/include/libavcodec/qsv.h	/^typedef struct AVQSVContext {$/;"	s
AVQSVContext	ffmpeg/include/libavcodec/qsv.h	/^} AVQSVContext;$/;"	t	typeref:struct:AVQSVContext
AVRational	ffmpeg/include/libavutil/rational.h	/^typedef struct AVRational{$/;"	s
AVRational	ffmpeg/include/libavutil/rational.h	/^} AVRational;$/;"	t	typeref:struct:AVRational
AVReplayGain	ffmpeg/include/libavutil/replaygain.h	/^typedef struct AVReplayGain {$/;"	s
AVReplayGain	ffmpeg/include/libavutil/replaygain.h	/^} AVReplayGain;$/;"	t	typeref:struct:AVReplayGain
AVRounding	ffmpeg/include/libavutil/mathematics.h	/^enum AVRounding {$/;"	g
AVSEEK_FLAG_ANY	ffmpeg/include/libavformat/avformat.h	2259;"	d
AVSEEK_FLAG_BACKWARD	ffmpeg/include/libavformat/avformat.h	2257;"	d
AVSEEK_FLAG_BYTE	ffmpeg/include/libavformat/avformat.h	2258;"	d
AVSEEK_FLAG_FRAME	ffmpeg/include/libavformat/avformat.h	2260;"	d
AVSEEK_FORCE	ffmpeg/include/libavformat/avio.h	372;"	d
AVSEEK_SIZE	ffmpeg/include/libavformat/avio.h	364;"	d
AVSTREAM_EVENT_FLAG_METADATA_UPDATED	ffmpeg/include/libavformat/avformat.h	958;"	d
AVSTREAM_PARSE_FULL	ffmpeg/include/libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL,       \/**< full parsing and repack *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_FULL_ONCE	ffmpeg/include/libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL_ONCE,  \/**< full parsing and repack of the first frame only, only implemented for H.264 currently *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_FULL_RAW	ffmpeg/include/libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL_RAW=MKTAG(0,'R','A','W'),       \/**< full parsing and repack with timestamp and position generation by parser for raw$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_HEADERS	ffmpeg/include/libavformat/avformat.h	/^    AVSTREAM_PARSE_HEADERS,    \/**< Only parse headers, do not repack. *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_NONE	ffmpeg/include/libavformat/avformat.h	/^    AVSTREAM_PARSE_NONE,$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_TIMESTAMPS	ffmpeg/include/libavformat/avformat.h	/^    AVSTREAM_PARSE_TIMESTAMPS, \/**< full parsing and interpolation of timestamps for frames not starting on a packet boundary *\/$/;"	e	enum:AVStreamParseType
AVSampleFormat	ffmpeg/include/libavutil/samplefmt.h	/^enum AVSampleFormat {$/;"	g
AVSideDataParamChangeFlags	ffmpeg/include/libavcodec/avcodec.h	/^enum AVSideDataParamChangeFlags {$/;"	g
AVStereo3D	ffmpeg/include/libavutil/stereo3d.h	/^typedef struct AVStereo3D {$/;"	s
AVStereo3D	ffmpeg/include/libavutil/stereo3d.h	/^} AVStereo3D;$/;"	t	typeref:struct:AVStereo3D
AVStereo3DType	ffmpeg/include/libavutil/stereo3d.h	/^enum AVStereo3DType {$/;"	g
AVStream	ffmpeg/include/libavformat/avformat.h	/^typedef struct AVStream {$/;"	s
AVStream	ffmpeg/include/libavformat/avformat.h	/^} AVStream;$/;"	t	typeref:struct:AVStream
AVStreamParseType	ffmpeg/include/libavformat/avformat.h	/^enum AVStreamParseType {$/;"	g
AVSubtitle	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVSubtitle {$/;"	s
AVSubtitle	ffmpeg/include/libavcodec/avcodec.h	/^} AVSubtitle;$/;"	t	typeref:struct:AVSubtitle
AVSubtitleRect	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct AVSubtitleRect {$/;"	s
AVSubtitleRect	ffmpeg/include/libavcodec/avcodec.h	/^} AVSubtitleRect;$/;"	t	typeref:struct:AVSubtitleRect
AVSubtitleType	ffmpeg/include/libavcodec/avcodec.h	/^enum AVSubtitleType {$/;"	g
AVThreadMessageFlags	ffmpeg/include/libavutil/threadmessage.h	/^typedef enum AVThreadMessageFlags {$/;"	g
AVThreadMessageFlags	ffmpeg/include/libavutil/threadmessage.h	/^} AVThreadMessageFlags;$/;"	t	typeref:enum:AVThreadMessageFlags
AVThreadMessageQueue	ffmpeg/include/libavutil/threadmessage.h	/^typedef struct AVThreadMessageQueue AVThreadMessageQueue;$/;"	t	typeref:struct:AVThreadMessageQueue
AVTimecode	ffmpeg/include/libavutil/timecode.h	/^} AVTimecode;$/;"	t	typeref:struct:__anon37
AVTimecodeFlag	ffmpeg/include/libavutil/timecode.h	/^enum AVTimecodeFlag {$/;"	g
AVUNERROR	ffmpeg/include/libavutil/error.h	40;"	d
AVUNERROR	ffmpeg/include/libavutil/error.h	44;"	d
AVUTIL_ADLER32_H	ffmpeg/include/libavutil/adler32.h	22;"	d
AVUTIL_AES_H	ffmpeg/include/libavutil/aes.h	22;"	d
AVUTIL_ATTRIBUTES_H	ffmpeg/include/libavutil/attributes.h	27;"	d
AVUTIL_AUDIO_FIFO_H	ffmpeg/include/libavutil/audio_fifo.h	28;"	d
AVUTIL_AVASSERT_H	ffmpeg/include/libavutil/avassert.h	28;"	d
AVUTIL_AVCONFIG_H	ffmpeg/include/libavutil/avconfig.h	3;"	d
AVUTIL_AVSTRING_H	ffmpeg/include/libavutil/avstring.h	22;"	d
AVUTIL_AVUTIL_H	ffmpeg/include/libavutil/avutil.h	22;"	d
AVUTIL_BASE64_H	ffmpeg/include/libavutil/base64.h	22;"	d
AVUTIL_BLOWFISH_H	ffmpeg/include/libavutil/blowfish.h	23;"	d
AVUTIL_BPRINT_H	ffmpeg/include/libavutil/bprint.h	22;"	d
AVUTIL_BSWAP_H	ffmpeg/include/libavutil/bswap.h	27;"	d
AVUTIL_BUFFER_H	ffmpeg/include/libavutil/buffer.h	26;"	d
AVUTIL_CAMELLIA_H	ffmpeg/include/libavutil/camellia.h	23;"	d
AVUTIL_CAST5_H	ffmpeg/include/libavutil/cast5.h	23;"	d
AVUTIL_CHANNEL_LAYOUT_H	ffmpeg/include/libavutil/channel_layout.h	23;"	d
AVUTIL_COMMON_H	ffmpeg/include/libavutil/common.h	27;"	d
AVUTIL_CPU_H	ffmpeg/include/libavutil/cpu.h	22;"	d
AVUTIL_CRC_H	ffmpeg/include/libavutil/crc.h	22;"	d
AVUTIL_DICT_H	ffmpeg/include/libavutil/dict.h	32;"	d
AVUTIL_DISPLAY_H	ffmpeg/include/libavutil/display.h	22;"	d
AVUTIL_DOWNMIX_INFO_H	ffmpeg/include/libavutil/downmix_info.h	22;"	d
AVUTIL_ERROR_H	ffmpeg/include/libavutil/error.h	25;"	d
AVUTIL_EVAL_H	ffmpeg/include/libavutil/eval.h	27;"	d
AVUTIL_FFVERSION_H	ffmpeg/include/libavutil/ffversion.h	2;"	d
AVUTIL_FIFO_H	ffmpeg/include/libavutil/fifo.h	25;"	d
AVUTIL_FILE_H	ffmpeg/include/libavutil/file.h	20;"	d
AVUTIL_FRAME_H	ffmpeg/include/libavutil/frame.h	27;"	d
AVUTIL_HASH_H	ffmpeg/include/libavutil/hash.h	22;"	d
AVUTIL_HMAC_H	ffmpeg/include/libavutil/hmac.h	22;"	d
AVUTIL_IMGUTILS_H	ffmpeg/include/libavutil/imgutils.h	20;"	d
AVUTIL_INTFLOAT_H	ffmpeg/include/libavutil/intfloat.h	22;"	d
AVUTIL_INTREADWRITE_H	ffmpeg/include/libavutil/intreadwrite.h	20;"	d
AVUTIL_LFG_H	ffmpeg/include/libavutil/lfg.h	23;"	d
AVUTIL_LOG_H	ffmpeg/include/libavutil/log.h	22;"	d
AVUTIL_LZO_H	ffmpeg/include/libavutil/lzo.h	23;"	d
AVUTIL_MACROS_H	ffmpeg/include/libavutil/macros.h	26;"	d
AVUTIL_MATHEMATICS_H	ffmpeg/include/libavutil/mathematics.h	22;"	d
AVUTIL_MD5_H	ffmpeg/include/libavutil/md5.h	22;"	d
AVUTIL_MEM_H	ffmpeg/include/libavutil/mem.h	27;"	d
AVUTIL_MOTION_VECTOR_H	ffmpeg/include/libavutil/motion_vector.h	20;"	d
AVUTIL_MURMUR3_H	ffmpeg/include/libavutil/murmur3.h	22;"	d
AVUTIL_OLD_PIX_FMTS_H	ffmpeg/include/libavutil/old_pix_fmts.h	22;"	d
AVUTIL_OPT_H	ffmpeg/include/libavutil/opt.h	23;"	d
AVUTIL_PARSEUTILS_H	ffmpeg/include/libavutil/parseutils.h	20;"	d
AVUTIL_PIXDESC_H	ffmpeg/include/libavutil/pixdesc.h	23;"	d
AVUTIL_PIXELUTILS_H	ffmpeg/include/libavutil/pixelutils.h	20;"	d
AVUTIL_PIXFMT_H	ffmpeg/include/libavutil/pixfmt.h	22;"	d
AVUTIL_RANDOM_SEED_H	ffmpeg/include/libavutil/random_seed.h	22;"	d
AVUTIL_RATIONAL_H	ffmpeg/include/libavutil/rational.h	29;"	d
AVUTIL_REPLAYGAIN_H	ffmpeg/include/libavutil/replaygain.h	21;"	d
AVUTIL_RIPEMD_H	ffmpeg/include/libavutil/ripemd.h	23;"	d
AVUTIL_SAMPLEFMT_H	ffmpeg/include/libavutil/samplefmt.h	20;"	d
AVUTIL_SHA512_H	ffmpeg/include/libavutil/sha512.h	23;"	d
AVUTIL_SHA_H	ffmpeg/include/libavutil/sha.h	22;"	d
AVUTIL_STEREO3D_H	ffmpeg/include/libavutil/stereo3d.h	22;"	d
AVUTIL_TEA_H	ffmpeg/include/libavutil/tea.h	23;"	d
AVUTIL_THREADMESSAGE_H	ffmpeg/include/libavutil/threadmessage.h	20;"	d
AVUTIL_TIMECODE_H	ffmpeg/include/libavutil/timecode.h	28;"	d
AVUTIL_TIMESTAMP_H	ffmpeg/include/libavutil/timestamp.h	25;"	d
AVUTIL_TIME_H	ffmpeg/include/libavutil/time.h	22;"	d
AVUTIL_TWOFISH_H	ffmpeg/include/libavutil/twofish.h	23;"	d
AVUTIL_VERSION_H	ffmpeg/include/libavutil/version.h	22;"	d
AVUTIL_XTEA_H	ffmpeg/include/libavutil/xtea.h	23;"	d
AVVDAContext	ffmpeg/include/libavcodec/vda.h	/^typedef struct AVVDAContext {$/;"	s
AVVDAContext	ffmpeg/include/libavcodec/vda.h	/^} AVVDAContext;$/;"	t	typeref:struct:AVVDAContext
AVVDPAUContext	ffmpeg/include/libavcodec/vdpau.h	/^typedef struct AVVDPAUContext {$/;"	s
AVVDPAUContext	ffmpeg/include/libavcodec/vdpau.h	/^} AVVDPAUContext;$/;"	t	typeref:struct:AVVDPAUContext
AVVDPAUPictureInfo	ffmpeg/include/libavcodec/vdpau.h	/^union AVVDPAUPictureInfo {$/;"	u
AVVDPAU_Render2	ffmpeg/include/libavcodec/vdpau.h	/^typedef int (*AVVDPAU_Render2)(struct AVCodecContext *, struct AVFrame *,$/;"	t
AVVideotoolboxContext	ffmpeg/include/libavcodec/videotoolbox.h	/^typedef struct AVVideotoolboxContext {$/;"	s
AVVideotoolboxContext	ffmpeg/include/libavcodec/videotoolbox.h	/^} AVVideotoolboxContext;$/;"	t	typeref:struct:AVVideotoolboxContext
AVVorbisParseContext	ffmpeg/include/libavcodec/vorbis_parser.h	/^typedef struct AVVorbisParseContext AVVorbisParseContext;$/;"	t	typeref:struct:AVVorbisParseContext
AVXTEA	ffmpeg/include/libavutil/xtea.h	/^typedef struct AVXTEA AVXTEA;$/;"	t	typeref:struct:AVXTEA
AVXTEA	ffmpeg/include/libavutil/xtea.h	/^typedef struct AVXTEA {$/;"	s
AVXTEA	ffmpeg/include/libavutil/xtea.h	/^} AVXTEA;$/;"	t	typeref:struct:AVXTEA
AV_AFD_14_9	ffmpeg/include/libavutil/frame.h	/^    AV_AFD_14_9         = 11,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_16_9	ffmpeg/include/libavutil/frame.h	/^    AV_AFD_16_9         = 10,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_16_9_SP_14_9	ffmpeg/include/libavutil/frame.h	/^    AV_AFD_16_9_SP_14_9 = 14,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_4_3	ffmpeg/include/libavutil/frame.h	/^    AV_AFD_4_3          = 9,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_4_3_SP_14_9	ffmpeg/include/libavutil/frame.h	/^    AV_AFD_4_3_SP_14_9  = 13,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_SAME	ffmpeg/include/libavutil/frame.h	/^    AV_AFD_SAME         = 8,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_SP_4_3	ffmpeg/include/libavutil/frame.h	/^    AV_AFD_SP_4_3       = 15,$/;"	e	enum:AVActiveFormatDescription
AV_APP_TO_DEV_GET_MUTE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_GET_MUTE   = MKBETAG('G', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_GET_VOLUME	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_GET_VOLUME = MKBETAG('G', 'V', 'O', 'L'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_MUTE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_MUTE        = MKBETAG(' ', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_NONE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_NONE = MKBETAG('N','O','N','E'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_PAUSE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_PAUSE        = MKBETAG('P', 'A', 'U', ' '),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_PLAY	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_PLAY         = MKBETAG('P', 'L', 'A', 'Y'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_SET_VOLUME	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_SET_VOLUME = MKBETAG('S', 'V', 'O', 'L'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_TOGGLE_MUTE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_TOGGLE_MUTE = MKBETAG('T', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_TOGGLE_PAUSE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_TOGGLE_PAUSE = MKBETAG('P', 'A', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_UNMUTE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_UNMUTE      = MKBETAG('U', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_WINDOW_REPAINT	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_WINDOW_REPAINT = MKBETAG('R','E','P','A'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_WINDOW_SIZE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_WINDOW_SIZE = MKBETAG('G','E','O','M'),$/;"	e	enum:AVAppToDevMessageType
AV_AUDIO_SERVICE_TYPE_COMMENTARY	ffmpeg/include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_COMMENTARY        = 5,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_DIALOGUE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_DIALOGUE          = 4,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_EFFECTS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_EFFECTS           = 1,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_EMERGENCY	ffmpeg/include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_EMERGENCY         = 6,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED  = 3,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_KARAOKE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_KARAOKE           = 8,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_MAIN	ffmpeg/include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_MAIN              = 0,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_NB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_NB                   , \/\/\/< Not part of ABI$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED = 2,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_VOICE_OVER	ffmpeg/include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_VOICE_OVER        = 7,$/;"	e	enum:AVAudioServiceType
AV_BASE64_SIZE	ffmpeg/include/libavutil/base64.h	61;"	d
AV_BE2NE16C	ffmpeg/include/libavutil/bswap.h	102;"	d
AV_BE2NE32C	ffmpeg/include/libavutil/bswap.h	103;"	d
AV_BE2NE64C	ffmpeg/include/libavutil/bswap.h	104;"	d
AV_BE2NEC	ffmpeg/include/libavutil/bswap.h	89;"	d
AV_BE2NEC	ffmpeg/include/libavutil/bswap.h	98;"	d
AV_BF_ROUNDS	ffmpeg/include/libavutil/blowfish.h	35;"	d
AV_BPRINT_SIZE_AUTOMATIC	ffmpeg/include/libavutil/bprint.h	95;"	d
AV_BPRINT_SIZE_COUNT_ONLY	ffmpeg/include/libavutil/bprint.h	96;"	d
AV_BPRINT_SIZE_UNLIMITED	ffmpeg/include/libavutil/bprint.h	94;"	d
AV_BSWAP16C	ffmpeg/include/libavutil/bswap.h	51;"	d
AV_BSWAP32C	ffmpeg/include/libavutil/bswap.h	52;"	d
AV_BSWAP64C	ffmpeg/include/libavutil/bswap.h	53;"	d
AV_BSWAPC	ffmpeg/include/libavutil/bswap.h	55;"	d
AV_BUFFERSINK_FLAG_NO_REQUEST	ffmpeg/include/libavfilter/buffersink.h	117;"	d
AV_BUFFERSINK_FLAG_PEEK	ffmpeg/include/libavfilter/buffersink.h	110;"	d
AV_BUFFERSRC_FLAG_KEEP_REF	ffmpeg/include/libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_KEEP_REF = 8,$/;"	e	enum:__anon32
AV_BUFFERSRC_FLAG_NO_CHECK_FORMAT	ffmpeg/include/libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_NO_CHECK_FORMAT = 1,$/;"	e	enum:__anon32
AV_BUFFERSRC_FLAG_NO_COPY	ffmpeg/include/libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_NO_COPY = 2,$/;"	e	enum:__anon32
AV_BUFFERSRC_FLAG_PUSH	ffmpeg/include/libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_PUSH = 4,$/;"	e	enum:__anon32
AV_BUFFER_FLAG_READONLY	ffmpeg/include/libavutil/buffer.h	113;"	d
AV_CH_BACK_CENTER	ffmpeg/include/libavutil/channel_layout.h	57;"	d
AV_CH_BACK_LEFT	ffmpeg/include/libavutil/channel_layout.h	53;"	d
AV_CH_BACK_RIGHT	ffmpeg/include/libavutil/channel_layout.h	54;"	d
AV_CH_FRONT_CENTER	ffmpeg/include/libavutil/channel_layout.h	51;"	d
AV_CH_FRONT_LEFT	ffmpeg/include/libavutil/channel_layout.h	49;"	d
AV_CH_FRONT_LEFT_OF_CENTER	ffmpeg/include/libavutil/channel_layout.h	55;"	d
AV_CH_FRONT_RIGHT	ffmpeg/include/libavutil/channel_layout.h	50;"	d
AV_CH_FRONT_RIGHT_OF_CENTER	ffmpeg/include/libavutil/channel_layout.h	56;"	d
AV_CH_LAYOUT_2POINT1	ffmpeg/include/libavutil/channel_layout.h	87;"	d
AV_CH_LAYOUT_2_1	ffmpeg/include/libavutil/channel_layout.h	88;"	d
AV_CH_LAYOUT_2_2	ffmpeg/include/libavutil/channel_layout.h	93;"	d
AV_CH_LAYOUT_3POINT1	ffmpeg/include/libavutil/channel_layout.h	90;"	d
AV_CH_LAYOUT_4POINT0	ffmpeg/include/libavutil/channel_layout.h	91;"	d
AV_CH_LAYOUT_4POINT1	ffmpeg/include/libavutil/channel_layout.h	92;"	d
AV_CH_LAYOUT_5POINT0	ffmpeg/include/libavutil/channel_layout.h	95;"	d
AV_CH_LAYOUT_5POINT0_BACK	ffmpeg/include/libavutil/channel_layout.h	97;"	d
AV_CH_LAYOUT_5POINT1	ffmpeg/include/libavutil/channel_layout.h	96;"	d
AV_CH_LAYOUT_5POINT1_BACK	ffmpeg/include/libavutil/channel_layout.h	98;"	d
AV_CH_LAYOUT_6POINT0	ffmpeg/include/libavutil/channel_layout.h	99;"	d
AV_CH_LAYOUT_6POINT0_FRONT	ffmpeg/include/libavutil/channel_layout.h	100;"	d
AV_CH_LAYOUT_6POINT1	ffmpeg/include/libavutil/channel_layout.h	102;"	d
AV_CH_LAYOUT_6POINT1_BACK	ffmpeg/include/libavutil/channel_layout.h	103;"	d
AV_CH_LAYOUT_6POINT1_FRONT	ffmpeg/include/libavutil/channel_layout.h	104;"	d
AV_CH_LAYOUT_7POINT0	ffmpeg/include/libavutil/channel_layout.h	105;"	d
AV_CH_LAYOUT_7POINT0_FRONT	ffmpeg/include/libavutil/channel_layout.h	106;"	d
AV_CH_LAYOUT_7POINT1	ffmpeg/include/libavutil/channel_layout.h	107;"	d
AV_CH_LAYOUT_7POINT1_WIDE	ffmpeg/include/libavutil/channel_layout.h	108;"	d
AV_CH_LAYOUT_7POINT1_WIDE_BACK	ffmpeg/include/libavutil/channel_layout.h	109;"	d
AV_CH_LAYOUT_HEXAGONAL	ffmpeg/include/libavutil/channel_layout.h	101;"	d
AV_CH_LAYOUT_MONO	ffmpeg/include/libavutil/channel_layout.h	85;"	d
AV_CH_LAYOUT_NATIVE	ffmpeg/include/libavutil/channel_layout.h	78;"	d
AV_CH_LAYOUT_OCTAGONAL	ffmpeg/include/libavutil/channel_layout.h	110;"	d
AV_CH_LAYOUT_QUAD	ffmpeg/include/libavutil/channel_layout.h	94;"	d
AV_CH_LAYOUT_STEREO	ffmpeg/include/libavutil/channel_layout.h	86;"	d
AV_CH_LAYOUT_STEREO_DOWNMIX	ffmpeg/include/libavutil/channel_layout.h	111;"	d
AV_CH_LAYOUT_SURROUND	ffmpeg/include/libavutil/channel_layout.h	89;"	d
AV_CH_LOW_FREQUENCY	ffmpeg/include/libavutil/channel_layout.h	52;"	d
AV_CH_LOW_FREQUENCY_2	ffmpeg/include/libavutil/channel_layout.h	73;"	d
AV_CH_SIDE_LEFT	ffmpeg/include/libavutil/channel_layout.h	58;"	d
AV_CH_SIDE_RIGHT	ffmpeg/include/libavutil/channel_layout.h	59;"	d
AV_CH_STEREO_LEFT	ffmpeg/include/libavutil/channel_layout.h	67;"	d
AV_CH_STEREO_RIGHT	ffmpeg/include/libavutil/channel_layout.h	68;"	d
AV_CH_SURROUND_DIRECT_LEFT	ffmpeg/include/libavutil/channel_layout.h	71;"	d
AV_CH_SURROUND_DIRECT_RIGHT	ffmpeg/include/libavutil/channel_layout.h	72;"	d
AV_CH_TOP_BACK_CENTER	ffmpeg/include/libavutil/channel_layout.h	65;"	d
AV_CH_TOP_BACK_LEFT	ffmpeg/include/libavutil/channel_layout.h	64;"	d
AV_CH_TOP_BACK_RIGHT	ffmpeg/include/libavutil/channel_layout.h	66;"	d
AV_CH_TOP_CENTER	ffmpeg/include/libavutil/channel_layout.h	60;"	d
AV_CH_TOP_FRONT_CENTER	ffmpeg/include/libavutil/channel_layout.h	62;"	d
AV_CH_TOP_FRONT_LEFT	ffmpeg/include/libavutil/channel_layout.h	61;"	d
AV_CH_TOP_FRONT_RIGHT	ffmpeg/include/libavutil/channel_layout.h	63;"	d
AV_CH_WIDE_LEFT	ffmpeg/include/libavutil/channel_layout.h	69;"	d
AV_CH_WIDE_RIGHT	ffmpeg/include/libavutil/channel_layout.h	70;"	d
AV_CLASS_CATEGORY_BITSTREAM_FILTER	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_BITSTREAM_FILTER,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_DECODER	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DECODER,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_DEMUXER	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEMUXER,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_DEVICE_INPUT	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_INPUT,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_DEVICE_OUTPUT	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_OUTPUT,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT = 40,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_ENCODER	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_ENCODER,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_FILTER	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_FILTER,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_INPUT	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_INPUT,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_MUXER	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_MUXER,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_NA	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_NA = 0,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_NB	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_NB, \/\/\/< not part of ABI\/API$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_OUTPUT	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_OUTPUT,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_SWRESAMPLER	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_SWRESAMPLER,$/;"	e	enum:__anon41
AV_CLASS_CATEGORY_SWSCALER	ffmpeg/include/libavutil/log.h	/^    AV_CLASS_CATEGORY_SWSCALER,$/;"	e	enum:__anon41
AV_CODEC_CAP_AUTO_THREADS	ffmpeg/include/libavcodec/avcodec.h	931;"	d
AV_CODEC_CAP_CHANNEL_CONF	ffmpeg/include/libavcodec/avcodec.h	915;"	d
AV_CODEC_CAP_DELAY	ffmpeg/include/libavcodec/avcodec.h	881;"	d
AV_CODEC_CAP_DR1	ffmpeg/include/libavcodec/avcodec.h	856;"	d
AV_CODEC_CAP_DRAW_HORIZ_BAND	ffmpeg/include/libavcodec/avcodec.h	850;"	d
AV_CODEC_CAP_EXPERIMENTAL	ffmpeg/include/libavcodec/avcodec.h	911;"	d
AV_CODEC_CAP_FRAME_THREADS	ffmpeg/include/libavcodec/avcodec.h	919;"	d
AV_CODEC_CAP_HWACCEL_VDPAU	ffmpeg/include/libavcodec/avcodec.h	892;"	d
AV_CODEC_CAP_INTRA_ONLY	ffmpeg/include/libavcodec/avcodec.h	939;"	d
AV_CODEC_CAP_LOSSLESS	ffmpeg/include/libavcodec/avcodec.h	943;"	d
AV_CODEC_CAP_PARAM_CHANGE	ffmpeg/include/libavcodec/avcodec.h	927;"	d
AV_CODEC_CAP_SLICE_THREADS	ffmpeg/include/libavcodec/avcodec.h	923;"	d
AV_CODEC_CAP_SMALL_LAST_FRAME	ffmpeg/include/libavcodec/avcodec.h	886;"	d
AV_CODEC_CAP_SUBFRAMES	ffmpeg/include/libavcodec/avcodec.h	906;"	d
AV_CODEC_CAP_TRUNCATED	ffmpeg/include/libavcodec/avcodec.h	857;"	d
AV_CODEC_CAP_VARIABLE_FRAME_SIZE	ffmpeg/include/libavcodec/avcodec.h	935;"	d
AV_CODEC_FLAG2_CHUNKS	ffmpeg/include/libavcodec/avcodec.h	821;"	d
AV_CODEC_FLAG2_DROP_FRAME_TIMECODE	ffmpeg/include/libavcodec/avcodec.h	815;"	d
AV_CODEC_FLAG2_EXPORT_MVS	ffmpeg/include/libavcodec/avcodec.h	834;"	d
AV_CODEC_FLAG2_FAST	ffmpeg/include/libavcodec/avcodec.h	802;"	d
AV_CODEC_FLAG2_IGNORE_CROP	ffmpeg/include/libavcodec/avcodec.h	825;"	d
AV_CODEC_FLAG2_LOCAL_HEADER	ffmpeg/include/libavcodec/avcodec.h	810;"	d
AV_CODEC_FLAG2_NO_OUTPUT	ffmpeg/include/libavcodec/avcodec.h	806;"	d
AV_CODEC_FLAG2_SHOW_ALL	ffmpeg/include/libavcodec/avcodec.h	830;"	d
AV_CODEC_FLAG2_SKIP_MANUAL	ffmpeg/include/libavcodec/avcodec.h	838;"	d
AV_CODEC_FLAG_4MV	ffmpeg/include/libavcodec/avcodec.h	738;"	d
AV_CODEC_FLAG_AC_PRED	ffmpeg/include/libavcodec/avcodec.h	792;"	d
AV_CODEC_FLAG_BITEXACT	ffmpeg/include/libavcodec/avcodec.h	787;"	d
AV_CODEC_FLAG_CLOSED_GOP	ffmpeg/include/libavcodec/avcodec.h	800;"	d
AV_CODEC_FLAG_GLOBAL_HEADER	ffmpeg/include/libavcodec/avcodec.h	783;"	d
AV_CODEC_FLAG_GRAY	ffmpeg/include/libavcodec/avcodec.h	762;"	d
AV_CODEC_FLAG_INTERLACED_DCT	ffmpeg/include/libavcodec/avcodec.h	775;"	d
AV_CODEC_FLAG_INTERLACED_ME	ffmpeg/include/libavcodec/avcodec.h	796;"	d
AV_CODEC_FLAG_LOOP_FILTER	ffmpeg/include/libavcodec/avcodec.h	758;"	d
AV_CODEC_FLAG_LOW_DELAY	ffmpeg/include/libavcodec/avcodec.h	779;"	d
AV_CODEC_FLAG_OUTPUT_CORRUPT	ffmpeg/include/libavcodec/avcodec.h	742;"	d
AV_CODEC_FLAG_PASS1	ffmpeg/include/libavcodec/avcodec.h	750;"	d
AV_CODEC_FLAG_PASS2	ffmpeg/include/libavcodec/avcodec.h	754;"	d
AV_CODEC_FLAG_PSNR	ffmpeg/include/libavcodec/avcodec.h	766;"	d
AV_CODEC_FLAG_QPEL	ffmpeg/include/libavcodec/avcodec.h	746;"	d
AV_CODEC_FLAG_QSCALE	ffmpeg/include/libavcodec/avcodec.h	734;"	d
AV_CODEC_FLAG_TRUNCATED	ffmpeg/include/libavcodec/avcodec.h	771;"	d
AV_CODEC_FLAG_UNALIGNED	ffmpeg/include/libavcodec/avcodec.h	730;"	d
AV_CODEC_ID_012V	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_012V       = MKBETAG('0','1','2','V'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_4GV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_4GV         = MKBETAG('s','4','g','v'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_4XM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_4XM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_8BPS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_8BPS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_8SVX_EXP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_8SVX_EXP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_8SVX_FIB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_8SVX_FIB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_A64_MULTI	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_A64_MULTI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_A64_MULTI5	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_A64_MULTI5,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AAC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AAC_LATM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AAC_LATM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AASC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AASC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AC3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_4XM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_4XM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_ADX	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_ADX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_AFC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_AFC  = MKBETAG('A','F','C',' '),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_CT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_CT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_DTK	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_DTK  = MKBETAG('D','T','K',' '),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_MAXIS_XA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_MAXIS_XA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_R1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_R1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_R2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_R2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_R3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_R3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_XAS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_XAS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_G722	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_G722,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_G726	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_G726,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_G726LE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_G726LE = MKBETAG('6','2','7','G'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_AMV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_AMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_APC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_APC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_DK3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_DK3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_DK4	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_DK4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_EA_EACS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_EA_EACS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_EA_SEAD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_EA_SEAD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_ISS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_ISS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_OKI	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_OKI = MKBETAG('O','K','I',' '),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_QT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_QT = 0x11000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_RAD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_RAD = MKBETAG('R','A','D',' '),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_SMJPEG	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_SMJPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_WAV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_WAV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_WS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_WS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_MS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_MS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SBPRO_2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SBPRO_2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SBPRO_3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SBPRO_3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SBPRO_4	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SBPRO_4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SWF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SWF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_THP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_THP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_THP_LE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_THP_LE = MKBETAG('T','H','P','L'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_VIMA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_VIMA = MKBETAG('V','I','M','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_VIMA_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_VIMA_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_XA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_XA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_YAMAHA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_YAMAHA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AIC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ALAC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ALAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ALIAS_PIX	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ALIAS_PIX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AMR_NB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AMR_NB = 0x12000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AMR_WB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AMR_WB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AMV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ANM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ANM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ANSI	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ANSI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_APE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_APE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_APNG	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_APNG       = MKBETAG('A','P','N','G'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ASS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ASS        = MKBETAG('A','S','S',' '),  \/\/\/< ASS as defined in Matroska$/;"	e	enum:AVCodecID
AV_CODEC_ID_ASV1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ASV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ASV2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ASV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC3P	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC3P,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AURA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AURA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AURA2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AURA2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVRN	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AVRN       = MKBETAG('A','V','R','n'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVRP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AVRP       = MKBETAG('A','V','R','P'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AVS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVUI	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AVUI       = MKBETAG('A','V','U','I'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_AYUV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AYUV       = MKBETAG('A','Y','U','V'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_BETHSOFTVID	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BETHSOFTVID,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BFI	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BFI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINKAUDIO_DCT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BINKAUDIO_DCT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINKAUDIO_RDFT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BINKAUDIO_RDFT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINKVIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BINKVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINTEXT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BINTEXT    = MKBETAG('B','T','X','T'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_BIN_DATA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BIN_DATA   = MKBETAG('D','A','T','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_BMP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BMP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BMV_AUDIO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BMV_AUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BMV_VIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BMV_VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BRENDER_PIX	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BRENDER_PIX= MKBETAG('B','P','I','X'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_BRENDER_PIX_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BRENDER_PIX_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_C93	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_C93,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CAVS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CAVS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CDGRAPHICS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CDGRAPHICS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CDXL	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CDXL,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CELT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CELT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CINEPAK	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CINEPAK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CLJR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CLJR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CLLC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CLLC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CMV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_COMFORT_NOISE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_COMFORT_NOISE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_COOK	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_COOK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CPIA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CPIA       = MKBETAG('C','P','I','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_CSCD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CSCD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CYUV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DDS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DDS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DFA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DFA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DIRAC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DIRAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DNXHD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DNXHD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DPX	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DPX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_LSBF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_LSBF    = MKBETAG('D','S','D','L'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_LSBF_PLANAR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_LSBF_PLANAR = MKBETAG('D','S','D','1'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_MSBF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_MSBF    = MKBETAG('D','S','D','M'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_MSBF_PLANAR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_MSBF_PLANAR = MKBETAG('D','S','D','8'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSICINAUDIO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSICINAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSICINVIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSICINVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSS_SP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSS_SP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DTS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DTS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVAUDIO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVB_SUBTITLE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVB_SUBTITLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVB_TELETEXT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVB_TELETEXT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVD_NAV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVD_NAV    = MKBETAG('D','N','A','V'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVD_SUBTITLE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVD_SUBTITLE = 0x17000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVVIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DXA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DXA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DXTORY	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DXTORY,$/;"	e	enum:AVCodecID
AV_CODEC_ID_EAC3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_EAC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_EIA_608	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_EIA_608    = MKBETAG('c','6','0','8'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ESCAPE124	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ESCAPE124,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ESCAPE130	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ESCAPE130  = MKBETAG('E','1','3','0'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ESCAPE130_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ESCAPE130_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_EVRC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_EVRC        = MKBETAG('s','e','v','c'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_EXR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_EXR        = MKBETAG('0','E','X','R'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_EXR_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_EXR_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFMETADATA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FFMETADATA = 0x21000,   \/\/\/< Dummy codec for streams containing only metadata information.$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFV1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FFV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFVHUFF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FFVHUFF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFWAVESYNTH	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FFWAVESYNTH = MKBETAG('F','F','W','S'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIRST_AUDIO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FIRST_AUDIO = 0x10000,     \/\/\/< A dummy id pointing at the start of audio codecs$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIRST_SUBTITLE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FIRST_SUBTITLE = 0x17000,          \/\/\/< A dummy ID pointing at the start of subtitle codecs.$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIRST_UNKNOWN	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FIRST_UNKNOWN = 0x18000,           \/\/\/< A dummy ID pointing at the start of various fake codecs.$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLAC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FLAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLASHSV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FLASHSV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLASHSV2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FLASHSV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLIC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FLIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLV1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FLV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FRAPS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FRAPS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FRWU	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FRWU,$/;"	e	enum:AVCodecID
AV_CODEC_ID_G2M	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_G2M        = MKBETAG( 0 ,'G','2','M'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_G2M_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_G2M_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_G723_1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_G723_1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_G729	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_G729,$/;"	e	enum:AVCodecID
AV_CODEC_ID_GIF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_GIF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_GSM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_GSM, \/\/\/< as in Berlin toast format$/;"	e	enum:AVCodecID
AV_CODEC_ID_GSM_MS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_GSM_MS, \/* as found in WAV *\/$/;"	e	enum:AVCodecID
AV_CODEC_ID_H261	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_H261,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H263	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_H263,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H263I	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_H263I,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H263P	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_H263P,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H264	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_H264,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H265	ffmpeg/include/libavcodec/avcodec.h	325;"	d
AV_CODEC_ID_HAP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HAP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HDMV_PGS_SUBTITLE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HDMV_PGS_SUBTITLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HEVC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HEVC       = MKBETAG('H','2','6','5'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_HEVC_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HEVC_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HNM4_VIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HNM4_VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HQX	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HQX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HQ_HQA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HQ_HQA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HUFFYUV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HUFFYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IAC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IDCIN	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IDCIN,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IDF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IDF        = MKBETAG( 0 ,'I','D','F'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_IFF_BYTERUN1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IFF_BYTERUN1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IFF_ILBM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IFF_ILBM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ILBC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ILBC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IMC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO4	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO5	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO5,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INTERPLAY_DPCM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INTERPLAY_DPCM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INTERPLAY_VIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INTERPLAY_VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_JACOSUB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_JACOSUB    = MKBETAG('J','S','U','B'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_JPEG2000	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_JPEG2000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_JPEGLS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_JPEGLS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_JV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_JV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_KGV1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_KGV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_KMVC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_KMVC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_LAGARITH	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_LAGARITH,$/;"	e	enum:AVCodecID
AV_CODEC_ID_LJPEG	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_LJPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_LOCO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_LOCO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MACE3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MACE3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MACE6	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MACE6,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MAD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MAD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MDEC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MDEC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_METASOUND	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_METASOUND,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MICRODVD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MICRODVD   = MKBETAG('m','D','V','D'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_MIMIC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MIMIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MJPEG	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MJPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MJPEGB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MJPEGB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MLP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MLP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MMVIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MMVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MOTIONPIXELS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MOTIONPIXELS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MOV_TEXT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MOV_TEXT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP2 = 0x15000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP3, \/\/\/< preferred ID for decoding MPEG audio layer 1, 2 or 3$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP3ADU	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP3ADU,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP3ON4	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP3ON4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP4ALS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP4ALS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG1VIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG1VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG2TS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG2TS = 0x20000, \/**< _FAKE_ codec to indicate a raw MPEG-2 TS$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG2VIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG2VIDEO, \/\/\/< preferred ID for MPEG-1\/2 video decoding$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG2VIDEO_XVMC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG2VIDEO_XVMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG4	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG4SYSTEMS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG4SYSTEMS = 0x20001, \/**< _FAKE_ codec to indicate a MPEG-4 Systems$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPL2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPL2       = MKBETAG('M','P','L','2'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSA1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSA1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSMPEG4V1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSMPEG4V1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSMPEG4V2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSMPEG4V2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSMPEG4V3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSMPEG4V3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSRLE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSRLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSS1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSS1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSS2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSS2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSVIDEO1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSVIDEO1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSZH	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSZH,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MTS2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MTS2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MUSEPACK7	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MUSEPACK7,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MUSEPACK8	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MUSEPACK8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MVC1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MVC1       = MKBETAG('M','V','C','1'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_MVC1_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MVC1_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MVC2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MVC2       = MKBETAG('M','V','C','2'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_MVC2_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MVC2_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MXPEG	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MXPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_NELLYMOSER	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_NELLYMOSER,$/;"	e	enum:AVCodecID
AV_CODEC_ID_NONE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_NONE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_NUV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_NUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ON2AVC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ON2AVC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_OPUS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_OPUS        = MKBETAG('O','P','U','S'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_OPUS_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_OPUS_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_OTF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_OTF        = MKBETAG( 0 ,'O','T','F'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAF_AUDIO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PAF_AUDIO   = MKBETAG('P','A','F','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAF_AUDIO_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PAF_AUDIO_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAF_VIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PAF_VIDEO  = MKBETAG('P','A','F','V'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAF_VIDEO_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PAF_VIDEO_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PAM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PBM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PBM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_ALAW	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_ALAW,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_BLURAY	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_BLURAY,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_DVD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_DVD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F32BE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F32BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F32LE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F32LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F64BE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F64BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F64LE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F64LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_LXF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_LXF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_MULAW	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_MULAW,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16BE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16BE_PLANAR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16BE_PLANAR = MKBETAG('P','S','P',16),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16BE_PLANAR_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16BE_PLANAR_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16LE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16LE = 0x10000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16LE_PLANAR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16LE_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24BE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24DAUD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24DAUD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24LE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24LE_PLANAR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24LE_PLANAR = MKBETAG(24,'P','S','P'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24LE_PLANAR_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24LE_PLANAR_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32BE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32LE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32LE_PLANAR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32LE_PLANAR = MKBETAG(32,'P','S','P'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32LE_PLANAR_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32LE_PLANAR_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S8	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S8_PLANAR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S8_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U16BE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U16BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U16LE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U16LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U24BE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U24BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U24LE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U24LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U32BE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U32BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U32LE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U32LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U8	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_ZORK	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_ZORK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCX	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PGM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PGM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PGMYUV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PGMYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PICTOR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PICTOR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PJS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PJS        = MKBETAG('P','h','J','S'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PNG	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PNG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PPM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PPM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PROBE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PROBE = 0x19000, \/\/\/< codec_id is not known (like AV_CODEC_ID_NONE) but lavf should attempt to identify it$/;"	e	enum:AVCodecID
AV_CODEC_ID_PRORES	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PRORES,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PTX	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PTX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QCELP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QCELP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QDM2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QDM2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QDMC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QDMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QDRAW	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QDRAW,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QPEG	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QTRLE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QTRLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_R10K	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_R10K,$/;"	e	enum:AVCodecID
AV_CODEC_ID_R210	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_R210,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RALF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RALF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RAWVIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RAWVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RA_144	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RA_144 = 0x13000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RA_288	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RA_288,$/;"	e	enum:AVCodecID
AV_CODEC_ID_REALTEXT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_REALTEXT   = MKBETAG('R','T','X','T'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_RL2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RL2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ROQ	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ROQ,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ROQ_DPCM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ROQ_DPCM = 0x14000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RPZA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RPZA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV10	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RV10,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV20	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RV20,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV30	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RV30,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV40	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RV40,$/;"	e	enum:AVCodecID
AV_CODEC_ID_S302M	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_S302M,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SAMI	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SAMI       = MKBETAG('S','A','M','I'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SANM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SANM       = MKBETAG('S','A','N','M'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SANM_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SANM_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SGI	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SGI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SGIRLE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SGIRLE     = MKBETAG('S','G','I','R'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SGIRLE_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SGIRLE_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SHORTEN	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SHORTEN,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SIPR	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SIPR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMACKAUDIO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMACKAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMACKVIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMACKVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMPTE_KLV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMPTE_KLV  = MKBETAG('K','L','V','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMV         = MKBETAG('s','s','m','v'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMVJPEG	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMVJPEG    = MKBETAG('S','M','V','J'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SNOW	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SNOW       = MKBETAG('S','N','O','W'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SOL_DPCM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SOL_DPCM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SONIC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SONIC       = MKBETAG('S','O','N','C'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SONIC_LS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SONIC_LS    = MKBETAG('S','O','N','L'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SP5X	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SP5X,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SPEEX	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SPEEX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SRT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SRT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SSA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SSA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_STL	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_STL        = MKBETAG('S','p','T','L'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUBRIP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SUBRIP     = MKBETAG('S','R','i','p'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUBVIEWER	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SUBVIEWER  = MKBETAG('S','u','b','V'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUBVIEWER1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SUBVIEWER1 = MKBETAG('S','b','V','1'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUNRAST	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SUNRAST,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SVQ1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SVQ1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SVQ3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SVQ3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TAK	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TAK         = MKBETAG('t','B','a','K'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_TAK_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TAK_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TARGA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TARGA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TARGA_Y216	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TARGA_Y216 = MKBETAG('T','2','1','6'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_TDSC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TDSC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TEXT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TEXT,  \/\/\/< raw UTF-8 text$/;"	e	enum:AVCodecID
AV_CODEC_ID_TGQ	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TGQ,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TGV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TGV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_THEORA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_THEORA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_THP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_THP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TIERTEXSEQVIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TIERTEXSEQVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TIFF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TIFF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TIMED_ID3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TIMED_ID3  = MKBETAG('T','I','D','3'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_TMV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TQI	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TQI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUEHD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUEHD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUEMOTION1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUEMOTION1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUEMOTION2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUEMOTION2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUESPEECH	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUESPEECH,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TSCC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TSCC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TSCC2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TSCC2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TTA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TTA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TTF	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TTF = 0x18000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TWINVQ	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TWINVQ,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TXD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TXD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ULTI	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ULTI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_UTVIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_UTVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V210	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_V210,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V210X	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_V210X,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V308	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_V308       = MKBETAG('V','3','0','8'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_V408	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_V408       = MKBETAG('V','4','0','8'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_V410	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_V410,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VBLE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VBLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VC1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VC1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VC1IMAGE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VC1IMAGE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VCR1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VCR1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VIMA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VIMA       = MKBETAG('V','I','M','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_VIXL	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VIXL,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VMDAUDIO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VMDAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VMDVIDEO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VMDVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VMNC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VMNC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VORBIS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VORBIS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VOXWARE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VOXWARE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP5	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP5,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP6	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP6,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP6A	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP6A,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP6F	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP6F,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP7	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP7        = MKBETAG('V','P','7','0'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP7_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP7_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP8	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP9	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP9,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VPLAYER	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VPLAYER    = MKBETAG('V','P','l','r'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_WAVPACK	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WAVPACK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WEBP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WEBP       = MKBETAG('W','E','B','P'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_WEBP_DEPRECATED	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WEBP_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WEBVTT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WEBVTT     = MKBETAG('W','V','T','T'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_WESTWOOD_SND1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WESTWOOD_SND1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMALOSSLESS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMALOSSLESS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAPRO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAPRO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAV1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAV2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAVOICE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAVOICE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV2	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV3IMAGE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV3IMAGE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WNV1	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WNV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WS_VQA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WS_VQA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XAN_DPCM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XAN_DPCM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XAN_WC3	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XAN_WC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XAN_WC4	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XAN_WC4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XBIN	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XBIN       = MKBETAG('X','B','I','N'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_XBM	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XBM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XFACE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XFACE      = MKBETAG('X','F','A','C'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_XSUB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XSUB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XWD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XWD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_Y41P	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_Y41P       = MKBETAG('Y','4','1','P'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_YOP	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_YOP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_YUV4	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_YUV4       = MKBETAG('Y','U','V','4'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ZEROCODEC	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ZEROCODEC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ZLIB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ZLIB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ZMBV	ffmpeg/include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ZMBV,$/;"	e	enum:AVCodecID
AV_CODEC_PROP_BITMAP_SUB	ffmpeg/include/libavcodec/avcodec.h	620;"	d
AV_CODEC_PROP_INTRA_ONLY	ffmpeg/include/libavcodec/avcodec.h	595;"	d
AV_CODEC_PROP_LOSSLESS	ffmpeg/include/libavcodec/avcodec.h	605;"	d
AV_CODEC_PROP_LOSSY	ffmpeg/include/libavcodec/avcodec.h	601;"	d
AV_CODEC_PROP_REORDER	ffmpeg/include/libavcodec/avcodec.h	615;"	d
AV_CODEC_PROP_TEXT_SUB	ffmpeg/include/libavcodec/avcodec.h	625;"	d
AV_COPY	ffmpeg/include/libavutil/intreadwrite.h	578;"	d
AV_COPY128	ffmpeg/include/libavutil/intreadwrite.h	594;"	d
AV_COPY128U	ffmpeg/include/libavutil/intreadwrite.h	565;"	d
AV_COPY16	ffmpeg/include/libavutil/intreadwrite.h	582;"	d
AV_COPY16U	ffmpeg/include/libavutil/intreadwrite.h	553;"	d
AV_COPY32	ffmpeg/include/libavutil/intreadwrite.h	586;"	d
AV_COPY32U	ffmpeg/include/libavutil/intreadwrite.h	557;"	d
AV_COPY64	ffmpeg/include/libavutil/intreadwrite.h	590;"	d
AV_COPY64U	ffmpeg/include/libavutil/intreadwrite.h	561;"	d
AV_COPYU	ffmpeg/include/libavutil/intreadwrite.h	550;"	d
AV_CPU_FLAG_3DNOW	ffmpeg/include/libavutil/cpu.h	32;"	d
AV_CPU_FLAG_3DNOWEXT	ffmpeg/include/libavutil/cpu.h	37;"	d
AV_CPU_FLAG_ALTIVEC	ffmpeg/include/libavutil/cpu.h	59;"	d
AV_CPU_FLAG_ARMV5TE	ffmpeg/include/libavutil/cpu.h	63;"	d
AV_CPU_FLAG_ARMV6	ffmpeg/include/libavutil/cpu.h	64;"	d
AV_CPU_FLAG_ARMV6T2	ffmpeg/include/libavutil/cpu.h	65;"	d
AV_CPU_FLAG_ARMV8	ffmpeg/include/libavutil/cpu.h	69;"	d
AV_CPU_FLAG_ATOM	ffmpeg/include/libavutil/cpu.h	42;"	d
AV_CPU_FLAG_AVX	ffmpeg/include/libavutil/cpu.h	45;"	d
AV_CPU_FLAG_AVX2	ffmpeg/include/libavutil/cpu.h	54;"	d
AV_CPU_FLAG_AVXSLOW	ffmpeg/include/libavutil/cpu.h	46;"	d
AV_CPU_FLAG_BMI1	ffmpeg/include/libavutil/cpu.h	56;"	d
AV_CPU_FLAG_BMI2	ffmpeg/include/libavutil/cpu.h	57;"	d
AV_CPU_FLAG_CMOV	ffmpeg/include/libavutil/cpu.h	50;"	d
AV_CPU_FLAG_FMA3	ffmpeg/include/libavutil/cpu.h	55;"	d
AV_CPU_FLAG_FMA4	ffmpeg/include/libavutil/cpu.h	48;"	d
AV_CPU_FLAG_FORCE	ffmpeg/include/libavutil/cpu.h	26;"	d
AV_CPU_FLAG_MMX	ffmpeg/include/libavutil/cpu.h	29;"	d
AV_CPU_FLAG_MMX2	ffmpeg/include/libavutil/cpu.h	31;"	d
AV_CPU_FLAG_MMXEXT	ffmpeg/include/libavutil/cpu.h	30;"	d
AV_CPU_FLAG_NEON	ffmpeg/include/libavutil/cpu.h	68;"	d
AV_CPU_FLAG_POWER8	ffmpeg/include/libavutil/cpu.h	61;"	d
AV_CPU_FLAG_SETEND	ffmpeg/include/libavutil/cpu.h	70;"	d
AV_CPU_FLAG_SSE	ffmpeg/include/libavutil/cpu.h	33;"	d
AV_CPU_FLAG_SSE2	ffmpeg/include/libavutil/cpu.h	34;"	d
AV_CPU_FLAG_SSE2SLOW	ffmpeg/include/libavutil/cpu.h	35;"	d
AV_CPU_FLAG_SSE3	ffmpeg/include/libavutil/cpu.h	38;"	d
AV_CPU_FLAG_SSE3SLOW	ffmpeg/include/libavutil/cpu.h	39;"	d
AV_CPU_FLAG_SSE4	ffmpeg/include/libavutil/cpu.h	43;"	d
AV_CPU_FLAG_SSE42	ffmpeg/include/libavutil/cpu.h	44;"	d
AV_CPU_FLAG_SSSE3	ffmpeg/include/libavutil/cpu.h	41;"	d
AV_CPU_FLAG_VFP	ffmpeg/include/libavutil/cpu.h	66;"	d
AV_CPU_FLAG_VFPV3	ffmpeg/include/libavutil/cpu.h	67;"	d
AV_CPU_FLAG_VSX	ffmpeg/include/libavutil/cpu.h	60;"	d
AV_CPU_FLAG_XOP	ffmpeg/include/libavutil/cpu.h	47;"	d
AV_CRC_16_ANSI	ffmpeg/include/libavutil/crc.h	/^    AV_CRC_16_ANSI,$/;"	e	enum:__anon40
AV_CRC_16_ANSI_LE	ffmpeg/include/libavutil/crc.h	/^    AV_CRC_16_ANSI_LE,  \/*< reversed bitorder version of AV_CRC_16_ANSI *\/$/;"	e	enum:__anon40
AV_CRC_16_CCITT	ffmpeg/include/libavutil/crc.h	/^    AV_CRC_16_CCITT,$/;"	e	enum:__anon40
AV_CRC_24_IEEE	ffmpeg/include/libavutil/crc.h	/^    AV_CRC_24_IEEE = 12,$/;"	e	enum:__anon40
AV_CRC_32_IEEE	ffmpeg/include/libavutil/crc.h	/^    AV_CRC_32_IEEE,$/;"	e	enum:__anon40
AV_CRC_32_IEEE_LE	ffmpeg/include/libavutil/crc.h	/^    AV_CRC_32_IEEE_LE,  \/*< reversed bitorder version of AV_CRC_32_IEEE *\/$/;"	e	enum:__anon40
AV_CRC_8_ATM	ffmpeg/include/libavutil/crc.h	/^    AV_CRC_8_ATM,$/;"	e	enum:__anon40
AV_CRC_MAX	ffmpeg/include/libavutil/crc.h	/^    AV_CRC_MAX,         \/*< Not part of public API! Do not use outside libavutil. *\/$/;"	e	enum:__anon40
AV_DEV_TO_APP_BUFFER_OVERFLOW	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_OVERFLOW = MKBETAG('B','O','F','L'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_BUFFER_READABLE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_READABLE = MKBETAG('B','R','D',' '),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_BUFFER_UNDERFLOW	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_UNDERFLOW = MKBETAG('B','U','F','L'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_BUFFER_WRITABLE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_WRITABLE = MKBETAG('B','W','R',' '),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_CREATE_WINDOW_BUFFER	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_CREATE_WINDOW_BUFFER = MKBETAG('B','C','R','E'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_DESTROY_WINDOW_BUFFER	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_DESTROY_WINDOW_BUFFER = MKBETAG('B','D','E','S'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER = MKBETAG('B','D','I','S'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_MUTE_STATE_CHANGED	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_MUTE_STATE_CHANGED = MKBETAG('C','M','U','T'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_NONE	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_NONE = MKBETAG('N','O','N','E'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER = MKBETAG('B','P','R','E'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_VOLUME_LEVEL_CHANGED	ffmpeg/include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_VOLUME_LEVEL_CHANGED = MKBETAG('C','V','O','L'),$/;"	e	enum:AVDevToAppMessageType
AV_DICT_APPEND	ffmpeg/include/libavutil/dict.h	79;"	d
AV_DICT_DONT_OVERWRITE	ffmpeg/include/libavutil/dict.h	78;"	d
AV_DICT_DONT_STRDUP_KEY	ffmpeg/include/libavutil/dict.h	74;"	d
AV_DICT_DONT_STRDUP_VAL	ffmpeg/include/libavutil/dict.h	76;"	d
AV_DICT_IGNORE_SUFFIX	ffmpeg/include/libavutil/dict.h	72;"	d
AV_DICT_MATCH_CASE	ffmpeg/include/libavutil/dict.h	71;"	d
AV_DISPOSITION_ATTACHED_PIC	ffmpeg/include/libavformat/avformat.h	811;"	d
AV_DISPOSITION_CAPTIONS	ffmpeg/include/libavformat/avformat.h	816;"	d
AV_DISPOSITION_CLEAN_EFFECTS	ffmpeg/include/libavformat/avformat.h	804;"	d
AV_DISPOSITION_COMMENT	ffmpeg/include/libavformat/avformat.h	792;"	d
AV_DISPOSITION_DEFAULT	ffmpeg/include/libavformat/avformat.h	789;"	d
AV_DISPOSITION_DESCRIPTIONS	ffmpeg/include/libavformat/avformat.h	817;"	d
AV_DISPOSITION_DUB	ffmpeg/include/libavformat/avformat.h	790;"	d
AV_DISPOSITION_FORCED	ffmpeg/include/libavformat/avformat.h	801;"	d
AV_DISPOSITION_HEARING_IMPAIRED	ffmpeg/include/libavformat/avformat.h	802;"	d
AV_DISPOSITION_KARAOKE	ffmpeg/include/libavformat/avformat.h	794;"	d
AV_DISPOSITION_LYRICS	ffmpeg/include/libavformat/avformat.h	793;"	d
AV_DISPOSITION_METADATA	ffmpeg/include/libavformat/avformat.h	818;"	d
AV_DISPOSITION_ORIGINAL	ffmpeg/include/libavformat/avformat.h	791;"	d
AV_DISPOSITION_VISUAL_IMPAIRED	ffmpeg/include/libavformat/avformat.h	803;"	d
AV_DOWNMIX_TYPE_DPLII	ffmpeg/include/libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_DPLII,   \/**< Lt\/Rt 2-channel downmix, Dolby Pro Logic II compatible. *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_LORO	ffmpeg/include/libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_LORO,    \/**< Lo\/Ro 2-channel downmix (Stereo). *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_LTRT	ffmpeg/include/libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_LTRT,    \/**< Lt\/Rt 2-channel downmix, Dolby Surround compatible. *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_NB	ffmpeg/include/libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_NB       \/**< Number of downmix types. Not part of ABI. *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_UNKNOWN	ffmpeg/include/libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_UNKNOWN, \/**< Not indicated. *\/$/;"	e	enum:AVDownmixType
AV_EF_AGGRESSIVE	ffmpeg/include/libavcodec/avcodec.h	2905;"	d
AV_EF_BITSTREAM	ffmpeg/include/libavcodec/avcodec.h	2898;"	d
AV_EF_BUFFER	ffmpeg/include/libavcodec/avcodec.h	2899;"	d
AV_EF_CAREFUL	ffmpeg/include/libavcodec/avcodec.h	2903;"	d
AV_EF_COMPLIANT	ffmpeg/include/libavcodec/avcodec.h	2904;"	d
AV_EF_CRCCHECK	ffmpeg/include/libavcodec/avcodec.h	2897;"	d
AV_EF_EXPLODE	ffmpeg/include/libavcodec/avcodec.h	2900;"	d
AV_EF_IGNORE_ERR	ffmpeg/include/libavcodec/avcodec.h	2902;"	d
AV_ERROR_MAX_STRING_SIZE	ffmpeg/include/libavutil/error.h	83;"	d
AV_ESCAPE_FLAG_STRICT	ffmpeg/include/libavutil/avstring.h	310;"	d
AV_ESCAPE_FLAG_WHITESPACE	ffmpeg/include/libavutil/avstring.h	303;"	d
AV_ESCAPE_MODE_AUTO	ffmpeg/include/libavutil/avstring.h	/^    AV_ESCAPE_MODE_AUTO,      \/\/\/< Use auto-selected escaping mode.$/;"	e	enum:AVEscapeMode
AV_ESCAPE_MODE_BACKSLASH	ffmpeg/include/libavutil/avstring.h	/^    AV_ESCAPE_MODE_BACKSLASH, \/\/\/< Use backslash escaping.$/;"	e	enum:AVEscapeMode
AV_ESCAPE_MODE_QUOTE	ffmpeg/include/libavutil/avstring.h	/^    AV_ESCAPE_MODE_QUOTE,     \/\/\/< Use single-quote escaping.$/;"	e	enum:AVEscapeMode
AV_FIELD_BB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_FIELD_BB,          \/\/< Bottom coded first, bottom displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_BT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_FIELD_BT,          \/\/< Bottom coded first, top displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_PROGRESSIVE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_FIELD_PROGRESSIVE,$/;"	e	enum:AVFieldOrder
AV_FIELD_TB	ffmpeg/include/libavcodec/avcodec.h	/^    AV_FIELD_TB,          \/\/< Top coded first, bottom displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_TT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_FIELD_TT,          \/\/< Top coded_first, top displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_UNKNOWN	ffmpeg/include/libavcodec/avcodec.h	/^    AV_FIELD_UNKNOWN,$/;"	e	enum:AVFieldOrder
AV_FRAME_DATA_A53_CC	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_A53_CC,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_AFD	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_AFD,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_AUDIO_SERVICE_TYPE	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_AUDIO_SERVICE_TYPE,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_DISPLAYMATRIX	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_DISPLAYMATRIX,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_DOWNMIX_INFO	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_DOWNMIX_INFO,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_MATRIXENCODING	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_MATRIXENCODING,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_MOTION_VECTORS	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_MOTION_VECTORS,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_PANSCAN	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_PANSCAN,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_REPLAYGAIN	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_REPLAYGAIN,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_SKIP_SAMPLES	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_SKIP_SAMPLES,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_STEREO3D	ffmpeg/include/libavutil/frame.h	/^    AV_FRAME_DATA_STEREO3D,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_FLAG_CORRUPT	ffmpeg/include/libavutil/frame.h	474;"	d
AV_GCC_VERSION_AT_LEAST	ffmpeg/include/libavutil/attributes.h	30;"	d
AV_GCC_VERSION_AT_LEAST	ffmpeg/include/libavutil/attributes.h	32;"	d
AV_GET_BUFFER_FLAG_REF	ffmpeg/include/libavcodec/avcodec.h	1215;"	d
AV_GLUE	ffmpeg/include/libavutil/macros.h	39;"	d
AV_HASH_MAX_SIZE	ffmpeg/include/libavutil/hash.h	61;"	d
AV_HAVE_BIGENDIAN	ffmpeg/include/libavutil/avconfig.h	4;"	d
AV_HAVE_FAST_UNALIGNED	ffmpeg/include/libavutil/avconfig.h	5;"	d
AV_HAVE_INCOMPATIBLE_LIBAV_ABI	ffmpeg/include/libavutil/avconfig.h	6;"	d
AV_HMAC_MD5	ffmpeg/include/libavutil/hmac.h	/^    AV_HMAC_MD5,$/;"	e	enum:AVHMACType
AV_HMAC_SHA1	ffmpeg/include/libavutil/hmac.h	/^    AV_HMAC_SHA1,$/;"	e	enum:AVHMACType
AV_HMAC_SHA224	ffmpeg/include/libavutil/hmac.h	/^    AV_HMAC_SHA224,$/;"	e	enum:AVHMACType
AV_HMAC_SHA224_DEPRECATED	ffmpeg/include/libavutil/hmac.h	/^    AV_HMAC_SHA224_DEPRECATED = 10,$/;"	e	enum:AVHMACType
AV_HMAC_SHA256	ffmpeg/include/libavutil/hmac.h	/^    AV_HMAC_SHA256,$/;"	e	enum:AVHMACType
AV_HMAC_SHA256_DEPRECATED	ffmpeg/include/libavutil/hmac.h	/^    AV_HMAC_SHA256_DEPRECATED,$/;"	e	enum:AVHMACType
AV_HMAC_SHA384	ffmpeg/include/libavutil/hmac.h	/^    AV_HMAC_SHA384 = 12,$/;"	e	enum:AVHMACType
AV_HMAC_SHA512	ffmpeg/include/libavutil/hmac.h	/^    AV_HMAC_SHA512,$/;"	e	enum:AVHMACType
AV_HWACCEL_FLAG_ALLOW_HIGH_DEPTH	ffmpeg/include/libavcodec/avcodec.h	3725;"	d
AV_HWACCEL_FLAG_IGNORE_LEVEL	ffmpeg/include/libavcodec/avcodec.h	3719;"	d
AV_INPUT_BUFFER_MIN_SIZE	ffmpeg/include/libavcodec/avcodec.h	642;"	d
AV_INPUT_BUFFER_PADDING_SIZE	ffmpeg/include/libavcodec/avcodec.h	635;"	d
AV_IS_INPUT_DEVICE	ffmpeg/include/libavutil/log.h	50;"	d
AV_IS_OUTPUT_DEVICE	ffmpeg/include/libavutil/log.h	55;"	d
AV_JOIN	ffmpeg/include/libavutil/macros.h	40;"	d
AV_LE2NE16C	ffmpeg/include/libavutil/bswap.h	105;"	d
AV_LE2NE32C	ffmpeg/include/libavutil/bswap.h	106;"	d
AV_LE2NE64C	ffmpeg/include/libavutil/bswap.h	107;"	d
AV_LE2NEC	ffmpeg/include/libavutil/bswap.h	90;"	d
AV_LE2NEC	ffmpeg/include/libavutil/bswap.h	99;"	d
AV_LOCK_CREATE	ffmpeg/include/libavcodec/avcodec.h	/^  AV_LOCK_CREATE,  \/\/\/< Create a mutex$/;"	e	enum:AVLockOp
AV_LOCK_DESTROY	ffmpeg/include/libavcodec/avcodec.h	/^  AV_LOCK_DESTROY, \/\/\/< Free mutex resources$/;"	e	enum:AVLockOp
AV_LOCK_OBTAIN	ffmpeg/include/libavcodec/avcodec.h	/^  AV_LOCK_OBTAIN,  \/\/\/< Lock the mutex$/;"	e	enum:AVLockOp
AV_LOCK_RELEASE	ffmpeg/include/libavcodec/avcodec.h	/^  AV_LOCK_RELEASE, \/\/\/< Unlock the mutex$/;"	e	enum:AVLockOp
AV_LOG_C	ffmpeg/include/libavutil/log.h	218;"	d
AV_LOG_DEBUG	ffmpeg/include/libavutil/log.h	197;"	d
AV_LOG_ERROR	ffmpeg/include/libavutil/log.h	176;"	d
AV_LOG_FATAL	ffmpeg/include/libavutil/log.h	170;"	d
AV_LOG_INFO	ffmpeg/include/libavutil/log.h	187;"	d
AV_LOG_MAX_OFFSET	ffmpeg/include/libavutil/log.h	204;"	d
AV_LOG_PANIC	ffmpeg/include/libavutil/log.h	163;"	d
AV_LOG_PRINT_LEVEL	ffmpeg/include/libavutil/log.h	350;"	d
AV_LOG_QUIET	ffmpeg/include/libavutil/log.h	158;"	d
AV_LOG_SKIP_REPEATED	ffmpeg/include/libavutil/log.h	342;"	d
AV_LOG_TRACE	ffmpeg/include/libavutil/log.h	202;"	d
AV_LOG_VERBOSE	ffmpeg/include/libavutil/log.h	192;"	d
AV_LOG_WARNING	ffmpeg/include/libavutil/log.h	182;"	d
AV_LZO_ERROR	ffmpeg/include/libavutil/lzo.h	43;"	d
AV_LZO_INPUT_DEPLETED	ffmpeg/include/libavutil/lzo.h	37;"	d
AV_LZO_INPUT_PADDING	ffmpeg/include/libavutil/lzo.h	46;"	d
AV_LZO_INVALID_BACKPTR	ffmpeg/include/libavutil/lzo.h	41;"	d
AV_LZO_OUTPUT_FULL	ffmpeg/include/libavutil/lzo.h	39;"	d
AV_LZO_OUTPUT_PADDING	ffmpeg/include/libavutil/lzo.h	47;"	d
AV_MATRIX_ENCODING_DOLBY	ffmpeg/include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DOLBY,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DOLBYEX	ffmpeg/include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DOLBYEX,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DOLBYHEADPHONE	ffmpeg/include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DOLBYHEADPHONE,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DPLII	ffmpeg/include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DPLII,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DPLIIX	ffmpeg/include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DPLIIX,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DPLIIZ	ffmpeg/include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DPLIIZ,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_NB	ffmpeg/include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_NB$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_NONE	ffmpeg/include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_NONE,$/;"	e	enum:AVMatrixEncoding
AV_NE	ffmpeg/include/libavutil/common.h	47;"	d
AV_NE	ffmpeg/include/libavutil/common.h	49;"	d
AV_NOPTS_VALUE	ffmpeg/include/libavutil/avutil.h	248;"	d
AV_NOWARN_DEPRECATED	ffmpeg/include/libavutil/attributes.h	100;"	d
AV_NOWARN_DEPRECATED	ffmpeg/include/libavutil/attributes.h	106;"	d
AV_NOWARN_DEPRECATED	ffmpeg/include/libavutil/attributes.h	112;"	d
AV_NUM_DATA_POINTERS	ffmpeg/include/libavutil/frame.h	172;"	d
AV_OPT_FLAG_AUDIO_PARAM	ffmpeg/include/libavutil/opt.h	290;"	d
AV_OPT_FLAG_DECODING_PARAM	ffmpeg/include/libavutil/opt.h	286;"	d
AV_OPT_FLAG_ENCODING_PARAM	ffmpeg/include/libavutil/opt.h	285;"	d
AV_OPT_FLAG_EXPORT	ffmpeg/include/libavutil/opt.h	296;"	d
AV_OPT_FLAG_FILTERING_PARAM	ffmpeg/include/libavutil/opt.h	302;"	d
AV_OPT_FLAG_IMPLICIT_KEY	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_FLAG_IMPLICIT_KEY = 1,$/;"	e	enum:__anon39
AV_OPT_FLAG_METADATA	ffmpeg/include/libavutil/opt.h	288;"	d
AV_OPT_FLAG_READONLY	ffmpeg/include/libavutil/opt.h	301;"	d
AV_OPT_FLAG_SUBTITLE_PARAM	ffmpeg/include/libavutil/opt.h	292;"	d
AV_OPT_FLAG_VIDEO_PARAM	ffmpeg/include/libavutil/opt.h	291;"	d
AV_OPT_MULTI_COMPONENT_RANGE	ffmpeg/include/libavutil/opt.h	617;"	d
AV_OPT_SEARCH_CHILDREN	ffmpeg/include/libavutil/opt.h	602;"	d
AV_OPT_SEARCH_FAKE_OBJ	ffmpeg/include/libavutil/opt.h	610;"	d
AV_OPT_SERIALIZE_OPT_FLAGS_EXACT	ffmpeg/include/libavutil/opt.h	875;"	d
AV_OPT_SERIALIZE_SKIP_DEFAULTS	ffmpeg/include/libavutil/opt.h	874;"	d
AV_OPT_TYPE_BINARY	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_BINARY,  \/\/\/< offset must point to a pointer immediately followed by an int for the length$/;"	e	enum:AVOptionType
AV_OPT_TYPE_CHANNEL_LAYOUT	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_CHANNEL_LAYOUT = MKBETAG('C','H','L','A'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_COLOR	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_COLOR      = MKBETAG('C','O','L','R'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_CONST	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_CONST = 128,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_DICT	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_DICT,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_DOUBLE	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_DOUBLE,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_DURATION	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_DURATION   = MKBETAG('D','U','R',' '),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_FLAGS	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_FLAGS,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_FLOAT	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_FLOAT,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_IMAGE_SIZE	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_IMAGE_SIZE = MKBETAG('S','I','Z','E'), \/\/\/< offset must point to two consecutive integers$/;"	e	enum:AVOptionType
AV_OPT_TYPE_INT	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_INT,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_INT64	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_INT64,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_PIXEL_FMT	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_PIXEL_FMT  = MKBETAG('P','F','M','T'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_RATIONAL	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_RATIONAL,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_SAMPLE_FMT	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_SAMPLE_FMT = MKBETAG('S','F','M','T'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_STRING	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_STRING,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_VIDEO_RATE	ffmpeg/include/libavutil/opt.h	/^    AV_OPT_TYPE_VIDEO_RATE = MKBETAG('V','R','A','T'), \/\/\/< offset must point to AVRational$/;"	e	enum:AVOptionType
AV_PARSER_PTS_NB	ffmpeg/include/libavcodec/avcodec.h	4566;"	d
AV_PERM_ALIGN	ffmpeg/include/libavfilter/avfilter.h	116;"	d
AV_PERM_NEG_LINESIZES	ffmpeg/include/libavfilter/avfilter.h	115;"	d
AV_PERM_PRESERVE	ffmpeg/include/libavfilter/avfilter.h	112;"	d
AV_PERM_READ	ffmpeg/include/libavfilter/avfilter.h	110;"	d
AV_PERM_REUSE	ffmpeg/include/libavfilter/avfilter.h	113;"	d
AV_PERM_REUSE2	ffmpeg/include/libavfilter/avfilter.h	114;"	d
AV_PERM_WRITE	ffmpeg/include/libavfilter/avfilter.h	111;"	d
AV_PICTURE_STRUCTURE_BOTTOM_FIELD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_BOTTOM_FIELD, \/\/< coded as bottom field$/;"	e	enum:AVPictureStructure
AV_PICTURE_STRUCTURE_FRAME	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_FRAME,        \/\/< coded as frame$/;"	e	enum:AVPictureStructure
AV_PICTURE_STRUCTURE_TOP_FIELD	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_TOP_FIELD,    \/\/< coded as top field$/;"	e	enum:AVPictureStructure
AV_PICTURE_STRUCTURE_UNKNOWN	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_UNKNOWN,      \/\/< unknown$/;"	e	enum:AVPictureStructure
AV_PICTURE_TYPE_B	ffmpeg/include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_B,     \/\/\/< Bi-dir predicted$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_BI	ffmpeg/include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_BI,    \/\/\/< BI type$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_I	ffmpeg/include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_I,     \/\/\/< Intra$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_NONE	ffmpeg/include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_NONE = 0, \/\/\/< Undefined$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_P	ffmpeg/include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_P,     \/\/\/< Predicted$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_S	ffmpeg/include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_S,     \/\/\/< S(GMC)-VOP MPEG4$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_SI	ffmpeg/include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_SI,    \/\/\/< Switching Intra$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_SP	ffmpeg/include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_SP,    \/\/\/< Switching Predicted$/;"	e	enum:AVPictureType
AV_PIX_FMT_0BGR	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_0BGR,        \/\/\/< packed BGR 8:8:8, 32bpp, XBGRXBGR...   X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_0BGR32	ffmpeg/include/libavutil/pixfmt.h	350;"	d
AV_PIX_FMT_0RGB	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_0RGB=0x123+4,\/\/\/< packed RGB 8:8:8, 32bpp, XRGBXRGB...   X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_0RGB32	ffmpeg/include/libavutil/pixfmt.h	349;"	d
AV_PIX_FMT_ABGR	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_ABGR,      \/\/\/< packed ABGR 8:8:8:8, 32bpp, ABGRABGR...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_ARGB	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_ARGB,      \/\/\/< packed ARGB 8:8:8:8, 32bpp, ARGBARGB...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_AYUV64	ffmpeg/include/libavutil/pixfmt.h	408;"	d
AV_PIX_FMT_AYUV64BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_AYUV64BE,    \/\/\/< packed AYUV 4:4:4,64bpp (1 Cr & Cb sample per 1x1 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_AYUV64LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_AYUV64LE,    \/\/\/< packed AYUV 4:4:4,64bpp (1 Cr & Cb sample per 1x1 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_BGGR16	ffmpeg/include/libavutil/pixfmt.h	390;"	d
AV_PIX_FMT_BAYER_BGGR16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_BGGR16BE, \/\/\/< bayer, BGBG..(odd line), GRGR..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_BGGR16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_BGGR16LE, \/\/\/< bayer, BGBG..(odd line), GRGR..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_BGGR8	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_BGGR8,    \/\/\/< bayer, BGBG..(odd line), GRGR..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GBRG16	ffmpeg/include/libavutil/pixfmt.h	392;"	d
AV_PIX_FMT_BAYER_GBRG16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GBRG16BE, \/\/\/< bayer, GBGB..(odd line), RGRG..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GBRG16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GBRG16LE, \/\/\/< bayer, GBGB..(odd line), RGRG..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GBRG8	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GBRG8,    \/\/\/< bayer, GBGB..(odd line), RGRG..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GRBG16	ffmpeg/include/libavutil/pixfmt.h	393;"	d
AV_PIX_FMT_BAYER_GRBG16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GRBG16BE, \/\/\/< bayer, GRGR..(odd line), BGBG..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GRBG16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GRBG16LE, \/\/\/< bayer, GRGR..(odd line), BGBG..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GRBG8	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GRBG8,    \/\/\/< bayer, GRGR..(odd line), BGBG..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_RGGB16	ffmpeg/include/libavutil/pixfmt.h	391;"	d
AV_PIX_FMT_BAYER_RGGB16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_RGGB16BE, \/\/\/< bayer, RGRG..(odd line), GBGB..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_RGGB16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_RGGB16LE, \/\/\/< bayer, RGRG..(odd line), GBGB..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_RGGB8	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_RGGB8,    \/\/\/< bayer, RGRG..(odd line), GBGB..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR0	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR0,        \/\/\/< packed BGR 8:8:8, 32bpp, BGRXBGRX...   X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR24	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR24,     \/\/\/< packed RGB 8:8:8, 24bpp, BGRBGR...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR32	ffmpeg/include/libavutil/pixfmt.h	347;"	d
AV_PIX_FMT_BGR32_1	ffmpeg/include/libavutil/pixfmt.h	348;"	d
AV_PIX_FMT_BGR4	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR4,      \/\/\/< packed RGB 1:2:1 bitstream,  4bpp, (msb)1B 2G 1R(lsb), a byte contains two pixels, the first pixel in the byte is the one composed by the 4 msb bits$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR444	ffmpeg/include/libavutil/pixfmt.h	362;"	d
AV_PIX_FMT_BGR444BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR444BE,  \/\/\/< packed BGR 4:4:4, 16bpp, (msb)4X 4B 4G 4R(lsb), big-endian,    X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR444LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR444LE,  \/\/\/< packed BGR 4:4:4, 16bpp, (msb)4X 4B 4G 4R(lsb), little-endian, X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR48	ffmpeg/include/libavutil/pixfmt.h	359;"	d
AV_PIX_FMT_BGR48BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR48BE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R\/G\/B component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR48LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR48LE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R\/G\/B component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR4_BYTE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR4_BYTE, \/\/\/< packed RGB 1:2:1,  8bpp, (msb)1B 2G 1R(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR555	ffmpeg/include/libavutil/pixfmt.h	361;"	d
AV_PIX_FMT_BGR555BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR555BE,  \/\/\/< packed BGR 5:5:5, 16bpp, (msb)1X 5B 5G 5R(lsb), big-endian   , X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR555LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR555LE,  \/\/\/< packed BGR 5:5:5, 16bpp, (msb)1X 5B 5G 5R(lsb), little-endian, X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR565	ffmpeg/include/libavutil/pixfmt.h	360;"	d
AV_PIX_FMT_BGR565BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR565BE,  \/\/\/< packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR565LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR565LE,  \/\/\/< packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR8	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR8,      \/\/\/< packed RGB 3:3:2,  8bpp, (msb)2B 3G 3R(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA,      \/\/\/< packed BGRA 8:8:8:8, 32bpp, BGRABGRA...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA64	ffmpeg/include/libavutil/pixfmt.h	363;"	d
AV_PIX_FMT_BGRA64BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA64BE,  \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA64BE	ffmpeg/include/libavutil/pixfmt.h	328;"	d
AV_PIX_FMT_BGRA64BE_LIBAV	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA64BE_LIBAV,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA64LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA64LE,  \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R\/G\/B\/A component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA64LE	ffmpeg/include/libavutil/pixfmt.h	329;"	d
AV_PIX_FMT_BGRA64LE_LIBAV	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA64LE_LIBAV,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R\/G\/B\/A component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_D3D11VA_VLD	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_D3D11VA_VLD,  \/\/\/< HW decoding through Direct3D11, Picture.data[3] contains a ID3D11VideoDecoderOutputView pointer$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_DXVA2_VLD	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_DXVA2_VLD,    \/\/\/< HW decoding through DXVA2, Picture.data[3] contains a LPDIRECT3DSURFACE9 pointer$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_FLAG_ALPHA	ffmpeg/include/libavutil/pixdesc.h	156;"	d
AV_PIX_FMT_FLAG_BE	ffmpeg/include/libavutil/pixdesc.h	111;"	d
AV_PIX_FMT_FLAG_BITSTREAM	ffmpeg/include/libavutil/pixdesc.h	119;"	d
AV_PIX_FMT_FLAG_HWACCEL	ffmpeg/include/libavutil/pixdesc.h	123;"	d
AV_PIX_FMT_FLAG_PAL	ffmpeg/include/libavutil/pixdesc.h	115;"	d
AV_PIX_FMT_FLAG_PLANAR	ffmpeg/include/libavutil/pixdesc.h	127;"	d
AV_PIX_FMT_FLAG_PSEUDOPAL	ffmpeg/include/libavutil/pixdesc.h	141;"	d
AV_PIX_FMT_FLAG_RGB	ffmpeg/include/libavutil/pixdesc.h	131;"	d
AV_PIX_FMT_GBR24P	ffmpeg/include/libavutil/pixfmt.h	337;"	d
AV_PIX_FMT_GBRAP	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP,       \/\/\/< planar GBRA 4:4:4:4 32bpp$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP	ffmpeg/include/libavutil/pixfmt.h	330;"	d
AV_PIX_FMT_GBRAP16	ffmpeg/include/libavutil/pixfmt.h	388;"	d
AV_PIX_FMT_GBRAP16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP16BE,   \/\/\/< planar GBRA 4:4:4:4 64bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP16BE	ffmpeg/include/libavutil/pixfmt.h	331;"	d
AV_PIX_FMT_GBRAP16BE_LIBAV	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP16BE_LIBAV,    \/\/\/< planar GBRA 4:4:4:4 64bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP16LE,   \/\/\/< planar GBRA 4:4:4:4 64bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP16LE	ffmpeg/include/libavutil/pixfmt.h	332;"	d
AV_PIX_FMT_GBRAP16LE_LIBAV	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP16LE_LIBAV,    \/\/\/< planar GBRA 4:4:4:4 64bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP_LIBAV	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP_LIBAV,        \/\/\/< planar GBRA 4:4:4:4 32bpp$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP,      \/\/\/< planar GBR 4:4:4 24bpp$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP10	ffmpeg/include/libavutil/pixfmt.h	384;"	d
AV_PIX_FMT_GBRP10BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP10BE,  \/\/\/< planar GBR 4:4:4 30bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP10LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP10LE,  \/\/\/< planar GBR 4:4:4 30bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP12	ffmpeg/include/libavutil/pixfmt.h	385;"	d
AV_PIX_FMT_GBRP12BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP12BE,    \/\/\/< planar GBR 4:4:4 36bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP12LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP12LE,    \/\/\/< planar GBR 4:4:4 36bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP14	ffmpeg/include/libavutil/pixfmt.h	386;"	d
AV_PIX_FMT_GBRP14BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP14BE,    \/\/\/< planar GBR 4:4:4 42bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP14LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP14LE,    \/\/\/< planar GBR 4:4:4 42bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP16	ffmpeg/include/libavutil/pixfmt.h	387;"	d
AV_PIX_FMT_GBRP16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP16BE,  \/\/\/< planar GBR 4:4:4 48bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP16LE,  \/\/\/< planar GBR 4:4:4 48bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP9	ffmpeg/include/libavutil/pixfmt.h	383;"	d
AV_PIX_FMT_GBRP9BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP9BE,   \/\/\/< planar GBR 4:4:4 27bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP9LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP9LE,   \/\/\/< planar GBR 4:4:4 27bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY16	ffmpeg/include/libavutil/pixfmt.h	352;"	d
AV_PIX_FMT_GRAY16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY16BE,  \/\/\/<        Y        , 16bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY16LE,  \/\/\/<        Y        , 16bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY8	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY8,     \/\/\/<        Y        ,  8bpp$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY8A	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY8A= AV_PIX_FMT_YA8, \/\/\/< alias for AV_PIX_FMT_YA8$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_MMAL	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_MMAL,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_MONOBLACK	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_MONOBLACK, \/\/\/<        Y        ,  1bpp, 0 is black, 1 is white, in each byte pixels are ordered from the msb to the lsb$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_MONOWHITE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_MONOWHITE, \/\/\/<        Y        ,  1bpp, 0 is white, 1 is black, in each byte pixels are ordered from the msb to the lsb$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NB	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NB,        \/\/\/< number of pixel formats, DO NOT USE THIS if you want to link with shared libav* because the number of formats might differ between versions$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NE	ffmpeg/include/libavutil/pixfmt.h	340;"	d
AV_PIX_FMT_NE	ffmpeg/include/libavutil/pixfmt.h	342;"	d
AV_PIX_FMT_NONE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NONE = -1,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV12	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NV12,      \/\/\/< planar YUV 4:2:0, 12bpp, 1 plane for Y and 1 plane for the UV components, which are interleaved (first byte U and the following byte V)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV16	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NV16,         \/\/\/< interleaved chroma YUV 4:2:2, 16bpp, (1 Cr & Cb sample per 2x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV20	ffmpeg/include/libavutil/pixfmt.h	407;"	d
AV_PIX_FMT_NV20BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NV20BE,       \/\/\/< interleaved chroma YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV20LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NV20LE,       \/\/\/< interleaved chroma YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV21	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NV21,      \/\/\/< as above, but U and V bytes are swapped$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_PAL8	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_PAL8,      \/\/\/< 8 bit with AV_PIX_FMT_RGB32 palette$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_QSV	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_QSV,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB0	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB0,        \/\/\/< packed RGB 8:8:8, 32bpp, RGBXRGBX...   X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB24	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB24,     \/\/\/< packed RGB 8:8:8, 24bpp, RGBRGB...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB32	ffmpeg/include/libavutil/pixfmt.h	345;"	d
AV_PIX_FMT_RGB32_1	ffmpeg/include/libavutil/pixfmt.h	346;"	d
AV_PIX_FMT_RGB4	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB4,      \/\/\/< packed RGB 1:2:1 bitstream,  4bpp, (msb)1R 2G 1B(lsb), a byte contains two pixels, the first pixel in the byte is the one composed by the 4 msb bits$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB444	ffmpeg/include/libavutil/pixfmt.h	357;"	d
AV_PIX_FMT_RGB444BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB444BE,  \/\/\/< packed RGB 4:4:4, 16bpp, (msb)4X 4R 4G 4B(lsb), big-endian,    X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB444LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB444LE,  \/\/\/< packed RGB 4:4:4, 16bpp, (msb)4X 4R 4G 4B(lsb), little-endian, X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB48	ffmpeg/include/libavutil/pixfmt.h	354;"	d
AV_PIX_FMT_RGB48BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB48BE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R\/G\/B component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB48LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB48LE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R\/G\/B component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB4_BYTE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB4_BYTE, \/\/\/< packed RGB 1:2:1,  8bpp, (msb)1R 2G 1B(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB555	ffmpeg/include/libavutil/pixfmt.h	356;"	d
AV_PIX_FMT_RGB555BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB555BE,  \/\/\/< packed RGB 5:5:5, 16bpp, (msb)1X 5R 5G 5B(lsb), big-endian   , X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB555LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB555LE,  \/\/\/< packed RGB 5:5:5, 16bpp, (msb)1X 5R 5G 5B(lsb), little-endian, X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB565	ffmpeg/include/libavutil/pixfmt.h	355;"	d
AV_PIX_FMT_RGB565BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB565BE,  \/\/\/< packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB565LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB565LE,  \/\/\/< packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB8	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB8,      \/\/\/< packed RGB 3:3:2,  8bpp, (msb)2R 3G 3B(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA,      \/\/\/< packed RGBA 8:8:8:8, 32bpp, RGBARGBA...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64	ffmpeg/include/libavutil/pixfmt.h	358;"	d
AV_PIX_FMT_RGBA64BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64BE,  \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64BE=0x123,  \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64BE	ffmpeg/include/libavutil/pixfmt.h	326;"	d
AV_PIX_FMT_RGBA64BE_LIBAV	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64BE_LIBAV,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64LE,  \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64LE	ffmpeg/include/libavutil/pixfmt.h	327;"	d
AV_PIX_FMT_RGBA64LE_LIBAV	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64LE_LIBAV,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_UYVY422	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_UYVY422,   \/\/\/< packed YUV 4:2:2, 16bpp, Cb Y0 Cr Y1$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_UYYVYY411	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_UYYVYY411, \/\/\/< packed YUV 4:1:1, 12bpp, Cb Y0 Y1 Cr Y2 Y3$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VAAPI_IDCT	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VAAPI_IDCT, \/\/\/< HW acceleration through VA API at IDCT entry-point, Picture.data[3] contains a vaapi_render_state struct which contains fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VAAPI_MOCO	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VAAPI_MOCO, \/\/\/< HW acceleration through VA API at motion compensation entry-point, Picture.data[3] contains a vaapi_render_state struct which contains macroblocks as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VAAPI_VLD	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VAAPI_VLD,  \/\/\/< HW decoding through VA API, Picture.data[3] contains a vaapi_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDA	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDA,          \/\/\/< HW acceleration through VDA, data[3] contains a CVPixelBufferRef$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDA_VLD	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDA_VLD,    \/\/\/< hardware decoding through VDA$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU,     \/\/\/< HW acceleration through VDPAU, Picture.data[3] contains a VdpVideoSurface$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_H264	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_H264,\/\/\/< H.264 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_MPEG1	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_MPEG1,\/\/\/< MPEG-1 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_MPEG2	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_MPEG2,\/\/\/< MPEG-2 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_MPEG4	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_MPEG4,  \/\/\/< MPEG4 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_VC1	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_VC1, \/\/\/< VC-1 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_WMV3	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_WMV3,\/\/\/< WMV3 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VIDEOTOOLBOX	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VIDEOTOOLBOX, \/\/\/< hardware decoding through Videotoolbox$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XVMC	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_XVMC,\/\/\/< XVideo Motion Acceleration via common packet passing$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XVMC	ffmpeg/include/libavutil/pixfmt.h	81;"	d
AV_PIX_FMT_XVMC_MPEG2_IDCT	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_XVMC_MPEG2_IDCT,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XVMC_MPEG2_MC	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_XVMC_MPEG2_MC,\/\/\/< XVideo Motion Acceleration via common packet passing$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XYZ12	ffmpeg/include/libavutil/pixfmt.h	406;"	d
AV_PIX_FMT_XYZ12BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_XYZ12BE,      \/\/\/< packed XYZ 4:4:4, 36 bpp, (msb) 12X, 12Y, 12Z (lsb), the 2-byte value for each X\/Y\/Z is stored as big-endian, the 4 lower bits are set to 0$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XYZ12LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_XYZ12LE,      \/\/\/< packed XYZ 4:4:4, 36 bpp, (msb) 12X, 12Y, 12Z (lsb), the 2-byte value for each X\/Y\/Z is stored as little-endian, the 4 lower bits are set to 0$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_Y400A	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_Y400A = AV_PIX_FMT_YA8, \/\/\/< alias for AV_PIX_FMT_YA8$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_Y400A	ffmpeg/include/libavutil/pixfmt.h	336;"	d
AV_PIX_FMT_YA16	ffmpeg/include/libavutil/pixfmt.h	353;"	d
AV_PIX_FMT_YA16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YA16BE,       \/\/\/< 16bit gray, 16bit alpha (big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YA16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YA16LE,       \/\/\/< 16bit gray, 16bit alpha (little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YA8	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YA8,       \/\/\/< 8bit gray, 8bit alpha$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV410P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV410P,   \/\/\/< planar YUV 4:1:0,  9bpp, (1 Cr & Cb sample per 4x4 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV411P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV411P,   \/\/\/< planar YUV 4:1:1, 12bpp, (1 Cr & Cb sample per 4x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P,   \/\/\/< planar YUV 4:2:0, 12bpp, (1 Cr & Cb sample per 2x2 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P10	ffmpeg/include/libavutil/pixfmt.h	368;"	d
AV_PIX_FMT_YUV420P10BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P10BE,\/\/\/< planar YUV 4:2:0, 15bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P10LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P10LE,\/\/\/< planar YUV 4:2:0, 15bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P12	ffmpeg/include/libavutil/pixfmt.h	372;"	d
AV_PIX_FMT_YUV420P12BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P12BE, \/\/\/< planar YUV 4:2:0,18bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P12LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P12LE, \/\/\/< planar YUV 4:2:0,18bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P14	ffmpeg/include/libavutil/pixfmt.h	376;"	d
AV_PIX_FMT_YUV420P14BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P14BE, \/\/\/< planar YUV 4:2:0,21bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P14LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P14LE, \/\/\/< planar YUV 4:2:0,21bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P16	ffmpeg/include/libavutil/pixfmt.h	379;"	d
AV_PIX_FMT_YUV420P16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P16BE,  \/\/\/< planar YUV 4:2:0, 24bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P16LE,  \/\/\/< planar YUV 4:2:0, 24bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P9	ffmpeg/include/libavutil/pixfmt.h	365;"	d
AV_PIX_FMT_YUV420P9BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P9BE, \/\/\/< planar YUV 4:2:0, 13.5bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P9LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P9LE, \/\/\/< planar YUV 4:2:0, 13.5bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P,   \/\/\/< planar YUV 4:2:2, 16bpp, (1 Cr & Cb sample per 2x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P10	ffmpeg/include/libavutil/pixfmt.h	369;"	d
AV_PIX_FMT_YUV422P10BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P10BE,\/\/\/< planar YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P10LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P10LE,\/\/\/< planar YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P12	ffmpeg/include/libavutil/pixfmt.h	373;"	d
AV_PIX_FMT_YUV422P12BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P12BE, \/\/\/< planar YUV 4:2:2,24bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P12LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P12LE, \/\/\/< planar YUV 4:2:2,24bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P14	ffmpeg/include/libavutil/pixfmt.h	377;"	d
AV_PIX_FMT_YUV422P14BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P14BE, \/\/\/< planar YUV 4:2:2,28bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P14LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P14LE, \/\/\/< planar YUV 4:2:2,28bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P16	ffmpeg/include/libavutil/pixfmt.h	380;"	d
AV_PIX_FMT_YUV422P16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P16BE,  \/\/\/< planar YUV 4:2:2, 32bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P16LE,  \/\/\/< planar YUV 4:2:2, 32bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P9	ffmpeg/include/libavutil/pixfmt.h	366;"	d
AV_PIX_FMT_YUV422P9BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P9BE, \/\/\/< planar YUV 4:2:2, 18bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P9LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P9LE, \/\/\/< planar YUV 4:2:2, 18bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P,   \/\/\/< planar YUV 4:4:0 (1 Cr & Cb sample per 1x2 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P10	ffmpeg/include/libavutil/pixfmt.h	370;"	d
AV_PIX_FMT_YUV440P10BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P10BE, \/\/\/< planar YUV 4:4:0,20bpp, (1 Cr & Cb sample per 1x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P10LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P10LE, \/\/\/< planar YUV 4:4:0,20bpp, (1 Cr & Cb sample per 1x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P12	ffmpeg/include/libavutil/pixfmt.h	374;"	d
AV_PIX_FMT_YUV440P12BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P12BE, \/\/\/< planar YUV 4:4:0,24bpp, (1 Cr & Cb sample per 1x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P12LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P12LE, \/\/\/< planar YUV 4:4:0,24bpp, (1 Cr & Cb sample per 1x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P,   \/\/\/< planar YUV 4:4:4, 24bpp, (1 Cr & Cb sample per 1x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P10	ffmpeg/include/libavutil/pixfmt.h	371;"	d
AV_PIX_FMT_YUV444P10BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P10BE,\/\/\/< planar YUV 4:4:4, 30bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P10LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P10LE,\/\/\/< planar YUV 4:4:4, 30bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P12	ffmpeg/include/libavutil/pixfmt.h	375;"	d
AV_PIX_FMT_YUV444P12BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P12BE, \/\/\/< planar YUV 4:4:4,36bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P12LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P12LE, \/\/\/< planar YUV 4:4:4,36bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P14	ffmpeg/include/libavutil/pixfmt.h	378;"	d
AV_PIX_FMT_YUV444P14BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P14BE, \/\/\/< planar YUV 4:4:4,42bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P14LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P14LE, \/\/\/< planar YUV 4:4:4,42bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P16	ffmpeg/include/libavutil/pixfmt.h	381;"	d
AV_PIX_FMT_YUV444P16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P16BE,  \/\/\/< planar YUV 4:4:4, 48bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P16LE,  \/\/\/< planar YUV 4:4:4, 48bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P9	ffmpeg/include/libavutil/pixfmt.h	367;"	d
AV_PIX_FMT_YUV444P9BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P9BE, \/\/\/< planar YUV 4:4:4, 27bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P9LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P9LE, \/\/\/< planar YUV 4:4:4, 27bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P,  \/\/\/< planar YUV 4:2:0, 20bpp, (1 Cr & Cb sample per 2x2 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P10	ffmpeg/include/libavutil/pixfmt.h	399;"	d
AV_PIX_FMT_YUVA420P10BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P10BE, \/\/\/< planar YUV 4:2:0 25bpp, (1 Cr & Cb sample per 2x2 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P10LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P10LE, \/\/\/< planar YUV 4:2:0 25bpp, (1 Cr & Cb sample per 2x2 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P16	ffmpeg/include/libavutil/pixfmt.h	402;"	d
AV_PIX_FMT_YUVA420P16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P16BE, \/\/\/< planar YUV 4:2:0 40bpp, (1 Cr & Cb sample per 2x2 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P16LE, \/\/\/< planar YUV 4:2:0 40bpp, (1 Cr & Cb sample per 2x2 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P9	ffmpeg/include/libavutil/pixfmt.h	396;"	d
AV_PIX_FMT_YUVA420P9BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P9BE,  \/\/\/< planar YUV 4:2:0 22.5bpp, (1 Cr & Cb sample per 2x2 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P9LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P9LE,  \/\/\/< planar YUV 4:2:0 22.5bpp, (1 Cr & Cb sample per 2x2 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P,  \/\/\/< planar YUV 4:2:2 24bpp, (1 Cr & Cb sample per 2x1 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P	ffmpeg/include/libavutil/pixfmt.h	324;"	d
AV_PIX_FMT_YUVA422P10	ffmpeg/include/libavutil/pixfmt.h	400;"	d
AV_PIX_FMT_YUVA422P10BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P10BE, \/\/\/< planar YUV 4:2:2 30bpp, (1 Cr & Cb sample per 2x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P10LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P10LE, \/\/\/< planar YUV 4:2:2 30bpp, (1 Cr & Cb sample per 2x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P16	ffmpeg/include/libavutil/pixfmt.h	403;"	d
AV_PIX_FMT_YUVA422P16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P16BE, \/\/\/< planar YUV 4:2:2 48bpp, (1 Cr & Cb sample per 2x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P16LE, \/\/\/< planar YUV 4:2:2 48bpp, (1 Cr & Cb sample per 2x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P9	ffmpeg/include/libavutil/pixfmt.h	397;"	d
AV_PIX_FMT_YUVA422P9BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P9BE,  \/\/\/< planar YUV 4:2:2 27bpp, (1 Cr & Cb sample per 2x1 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P9LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P9LE,  \/\/\/< planar YUV 4:2:2 27bpp, (1 Cr & Cb sample per 2x1 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P_LIBAV	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P_LIBAV,  \/\/\/< planar YUV 4:2:2 24bpp, (1 Cr & Cb sample per 2x1 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P,  \/\/\/< planar YUV 4:4:4 32bpp, (1 Cr & Cb sample per 1x1 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P	ffmpeg/include/libavutil/pixfmt.h	325;"	d
AV_PIX_FMT_YUVA444P10	ffmpeg/include/libavutil/pixfmt.h	401;"	d
AV_PIX_FMT_YUVA444P10BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P10BE, \/\/\/< planar YUV 4:4:4 40bpp, (1 Cr & Cb sample per 1x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P10LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P10LE, \/\/\/< planar YUV 4:4:4 40bpp, (1 Cr & Cb sample per 1x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P16	ffmpeg/include/libavutil/pixfmt.h	404;"	d
AV_PIX_FMT_YUVA444P16BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P16BE, \/\/\/< planar YUV 4:4:4 64bpp, (1 Cr & Cb sample per 1x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P16LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P16LE, \/\/\/< planar YUV 4:4:4 64bpp, (1 Cr & Cb sample per 1x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P9	ffmpeg/include/libavutil/pixfmt.h	398;"	d
AV_PIX_FMT_YUVA444P9BE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P9BE,  \/\/\/< planar YUV 4:4:4 36bpp, (1 Cr & Cb sample per 1x1 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P9LE	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P9LE,  \/\/\/< planar YUV 4:4:4 36bpp, (1 Cr & Cb sample per 1x1 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P_LIBAV	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P_LIBAV,  \/\/\/< planar YUV 4:4:4 32bpp, (1 Cr & Cb sample per 1x1 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ411P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ411P,    \/\/\/< planar YUV 4:1:1, 12bpp, (1 Cr & Cb sample per 4x1 Y samples) full scale (JPEG), deprecated in favor of AV_PIX_FMT_YUV411P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ420P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ420P,  \/\/\/< planar YUV 4:2:0, 12bpp, full scale (JPEG), deprecated in favor of AV_PIX_FMT_YUV420P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ422P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ422P,  \/\/\/< planar YUV 4:2:2, 16bpp, full scale (JPEG), deprecated in favor of AV_PIX_FMT_YUV422P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ440P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ440P,  \/\/\/< planar YUV 4:4:0 full scale (JPEG), deprecated in favor of AV_PIX_FMT_YUV440P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ444P	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ444P,  \/\/\/< planar YUV 4:4:4, 24bpp, full scale (JPEG), deprecated in favor of AV_PIX_FMT_YUV444P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUYV422	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUYV422,   \/\/\/< packed YUV 4:2:2, 16bpp, Y0 Cb Y1 Cr$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YVYU422	ffmpeg/include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YVYU422,   \/\/\/< packed YUV 4:2:2, 16bpp, Y0 Cr Y1 Cb$/;"	e	enum:AVPixelFormat
AV_PKT_DATA_AUDIO_SERVICE_TYPE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_AUDIO_SERVICE_TYPE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_DISPLAYMATRIX	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_DISPLAYMATRIX,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_H263_MB_INFO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_H263_MB_INFO,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_JP_DUALMONO	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_JP_DUALMONO,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_METADATA_UPDATE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_METADATA_UPDATE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_NEW_EXTRADATA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_NEW_EXTRADATA,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_PALETTE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_PALETTE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_PARAM_CHANGE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_PARAM_CHANGE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_QUALITY_FACTOR	ffmpeg/include/libavcodec/avcodec.h	1369;"	d
AV_PKT_DATA_QUALITY_STATS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_QUALITY_STATS,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_REPLAYGAIN	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_REPLAYGAIN,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_SKIP_SAMPLES	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_SKIP_SAMPLES=70,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_STEREO3D	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_STEREO3D,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_STRINGS_METADATA	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_STRINGS_METADATA,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_SUBTITLE_POSITION	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_SUBTITLE_POSITION,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_WEBVTT_IDENTIFIER	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_WEBVTT_IDENTIFIER,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_WEBVTT_SETTINGS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_PKT_DATA_WEBVTT_SETTINGS,$/;"	e	enum:AVPacketSideDataType
AV_PKT_FLAG_CORRUPT	ffmpeg/include/libavcodec/avcodec.h	1469;"	d
AV_PKT_FLAG_KEY	ffmpeg/include/libavcodec/avcodec.h	1468;"	d
AV_PRAGMA	ffmpeg/include/libavutil/macros.h	46;"	d
AV_PROGRAM_RUNNING	ffmpeg/include/libavformat/avformat.h	1189;"	d
AV_PTS_WRAP_ADD_OFFSET	ffmpeg/include/libavformat/avformat.h	824;"	d
AV_PTS_WRAP_IGNORE	ffmpeg/include/libavformat/avformat.h	823;"	d
AV_PTS_WRAP_SUB_OFFSET	ffmpeg/include/libavformat/avformat.h	825;"	d
AV_RB	ffmpeg/include/libavutil/intreadwrite.h	384;"	d
AV_RB	ffmpeg/include/libavutil/intreadwrite.h	389;"	d
AV_RB16	ffmpeg/include/libavutil/intreadwrite.h	240;"	d
AV_RB16	ffmpeg/include/libavutil/intreadwrite.h	402;"	d
AV_RB16	ffmpeg/include/libavutil/intreadwrite.h	90;"	d
AV_RB24	ffmpeg/include/libavutil/intreadwrite.h	102;"	d
AV_RB24	ffmpeg/include/libavutil/intreadwrite.h	444;"	d
AV_RB32	ffmpeg/include/libavutil/intreadwrite.h	114;"	d
AV_RB32	ffmpeg/include/libavutil/intreadwrite.h	266;"	d
AV_RB32	ffmpeg/include/libavutil/intreadwrite.h	416;"	d
AV_RB48	ffmpeg/include/libavutil/intreadwrite.h	126;"	d
AV_RB48	ffmpeg/include/libavutil/intreadwrite.h	472;"	d
AV_RB64	ffmpeg/include/libavutil/intreadwrite.h	138;"	d
AV_RB64	ffmpeg/include/libavutil/intreadwrite.h	300;"	d
AV_RB64	ffmpeg/include/libavutil/intreadwrite.h	430;"	d
AV_RB8	ffmpeg/include/libavutil/intreadwrite.h	395;"	d
AV_RL	ffmpeg/include/libavutil/intreadwrite.h	386;"	d
AV_RL	ffmpeg/include/libavutil/intreadwrite.h	391;"	d
AV_RL16	ffmpeg/include/libavutil/intreadwrite.h	152;"	d
AV_RL16	ffmpeg/include/libavutil/intreadwrite.h	253;"	d
AV_RL16	ffmpeg/include/libavutil/intreadwrite.h	409;"	d
AV_RL24	ffmpeg/include/libavutil/intreadwrite.h	164;"	d
AV_RL24	ffmpeg/include/libavutil/intreadwrite.h	458;"	d
AV_RL32	ffmpeg/include/libavutil/intreadwrite.h	176;"	d
AV_RL32	ffmpeg/include/libavutil/intreadwrite.h	283;"	d
AV_RL32	ffmpeg/include/libavutil/intreadwrite.h	423;"	d
AV_RL48	ffmpeg/include/libavutil/intreadwrite.h	188;"	d
AV_RL48	ffmpeg/include/libavutil/intreadwrite.h	493;"	d
AV_RL64	ffmpeg/include/libavutil/intreadwrite.h	200;"	d
AV_RL64	ffmpeg/include/libavutil/intreadwrite.h	325;"	d
AV_RL64	ffmpeg/include/libavutil/intreadwrite.h	437;"	d
AV_RL8	ffmpeg/include/libavutil/intreadwrite.h	398;"	d
AV_RN	ffmpeg/include/libavutil/intreadwrite.h	224;"	d
AV_RN	ffmpeg/include/libavutil/intreadwrite.h	229;"	d
AV_RN	ffmpeg/include/libavutil/intreadwrite.h	234;"	d
AV_RN	ffmpeg/include/libavutil/intreadwrite.h	350;"	d
AV_RN	ffmpeg/include/libavutil/intreadwrite.h	353;"	d
AV_RN16	ffmpeg/include/libavutil/intreadwrite.h	154;"	d
AV_RN16	ffmpeg/include/libavutil/intreadwrite.h	360;"	d
AV_RN16	ffmpeg/include/libavutil/intreadwrite.h	92;"	d
AV_RN16A	ffmpeg/include/libavutil/intreadwrite.h	522;"	d
AV_RN24	ffmpeg/include/libavutil/intreadwrite.h	104;"	d
AV_RN24	ffmpeg/include/libavutil/intreadwrite.h	166;"	d
AV_RN32	ffmpeg/include/libavutil/intreadwrite.h	116;"	d
AV_RN32	ffmpeg/include/libavutil/intreadwrite.h	178;"	d
AV_RN32	ffmpeg/include/libavutil/intreadwrite.h	364;"	d
AV_RN32A	ffmpeg/include/libavutil/intreadwrite.h	526;"	d
AV_RN48	ffmpeg/include/libavutil/intreadwrite.h	128;"	d
AV_RN48	ffmpeg/include/libavutil/intreadwrite.h	190;"	d
AV_RN64	ffmpeg/include/libavutil/intreadwrite.h	140;"	d
AV_RN64	ffmpeg/include/libavutil/intreadwrite.h	202;"	d
AV_RN64	ffmpeg/include/libavutil/intreadwrite.h	368;"	d
AV_RN64A	ffmpeg/include/libavutil/intreadwrite.h	530;"	d
AV_RNA	ffmpeg/include/libavutil/intreadwrite.h	518;"	d
AV_ROUND_DOWN	ffmpeg/include/libavutil/mathematics.h	/^    AV_ROUND_DOWN     = 2, \/\/\/< Round toward -infinity.$/;"	e	enum:AVRounding
AV_ROUND_INF	ffmpeg/include/libavutil/mathematics.h	/^    AV_ROUND_INF      = 1, \/\/\/< Round away from zero.$/;"	e	enum:AVRounding
AV_ROUND_NEAR_INF	ffmpeg/include/libavutil/mathematics.h	/^    AV_ROUND_NEAR_INF = 5, \/\/\/< Round to nearest and halfway cases away from zero.$/;"	e	enum:AVRounding
AV_ROUND_PASS_MINMAX	ffmpeg/include/libavutil/mathematics.h	/^    AV_ROUND_PASS_MINMAX = 8192, \/\/\/< Flag to pass INT64_MIN\/MAX through instead of rescaling, this avoids special cases for AV_NOPTS_VALUE$/;"	e	enum:AVRounding
AV_ROUND_UP	ffmpeg/include/libavutil/mathematics.h	/^    AV_ROUND_UP       = 3, \/\/\/< Round toward +infinity.$/;"	e	enum:AVRounding
AV_ROUND_ZERO	ffmpeg/include/libavutil/mathematics.h	/^    AV_ROUND_ZERO     = 0, \/\/\/< Round toward zero.$/;"	e	enum:AVRounding
AV_SAMPLE_FMT_DBL	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_DBL,         \/\/\/< double$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_DBLP	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_DBLP,        \/\/\/< double, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_FLT	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_FLT,         \/\/\/< float$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_FLTP	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_FLTP,        \/\/\/< float, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_NB	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_NB           \/\/\/< Number of sample formats. DO NOT USE if linking dynamically$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_NONE	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_NONE = -1,$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S16	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S16,         \/\/\/< signed 16 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S16P	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S16P,        \/\/\/< signed 16 bits, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S32	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S32,         \/\/\/< signed 32 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S32P	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S32P,        \/\/\/< signed 32 bits, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_U8	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_U8,          \/\/\/< unsigned 8 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_U8P	ffmpeg/include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_U8P,         \/\/\/< unsigned 8 bits, planar$/;"	e	enum:AVSampleFormat
AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT  = 0x0001,$/;"	e	enum:AVSideDataParamChangeFlags
AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT	ffmpeg/include/libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT = 0x0002,$/;"	e	enum:AVSideDataParamChangeFlags
AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS	ffmpeg/include/libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS     = 0x0008,$/;"	e	enum:AVSideDataParamChangeFlags
AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE	ffmpeg/include/libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE    = 0x0004,$/;"	e	enum:AVSideDataParamChangeFlags
AV_STEREO3D_2D	ffmpeg/include/libavutil/stereo3d.h	/^    AV_STEREO3D_2D,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_CHECKERBOARD	ffmpeg/include/libavutil/stereo3d.h	/^    AV_STEREO3D_CHECKERBOARD,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_COLUMNS	ffmpeg/include/libavutil/stereo3d.h	/^    AV_STEREO3D_COLUMNS,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_FLAG_INVERT	ffmpeg/include/libavutil/stereo3d.h	114;"	d
AV_STEREO3D_FRAMESEQUENCE	ffmpeg/include/libavutil/stereo3d.h	/^    AV_STEREO3D_FRAMESEQUENCE,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_LINES	ffmpeg/include/libavutil/stereo3d.h	/^    AV_STEREO3D_LINES,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_SIDEBYSIDE	ffmpeg/include/libavutil/stereo3d.h	/^    AV_STEREO3D_SIDEBYSIDE,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_SIDEBYSIDE_QUINCUNX	ffmpeg/include/libavutil/stereo3d.h	/^    AV_STEREO3D_SIDEBYSIDE_QUINCUNX,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_TOPBOTTOM	ffmpeg/include/libavutil/stereo3d.h	/^    AV_STEREO3D_TOPBOTTOM,$/;"	e	enum:AVStereo3DType
AV_STRINGIFY	ffmpeg/include/libavutil/macros.h	36;"	d
AV_SUBTITLE_FLAG_FORCED	ffmpeg/include/libavcodec/avcodec.h	3771;"	d
AV_SWAP	ffmpeg/include/libavutil/intreadwrite.h	601;"	d
AV_SWAP64	ffmpeg/include/libavutil/intreadwrite.h	604;"	d
AV_THREAD_MESSAGE_NONBLOCK	ffmpeg/include/libavutil/threadmessage.h	/^    AV_THREAD_MESSAGE_NONBLOCK = 1,$/;"	e	enum:AVThreadMessageFlags
AV_TIMECODE_FLAG_24HOURSMAX	ffmpeg/include/libavutil/timecode.h	/^    AV_TIMECODE_FLAG_24HOURSMAX     = 1<<1, \/\/\/< timecode wraps after 24 hours$/;"	e	enum:AVTimecodeFlag
AV_TIMECODE_FLAG_ALLOWNEGATIVE	ffmpeg/include/libavutil/timecode.h	/^    AV_TIMECODE_FLAG_ALLOWNEGATIVE  = 1<<2, \/\/\/< negative time values are allowed$/;"	e	enum:AVTimecodeFlag
AV_TIMECODE_FLAG_DROPFRAME	ffmpeg/include/libavutil/timecode.h	/^    AV_TIMECODE_FLAG_DROPFRAME      = 1<<0, \/\/\/< timecode is drop frame$/;"	e	enum:AVTimecodeFlag
AV_TIMECODE_STR_SIZE	ffmpeg/include/libavutil/timecode.h	33;"	d
AV_TIME_BASE	ffmpeg/include/libavutil/avutil.h	254;"	d
AV_TIME_BASE_Q	ffmpeg/include/libavutil/avutil.h	260;"	d
AV_TOSTRING	ffmpeg/include/libavutil/macros.h	37;"	d
AV_TS_MAX_STRING_SIZE	ffmpeg/include/libavutil/timestamp.h	33;"	d
AV_UTF8_FLAG_ACCEPT_ALL	ffmpeg/include/libavutil/avstring.h	336;"	d
AV_UTF8_FLAG_ACCEPT_INVALID_BIG_CODES	ffmpeg/include/libavutil/avstring.h	331;"	d
AV_UTF8_FLAG_ACCEPT_NON_CHARACTERS	ffmpeg/include/libavutil/avstring.h	332;"	d
AV_UTF8_FLAG_ACCEPT_SURROGATES	ffmpeg/include/libavutil/avstring.h	333;"	d
AV_UTF8_FLAG_EXCLUDE_XML_INVALID_CONTROL_CODES	ffmpeg/include/libavutil/avstring.h	334;"	d
AV_VERSION	ffmpeg/include/libavutil/version.h	37;"	d
AV_VERSION_DOT	ffmpeg/include/libavutil/version.h	36;"	d
AV_VERSION_INT	ffmpeg/include/libavutil/version.h	35;"	d
AV_WB	ffmpeg/include/libavutil/intreadwrite.h	385;"	d
AV_WB	ffmpeg/include/libavutil/intreadwrite.h	390;"	d
AV_WB16	ffmpeg/include/libavutil/intreadwrite.h	245;"	d
AV_WB16	ffmpeg/include/libavutil/intreadwrite.h	405;"	d
AV_WB16	ffmpeg/include/libavutil/intreadwrite.h	96;"	d
AV_WB24	ffmpeg/include/libavutil/intreadwrite.h	108;"	d
AV_WB24	ffmpeg/include/libavutil/intreadwrite.h	450;"	d
AV_WB32	ffmpeg/include/libavutil/intreadwrite.h	120;"	d
AV_WB32	ffmpeg/include/libavutil/intreadwrite.h	273;"	d
AV_WB32	ffmpeg/include/libavutil/intreadwrite.h	419;"	d
AV_WB48	ffmpeg/include/libavutil/intreadwrite.h	132;"	d
AV_WB48	ffmpeg/include/libavutil/intreadwrite.h	481;"	d
AV_WB64	ffmpeg/include/libavutil/intreadwrite.h	144;"	d
AV_WB64	ffmpeg/include/libavutil/intreadwrite.h	311;"	d
AV_WB64	ffmpeg/include/libavutil/intreadwrite.h	433;"	d
AV_WB8	ffmpeg/include/libavutil/intreadwrite.h	396;"	d
AV_WL	ffmpeg/include/libavutil/intreadwrite.h	387;"	d
AV_WL	ffmpeg/include/libavutil/intreadwrite.h	392;"	d
AV_WL16	ffmpeg/include/libavutil/intreadwrite.h	158;"	d
AV_WL16	ffmpeg/include/libavutil/intreadwrite.h	258;"	d
AV_WL16	ffmpeg/include/libavutil/intreadwrite.h	412;"	d
AV_WL24	ffmpeg/include/libavutil/intreadwrite.h	170;"	d
AV_WL24	ffmpeg/include/libavutil/intreadwrite.h	464;"	d
AV_WL32	ffmpeg/include/libavutil/intreadwrite.h	182;"	d
AV_WL32	ffmpeg/include/libavutil/intreadwrite.h	290;"	d
AV_WL32	ffmpeg/include/libavutil/intreadwrite.h	426;"	d
AV_WL48	ffmpeg/include/libavutil/intreadwrite.h	194;"	d
AV_WL48	ffmpeg/include/libavutil/intreadwrite.h	502;"	d
AV_WL64	ffmpeg/include/libavutil/intreadwrite.h	206;"	d
AV_WL64	ffmpeg/include/libavutil/intreadwrite.h	336;"	d
AV_WL64	ffmpeg/include/libavutil/intreadwrite.h	440;"	d
AV_WL8	ffmpeg/include/libavutil/intreadwrite.h	399;"	d
AV_WN	ffmpeg/include/libavutil/intreadwrite.h	225;"	d
AV_WN	ffmpeg/include/libavutil/intreadwrite.h	230;"	d
AV_WN	ffmpeg/include/libavutil/intreadwrite.h	235;"	d
AV_WN	ffmpeg/include/libavutil/intreadwrite.h	351;"	d
AV_WN	ffmpeg/include/libavutil/intreadwrite.h	354;"	d
AV_WN16	ffmpeg/include/libavutil/intreadwrite.h	160;"	d
AV_WN16	ffmpeg/include/libavutil/intreadwrite.h	372;"	d
AV_WN16	ffmpeg/include/libavutil/intreadwrite.h	98;"	d
AV_WN16A	ffmpeg/include/libavutil/intreadwrite.h	534;"	d
AV_WN24	ffmpeg/include/libavutil/intreadwrite.h	110;"	d
AV_WN24	ffmpeg/include/libavutil/intreadwrite.h	172;"	d
AV_WN32	ffmpeg/include/libavutil/intreadwrite.h	122;"	d
AV_WN32	ffmpeg/include/libavutil/intreadwrite.h	184;"	d
AV_WN32	ffmpeg/include/libavutil/intreadwrite.h	376;"	d
AV_WN32A	ffmpeg/include/libavutil/intreadwrite.h	538;"	d
AV_WN48	ffmpeg/include/libavutil/intreadwrite.h	134;"	d
AV_WN48	ffmpeg/include/libavutil/intreadwrite.h	196;"	d
AV_WN64	ffmpeg/include/libavutil/intreadwrite.h	146;"	d
AV_WN64	ffmpeg/include/libavutil/intreadwrite.h	208;"	d
AV_WN64	ffmpeg/include/libavutil/intreadwrite.h	380;"	d
AV_WN64A	ffmpeg/include/libavutil/intreadwrite.h	542;"	d
AV_WNA	ffmpeg/include/libavutil/intreadwrite.h	519;"	d
AV_XVMC_ID	ffmpeg/include/libavcodec/xvmc.h	43;"	d
AV_ZERO	ffmpeg/include/libavutil/intreadwrite.h	607;"	d
AV_ZERO128	ffmpeg/include/libavutil/intreadwrite.h	622;"	d
AV_ZERO16	ffmpeg/include/libavutil/intreadwrite.h	610;"	d
AV_ZERO32	ffmpeg/include/libavutil/intreadwrite.h	614;"	d
AV_ZERO64	ffmpeg/include/libavutil/intreadwrite.h	618;"	d
AppendSpanGroup	spice-common/common/lines.c	268;"	d	file:
ArrayType	spice-common/python_modules/ptypes.py	/^class ArrayType(Type):$/;"	c
BACKTRACE_H	spice-common/common/backtrace.h	20;"	d
BIO_GET_GSOCKET	glib/bio-gio.c	35;"	d	file:
BIO_GET_ISTREAM	glib/bio-gio.c	36;"	d	file:
BIO_GET_OSTREAM	glib/bio-gio.c	37;"	d	file:
BIO_GIO_H_	glib/bio-gio.h	19;"	d
BITOPS_H	make/bitopscommon.h	22;"	d
BITOPS_H	make/wbitopscommon.h	22;"	d
BITOPS_H	spice-common/common/bitops.h	22;"	d
BOUND_OFFSET	spice-common/common/lz.c	425;"	d	file:
BPC	spice-common/common/quic_family_tmpl.c	115;"	d	file:
BPC	spice-common/common/quic_family_tmpl.c	26;"	d	file:
BPC	spice-common/common/quic_family_tmpl.c	34;"	d	file:
BPC	spice-common/common/quic_rgb_tmpl.c	31;"	d	file:
BPC	spice-common/common/quic_rgb_tmpl.c	52;"	d	file:
BPC	spice-common/common/quic_rgb_tmpl.c	73;"	d	file:
BPC	spice-common/common/quic_rgb_tmpl.c	756;"	d	file:
BPC	spice-common/common/quic_rgb_tmpl.c	94;"	d	file:
BPC	spice-common/common/quic_tmpl.c	46;"	d	file:
BPC	spice-common/common/quic_tmpl.c	634;"	d	file:
BPC_MASK	spice-common/common/quic_rgb_tmpl.c	32;"	d	file:
BPC_MASK	spice-common/common/quic_rgb_tmpl.c	53;"	d	file:
BPC_MASK	spice-common/common/quic_rgb_tmpl.c	74;"	d	file:
BPC_MASK	spice-common/common/quic_rgb_tmpl.c	757;"	d	file:
BPC_MASK	spice-common/common/quic_rgb_tmpl.c	95;"	d	file:
BPC_MASK	spice-common/common/quic_tmpl.c	47;"	d	file:
BPC_MASK	spice-common/common/quic_tmpl.c	635;"	d	file:
BYTE	spice-common/common/quic.c	/^typedef uint8_t BYTE;$/;"	t	file:
BYTE	win32/create_bmp.h	/^typedef unsigned char BYTE;$/;"	t
BYTES_TO_16	spice-common/common/lz_compress_tmpl.c	533;"	d	file:
BitmapData	spice-common/common/gdi_canvas.c	/^struct BitmapData {$/;"	s	file:
Block	spice-common/python_modules/codegen.py	/^    class Block:$/;"	c	class:CodeWriter
Boolean	spice-common/common/lines.c	/^typedef int Boolean;$/;"	t	file:
ButtonLCX2Spice	win32/win32_spice_interface.c	/^void ButtonLCX2Spice(int *button)$/;"	f
CANVAS_SINGLE_INSTANCE	spice-common/common/sw_canvas.c	28;"	d	file:
CANVAS_USE_PIXMAN	spice-common/common/sw_canvas.c	27;"	d	file:
CARD32	spice-common/common/lines.c	/^typedef unsigned int CARD32;$/;"	t	file:
CAST_PLT_DISTANCE	glib/decode-glz-tmpl.c	101;"	d	file:
CAST_PLT_DISTANCE	glib/decode-glz-tmpl.c	119;"	d	file:
CAST_PLT_DISTANCE	glib/decode-glz-tmpl.c	339;"	d	file:
CAST_PLT_DISTANCE	glib/decode-glz-tmpl.c	71;"	d	file:
CAST_PLT_DISTANCE	glib/decode-glz-tmpl.c	83;"	d	file:
CAST_PLT_DISTANCE	spice-common/common/lz_decompress_tmpl.c	106;"	d	file:
CAST_PLT_DISTANCE	spice-common/common/lz_decompress_tmpl.c	118;"	d	file:
CAST_PLT_DISTANCE	spice-common/common/lz_decompress_tmpl.c	136;"	d	file:
CAST_PLT_DISTANCE	spice-common/common/lz_decompress_tmpl.c	154;"	d	file:
CAST_PLT_DISTANCE	spice-common/common/lz_decompress_tmpl.c	346;"	d	file:
CBTypes	win32/win32_spice_interface_types.h	/^typedef enum CBTypes{$/;"	g
CBTypes	win32/win32_spice_interface_types.h	/^}CBTypes; $/;"	t	typeref:enum:CBTypes
CB_CURSOR_HIDE	win32/win32_spice_interface_types.h	/^   CB_CURSOR_HIDE,$/;"	e	enum:CBTypes
CB_CURSOR_MOVE	win32/win32_spice_interface_types.h	/^   CB_CURSOR_MOVE,$/;"	e	enum:CBTypes
CB_CURSOR_RESET	win32/win32_spice_interface_types.h	/^   CB_CURSOR_RESET,$/;"	e	enum:CBTypes
CB_CURSOr_SET	win32/win32_spice_interface_types.h	/^   CB_CURSOr_SET,$/;"	e	enum:CBTypes
CB_INVALIDATE	win32/win32_spice_interface_types.h	/^   CB_INVALIDATE,$/;"	e	enum:CBTypes
CB_MAIN_CHANNEL_EVENT	win32/win32_spice_interface_types.h	/^   CB_MAIN_CHANNEL_EVENT,$/;"	e	enum:CBTypes
CB_NULL	win32/win32_spice_interface_types.h	/^   CB_NULL$/;"	e	enum:CBTypes
CB_SETTING_CHANGE	win32/win32_spice_interface_types.h	/^   CB_SETTING_CHANGE = 0,$/;"	e	enum:CBTypes
CB_USB_ADD_DEV	win32/win32_spice_interface_types.h	/^   CB_USB_ADD_DEV,$/;"	e	enum:CBTypes
CB_USB_CONNECT_FAILD	win32/win32_spice_interface_types.h	/^   CB_USB_CONNECT_FAILD,$/;"	e	enum:CBTypes
CB_USB_DEVICE_ERROR	win32/win32_spice_interface_types.h	/^   CB_USB_DEVICE_ERROR,$/;"	e	enum:CBTypes
CB_USB_REMOVE	win32/win32_spice_interface_types.h	/^   CB_USB_REMOVE,$/;"	e	enum:CBTypes
CC	glib/makefile	/^CC=gcc$/;"	m
CC	spice-common/common/makefile	/^CC=gcc$/;"	m
CC	win32/makefile	/^CC=gcc$/;"	m
CFLAGS	examples/makefile	/^CFLAGS = -std=gnu99$/;"	m
CFLAGS	glib/makefile	/^CFLAGS = -std=gnu99 -g$/;"	m
CFLAGS	spice-common/common/makefile	/^CFLAGS = -std=c99  $/;"	m
CFLAGS	win32/makefile	/^CFLAGS = -std=gnu99 -DSPICE_GTK_LOCALEDIR=\\""${SPICE_GTK_LOCALEDIR}"\\"$/;"	m
CHANNELID_MAX	win32/win32-spicy.h	72;"	d
CHANNEL_DEBUG	glib/spice-channel-priv.h	45;"	d
CHANNEL_DISPLAY_PRIV_H_	glib/channel-display-priv.h	20;"	d
CLAMP_CHECK	glib/channel-display.c	1785;"	d	file:
CLIENT_MONITORS_CONFIG_CRC32_POLY	spice-common/spice-protocol/spice/qxl_dev.h	169;"	d
CLIPSTEPEDGE	spice-common/common/lines.c	2152;"	d	file:
CODEC_CAP_AUTO_THREADS	ffmpeg/include/libavcodec/avcodec.h	1117;"	d
CODEC_CAP_CHANNEL_CONF	ffmpeg/include/libavcodec/avcodec.h	1095;"	d
CODEC_CAP_DELAY	ffmpeg/include/libavcodec/avcodec.h	1063;"	d
CODEC_CAP_DR1	ffmpeg/include/libavcodec/avcodec.h	1028;"	d
CODEC_CAP_DRAW_HORIZ_BAND	ffmpeg/include/libavcodec/avcodec.h	1022;"	d
CODEC_CAP_EXPERIMENTAL	ffmpeg/include/libavcodec/avcodec.h	1091;"	d
CODEC_CAP_FRAME_THREADS	ffmpeg/include/libavcodec/avcodec.h	1105;"	d
CODEC_CAP_HWACCEL	ffmpeg/include/libavcodec/avcodec.h	1038;"	d
CODEC_CAP_HWACCEL_VDPAU	ffmpeg/include/libavcodec/avcodec.h	1073;"	d
CODEC_CAP_INTRA_ONLY	ffmpeg/include/libavcodec/avcodec.h	1125;"	d
CODEC_CAP_LOSSLESS	ffmpeg/include/libavcodec/avcodec.h	1129;"	d
CODEC_CAP_NEG_LINESIZES	ffmpeg/include/libavcodec/avcodec.h	1100;"	d
CODEC_CAP_PARAM_CHANGE	ffmpeg/include/libavcodec/avcodec.h	1113;"	d
CODEC_CAP_SLICE_THREADS	ffmpeg/include/libavcodec/avcodec.h	1109;"	d
CODEC_CAP_SMALL_LAST_FRAME	ffmpeg/include/libavcodec/avcodec.h	1068;"	d
CODEC_CAP_SUBFRAMES	ffmpeg/include/libavcodec/avcodec.h	1086;"	d
CODEC_CAP_TRUNCATED	ffmpeg/include/libavcodec/avcodec.h	1029;"	d
CODEC_CAP_VARIABLE_FRAME_SIZE	ffmpeg/include/libavcodec/avcodec.h	1121;"	d
CODEC_FLAG2_CHUNKS	ffmpeg/include/libavcodec/avcodec.h	1010;"	d
CODEC_FLAG2_DROP_FRAME_TIMECODE	ffmpeg/include/libavcodec/avcodec.h	1007;"	d
CODEC_FLAG2_EXPORT_MVS	ffmpeg/include/libavcodec/avcodec.h	1012;"	d
CODEC_FLAG2_FAST	ffmpeg/include/libavcodec/avcodec.h	1004;"	d
CODEC_FLAG2_IGNORE_CROP	ffmpeg/include/libavcodec/avcodec.h	1008;"	d
CODEC_FLAG2_LOCAL_HEADER	ffmpeg/include/libavcodec/avcodec.h	1006;"	d
CODEC_FLAG2_NO_OUTPUT	ffmpeg/include/libavcodec/avcodec.h	1005;"	d
CODEC_FLAG2_SHOW_ALL	ffmpeg/include/libavcodec/avcodec.h	1011;"	d
CODEC_FLAG2_SKIP_MANUAL	ffmpeg/include/libavcodec/avcodec.h	1013;"	d
CODEC_FLAG_4MV	ffmpeg/include/libavcodec/avcodec.h	953;"	d
CODEC_FLAG_AC_PRED	ffmpeg/include/libavcodec/avcodec.h	1000;"	d
CODEC_FLAG_BITEXACT	ffmpeg/include/libavcodec/avcodec.h	999;"	d
CODEC_FLAG_CLOSED_GOP	ffmpeg/include/libavcodec/avcodec.h	1003;"	d
CODEC_FLAG_EMU_EDGE	ffmpeg/include/libavcodec/avcodec.h	984;"	d
CODEC_FLAG_GLOBAL_HEADER	ffmpeg/include/libavcodec/avcodec.h	998;"	d
CODEC_FLAG_GMC	ffmpeg/include/libavcodec/avcodec.h	960;"	d
CODEC_FLAG_GRAY	ffmpeg/include/libavcodec/avcodec.h	978;"	d
CODEC_FLAG_INPUT_PRESERVED	ffmpeg/include/libavcodec/avcodec.h	974;"	d
CODEC_FLAG_INTERLACED_DCT	ffmpeg/include/libavcodec/avcodec.h	996;"	d
CODEC_FLAG_INTERLACED_ME	ffmpeg/include/libavcodec/avcodec.h	1002;"	d
CODEC_FLAG_LOOP_FILTER	ffmpeg/include/libavcodec/avcodec.h	1001;"	d
CODEC_FLAG_LOW_DELAY	ffmpeg/include/libavcodec/avcodec.h	997;"	d
CODEC_FLAG_MV0	ffmpeg/include/libavcodec/avcodec.h	967;"	d
CODEC_FLAG_NORMALIZE_AQP	ffmpeg/include/libavcodec/avcodec.h	994;"	d
CODEC_FLAG_OUTPUT_CORRUPT	ffmpeg/include/libavcodec/avcodec.h	954;"	d
CODEC_FLAG_PASS1	ffmpeg/include/libavcodec/avcodec.h	976;"	d
CODEC_FLAG_PASS2	ffmpeg/include/libavcodec/avcodec.h	977;"	d
CODEC_FLAG_PSNR	ffmpeg/include/libavcodec/avcodec.h	986;"	d
CODEC_FLAG_QPEL	ffmpeg/include/libavcodec/avcodec.h	955;"	d
CODEC_FLAG_QSCALE	ffmpeg/include/libavcodec/avcodec.h	952;"	d
CODEC_FLAG_TRUNCATED	ffmpeg/include/libavcodec/avcodec.h	987;"	d
CODEC_FLAG_UNALIGNED	ffmpeg/include/libavcodec/avcodec.h	951;"	d
COMMON	spice-common/common/makefile	/^COMMON=libspice-common.so$/;"	m
COMMONCLIENT	spice-common/common/makefile	/^COMMONCLIENT=libspice-common-client.a$/;"	m
COMPRESS_IMP	spice-common/common/quic_rgb_tmpl.c	33;"	d	file:
COMPRESS_IMP	spice-common/common/quic_rgb_tmpl.c	54;"	d	file:
COMPRESS_IMP	spice-common/common/quic_rgb_tmpl.c	758;"	d	file:
COMPRESS_IMP	spice-common/common/quic_rgb_tmpl.c	75;"	d	file:
COMPRESS_ONE	spice-common/common/quic_rgb_tmpl.c	321;"	d	file:
COMPRESS_ONE	spice-common/common/quic_rgb_tmpl.c	744;"	d	file:
COMPRESS_ONE_0	spice-common/common/quic_rgb_tmpl.c	313;"	d	file:
COMPRESS_ONE_0	spice-common/common/quic_rgb_tmpl.c	743;"	d	file:
COMPRESS_ONE_ROW0	spice-common/common/quic_rgb_tmpl.c	172;"	d	file:
COMPRESS_ONE_ROW0	spice-common/common/quic_rgb_tmpl.c	742;"	d	file:
COMPRESS_ONE_ROW0_0	spice-common/common/quic_rgb_tmpl.c	165;"	d	file:
COMPRESS_ONE_ROW0_0	spice-common/common/quic_rgb_tmpl.c	741;"	d	file:
COMP_LEVEL_SIZE_LIMIT	spice-common/common/lz.c	428;"	d	file:
CONTROLLER_AUTO_DISPLAY_RES	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_AUTO_DISPLAY_RES = 1 << 1,$/;"	e	enum:__anon59
CONTROLLER_CA_FILE	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_CA_FILE,$/;"	e	enum:__anon58
CONTROLLER_COLOR_DEPTH	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_COLOR_DEPTH,$/;"	e	enum:__anon58
CONTROLLER_CONNECT	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_CONNECT,$/;"	e	enum:__anon58
CONTROLLER_CREATE_MENU	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_CREATE_MENU,$/;"	e	enum:__anon58
CONTROLLER_DELETE_MENU	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_DELETE_MENU,$/;"	e	enum:__anon58
CONTROLLER_DISABLE_CHANNELS	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_DISABLE_CHANNELS,$/;"	e	enum:__anon58
CONTROLLER_DISABLE_EFFECTS	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_DISABLE_EFFECTS,$/;"	e	enum:__anon58
CONTROLLER_ENABLE_SMARTCARD	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_ENABLE_SMARTCARD,$/;"	e	enum:__anon58
CONTROLLER_ENABLE_USB	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_ENABLE_USB,$/;"	e	enum:__anon58
CONTROLLER_ENABLE_USB_AUTOSHARE	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_ENABLE_USB_AUTOSHARE,$/;"	e	enum:__anon58
CONTROLLER_FLAG_EXCLUSIVE	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_FLAG_EXCLUSIVE = 1 << 0,$/;"	e	enum:__anon57
CONTROLLER_FULL_SCREEN	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_FULL_SCREEN,$/;"	e	enum:__anon58
CONTROLLER_HIDE	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_HIDE,$/;"	e	enum:__anon58
CONTROLLER_HOST	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_HOST = 1,$/;"	e	enum:__anon58
CONTROLLER_HOST_SUBJECT	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_HOST_SUBJECT,$/;"	e	enum:__anon58
CONTROLLER_HOTKEYS	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_HOTKEYS,$/;"	e	enum:__anon58
CONTROLLER_MAGIC	spice-common/spice-protocol/spice/controller_prot.h	24;"	d
CONTROLLER_MENU_FLAGS_CHECKED	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_MENU_FLAGS_CHECKED      = 1 << 3,$/;"	e	enum:__anon60
CONTROLLER_MENU_FLAGS_DISABLED	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_MENU_FLAGS_DISABLED     = 1 << 1,$/;"	e	enum:__anon60
CONTROLLER_MENU_FLAGS_GRAYED	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_MENU_FLAGS_GRAYED       = 1 << 4,$/;"	e	enum:__anon60
CONTROLLER_MENU_FLAGS_POPUP	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_MENU_FLAGS_POPUP        = 1 << 2,$/;"	e	enum:__anon60
CONTROLLER_MENU_FLAGS_SEPARATOR	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_MENU_FLAGS_SEPARATOR    = 1 << 0,$/;"	e	enum:__anon60
CONTROLLER_MENU_ITEM_CLICK	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_MENU_ITEM_CLICK = 1001,$/;"	e	enum:__anon58
CONTROLLER_MENU_ITEM_DELIMITER	spice-common/spice-protocol/spice/controller_prot.h	108;"	d
CONTROLLER_MENU_PARAM_DELIMITER	spice-common/spice-protocol/spice/controller_prot.h	109;"	d
CONTROLLER_PASSWORD	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_PASSWORD,$/;"	e	enum:__anon58
CONTROLLER_PORT	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_PORT,$/;"	e	enum:__anon58
CONTROLLER_PROXY	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_PROXY,$/;"	e	enum:__anon58
CONTROLLER_SECURE_CHANNELS	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_SECURE_CHANNELS,$/;"	e	enum:__anon58
CONTROLLER_SEND_CAD	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_SEND_CAD,$/;"	e	enum:__anon58
CONTROLLER_SET_FULL_SCREEN	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_SET_FULL_SCREEN  = CONTROLLER_TRUE,$/;"	e	enum:__anon59
CONTROLLER_SET_TITLE	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_SET_TITLE,$/;"	e	enum:__anon58
CONTROLLER_SHOW	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_SHOW,$/;"	e	enum:__anon58
CONTROLLER_SPORT	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_SPORT,$/;"	e	enum:__anon58
CONTROLLER_TLS_CIPHERS	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_TLS_CIPHERS,$/;"	e	enum:__anon58
CONTROLLER_TRUE	spice-common/spice-protocol/spice/controller_prot.h	91;"	d
CONTROLLER_USB_FILTER	spice-common/spice-protocol/spice/controller_prot.h	/^    CONTROLLER_USB_FILTER,$/;"	e	enum:__anon58
CONTROLLER_VERSION	spice-common/spice-protocol/spice/controller_prot.h	25;"	d
CONVERT_0555_TO_0888	win32/win32-spice-widget.c	171;"	d	file:
CONVERT_0555_TO_8888	win32/win32-spice-widget.c	176;"	d	file:
CONVERT_0565_TO_0888	win32/win32-spice-widget.c	164;"	d	file:
CONVERT_0565_TO_8888	win32/win32-spice-widget.c	169;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	104;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	128;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	132;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	146;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	157;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	171;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	337;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	48;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	55;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	62;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	74;"	d	file:
COPY_COMP_PIXEL	glib/decode-glz-tmpl.c	86;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	109;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	121;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	139;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	163;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	167;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	179;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	183;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	199;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	205;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	219;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	344;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	80;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	91;"	d	file:
COPY_COMP_PIXEL	spice-common/common/lz_decompress_tmpl.c	97;"	d	file:
COPY_PIXEL	glib/decode-glz-tmpl.c	169;"	d	file:
COPY_PIXEL	glib/decode-glz-tmpl.c	335;"	d	file:
COPY_PIXEL	glib/decode-glz-tmpl.c	39;"	d	file:
COPY_PIXEL	spice-common/common/lz_decompress_tmpl.c	217;"	d	file:
COPY_PIXEL	spice-common/common/lz_decompress_tmpl.c	342;"	d	file:
COPY_PIXEL	spice-common/common/lz_decompress_tmpl.c	70;"	d	file:
COPY_PLT_ENTRY	glib/decode-glz-tmpl.c	338;"	d	file:
COPY_PLT_ENTRY	glib/decode-glz-tmpl.c	51;"	d	file:
COPY_PLT_ENTRY	spice-common/common/lz_decompress_tmpl.c	345;"	d	file:
COPY_PLT_ENTRY	spice-common/common/lz_decompress_tmpl.c	83;"	d	file:
COPY_RASTER_OP	spice-common/common/pixman_utils.c	70;"	d	file:
COPY_REF_PIXEL	glib/decode-glz-tmpl.c	170;"	d	file:
COPY_REF_PIXEL	glib/decode-glz-tmpl.c	336;"	d	file:
COPY_REF_PIXEL	glib/decode-glz-tmpl.c	40;"	d	file:
COPY_REF_PIXEL	spice-common/common/lz_decompress_tmpl.c	218;"	d	file:
COPY_REF_PIXEL	spice-common/common/lz_decompress_tmpl.c	343;"	d	file:
COPY_REF_PIXEL	spice-common/common/lz_decompress_tmpl.c	71;"	d	file:
CORELATE	spice-common/common/quic_rgb_tmpl.c	130;"	d	file:
CORELATE	spice-common/common/quic_rgb_tmpl.c	149;"	d	file:
CORELATE	spice-common/common/quic_rgb_tmpl.c	746;"	d	file:
CORELATE_0	spice-common/common/quic_rgb_tmpl.c	120;"	d	file:
CORELATE_0	spice-common/common/quic_rgb_tmpl.c	745;"	d	file:
COUNTER	spice-common/common/quic.c	/^typedef unsigned COUNTER;   \/* counter in the array of counters in bucket of the data model *\/$/;"	t	file:
CalcLineDeltas	spice-common/common/lines.c	217;"	d	file:
CanvasBase	spice-common/common/canvas_base.c	/^typedef struct CanvasBase {$/;"	s	file:
CanvasBase	spice-common/common/canvas_base.c	/^} CanvasBase;$/;"	t	typeref:struct:CanvasBase	file:
CapButt	spice-common/common/lines.h	100;"	d
CapNotLast	spice-common/common/lines.h	99;"	d
CapProjecting	spice-common/common/lines.h	102;"	d
CapRound	spice-common/common/lines.h	101;"	d
Channel	spice-common/common/quic.c	/^typedef struct Channel {$/;"	s	file:
Channel	spice-common/common/quic.c	/^} Channel;$/;"	t	typeref:struct:Channel	file:
ChannelMember	spice-common/python_modules/ptypes.py	/^class ChannelMember(Containee):$/;"	c
ChannelType	spice-common/python_modules/ptypes.py	/^class ChannelType(Type):$/;"	c
Client	glib/channel-webdav.c	/^typedef struct Client$/;"	s	file:
Client	glib/channel-webdav.c	/^} Client;$/;"	t	typeref:struct:Client	file:
CodeWriter	spice-common/python_modules/codegen.py	/^class CodeWriter:$/;"	c
CommonState	spice-common/common/quic.c	/^typedef struct CommonState {$/;"	s	file:
CommonState	spice-common/common/quic.c	/^} CommonState;$/;"	t	typeref:struct:CommonState	file:
ConnectAsyncData	glib/wocky-http-proxy.c	/^} ConnectAsyncData;$/;"	t	typeref:struct:__anon7	file:
Containee	spice-common/python_modules/ptypes.py	/^class Containee:$/;"	c
ContainerType	spice-common/python_modules/ptypes.py	/^class ContainerType(Type):$/;"	c
ControllerData	spice-common/spice-protocol/spice/controller_prot.h	/^typedef struct SPICE_ATTR_PACKED ControllerData {$/;"	s
ControllerData	spice-common/spice-protocol/spice/controller_prot.h	/^} ControllerData;$/;"	t	typeref:struct:ControllerData
ControllerInit	spice-common/spice-protocol/spice/controller_prot.h	/^typedef struct SPICE_ATTR_PACKED ControllerInit {$/;"	s
ControllerInit	spice-common/spice-protocol/spice/controller_prot.h	/^} ControllerInit;$/;"	t	typeref:struct:ControllerInit
ControllerInitHeader	spice-common/spice-protocol/spice/controller_prot.h	/^typedef struct SPICE_ATTR_PACKED ControllerInitHeader {$/;"	s
ControllerInitHeader	spice-common/spice-protocol/spice/controller_prot.h	/^} ControllerInitHeader;$/;"	t	typeref:struct:ControllerInitHeader
ControllerMsg	spice-common/spice-protocol/spice/controller_prot.h	/^typedef struct SPICE_ATTR_PACKED ControllerMsg {$/;"	s
ControllerMsg	spice-common/spice-protocol/spice/controller_prot.h	/^} ControllerMsg;$/;"	t	typeref:struct:ControllerMsg
ControllerValue	spice-common/spice-protocol/spice/controller_prot.h	/^typedef struct SPICE_ATTR_PACKED ControllerValue {$/;"	s
ControllerValue	spice-common/spice-protocol/spice/controller_prot.h	/^} ControllerValue;$/;"	t	typeref:struct:ControllerValue
CoordModeOrigin	spice-common/common/lines.h	88;"	d
CoordModePrevious	spice-common/common/lines.h	89;"	d
CreateProcess	spice-common/build-aux/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
DCTContext	ffmpeg/include/libavcodec/avfft.h	/^typedef struct DCTContext DCTContext;$/;"	t	typeref:struct:DCTContext
DCTTransformType	ffmpeg/include/libavcodec/avfft.h	/^enum DCTTransformType {$/;"	g
DCT_I	ffmpeg/include/libavcodec/avfft.h	/^    DCT_I,$/;"	e	enum:DCTTransformType
DCT_II	ffmpeg/include/libavcodec/avfft.h	/^    DCT_II = 0,$/;"	e	enum:DCTTransformType
DCT_III	ffmpeg/include/libavcodec/avfft.h	/^    DCT_III,$/;"	e	enum:DCTTransformType
DDXPointPtr	spice-common/common/lines.c	/^typedef DDXPointRec *DDXPointPtr;$/;"	t	file:
DDXPointRec	spice-common/common/lines.c	/^typedef SpicePoint DDXPointRec;$/;"	t	file:
DEBUG_LOG	win32/virt-viewer-util.h	36;"	d
DECLARE_ALIGNED	ffmpeg/include/libavutil/mem.h	43;"	d
DECLARE_ALIGNED	ffmpeg/include/libavutil/mem.h	46;"	d
DECLARE_ALIGNED	ffmpeg/include/libavutil/mem.h	53;"	d
DECLARE_ALIGNED	ffmpeg/include/libavutil/mem.h	56;"	d
DECLARE_ALIGNED	ffmpeg/include/libavutil/mem.h	59;"	d
DECLARE_ASM_CONST	ffmpeg/include/libavutil/mem.h	44;"	d
DECLARE_ASM_CONST	ffmpeg/include/libavutil/mem.h	49;"	d
DECLARE_ASM_CONST	ffmpeg/include/libavutil/mem.h	54;"	d
DECLARE_ASM_CONST	ffmpeg/include/libavutil/mem.h	57;"	d
DECLARE_ASM_CONST	ffmpeg/include/libavutil/mem.h	60;"	d
DECODE_TO_RGB32	glib/decode-glz.c	/^const decode_function DECODE_TO_RGB32[] = {$/;"	v
DECODE_TO_SAME	glib/decode-glz.c	/^const decode_function DECODE_TO_SAME[] = {$/;"	v
DECORELATE	spice-common/common/quic_rgb_tmpl.c	126;"	d	file:
DECORELATE	spice-common/common/quic_rgb_tmpl.c	138;"	d	file:
DECORELATE	spice-common/common/quic_rgb_tmpl.c	740;"	d	file:
DECORELATE_0	spice-common/common/quic_rgb_tmpl.c	117;"	d	file:
DECORELATE_0	spice-common/common/quic_rgb_tmpl.c	739;"	d	file:
DEFAULTZEROLINEBIAS	spice-common/common/lines.c	151;"	d	file:
DEFAULT_MAX_FRAME_SIZE	glib/channel-display-h264.c	11;"	d	file:
DEFINE_FLAG	glib/makefile	/^DEFINE_FLAG=$/;"	m
DEFINE_FLAG	spice-common/common/makefile	/^DEFINE_FLAG= $/;"	m
DEFS	glib/makefile	/^DEFS = -DHAVE_CONFIG_H -DUSB_IDS=\\""$(USB_IDS)"\\"$/;"	m
DEFS	spice-common/common/makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFevol	spice-common/common/quic.c	49;"	d	file:
DEFmaxclen	spice-common/common/quic.c	58;"	d	file:
DEFwmimax	spice-common/common/quic.c	61;"	d	file:
DEFwminext	spice-common/common/quic.c	64;"	d	file:
DEFwmistart	spice-common/common/quic.c	54;"	d	file:
DEVICE_ADDED	glib/usb-device-manager.c	/^    DEVICE_ADDED,$/;"	e	enum:__anon14	file:
DEVICE_ERROR	glib/usb-device-manager.c	/^    DEVICE_ERROR,$/;"	e	enum:__anon14	file:
DEVICE_REMOVED	glib/usb-device-manager.c	/^    DEVICE_REMOVED,$/;"	e	enum:__anon14	file:
DEV_ID_FMT	glib/usb-device-manager.c	55;"	d	file:
DEV_ID_FMT	glib/usb-device-manager.c	57;"	d	file:
DFT_C2R	ffmpeg/include/libavcodec/avfft.h	/^    DFT_C2R,$/;"	e	enum:RDFTransformType
DFT_R2C	ffmpeg/include/libavcodec/avfft.h	/^    DFT_R2C,$/;"	e	enum:RDFTransformType
DJB2_HASH	spice-common/common/lz_compress_tmpl.c	48;"	d	file:
DJB2_START	spice-common/common/lz_compress_tmpl.c	47;"	d	file:
DRAW	glib/channel-display.c	818;"	d	file:
DST_I	ffmpeg/include/libavcodec/avfft.h	/^    DST_I,$/;"	e	enum:DCTTransformType
DV_PROFILE_BYTES	ffmpeg/include/libavcodec/dv_profile.h	30;"	d
DWORD	win32/create_bmp.h	/^typedef unsigned long DWORD;$/;"	t
DemarshallingDestination	spice-common/python_modules/demarshal.py	/^class DemarshallingDestination:$/;"	c
ENABLE_NLS	config.h	8;"	d
ENABLE_NLS	glib/config.h	10;"	d
ENABLE_NLS	make/config.h	8;"	d
ENABLE_NLS	make/configglib.h	10;"	d
ENABLE_NLS	make/configwin32.h	8;"	d
ENABLE_NLS	make/wconfig.h	8;"	d
ENABLE_NLS	make/wconfigglib.h	8;"	d
ENABLE_NLS	make/wconfigwin32.h	8;"	d
ENABLE_NLS	win32/config.h	8;"	d
ENCODE_PIXEL	spice-common/common/lz_compress_tmpl.c	111;"	d	file:
ENCODE_PIXEL	spice-common/common/lz_compress_tmpl.c	128;"	d	file:
ENCODE_PIXEL	spice-common/common/lz_compress_tmpl.c	134;"	d	file:
ENCODE_PIXEL	spice-common/common/lz_compress_tmpl.c	529;"	d	file:
ENCODE_PIXEL	spice-common/common/lz_compress_tmpl.c	62;"	d	file:
ENCODE_PIXEL	spice-common/common/lz_compress_tmpl.c	77;"	d	file:
ENCODE_PIXEL	spice-common/common/lz_compress_tmpl.c	93;"	d	file:
EQN1	spice-common/common/lines.c	1198;"	d	file:
EQN1B	spice-common/common/lines.c	1199;"	d	file:
EQN2	spice-common/common/lines.c	1200;"	d	file:
EQN2B	spice-common/common/lines.c	1201;"	d	file:
EQN3	spice-common/common/lines.c	1203;"	d	file:
EQN3B	spice-common/common/lines.c	1204;"	d	file:
EQN4	spice-common/common/lines.c	1205;"	d	file:
EQN4B	spice-common/common/lines.c	1206;"	d	file:
EQN5	spice-common/common/lines.c	1208;"	d	file:
EQN5B	spice-common/common/lines.c	1209;"	d	file:
EQN6	spice-common/common/lines.c	1210;"	d	file:
EQN6B	spice-common/common/lines.c	1211;"	d	file:
EQN7	spice-common/common/lines.c	1213;"	d	file:
EQN7B	spice-common/common/lines.c	1214;"	d	file:
EQN8	spice-common/common/lines.c	1215;"	d	file:
EQN8B	spice-common/common/lines.c	1216;"	d	file:
ERROR_HANDLE	win32/win32_spice_interface_types.h	46;"	d
ERROR_INTERNAL	win32/win32_spice_interface_types.h	43;"	d
ERROR_MAX	win32/win32_spice_interface_types.h	42;"	d
ERROR_NOT_EXIST	win32/win32_spice_interface_types.h	44;"	d
ERROR_NO_MEMORY	win32/win32_spice_interface_types.h	45;"	d
ERROR_OK	win32/win32_spice_interface_types.h	41;"	d
ERROR_RESOURCE	win32/win32_spice_interface_types.h	47;"	d
EXPECT_CONT	spice-common/common/region.c	/^    EXPECT_CONT,$/;"	e	enum:__anon138	file:
EXPECT_EQUAL	spice-common/common/region.c	/^    EXPECT_EQUAL,$/;"	e	enum:__anon138	file:
EXPECT_R1_EMPTY	spice-common/common/region.c	/^    EXPECT_R1_EMPTY,$/;"	e	enum:__anon138	file:
EXPECT_R2_EMPTY	spice-common/common/region.c	/^    EXPECT_R2_EMPTY,$/;"	e	enum:__anon138	file:
EXPECT_SECT	spice-common/common/region.c	/^    EXPECT_SECT,$/;"	e	enum:__anon138	file:
EXTENTCHECK	spice-common/common/region.c	32;"	d	file:
EXTRA	spice-common/common/lines.c	511;"	d	file:
EXTRACT	spice-common/common/canvas_base.c	3325;"	d	file:
Encoder	spice-common/common/lz.c	/^typedef struct Encoder {$/;"	s	file:
Encoder	spice-common/common/lz.c	/^} Encoder;$/;"	t	typeref:struct:Encoder	file:
Encoder	spice-common/common/quic.c	/^struct Encoder {$/;"	s	file:
Encoder	spice-common/common/quic.c	/^typedef struct Encoder Encoder;$/;"	t	typeref:struct:Encoder	file:
EnumBaseType	spice-common/python_modules/ptypes.py	/^class EnumBaseType(Type):$/;"	c
EnumType	spice-common/python_modules/ptypes.py	/^class EnumType(EnumBaseType):$/;"	c
ExchangeSpans	spice-common/common/lines.c	3395;"	d	file:
ExchangeSpans	spice-common/common/lines.c	3396;"	d	file:
ExchangeSpans	spice-common/common/lines.c	594;"	d	file:
FALSE	spice-common/spice-protocol/spice/macros.h	105;"	d
FFABS	ffmpeg/include/libavutil/common.h	61;"	d
FFALIGN	ffmpeg/include/libavutil/common.h	71;"	d
FFERRTAG	ffmpeg/include/libavutil/error.h	47;"	d
FFMAX	ffmpeg/include/libavutil/common.h	64;"	d
FFMAX3	ffmpeg/include/libavutil/common.h	65;"	d
FFMIN	ffmpeg/include/libavutil/common.h	66;"	d
FFMIN3	ffmpeg/include/libavutil/common.h	67;"	d
FFMPEG_VERSION	ffmpeg/include/libavutil/ffversion.h	3;"	d
FFSIGN	ffmpeg/include/libavutil/common.h	62;"	d
FFSWAP	ffmpeg/include/libavutil/common.h	69;"	d
FFTComplex	ffmpeg/include/libavcodec/avfft.h	/^typedef struct FFTComplex {$/;"	s
FFTComplex	ffmpeg/include/libavcodec/avfft.h	/^} FFTComplex;$/;"	t	typeref:struct:FFTComplex
FFTContext	ffmpeg/include/libavcodec/avfft.h	/^typedef struct FFTContext FFTContext;$/;"	t	typeref:struct:FFTContext
FFTSample	ffmpeg/include/libavcodec/avfft.h	/^typedef float FFTSample;$/;"	t
FFUDIV	ffmpeg/include/libavutil/common.h	59;"	d
FFUMOD	ffmpeg/include/libavutil/common.h	60;"	d
FF_API_AC_VLC	ffmpeg/include/libavcodec/version.h	106;"	d
FF_API_AFD	ffmpeg/include/libavcodec/version.h	172;"	d
FF_API_ARCH_ALPHA	ffmpeg/include/libavcodec/version.h	121;"	d
FF_API_ARCH_BFIN	ffmpeg/include/libswscale/version.h	53;"	d
FF_API_ARCH_SH4	ffmpeg/include/libavcodec/version.h	145;"	d
FF_API_ARCH_SPARC	ffmpeg/include/libavcodec/version.h	148;"	d
FF_API_ASPECT_EXTENDED	ffmpeg/include/libavcodec/version.h	112;"	d
FF_API_AUDIOCONVERT	ffmpeg/include/libavutil/version.h	99;"	d
FF_API_AUDIOENC_DELAY	ffmpeg/include/libavcodec/version.h	182;"	d
FF_API_AUDIO_CONVERT	ffmpeg/include/libavcodec/version.h	70;"	d
FF_API_AVCODEC_RESAMPLE	ffmpeg/include/libavcodec/version.h	73;"	d
FF_API_AVCTX_TIMEBASE	ffmpeg/include/libavcodec/version.h	185;"	d
FF_API_AVFILTERBUFFER	ffmpeg/include/libavfilter/version.h	59;"	d
FF_API_AVFILTERPAD_PUBLIC	ffmpeg/include/libavfilter/version.h	53;"	d
FF_API_AVFILTER_INIT_FILTER	ffmpeg/include/libavfilter/version.h	68;"	d
FF_API_AVFILTER_OPEN	ffmpeg/include/libavfilter/version.h	65;"	d
FF_API_AVFRAME_LAVC	ffmpeg/include/libavutil/version.h	108;"	d
FF_API_AV_REVERSE	ffmpeg/include/libavutil/version.h	96;"	d
FF_API_BUFS_VDPAU	ffmpeg/include/libavcodec/version.h	94;"	d
FF_API_CAP_VDPAU	ffmpeg/include/libavcodec/version.h	91;"	d
FF_API_CODEC_ID	ffmpeg/include/libavcodec/version.h	67;"	d
FF_API_CODEC_NAME	ffmpeg/include/libavcodec/version.h	169;"	d
FF_API_CODEC_PKT	ffmpeg/include/libavcodec/version.h	118;"	d
FF_API_CODED_FRAME	ffmpeg/include/libavcodec/version.h	200;"	d
FF_API_CONTEXT_SIZE	ffmpeg/include/libavutil/version.h	90;"	d
FF_API_CPU_FLAG_MMX2	ffmpeg/include/libavutil/version.h	102;"	d
FF_API_CRYPTO_CONTEXT	ffmpeg/include/libavutil/version.h	129;"	d
FF_API_DEBUG_MV	ffmpeg/include/libavcodec/version.h	103;"	d
FF_API_DEINTERLACE	ffmpeg/include/libavcodec/version.h	76;"	d
FF_API_DESTRUCT_PACKET	ffmpeg/include/libavcodec/version.h	79;"	d
FF_API_DLOG	ffmpeg/include/libavutil/version.h	123;"	d
FF_API_DV_FRAME_PROFILE	ffmpeg/include/libavcodec/version.h	179;"	d
FF_API_EMU_EDGE	ffmpeg/include/libavcodec/version.h	142;"	d
FF_API_ERROR_RATE	ffmpeg/include/libavcodec/version.h	127;"	d
FF_API_FOO_COUNT	ffmpeg/include/libavfilter/version.h	56;"	d
FF_API_GET_BUFFER	ffmpeg/include/libavcodec/version.h	82;"	d
FF_API_GET_CHANNEL_LAYOUT_COMPAT	ffmpeg/include/libavutil/version.h	114;"	d
FF_API_GMC	ffmpeg/include/libavcodec/version.h	163;"	d
FF_API_HMAC	ffmpeg/include/libavutil/version.h	126;"	d
FF_API_IDCT_XVIDMMX	ffmpeg/include/libavcodec/version.h	154;"	d
FF_API_INPUT_PRESERVED	ffmpeg/include/libavcodec/version.h	157;"	d
FF_API_LAVF_BITEXACT	ffmpeg/include/libavformat/version.h	52;"	d
FF_API_LAVF_CODEC_TB	ffmpeg/include/libavformat/version.h	58;"	d
FF_API_LAVF_FRAC	ffmpeg/include/libavformat/version.h	55;"	d
FF_API_LLS_PRIVATE	ffmpeg/include/libavutil/version.h	105;"	d
FF_API_LOWRES	ffmpeg/include/libavcodec/version.h	88;"	d
FF_API_MAX_BFRAMES	ffmpeg/include/libavcodec/version.h	136;"	d
FF_API_MB_TYPE	ffmpeg/include/libavcodec/version.h	133;"	d
FF_API_MISSING_SAMPLE	ffmpeg/include/libavcodec/version.h	85;"	d
FF_API_MOTION_EST	ffmpeg/include/libavcodec/version.h	203;"	d
FF_API_MPV_OPT	ffmpeg/include/libavcodec/version.h	188;"	d
FF_API_MV0	ffmpeg/include/libavcodec/version.h	166;"	d
FF_API_NEG_LINESIZES	ffmpeg/include/libavcodec/version.h	139;"	d
FF_API_NOCONST_GET_NAME	ffmpeg/include/libavfilter/version.h	77;"	d
FF_API_NORMALIZE_AQP	ffmpeg/include/libavcodec/version.h	160;"	d
FF_API_OLD_AVOPTIONS	ffmpeg/include/libavutil/version.h	84;"	d
FF_API_OLD_DECODE_AUDIO	ffmpeg/include/libavcodec/version.h	58;"	d
FF_API_OLD_ENCODE_AUDIO	ffmpeg/include/libavcodec/version.h	61;"	d
FF_API_OLD_ENCODE_VIDEO	ffmpeg/include/libavcodec/version.h	64;"	d
FF_API_OLD_FILTER_OPTS	ffmpeg/include/libavfilter/version.h	62;"	d
FF_API_OLD_FILTER_REGISTER	ffmpeg/include/libavfilter/version.h	71;"	d
FF_API_OLD_GRAPH_PARSE	ffmpeg/include/libavfilter/version.h	74;"	d
FF_API_OLD_MSMPEG4	ffmpeg/include/libavcodec/version.h	109;"	d
FF_API_OPT_TYPE_METADATA	ffmpeg/include/libavutil/version.h	120;"	d
FF_API_PIX_FMT	ffmpeg/include/libavutil/version.h	87;"	d
FF_API_PIX_FMT_DESC	ffmpeg/include/libavutil/version.h	93;"	d
FF_API_QSCALE_TYPE	ffmpeg/include/libavcodec/version.h	130;"	d
FF_API_QUANT_BIAS	ffmpeg/include/libavcodec/version.h	194;"	d
FF_API_RC_STRATEGY	ffmpeg/include/libavcodec/version.h	197;"	d
FF_API_REQUEST_CHANNELS	ffmpeg/include/libavcodec/version.h	55;"	d
FF_API_R_FRAME_RATE	ffmpeg/include/libavformat/version.h	65;"	d
FF_API_SET_DIMENSIONS	ffmpeg/include/libavcodec/version.h	100;"	d
FF_API_STREAM_CODEC_TAG	ffmpeg/include/libavcodec/version.h	191;"	d
FF_API_SWS_CPU_CAPS	ffmpeg/include/libswscale/version.h	50;"	d
FF_API_THREAD_OPAQUE	ffmpeg/include/libavcodec/version.h	115;"	d
FF_API_UNUSED_MEMBERS	ffmpeg/include/libavcodec/version.h	151;"	d
FF_API_URL_FEOF	ffmpeg/include/libavformat/version.h	61;"	d
FF_API_VDPAU	ffmpeg/include/libavutil/version.h	111;"	d
FF_API_VIMA_DECODER	ffmpeg/include/libavcodec/version.h	52;"	d
FF_API_VISMV	ffmpeg/include/libavcodec/version.h	176;"	d
FF_API_VOXWARE	ffmpeg/include/libavcodec/version.h	97;"	d
FF_API_WITHOUT_PREFIX	ffmpeg/include/libavcodec/version.h	206;"	d
FF_API_XVMC	ffmpeg/include/libavcodec/version.h	124;"	d
FF_API_XVMC	ffmpeg/include/libavutil/version.h	117;"	d
FF_ARRAY_ELEMS	ffmpeg/include/libavutil/common.h	70;"	d
FF_ASPECT_EXTENDED	ffmpeg/include/libavcodec/avcodec.h	1698;"	d
FF_BUFFER_HINTS_PRESERVE	ffmpeg/include/libavcodec/avcodec.h	1208;"	d
FF_BUFFER_HINTS_READABLE	ffmpeg/include/libavcodec/avcodec.h	1207;"	d
FF_BUFFER_HINTS_REUSABLE	ffmpeg/include/libavcodec/avcodec.h	1209;"	d
FF_BUFFER_HINTS_VALID	ffmpeg/include/libavcodec/avcodec.h	1206;"	d
FF_BUFFER_TYPE_COPY	ffmpeg/include/libavcodec/avcodec.h	1204;"	d
FF_BUFFER_TYPE_INTERNAL	ffmpeg/include/libavcodec/avcodec.h	1201;"	d
FF_BUFFER_TYPE_SHARED	ffmpeg/include/libavcodec/avcodec.h	1203;"	d
FF_BUFFER_TYPE_USER	ffmpeg/include/libavcodec/avcodec.h	1202;"	d
FF_BUG_AC_VLC	ffmpeg/include/libavcodec/avcodec.h	2795;"	d
FF_BUG_AMV	ffmpeg/include/libavcodec/avcodec.h	2793;"	d
FF_BUG_AUTODETECT	ffmpeg/include/libavcodec/avcodec.h	2786;"	d
FF_BUG_DC_CLIP	ffmpeg/include/libavcodec/avcodec.h	2803;"	d
FF_BUG_DIRECT_BLOCKSIZE	ffmpeg/include/libavcodec/avcodec.h	2800;"	d
FF_BUG_EDGE	ffmpeg/include/libavcodec/avcodec.h	2801;"	d
FF_BUG_HPEL_CHROMA	ffmpeg/include/libavcodec/avcodec.h	2802;"	d
FF_BUG_MS	ffmpeg/include/libavcodec/avcodec.h	2804;"	d
FF_BUG_NO_PADDING	ffmpeg/include/libavcodec/avcodec.h	2792;"	d
FF_BUG_OLD_MSMPEG4	ffmpeg/include/libavcodec/avcodec.h	2788;"	d
FF_BUG_QPEL_CHROMA	ffmpeg/include/libavcodec/avcodec.h	2797;"	d
FF_BUG_QPEL_CHROMA2	ffmpeg/include/libavcodec/avcodec.h	2799;"	d
FF_BUG_STD_QPEL	ffmpeg/include/libavcodec/avcodec.h	2798;"	d
FF_BUG_TRUNCATED	ffmpeg/include/libavcodec/avcodec.h	2805;"	d
FF_BUG_UMP4	ffmpeg/include/libavcodec/avcodec.h	2791;"	d
FF_BUG_XVID_ILACE	ffmpeg/include/libavcodec/avcodec.h	2790;"	d
FF_CEIL_RSHIFT	ffmpeg/include/libavutil/common.h	57;"	d
FF_CMP_BIT	ffmpeg/include/libavcodec/avcodec.h	1932;"	d
FF_CMP_CHROMA	ffmpeg/include/libavcodec/avcodec.h	1942;"	d
FF_CMP_DCT	ffmpeg/include/libavcodec/avcodec.h	1930;"	d
FF_CMP_DCT264	ffmpeg/include/libavcodec/avcodec.h	1941;"	d
FF_CMP_DCTMAX	ffmpeg/include/libavcodec/avcodec.h	1940;"	d
FF_CMP_NSSE	ffmpeg/include/libavcodec/avcodec.h	1937;"	d
FF_CMP_PSNR	ffmpeg/include/libavcodec/avcodec.h	1931;"	d
FF_CMP_RD	ffmpeg/include/libavcodec/avcodec.h	1933;"	d
FF_CMP_SAD	ffmpeg/include/libavcodec/avcodec.h	1927;"	d
FF_CMP_SATD	ffmpeg/include/libavcodec/avcodec.h	1929;"	d
FF_CMP_SSE	ffmpeg/include/libavcodec/avcodec.h	1928;"	d
FF_CMP_VSAD	ffmpeg/include/libavcodec/avcodec.h	1935;"	d
FF_CMP_VSSE	ffmpeg/include/libavcodec/avcodec.h	1936;"	d
FF_CMP_W53	ffmpeg/include/libavcodec/avcodec.h	1938;"	d
FF_CMP_W97	ffmpeg/include/libavcodec/avcodec.h	1939;"	d
FF_CMP_ZERO	ffmpeg/include/libavcodec/avcodec.h	1934;"	d
FF_CODEC_PROPERTY_CLOSED_CAPTIONS	ffmpeg/include/libavcodec/avcodec.h	3438;"	d
FF_CODEC_PROPERTY_LOSSLESS	ffmpeg/include/libavcodec/avcodec.h	3437;"	d
FF_CODER_TYPE_AC	ffmpeg/include/libavcodec/avcodec.h	2645;"	d
FF_CODER_TYPE_DEFLATE	ffmpeg/include/libavcodec/avcodec.h	2649;"	d
FF_CODER_TYPE_RAW	ffmpeg/include/libavcodec/avcodec.h	2646;"	d
FF_CODER_TYPE_RLE	ffmpeg/include/libavcodec/avcodec.h	2647;"	d
FF_CODER_TYPE_VLC	ffmpeg/include/libavcodec/avcodec.h	2644;"	d
FF_COMPLIANCE_EXPERIMENTAL	ffmpeg/include/libavcodec/avcodec.h	2824;"	d
FF_COMPLIANCE_NORMAL	ffmpeg/include/libavcodec/avcodec.h	2822;"	d
FF_COMPLIANCE_STRICT	ffmpeg/include/libavcodec/avcodec.h	2821;"	d
FF_COMPLIANCE_UNOFFICIAL	ffmpeg/include/libavcodec/avcodec.h	2823;"	d
FF_COMPLIANCE_VERY_STRICT	ffmpeg/include/libavcodec/avcodec.h	2820;"	d
FF_COMPRESSION_DEFAULT	ffmpeg/include/libavcodec/avcodec.h	1589;"	d
FF_CONST_AVUTIL55	ffmpeg/include/libavutil/version.h	134;"	d
FF_CONST_AVUTIL55	ffmpeg/include/libavutil/version.h	136;"	d
FF_DCT_ALTIVEC	ffmpeg/include/libavcodec/avcodec.h	2954;"	d
FF_DCT_AUTO	ffmpeg/include/libavcodec/avcodec.h	2948;"	d
FF_DCT_FAAN	ffmpeg/include/libavcodec/avcodec.h	2955;"	d
FF_DCT_FASTINT	ffmpeg/include/libavcodec/avcodec.h	2949;"	d
FF_DCT_INT	ffmpeg/include/libavcodec/avcodec.h	2951;"	d
FF_DCT_MMX	ffmpeg/include/libavcodec/avcodec.h	2953;"	d
FF_DEBUG_BITSTREAM	ffmpeg/include/libavcodec/avcodec.h	2844;"	d
FF_DEBUG_BUFFERS	ffmpeg/include/libavcodec/avcodec.h	2866;"	d
FF_DEBUG_BUGS	ffmpeg/include/libavcodec/avcodec.h	2861;"	d
FF_DEBUG_DCT_COEFF	ffmpeg/include/libavcodec/avcodec.h	2853;"	d
FF_DEBUG_ER	ffmpeg/include/libavcodec/avcodec.h	2859;"	d
FF_DEBUG_GREEN_MD	ffmpeg/include/libavcodec/avcodec.h	2868;"	d
FF_DEBUG_MB_TYPE	ffmpeg/include/libavcodec/avcodec.h	2845;"	d
FF_DEBUG_MMCO	ffmpeg/include/libavcodec/avcodec.h	2860;"	d
FF_DEBUG_MV	ffmpeg/include/libavcodec/avcodec.h	2851;"	d
FF_DEBUG_NOMC	ffmpeg/include/libavcodec/avcodec.h	2869;"	d
FF_DEBUG_PICT_INFO	ffmpeg/include/libavcodec/avcodec.h	2842;"	d
FF_DEBUG_PTS	ffmpeg/include/libavcodec/avcodec.h	2857;"	d
FF_DEBUG_QP	ffmpeg/include/libavcodec/avcodec.h	2846;"	d
FF_DEBUG_RC	ffmpeg/include/libavcodec/avcodec.h	2843;"	d
FF_DEBUG_SKIP	ffmpeg/include/libavcodec/avcodec.h	2854;"	d
FF_DEBUG_STARTCODE	ffmpeg/include/libavcodec/avcodec.h	2855;"	d
FF_DEBUG_THREADS	ffmpeg/include/libavcodec/avcodec.h	2867;"	d
FF_DEBUG_VIS_MB_TYPE	ffmpeg/include/libavcodec/avcodec.h	2864;"	d
FF_DEBUG_VIS_MV_B_BACK	ffmpeg/include/libavcodec/avcodec.h	2881;"	d
FF_DEBUG_VIS_MV_B_BACK	ffmpeg/include/libavcodec/avcodec.h	3401;"	d
FF_DEBUG_VIS_MV_B_FOR	ffmpeg/include/libavcodec/avcodec.h	2880;"	d
FF_DEBUG_VIS_MV_B_FOR	ffmpeg/include/libavcodec/avcodec.h	3400;"	d
FF_DEBUG_VIS_MV_P_FOR	ffmpeg/include/libavcodec/avcodec.h	2879;"	d
FF_DEBUG_VIS_MV_P_FOR	ffmpeg/include/libavcodec/avcodec.h	3399;"	d
FF_DEBUG_VIS_QP	ffmpeg/include/libavcodec/avcodec.h	2863;"	d
FF_DECODE_ERROR_INVALID_BITSTREAM	ffmpeg/include/libavutil/frame.h	555;"	d
FF_DECODE_ERROR_MISSING_REFERENCE	ffmpeg/include/libavutil/frame.h	556;"	d
FF_DEFAULT_QUANT_BIAS	ffmpeg/include/libavcodec/avcodec.h	2020;"	d
FF_DTG_AFD_14_9	ffmpeg/include/libavcodec/avcodec.h	2000;"	d
FF_DTG_AFD_16_9	ffmpeg/include/libavcodec/avcodec.h	1999;"	d
FF_DTG_AFD_16_9_SP_14_9	ffmpeg/include/libavcodec/avcodec.h	2002;"	d
FF_DTG_AFD_4_3	ffmpeg/include/libavcodec/avcodec.h	1998;"	d
FF_DTG_AFD_4_3_SP_14_9	ffmpeg/include/libavcodec/avcodec.h	2001;"	d
FF_DTG_AFD_SAME	ffmpeg/include/libavcodec/avcodec.h	1997;"	d
FF_DTG_AFD_SP_4_3	ffmpeg/include/libavcodec/avcodec.h	2003;"	d
FF_DXVA2_WORKAROUND_INTEL_CLEARVIDEO	ffmpeg/include/libavcodec/d3d11va.h	49;"	d
FF_DXVA2_WORKAROUND_INTEL_CLEARVIDEO	ffmpeg/include/libavcodec/dxva2.h	49;"	d
FF_DXVA2_WORKAROUND_SCALING_LIST_ZIGZAG	ffmpeg/include/libavcodec/d3d11va.h	48;"	d
FF_DXVA2_WORKAROUND_SCALING_LIST_ZIGZAG	ffmpeg/include/libavcodec/dxva2.h	48;"	d
FF_EC_DEBLOCK	ffmpeg/include/libavcodec/avcodec.h	2833;"	d
FF_EC_FAVOR_INTER	ffmpeg/include/libavcodec/avcodec.h	2834;"	d
FF_EC_GUESS_MVS	ffmpeg/include/libavcodec/avcodec.h	2832;"	d
FF_FDEBUG_TS	ffmpeg/include/libavformat/avformat.h	1517;"	d
FF_IDCT_ALTIVEC	ffmpeg/include/libavcodec/avcodec.h	2968;"	d
FF_IDCT_ARM	ffmpeg/include/libavcodec/avcodec.h	2967;"	d
FF_IDCT_AUTO	ffmpeg/include/libavcodec/avcodec.h	2963;"	d
FF_IDCT_FAAN	ffmpeg/include/libavcodec/avcodec.h	2985;"	d
FF_IDCT_INT	ffmpeg/include/libavcodec/avcodec.h	2964;"	d
FF_IDCT_IPP	ffmpeg/include/libavcodec/avcodec.h	2974;"	d
FF_IDCT_SH4	ffmpeg/include/libavcodec/avcodec.h	2970;"	d
FF_IDCT_SIMPLE	ffmpeg/include/libavcodec/avcodec.h	2965;"	d
FF_IDCT_SIMPLEALPHA	ffmpeg/include/libavcodec/avcodec.h	2988;"	d
FF_IDCT_SIMPLEARM	ffmpeg/include/libavcodec/avcodec.h	2972;"	d
FF_IDCT_SIMPLEARMV5TE	ffmpeg/include/libavcodec/avcodec.h	2980;"	d
FF_IDCT_SIMPLEARMV6	ffmpeg/include/libavcodec/avcodec.h	2981;"	d
FF_IDCT_SIMPLEAUTO	ffmpeg/include/libavcodec/avcodec.h	2990;"	d
FF_IDCT_SIMPLEMMX	ffmpeg/include/libavcodec/avcodec.h	2966;"	d
FF_IDCT_SIMPLENEON	ffmpeg/include/libavcodec/avcodec.h	2986;"	d
FF_IDCT_SIMPLEVIS	ffmpeg/include/libavcodec/avcodec.h	2983;"	d
FF_IDCT_XVID	ffmpeg/include/libavcodec/avcodec.h	2976;"	d
FF_IDCT_XVIDMMX	ffmpeg/include/libavcodec/avcodec.h	2978;"	d
FF_INPUT_BUFFER_PADDING_SIZE	ffmpeg/include/libavcodec/avcodec.h	648;"	d
FF_LAMBDA_MAX	ffmpeg/include/libavutil/avutil.h	228;"	d
FF_LAMBDA_SCALE	ffmpeg/include/libavutil/avutil.h	226;"	d
FF_LAMBDA_SHIFT	ffmpeg/include/libavutil/avutil.h	225;"	d
FF_LEVEL_UNKNOWN	ffmpeg/include/libavcodec/avcodec.h	3206;"	d
FF_LOSS_ALPHA	ffmpeg/include/libavutil/pixdesc.h	326;"	d
FF_LOSS_CHROMA	ffmpeg/include/libavutil/pixdesc.h	328;"	d
FF_LOSS_COLORQUANT	ffmpeg/include/libavutil/pixdesc.h	327;"	d
FF_LOSS_COLORSPACE	ffmpeg/include/libavutil/pixdesc.h	325;"	d
FF_LOSS_DEPTH	ffmpeg/include/libavutil/pixdesc.h	324;"	d
FF_LOSS_RESOLUTION	ffmpeg/include/libavutil/pixdesc.h	323;"	d
FF_MAX_B_FRAMES	ffmpeg/include/libavcodec/avcodec.h	718;"	d
FF_MB_DECISION_BITS	ffmpeg/include/libavcodec/avcodec.h	2055;"	d
FF_MB_DECISION_RD	ffmpeg/include/libavcodec/avcodec.h	2056;"	d
FF_MB_DECISION_SIMPLE	ffmpeg/include/libavcodec/avcodec.h	2054;"	d
FF_MIN_BUFFER_SIZE	ffmpeg/include/libavcodec/avcodec.h	653;"	d
FF_OPT_TYPE_BINARY	ffmpeg/include/libavutil/opt.h	/^    FF_OPT_TYPE_BINARY,  \/\/\/< offset must point to a pointer immediately followed by an int for the length$/;"	e	enum:AVOptionType
FF_OPT_TYPE_CONST	ffmpeg/include/libavutil/opt.h	/^    FF_OPT_TYPE_CONST=128,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_DOUBLE	ffmpeg/include/libavutil/opt.h	/^    FF_OPT_TYPE_DOUBLE,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_FLAGS	ffmpeg/include/libavutil/opt.h	/^    FF_OPT_TYPE_FLAGS = 0,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_FLOAT	ffmpeg/include/libavutil/opt.h	/^    FF_OPT_TYPE_FLOAT,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_INT	ffmpeg/include/libavutil/opt.h	/^    FF_OPT_TYPE_INT,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_INT64	ffmpeg/include/libavutil/opt.h	/^    FF_OPT_TYPE_INT64,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_RATIONAL	ffmpeg/include/libavutil/opt.h	/^    FF_OPT_TYPE_RATIONAL,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_STRING	ffmpeg/include/libavutil/opt.h	/^    FF_OPT_TYPE_STRING,$/;"	e	enum:AVOptionType
FF_PAD_STRUCTURE	ffmpeg/include/libavutil/bprint.h	34;"	d
FF_PRED_LEFT	ffmpeg/include/libavcodec/avcodec.h	1883;"	d
FF_PRED_MEDIAN	ffmpeg/include/libavcodec/avcodec.h	1885;"	d
FF_PRED_PLANE	ffmpeg/include/libavcodec/avcodec.h	1884;"	d
FF_PROFILE_AAC_ELD	ffmpeg/include/libavcodec/avcodec.h	3127;"	d
FF_PROFILE_AAC_HE	ffmpeg/include/libavcodec/avcodec.h	3124;"	d
FF_PROFILE_AAC_HE_V2	ffmpeg/include/libavcodec/avcodec.h	3125;"	d
FF_PROFILE_AAC_LD	ffmpeg/include/libavcodec/avcodec.h	3126;"	d
FF_PROFILE_AAC_LOW	ffmpeg/include/libavcodec/avcodec.h	3121;"	d
FF_PROFILE_AAC_LTP	ffmpeg/include/libavcodec/avcodec.h	3123;"	d
FF_PROFILE_AAC_MAIN	ffmpeg/include/libavcodec/avcodec.h	3120;"	d
FF_PROFILE_AAC_SSR	ffmpeg/include/libavcodec/avcodec.h	3122;"	d
FF_PROFILE_DTS	ffmpeg/include/libavcodec/avcodec.h	3131;"	d
FF_PROFILE_DTS_96_24	ffmpeg/include/libavcodec/avcodec.h	3133;"	d
FF_PROFILE_DTS_ES	ffmpeg/include/libavcodec/avcodec.h	3132;"	d
FF_PROFILE_DTS_EXPRESS	ffmpeg/include/libavcodec/avcodec.h	3136;"	d
FF_PROFILE_DTS_HD_HRA	ffmpeg/include/libavcodec/avcodec.h	3134;"	d
FF_PROFILE_DTS_HD_MA	ffmpeg/include/libavcodec/avcodec.h	3135;"	d
FF_PROFILE_H264_BASELINE	ffmpeg/include/libavcodec/avcodec.h	3148;"	d
FF_PROFILE_H264_CAVLC_444	ffmpeg/include/libavcodec/avcodec.h	3160;"	d
FF_PROFILE_H264_CONSTRAINED	ffmpeg/include/libavcodec/avcodec.h	3145;"	d
FF_PROFILE_H264_CONSTRAINED_BASELINE	ffmpeg/include/libavcodec/avcodec.h	3149;"	d
FF_PROFILE_H264_EXTENDED	ffmpeg/include/libavcodec/avcodec.h	3151;"	d
FF_PROFILE_H264_HIGH	ffmpeg/include/libavcodec/avcodec.h	3152;"	d
FF_PROFILE_H264_HIGH_10	ffmpeg/include/libavcodec/avcodec.h	3153;"	d
FF_PROFILE_H264_HIGH_10_INTRA	ffmpeg/include/libavcodec/avcodec.h	3154;"	d
FF_PROFILE_H264_HIGH_422	ffmpeg/include/libavcodec/avcodec.h	3155;"	d
FF_PROFILE_H264_HIGH_422_INTRA	ffmpeg/include/libavcodec/avcodec.h	3156;"	d
FF_PROFILE_H264_HIGH_444	ffmpeg/include/libavcodec/avcodec.h	3157;"	d
FF_PROFILE_H264_HIGH_444_INTRA	ffmpeg/include/libavcodec/avcodec.h	3159;"	d
FF_PROFILE_H264_HIGH_444_PREDICTIVE	ffmpeg/include/libavcodec/avcodec.h	3158;"	d
FF_PROFILE_H264_INTRA	ffmpeg/include/libavcodec/avcodec.h	3146;"	d
FF_PROFILE_H264_MAIN	ffmpeg/include/libavcodec/avcodec.h	3150;"	d
FF_PROFILE_HEVC_MAIN	ffmpeg/include/libavcodec/avcodec.h	3195;"	d
FF_PROFILE_HEVC_MAIN_10	ffmpeg/include/libavcodec/avcodec.h	3196;"	d
FF_PROFILE_HEVC_MAIN_STILL_PICTURE	ffmpeg/include/libavcodec/avcodec.h	3197;"	d
FF_PROFILE_HEVC_REXT	ffmpeg/include/libavcodec/avcodec.h	3198;"	d
FF_PROFILE_JPEG2000_CSTREAM_NO_RESTRICTION	ffmpeg/include/libavcodec/avcodec.h	3186;"	d
FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_0	ffmpeg/include/libavcodec/avcodec.h	3184;"	d
FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_1	ffmpeg/include/libavcodec/avcodec.h	3185;"	d
FF_PROFILE_JPEG2000_DCINEMA_2K	ffmpeg/include/libavcodec/avcodec.h	3187;"	d
FF_PROFILE_JPEG2000_DCINEMA_4K	ffmpeg/include/libavcodec/avcodec.h	3188;"	d
FF_PROFILE_MPEG2_422	ffmpeg/include/libavcodec/avcodec.h	3138;"	d
FF_PROFILE_MPEG2_AAC_HE	ffmpeg/include/libavcodec/avcodec.h	3129;"	d
FF_PROFILE_MPEG2_AAC_LOW	ffmpeg/include/libavcodec/avcodec.h	3128;"	d
FF_PROFILE_MPEG2_HIGH	ffmpeg/include/libavcodec/avcodec.h	3139;"	d
FF_PROFILE_MPEG2_MAIN	ffmpeg/include/libavcodec/avcodec.h	3142;"	d
FF_PROFILE_MPEG2_SIMPLE	ffmpeg/include/libavcodec/avcodec.h	3143;"	d
FF_PROFILE_MPEG2_SNR_SCALABLE	ffmpeg/include/libavcodec/avcodec.h	3141;"	d
FF_PROFILE_MPEG2_SS	ffmpeg/include/libavcodec/avcodec.h	3140;"	d
FF_PROFILE_MPEG4_ADVANCED_CODING	ffmpeg/include/libavcodec/avcodec.h	3178;"	d
FF_PROFILE_MPEG4_ADVANCED_CORE	ffmpeg/include/libavcodec/avcodec.h	3179;"	d
FF_PROFILE_MPEG4_ADVANCED_REAL_TIME	ffmpeg/include/libavcodec/avcodec.h	3176;"	d
FF_PROFILE_MPEG4_ADVANCED_SCALABLE_TEXTURE	ffmpeg/include/libavcodec/avcodec.h	3180;"	d
FF_PROFILE_MPEG4_ADVANCED_SIMPLE	ffmpeg/include/libavcodec/avcodec.h	3182;"	d
FF_PROFILE_MPEG4_BASIC_ANIMATED_TEXTURE	ffmpeg/include/libavcodec/avcodec.h	3174;"	d
FF_PROFILE_MPEG4_CORE	ffmpeg/include/libavcodec/avcodec.h	3169;"	d
FF_PROFILE_MPEG4_CORE_SCALABLE	ffmpeg/include/libavcodec/avcodec.h	3177;"	d
FF_PROFILE_MPEG4_HYBRID	ffmpeg/include/libavcodec/avcodec.h	3175;"	d
FF_PROFILE_MPEG4_MAIN	ffmpeg/include/libavcodec/avcodec.h	3170;"	d
FF_PROFILE_MPEG4_N_BIT	ffmpeg/include/libavcodec/avcodec.h	3171;"	d
FF_PROFILE_MPEG4_SCALABLE_TEXTURE	ffmpeg/include/libavcodec/avcodec.h	3172;"	d
FF_PROFILE_MPEG4_SIMPLE	ffmpeg/include/libavcodec/avcodec.h	3167;"	d
FF_PROFILE_MPEG4_SIMPLE_FACE_ANIMATION	ffmpeg/include/libavcodec/avcodec.h	3173;"	d
FF_PROFILE_MPEG4_SIMPLE_SCALABLE	ffmpeg/include/libavcodec/avcodec.h	3168;"	d
FF_PROFILE_MPEG4_SIMPLE_STUDIO	ffmpeg/include/libavcodec/avcodec.h	3181;"	d
FF_PROFILE_RESERVED	ffmpeg/include/libavcodec/avcodec.h	3118;"	d
FF_PROFILE_UNKNOWN	ffmpeg/include/libavcodec/avcodec.h	3117;"	d
FF_PROFILE_VC1_ADVANCED	ffmpeg/include/libavcodec/avcodec.h	3165;"	d
FF_PROFILE_VC1_COMPLEX	ffmpeg/include/libavcodec/avcodec.h	3164;"	d
FF_PROFILE_VC1_MAIN	ffmpeg/include/libavcodec/avcodec.h	3163;"	d
FF_PROFILE_VC1_SIMPLE	ffmpeg/include/libavcodec/avcodec.h	3162;"	d
FF_PROFILE_VP9_0	ffmpeg/include/libavcodec/avcodec.h	3190;"	d
FF_PROFILE_VP9_1	ffmpeg/include/libavcodec/avcodec.h	3191;"	d
FF_PROFILE_VP9_2	ffmpeg/include/libavcodec/avcodec.h	3192;"	d
FF_PROFILE_VP9_3	ffmpeg/include/libavcodec/avcodec.h	3193;"	d
FF_QP2LAMBDA	ffmpeg/include/libavutil/avutil.h	227;"	d
FF_QSCALE_TYPE_H264	ffmpeg/include/libavcodec/avcodec.h	1196;"	d
FF_QSCALE_TYPE_MPEG1	ffmpeg/include/libavcodec/avcodec.h	1194;"	d
FF_QSCALE_TYPE_MPEG2	ffmpeg/include/libavcodec/avcodec.h	1195;"	d
FF_QSCALE_TYPE_VP56	ffmpeg/include/libavcodec/avcodec.h	1197;"	d
FF_QUALITY_SCALE	ffmpeg/include/libavutil/avutil.h	230;"	d
FF_RC_STRATEGY_XVID	ffmpeg/include/libavcodec/avcodec.h	1793;"	d
FF_SUB_CHARENC_MODE_AUTOMATIC	ffmpeg/include/libavcodec/avcodec.h	3366;"	d
FF_SUB_CHARENC_MODE_DO_NOTHING	ffmpeg/include/libavcodec/avcodec.h	3365;"	d
FF_SUB_CHARENC_MODE_PRE_DECODER	ffmpeg/include/libavcodec/avcodec.h	3367;"	d
FF_THREAD_FRAME	ffmpeg/include/libavcodec/avcodec.h	3045;"	d
FF_THREAD_SLICE	ffmpeg/include/libavcodec/avcodec.h	3046;"	d
FF_VDPAU_STATE_USED_FOR_REFERENCE	ffmpeg/include/libavcodec/vdpau.h	220;"	d
FF_VDPAU_STATE_USED_FOR_RENDER	ffmpeg/include/libavcodec/vdpau.h	214;"	d
FILE_XFER_CHUNK_SIZE	glib/channel-main.c	57;"	d	file:
FILL_LINES	spice-common/common/quic.c	1217;"	d	file:
FIND_BAND	spice-common/common/region.c	68;"	d	file:
FIXUP_ERROR	spice-common/common/lines.c	234;"	d	file:
FNAME	glib/decode-glz-tmpl.c	103;"	d	file:
FNAME	glib/decode-glz-tmpl.c	127;"	d	file:
FNAME	glib/decode-glz-tmpl.c	131;"	d	file:
FNAME	glib/decode-glz-tmpl.c	145;"	d	file:
FNAME	glib/decode-glz-tmpl.c	156;"	d	file:
FNAME	glib/decode-glz-tmpl.c	168;"	d	file:
FNAME	glib/decode-glz-tmpl.c	334;"	d	file:
FNAME	glib/decode-glz-tmpl.c	47;"	d	file:
FNAME	glib/decode-glz-tmpl.c	54;"	d	file:
FNAME	glib/decode-glz-tmpl.c	61;"	d	file:
FNAME	glib/decode-glz-tmpl.c	73;"	d	file:
FNAME	glib/decode-glz-tmpl.c	85;"	d	file:
FNAME	spice-common/common/lz_compress_tmpl.c	107;"	d	file:
FNAME	spice-common/common/lz_compress_tmpl.c	127;"	d	file:
FNAME	spice-common/common/lz_compress_tmpl.c	133;"	d	file:
FNAME	spice-common/common/lz_compress_tmpl.c	526;"	d	file:
FNAME	spice-common/common/lz_compress_tmpl.c	61;"	d	file:
FNAME	spice-common/common/lz_compress_tmpl.c	76;"	d	file:
FNAME	spice-common/common/lz_compress_tmpl.c	92;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	108;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	120;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	138;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	162;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	166;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	178;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	182;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	198;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	204;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	216;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	341;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	79;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	90;"	d	file:
FNAME	spice-common/common/lz_decompress_tmpl.c	96;"	d	file:
FNAME	spice-common/common/quic_family_tmpl.c	113;"	d	file:
FNAME	spice-common/common/quic_family_tmpl.c	24;"	d	file:
FNAME	spice-common/common/quic_family_tmpl.c	32;"	d	file:
FNAME	spice-common/common/quic_rgb_tmpl.c	25;"	d	file:
FNAME	spice-common/common/quic_rgb_tmpl.c	46;"	d	file:
FNAME	spice-common/common/quic_rgb_tmpl.c	67;"	d	file:
FNAME	spice-common/common/quic_rgb_tmpl.c	730;"	d	file:
FNAME	spice-common/common/quic_rgb_tmpl.c	88;"	d	file:
FNAME	spice-common/common/quic_tmpl.c	24;"	d	file:
FNAME	spice-common/common/quic_tmpl.c	30;"	d	file:
FNAME	spice-common/common/quic_tmpl.c	36;"	d	file:
FNAME	spice-common/common/quic_tmpl.c	622;"	d	file:
FOREIGN_MENU_ADD_ITEM	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_ADD_ITEM,$/;"	e	enum:__anon54
FOREIGN_MENU_APP_ACTIVATED	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_APP_ACTIVATED,$/;"	e	enum:__anon54
FOREIGN_MENU_APP_DEACTIVATED	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_APP_DEACTIVATED,$/;"	e	enum:__anon54
FOREIGN_MENU_CLEAR	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_CLEAR,$/;"	e	enum:__anon54
FOREIGN_MENU_EVENT_CHECKED	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_EVENT_CHECKED,$/;"	e	enum:__anon56
FOREIGN_MENU_EVENT_CLICK	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_EVENT_CLICK,$/;"	e	enum:__anon56
FOREIGN_MENU_EVENT_UNCHECKED	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_EVENT_UNCHECKED$/;"	e	enum:__anon56
FOREIGN_MENU_INVALID_ID	spice-common/spice-protocol/spice/foreign_menu_prot.h	69;"	d
FOREIGN_MENU_ITEM_EVENT	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_ITEM_EVENT = 1001,$/;"	e	enum:__anon54
FOREIGN_MENU_ITEM_TYPE_CHECKED	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_ITEM_TYPE_CHECKED      = 1 << 0,$/;"	e	enum:__anon55
FOREIGN_MENU_ITEM_TYPE_DIM	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_ITEM_TYPE_DIM          = 1 << 1,$/;"	e	enum:__anon55
FOREIGN_MENU_ITEM_TYPE_SEPARATOR	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_ITEM_TYPE_SEPARATOR    = 1 << 2$/;"	e	enum:__anon55
FOREIGN_MENU_MAGIC	spice-common/spice-protocol/spice/foreign_menu_prot.h	24;"	d
FOREIGN_MENU_MODIFY_ITEM	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_MODIFY_ITEM,$/;"	e	enum:__anon54
FOREIGN_MENU_REMOVE_ITEM	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_REMOVE_ITEM,$/;"	e	enum:__anon54
FOREIGN_MENU_SET_TITLE	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FOREIGN_MENU_SET_TITLE = 1,$/;"	e	enum:__anon54
FOREIGN_MENU_VERSION	spice-common/spice-protocol/spice/foreign_menu_prot.h	25;"	d
FOUR_BYTE	spice-common/common/quic.c	819;"	d	file:
FOUR_BYTE	spice-common/common/quic_tmpl.c	35;"	d	file:
FamilyStat	spice-common/common/quic.c	/^typedef struct FamilyStat {$/;"	s	file:
FamilyStat	spice-common/common/quic.c	/^} FamilyStat;$/;"	t	typeref:struct:FamilyStat	file:
FileHead	win32/create_bmp.h	/^}FileHead;$/;"	t	typeref:struct:__anon50
FillMaskInfo	spice-common/common/glc.c	/^typedef struct FillMaskInfo {$/;"	s	file:
FillMaskInfo	spice-common/common/glc.c	/^} FillMaskInfo;$/;"	t	typeref:struct:FillMaskInfo	file:
FillRects	spice-common/common/lines.h	/^    void (*FillRects)(lineGC * pGC,$/;"	m	struct:__anon139
FillSpans	spice-common/common/lines.h	/^    void (*FillSpans)(lineGC * pGC,$/;"	m	struct:__anon139
FixedSize	spice-common/python_modules/ptypes.py	/^class FixedSize:$/;"	c
FlagsType	spice-common/python_modules/ptypes.py	/^class FlagsType(EnumBaseType):$/;"	c
FrgMenuActivate	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct FrgMenuMsg FrgMenuActivate;$/;"	t	typeref:struct:FrgMenuMsg
FrgMenuAddItem	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct SPICE_ATTR_PACKED FrgMenuAddItem {$/;"	s
FrgMenuAddItem	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^} FrgMenuAddItem, FrgMenuModItem;$/;"	t	typeref:struct:FrgMenuAddItem
FrgMenuDeactivate	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct FrgMenuMsg FrgMenuDeactivate;$/;"	t	typeref:struct:FrgMenuMsg
FrgMenuDelete	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct FrgMenuMsg FrgMenuDelete;$/;"	t	typeref:struct:FrgMenuMsg
FrgMenuEvent	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct SPICE_ATTR_PACKED FrgMenuEvent {$/;"	s
FrgMenuEvent	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^} FrgMenuEvent;$/;"	t	typeref:struct:FrgMenuEvent
FrgMenuInit	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct SPICE_ATTR_PACKED FrgMenuInit {$/;"	s
FrgMenuInit	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^} FrgMenuInit;$/;"	t	typeref:struct:FrgMenuInit
FrgMenuInitHeader	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct SPICE_ATTR_PACKED FrgMenuInitHeader {$/;"	s
FrgMenuInitHeader	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^} FrgMenuInitHeader;$/;"	t	typeref:struct:FrgMenuInitHeader
FrgMenuModItem	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^} FrgMenuAddItem, FrgMenuModItem;$/;"	t	typeref:struct:FrgMenuAddItem
FrgMenuMsg	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct SPICE_ATTR_PACKED FrgMenuMsg {$/;"	s
FrgMenuMsg	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^} FrgMenuMsg;$/;"	t	typeref:struct:FrgMenuMsg
FrgMenuRmItem	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct SPICE_ATTR_PACKED FrgMenuRmItem {$/;"	s
FrgMenuRmItem	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^} FrgMenuRmItem;$/;"	t	typeref:struct:FrgMenuRmItem
FrgMenuRmItems	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct FrgMenuMsg FrgMenuRmItems;$/;"	t	typeref:struct:FrgMenuMsg
FrgMenuSetTitle	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^typedef struct SPICE_ATTR_PACKED FrgMenuSetTitle {$/;"	s
FrgMenuSetTitle	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^} FrgMenuSetTitle;$/;"	t	typeref:struct:FrgMenuSetTitle
GCPtr	spice-common/common/lines.c	/^typedef struct lineGC *GCPtr;$/;"	t	typeref:struct:lineGC	file:
GConditionWaitFunc	glib/gio-coroutine.h	/^typedef gboolean (*GConditionWaitFunc)(gpointer);$/;"	t
GConditionWaitSource	glib/gio-coroutine.c	/^} GConditionWaitSource;$/;"	t	typeref:struct:_GConditionWaitSource	file:
GCoroutine	glib/gio-coroutine.h	/^typedef struct _GCoroutine GCoroutine;$/;"	t	typeref:struct:_GCoroutine
GDI_CANVAS	spice-common/common/gdi_canvas.c	28;"	d	file:
GETTEXT_PACKAGE	config.h	17;"	d
GETTEXT_PACKAGE	glib/config.h	19;"	d
GETTEXT_PACKAGE	make/config.h	17;"	d
GETTEXT_PACKAGE	make/configglib.h	19;"	d
GETTEXT_PACKAGE	make/configwin32.h	17;"	d
GETTEXT_PACKAGE	make/wconfig.h	17;"	d
GETTEXT_PACKAGE	make/wconfigglib.h	17;"	d
GETTEXT_PACKAGE	make/wconfigwin32.h	17;"	d
GETTEXT_PACKAGE	win32/config.h	17;"	d
GET_CODE	spice-common/common/lz_compress_tmpl.c	538;"	d	file:
GET_FORMAT_BITS	glib/h264_type.h	36;"	d
GET_FORMAT_BYTES	glib/h264_type.h	60;"	d
GET_UTF16	ffmpeg/include/libavutil/common.h	359;"	d
GET_UTF8	ffmpeg/include/libavutil/common.h	334;"	d
GET_b	spice-common/common/lz_compress_tmpl.c	110;"	d	file:
GET_b	spice-common/common/lz_compress_tmpl.c	141;"	d	file:
GET_b	spice-common/common/lz_compress_tmpl.c	537;"	d	file:
GET_b	spice-common/common/quic_rgb_tmpl.c	102;"	d	file:
GET_b	spice-common/common/quic_rgb_tmpl.c	39;"	d	file:
GET_b	spice-common/common/quic_rgb_tmpl.c	60;"	d	file:
GET_b	spice-common/common/quic_rgb_tmpl.c	764;"	d	file:
GET_b	spice-common/common/quic_rgb_tmpl.c	81;"	d	file:
GET_g	spice-common/common/lz_compress_tmpl.c	109;"	d	file:
GET_g	spice-common/common/lz_compress_tmpl.c	140;"	d	file:
GET_g	spice-common/common/lz_compress_tmpl.c	536;"	d	file:
GET_g	spice-common/common/quic_rgb_tmpl.c	100;"	d	file:
GET_g	spice-common/common/quic_rgb_tmpl.c	37;"	d	file:
GET_g	spice-common/common/quic_rgb_tmpl.c	58;"	d	file:
GET_g	spice-common/common/quic_rgb_tmpl.c	762;"	d	file:
GET_g	spice-common/common/quic_rgb_tmpl.c	79;"	d	file:
GET_r	spice-common/common/lz_compress_tmpl.c	108;"	d	file:
GET_r	spice-common/common/lz_compress_tmpl.c	139;"	d	file:
GET_r	spice-common/common/lz_compress_tmpl.c	535;"	d	file:
GET_r	spice-common/common/quic_rgb_tmpl.c	35;"	d	file:
GET_r	spice-common/common/quic_rgb_tmpl.c	56;"	d	file:
GET_r	spice-common/common/quic_rgb_tmpl.c	760;"	d	file:
GET_r	spice-common/common/quic_rgb_tmpl.c	77;"	d	file:
GET_r	spice-common/common/quic_rgb_tmpl.c	98;"	d	file:
GLCClipOp	spice-common/common/glc.h	/^} GLCClipOp;$/;"	t	typeref:enum:__anon129
GLCCtx	spice-common/common/glc.h	/^typedef void * GLCCtx;$/;"	t
GLCFillMode	spice-common/common/glc.h	/^} GLCFillMode;$/;"	t	typeref:enum:__anon127
GLCImage	spice-common/common/glc.h	/^} GLCImage;$/;"	t	typeref:struct:GLCPImage
GLCImageFormat	spice-common/common/glc.h	/^} GLCImageFormat;$/;"	t	typeref:enum:__anon125
GLCMaskID	spice-common/common/glc.h	/^} GLCMaskID;$/;"	t	typeref:enum:__anon128
GLCOp	spice-common/common/glc.h	/^} GLCOp;$/;"	t	typeref:enum:__anon126
GLCPImage	spice-common/common/glc.h	/^typedef struct GLCPImage {$/;"	s
GLCPath	spice-common/common/glc.h	/^typedef void * GLCPath;$/;"	t
GLCPattern	spice-common/common/glc.h	/^typedef void * GLCPattern;$/;"	t
GLCRect	spice-common/common/glc.h	/^typedef struct GLCRect {$/;"	s
GLCRect	spice-common/common/glc.h	/^} GLCRect;$/;"	t	typeref:struct:GLCRect
GLCRecti	spice-common/common/glc.h	/^typedef struct GLCRecti {$/;"	s
GLCRecti	spice-common/common/glc.h	/^} GLCRecti;$/;"	t	typeref:struct:GLCRecti
GLC_CLIP_OP_AND	spice-common/common/glc.h	/^    GLC_CLIP_OP_AND,$/;"	e	enum:__anon129
GLC_CLIP_OP_EXCLUDE	spice-common/common/glc.h	/^    GLC_CLIP_OP_EXCLUDE,$/;"	e	enum:__anon129
GLC_CLIP_OP_OR	spice-common/common/glc.h	/^    GLC_CLIP_OP_OR,$/;"	e	enum:__anon129
GLC_CLIP_OP_SET	spice-common/common/glc.h	/^    GLC_CLIP_OP_SET,$/;"	e	enum:__anon129
GLC_ERROR_TEST_FINISH	spice-common/common/gl_utils.h	39;"	d
GLC_ERROR_TEST_FLUSH	spice-common/common/gl_utils.h	30;"	d
GLC_FILL_MODE_WINDING_NONZERO	spice-common/common/glc.h	/^    GLC_FILL_MODE_WINDING_NONZERO,$/;"	e	enum:__anon127
GLC_FILL_MODE_WINDING_ODD	spice-common/common/glc.h	/^    GLC_FILL_MODE_WINDING_ODD,$/;"	e	enum:__anon127
GLC_IMAGE_ARGB32	spice-common/common/glc.h	/^    GLC_IMAGE_ARGB32,$/;"	e	enum:__anon125
GLC_IMAGE_RGB32	spice-common/common/glc.h	/^    GLC_IMAGE_RGB32,$/;"	e	enum:__anon125
GLC_MASK_A	spice-common/common/glc.h	/^    GLC_MASK_A,$/;"	e	enum:__anon128
GLC_MASK_B	spice-common/common/glc.h	/^    GLC_MASK_B,$/;"	e	enum:__anon128
GLC_OP_AND	spice-common/common/glc.h	/^    GLC_OP_AND = 0x1501,$/;"	e	enum:__anon126
GLC_OP_AND_INVERTED	spice-common/common/glc.h	/^    GLC_OP_AND_INVERTED = 0x1504,$/;"	e	enum:__anon126
GLC_OP_AND_REVERSE	spice-common/common/glc.h	/^    GLC_OP_AND_REVERSE = 0x1502,$/;"	e	enum:__anon126
GLC_OP_CLEAR	spice-common/common/glc.h	/^    GLC_OP_CLEAR = 0x1500,$/;"	e	enum:__anon126
GLC_OP_COPY	spice-common/common/glc.h	/^    GLC_OP_COPY = 0x1503,$/;"	e	enum:__anon126
GLC_OP_COPY_INVERTED	spice-common/common/glc.h	/^    GLC_OP_COPY_INVERTED = 0x150C,$/;"	e	enum:__anon126
GLC_OP_EQUIV	spice-common/common/glc.h	/^    GLC_OP_EQUIV = 0x1509,$/;"	e	enum:__anon126
GLC_OP_INVERT	spice-common/common/glc.h	/^    GLC_OP_INVERT = 0x150A,$/;"	e	enum:__anon126
GLC_OP_NAND	spice-common/common/glc.h	/^    GLC_OP_NAND = 0x150E,$/;"	e	enum:__anon126
GLC_OP_NOOP	spice-common/common/glc.h	/^    GLC_OP_NOOP = 0x1505,$/;"	e	enum:__anon126
GLC_OP_NOR	spice-common/common/glc.h	/^    GLC_OP_NOR = 0x1508,$/;"	e	enum:__anon126
GLC_OP_OR	spice-common/common/glc.h	/^    GLC_OP_OR = 0x1507,$/;"	e	enum:__anon126
GLC_OP_OR_INVERTED	spice-common/common/glc.h	/^    GLC_OP_OR_INVERTED = 0x150D,$/;"	e	enum:__anon126
GLC_OP_OR_REVERSE	spice-common/common/glc.h	/^    GLC_OP_OR_REVERSE = 0x150B,$/;"	e	enum:__anon126
GLC_OP_SET	spice-common/common/glc.h	/^    GLC_OP_SET = 0x150F,$/;"	e	enum:__anon126
GLC_OP_XOR	spice-common/common/glc.h	/^    GLC_OP_XOR = 0x1506,$/;"	e	enum:__anon126
GLC_PATH_SEG_BEIZER	spice-common/common/glc.c	/^    GLC_PATH_SEG_BEIZER,$/;"	e	enum:__anon132	file:
GLC_PATH_SEG_LINES	spice-common/common/glc.c	/^    GLC_PATH_SEG_LINES,$/;"	e	enum:__anon132	file:
GLC_STROKE_ACTIVE	spice-common/common/glc.c	/^    GLC_STROKE_ACTIVE,$/;"	e	enum:__anon133	file:
GLC_STROKE_FIRST	spice-common/common/glc.c	/^    GLC_STROKE_FIRST,$/;"	e	enum:__anon133	file:
GLC_STROKE_NONACTIVE	spice-common/common/glc.c	/^    GLC_STROKE_NONACTIVE,$/;"	e	enum:__anon133	file:
GLCanvas	spice-common/common/gl_canvas.c	/^struct GLCanvas {$/;"	s	file:
GLCanvas	spice-common/common/gl_canvas.c	/^typedef struct GLCanvas GLCanvas;$/;"	t	typeref:struct:GLCanvas	file:
GLIB_COMPAT_H	glib/glib-compat.h	20;"	d
GLIB_CONFIG_H	glib/config.h	2;"	d
GLIB_CONFIG_H	make/configglib.h	2;"	d
GL_CANVAS	spice-common/common/gl_canvas.c	32;"	d	file:
GL_UTILS_H	spice-common/common/gl_utils.h	22;"	d
GNULIB_defined_struct__gl_verify_type	spice-common/common/verify.h	174;"	d
GROUP	win32/virt-viewer-file.c	81;"	d	file:
GSTACK_PATH	spice-common/common/backtrace.c	40;"	d	file:
GSignalEmitMainFunc	glib/gio-coroutine.h	/^typedef void (*GSignalEmitMainFunc)(GObject *object, int signum, gpointer params);$/;"	t
GUdevClient	glib/win-usb-dev.h	/^typedef struct _GUdevClient GUdevClient;$/;"	t	typeref:struct:_GUdevClient
GUdevClientClass	glib/win-usb-dev.h	/^typedef struct _GUdevClientClass GUdevClientClass;$/;"	t	typeref:struct:_GUdevClientClass
GUdevClientError	glib/win-usb-dev.h	/^} GUdevClientError;$/;"	t	typeref:enum:__anon12
GUdevClientPrivate	glib/win-usb-dev.h	/^typedef struct _GUdevClientPrivate GUdevClientPrivate;$/;"	t	typeref:struct:_GUdevClientPrivate
GUdevDevice	glib/win-usb-dev.h	/^typedef struct _GUdevDevice GUdevDevice;$/;"	t	typeref:struct:_GUdevDevice
GUdevDeviceClass	glib/win-usb-dev.h	/^typedef struct _GUdevDeviceClass GUdevDeviceClass;$/;"	t	typeref:struct:_GUdevDeviceClass
GUdevDeviceInfo	glib/win-usb-dev.c	/^typedef struct _GUdevDeviceInfo GUdevDeviceInfo;$/;"	t	typeref:struct:_GUdevDeviceInfo	file:
GUdevDevicePrivate	glib/win-usb-dev.h	/^typedef struct _GUdevDevicePrivate GUdevDevicePrivate;$/;"	t	typeref:struct:_GUdevDevicePrivate
G_DEFINE_ABSTRACT_TYPE	glib/spice-audio.c	/^G_DEFINE_ABSTRACT_TYPE(SpiceAudio, spice_audio, G_TYPE_OBJECT)$/;"	f
G_DEFINE_BOXED_TYPE	glib/glib-compat.c	/^G_DEFINE_BOXED_TYPE (GError, spice_error, g_error_copy, g_error_free)$/;"	f
G_DEFINE_BOXED_TYPE	glib/glib-compat.c	/^G_DEFINE_BOXED_TYPE (GMainContext, spice_main_context, g_main_context_ref, g_main_context_unref)$/;"	f
G_DEFINE_BOXED_TYPE	glib/glib-compat.h	28;"	d
G_DEFINE_BOXED_TYPE_WITH_CODE	glib/glib-compat.h	29;"	d
G_DEFINE_TYPE	glib/channel-display.c	/^G_DEFINE_TYPE(SpiceDisplayChannel, spice_display_channel, SPICE_TYPE_CHANNEL)$/;"	f
G_DEFINE_TYPE	glib/channel-inputs.c	/^G_DEFINE_TYPE(SpiceInputsChannel, spice_inputs_channel, SPICE_TYPE_CHANNEL)$/;"	f
G_DEFINE_TYPE	glib/channel-main.c	/^G_DEFINE_TYPE(SpiceMainChannel, spice_main_channel, SPICE_TYPE_CHANNEL)$/;"	f
G_DEFINE_TYPE	glib/channel-playback.c	/^G_DEFINE_TYPE(SpicePlaybackChannel, spice_playback_channel, SPICE_TYPE_CHANNEL)$/;"	f
G_DEFINE_TYPE	glib/channel-port.c	/^G_DEFINE_TYPE(SpicePortChannel, spice_port_channel, SPICE_TYPE_CHANNEL)$/;"	f
G_DEFINE_TYPE	glib/channel-record.c	/^G_DEFINE_TYPE(SpiceRecordChannel, spice_record_channel, SPICE_TYPE_CHANNEL)$/;"	f
G_DEFINE_TYPE	glib/channel-smartcard.c	/^G_DEFINE_TYPE(SpiceSmartcardChannel, spice_smartcard_channel, SPICE_TYPE_CHANNEL)$/;"	f
G_DEFINE_TYPE	glib/smartcard-manager.c	/^G_DEFINE_TYPE(SpiceSmartcardManager, spice_smartcard_manager, G_TYPE_OBJECT)$/;"	f
G_DEFINE_TYPE	glib/spice-gstaudio.c	/^G_DEFINE_TYPE(SpiceGstaudio, spice_gstaudio, SPICE_TYPE_AUDIO)$/;"	f
G_DEFINE_TYPE	glib/win-usb-dev.c	/^G_DEFINE_TYPE(GUdevDevice, g_udev_device, G_TYPE_OBJECT)$/;"	f
G_PARAM_DEPRECATED	glib/glib-compat.h	75;"	d
G_SIGNAL_DEPRECATED	glib/glib-compat.h	114;"	d
G_TYPE_ERROR	glib/glib-compat.h	72;"	d
G_TYPE_MAIN_CONTEXT	glib/glib-compat.h	109;"	d
G_UDEV_CLIENT	glib/win-usb-dev.h	59;"	d
G_UDEV_CLIENT_CLASS	glib/win-usb-dev.h	60;"	d
G_UDEV_CLIENT_ERROR	glib/win-usb-dev.h	93;"	d
G_UDEV_CLIENT_ERROR_FAILED	glib/win-usb-dev.h	/^    G_UDEV_CLIENT_ERROR_FAILED = 1,$/;"	e	enum:__anon12
G_UDEV_CLIENT_GET_CLASS	glib/win-usb-dev.h	63;"	d
G_UDEV_CLIENT_GET_PRIVATE	glib/win-usb-dev.c	34;"	d	file:
G_UDEV_CLIENT_LIBUSB_FAILED	glib/win-usb-dev.h	/^    G_UDEV_CLIENT_LIBUSB_FAILED,$/;"	e	enum:__anon12
G_UDEV_CLIENT_WINAPI_FAILED	glib/win-usb-dev.h	/^    G_UDEV_CLIENT_WINAPI_FAILED$/;"	e	enum:__anon12
G_UDEV_CLIENT_WINCLASS_NAME	glib/win-usb-dev.c	44;"	d	file:
G_UDEV_DEVICE	glib/win-usb-dev.h	35;"	d
G_UDEV_DEVICE_CLASS	glib/win-usb-dev.h	36;"	d
G_UDEV_DEVICE_GET_CLASS	glib/win-usb-dev.h	39;"	d
G_UDEV_IS_CLIENT	glib/win-usb-dev.h	61;"	d
G_UDEV_IS_CLIENT_CLASS	glib/win-usb-dev.h	62;"	d
G_UDEV_IS_DEVICE	glib/win-usb-dev.h	37;"	d
G_UDEV_IS_DEVICE_CLASS	glib/win-usb-dev.h	38;"	d
G_UDEV_TYPE_CLIENT	glib/win-usb-dev.h	58;"	d
G_UDEV_TYPE_DEVICE	glib/win-usb-dev.h	34;"	d
GdiCanvas	spice-common/common/gdi_canvas.c	/^struct GdiCanvas {$/;"	s	file:
GdiCanvas	spice-common/common/gdi_canvas.c	/^typedef struct GdiCanvas GdiCanvas;$/;"	t	typeref:struct:GdiCanvas	file:
GlibGlzDecoder	glib/decode-glz.c	/^typedef struct GlibGlzDecoder {$/;"	s	file:
GlibGlzDecoder	glib/decode-glz.c	/^} GlibGlzDecoder;$/;"	t	typeref:struct:GlibGlzDecoder	file:
GlibJpegDecoder	glib/decode-jpeg.c	/^typedef struct GlibJpegDecoder$/;"	s	file:
GlibJpegDecoder	glib/decode-jpeg.c	/^} GlibJpegDecoder;$/;"	t	typeref:struct:GlibJpegDecoder	file:
GlibZlibDecoder	glib/decode-zlib.c	/^typedef struct GlibZlibDecoder$/;"	s	file:
GlibZlibDecoder	glib/decode-zlib.c	/^} GlibZlibDecoder;$/;"	t	typeref:struct:GlibZlibDecoder	file:
GlzData	spice-common/common/canvas_base.c	/^typedef struct GlzData {$/;"	s	file:
GlzData	spice-common/common/canvas_base.c	/^} GlzData;$/;"	t	typeref:struct:GlzData	file:
H264Decoder	glib/h264_decoder.h	/^}H264Decoder;$/;"	t	typeref:struct:_H264Decoder
H264StreamInfo	glib/h264_type.h	/^}H264StreamInfo;$/;"	t	typeref:struct:_H264StreamInfo
H264_DECODER_ERROR	glib/h264_type.h	17;"	d
H264_DECODER_OK	glib/h264_type.h	20;"	d
H264_ENCODER_ERROR	glib/h264_type.h	14;"	d
H264_ENCODER_OK	glib/h264_type.h	19;"	d
H264_ENV_INIT	glib/h264_type.h	29;"	d
H264_ERROR	glib/h264_type.h	23;"	d
H264_NOT_GET_PIC	glib/h264_type.h	15;"	d
H264_NOT_GET_SLICE	glib/h264_type.h	16;"	d
H264_OK	glib/h264_type.h	22;"	d
H264_VERSION	glib/h264_type.h	25;"	d
HASH_FUNC	spice-common/common/lz_compress_tmpl.c	113;"	d	file:
HASH_FUNC	spice-common/common/lz_compress_tmpl.c	142;"	d	file:
HASH_FUNC	spice-common/common/lz_compress_tmpl.c	532;"	d	file:
HASH_FUNC	spice-common/common/lz_compress_tmpl.c	65;"	d	file:
HASH_FUNC	spice-common/common/lz_compress_tmpl.c	80;"	d	file:
HASH_FUNC	spice-common/common/lz_compress_tmpl.c	95;"	d	file:
HASH_FUNC2	spice-common/common/lz_compress_tmpl.c	545;"	d	file:
HASH_FUNC_16	spice-common/common/lz_compress_tmpl.c	534;"	d	file:
HASH_LOG	spice-common/common/lz.c	53;"	d	file:
HASH_MASK	spice-common/common/lz.c	55;"	d	file:
HASH_SIZE	spice-common/common/lz.c	54;"	d	file:
HAVE_ALLOCA	make/configcommon.h	16;"	d
HAVE_ALLOCA	make/wconfigcommon.h	16;"	d
HAVE_ALLOCA	spice-common/config.h	16;"	d
HAVE_ALLOCA_H	make/configcommon.h	20;"	d
HAVE_ALLOCA_H	spice-common/config.h	20;"	d
HAVE_ARPA_INET_H	config.h	20;"	d
HAVE_ARPA_INET_H	glib/config.h	22;"	d
HAVE_ARPA_INET_H	make/config.h	20;"	d
HAVE_ARPA_INET_H	make/configcommon.h	23;"	d
HAVE_ARPA_INET_H	make/configglib.h	22;"	d
HAVE_ARPA_INET_H	spice-common/config.h	23;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	config.h	23;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	glib/config.h	25;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	make/config.h	23;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	make/configglib.h	25;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	make/configwin32.h	23;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	make/wconfig.h	23;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	make/wconfigglib.h	23;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	make/wconfigwin32.h	23;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	win32/config.h	23;"	d
HAVE_BOOLEAN	glib/channel-display-priv.h	25;"	d
HAVE_CELT051	make/configcommon.h	26;"	d
HAVE_CELT051	make/wconfigcommon.h	26;"	d
HAVE_CELT051	spice-common/config.h	26;"	d
HAVE_CLEARENV	config.h	26;"	d
HAVE_CLEARENV	glib/config.h	28;"	d
HAVE_CLEARENV	make/config.h	26;"	d
HAVE_CLEARENV	make/configglib.h	28;"	d
HAVE_DCGETTEXT	config.h	29;"	d
HAVE_DCGETTEXT	glib/config.h	31;"	d
HAVE_DCGETTEXT	make/config.h	29;"	d
HAVE_DCGETTEXT	make/configglib.h	31;"	d
HAVE_DCGETTEXT	make/configwin32.h	29;"	d
HAVE_DCGETTEXT	make/wconfig.h	29;"	d
HAVE_DCGETTEXT	make/wconfigglib.h	29;"	d
HAVE_DCGETTEXT	make/wconfigwin32.h	29;"	d
HAVE_DCGETTEXT	win32/config.h	29;"	d
HAVE_DLFCN_H	config.h	32;"	d
HAVE_DLFCN_H	glib/config.h	34;"	d
HAVE_DLFCN_H	make/config.h	32;"	d
HAVE_DLFCN_H	make/configcommon.h	29;"	d
HAVE_DLFCN_H	make/configglib.h	34;"	d
HAVE_DLFCN_H	make/configwin32.h	32;"	d
HAVE_DLFCN_H	make/wconfig.h	32;"	d
HAVE_DLFCN_H	make/wconfigcommon.h	29;"	d
HAVE_DLFCN_H	make/wconfigglib.h	32;"	d
HAVE_DLFCN_H	make/wconfigwin32.h	32;"	d
HAVE_DLFCN_H	spice-common/config.h	29;"	d
HAVE_DLFCN_H	win32/config.h	32;"	d
HAVE_DUP2	make/configcommon.h	32;"	d
HAVE_DUP2	make/wconfigcommon.h	32;"	d
HAVE_DUP2	spice-common/config.h	32;"	d
HAVE_FLOOR	make/wconfigcommon.h	35;"	d
HAVE_FORK	make/configcommon.h	38;"	d
HAVE_FORK	spice-common/config.h	38;"	d
HAVE_GETTEXT	config.h	35;"	d
HAVE_GETTEXT	glib/config.h	37;"	d
HAVE_GETTEXT	make/config.h	35;"	d
HAVE_GETTEXT	make/configglib.h	37;"	d
HAVE_GETTEXT	make/configwin32.h	35;"	d
HAVE_GETTEXT	make/wconfig.h	35;"	d
HAVE_GETTEXT	make/wconfigglib.h	35;"	d
HAVE_GETTEXT	make/wconfigwin32.h	35;"	d
HAVE_GETTEXT	win32/config.h	35;"	d
HAVE_INET_NTOA	make/configcommon.h	41;"	d
HAVE_INET_NTOA	spice-common/config.h	41;"	d
HAVE_INTTYPES_H	config.h	38;"	d
HAVE_INTTYPES_H	glib/config.h	40;"	d
HAVE_INTTYPES_H	make/config.h	38;"	d
HAVE_INTTYPES_H	make/configcommon.h	44;"	d
HAVE_INTTYPES_H	make/configglib.h	40;"	d
HAVE_INTTYPES_H	make/configwin32.h	38;"	d
HAVE_INTTYPES_H	make/wconfig.h	38;"	d
HAVE_INTTYPES_H	make/wconfigcommon.h	44;"	d
HAVE_INTTYPES_H	make/wconfigglib.h	38;"	d
HAVE_INTTYPES_H	make/wconfigwin32.h	38;"	d
HAVE_INTTYPES_H	spice-common/config.h	44;"	d
HAVE_INTTYPES_H	win32/config.h	38;"	d
HAVE_LC_MESSAGES	config.h	41;"	d
HAVE_LC_MESSAGES	glib/config.h	43;"	d
HAVE_LC_MESSAGES	make/config.h	41;"	d
HAVE_LC_MESSAGES	make/configglib.h	43;"	d
HAVE_LOCALE_H	config.h	44;"	d
HAVE_LOCALE_H	glib/config.h	46;"	d
HAVE_LOCALE_H	make/config.h	44;"	d
HAVE_LOCALE_H	make/configglib.h	46;"	d
HAVE_LOCALE_H	make/configwin32.h	44;"	d
HAVE_LOCALE_H	make/wconfig.h	44;"	d
HAVE_LOCALE_H	make/wconfigglib.h	44;"	d
HAVE_LOCALE_H	make/wconfigwin32.h	44;"	d
HAVE_LOCALE_H	win32/config.h	44;"	d
HAVE_MALLOC_H	make/configcommon.h	47;"	d
HAVE_MALLOC_H	make/wconfigcommon.h	47;"	d
HAVE_MALLOC_H	spice-common/config.h	47;"	d
HAVE_MEMMOVE	make/configcommon.h	50;"	d
HAVE_MEMMOVE	make/wconfigcommon.h	50;"	d
HAVE_MEMMOVE	spice-common/config.h	50;"	d
HAVE_MEMORY_H	config.h	47;"	d
HAVE_MEMORY_H	glib/config.h	49;"	d
HAVE_MEMORY_H	make/config.h	47;"	d
HAVE_MEMORY_H	make/configcommon.h	53;"	d
HAVE_MEMORY_H	make/configglib.h	49;"	d
HAVE_MEMORY_H	make/configwin32.h	47;"	d
HAVE_MEMORY_H	make/wconfig.h	47;"	d
HAVE_MEMORY_H	make/wconfigcommon.h	53;"	d
HAVE_MEMORY_H	make/wconfigglib.h	47;"	d
HAVE_MEMORY_H	make/wconfigwin32.h	47;"	d
HAVE_MEMORY_H	spice-common/config.h	53;"	d
HAVE_MEMORY_H	win32/config.h	47;"	d
HAVE_MEMSET	make/configcommon.h	56;"	d
HAVE_MEMSET	make/wconfigcommon.h	56;"	d
HAVE_MEMSET	spice-common/config.h	56;"	d
HAVE_NETINET_IN_H	config.h	50;"	d
HAVE_NETINET_IN_H	glib/config.h	52;"	d
HAVE_NETINET_IN_H	make/config.h	50;"	d
HAVE_NETINET_IN_H	make/configcommon.h	59;"	d
HAVE_NETINET_IN_H	make/configglib.h	52;"	d
HAVE_NETINET_IN_H	spice-common/config.h	59;"	d
HAVE_OPUS	make/wconfigcommon.h	62;"	d
HAVE_POLKIT_AUTHORITY_GET_SYNC	config.h	53;"	d
HAVE_POLKIT_AUTHORITY_GET_SYNC	glib/config.h	55;"	d
HAVE_POLKIT_AUTHORITY_GET_SYNC	make/config.h	53;"	d
HAVE_POLKIT_AUTHORITY_GET_SYNC	make/configglib.h	55;"	d
HAVE_POLKIT_AUTHORITY_GET_SYNC	make/configwin32.h	53;"	d
HAVE_POLKIT_AUTHORITY_GET_SYNC	make/wconfig.h	53;"	d
HAVE_POLKIT_AUTHORITY_GET_SYNC	make/wconfigglib.h	53;"	d
HAVE_POLKIT_AUTHORITY_GET_SYNC	make/wconfigwin32.h	53;"	d
HAVE_POLKIT_AUTHORITY_GET_SYNC	win32/config.h	53;"	d
HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED	config.h	57;"	d
HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED	glib/config.h	59;"	d
HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED	make/config.h	57;"	d
HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED	make/configglib.h	59;"	d
HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED	make/configwin32.h	57;"	d
HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED	make/wconfig.h	57;"	d
HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED	make/wconfigglib.h	57;"	d
HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED	make/wconfigwin32.h	57;"	d
HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED	win32/config.h	57;"	d
HAVE_POW	make/wconfigcommon.h	65;"	d
HAVE_RANDR	config.h	63;"	d
HAVE_RANDR	glib/config.h	65;"	d
HAVE_RANDR	make/config.h	63;"	d
HAVE_RANDR	make/configglib.h	65;"	d
HAVE_SASL	config.h	66;"	d
HAVE_SASL	glib/config.h	68;"	d
HAVE_SASL	make/config.h	66;"	d
HAVE_SASL	make/configglib.h	68;"	d
HAVE_SQRT	make/wconfigcommon.h	68;"	d
HAVE_STDDEF_H	make/configcommon.h	71;"	d
HAVE_STDDEF_H	make/wconfigcommon.h	71;"	d
HAVE_STDDEF_H	spice-common/config.h	71;"	d
HAVE_STDINT_H	config.h	69;"	d
HAVE_STDINT_H	glib/config.h	71;"	d
HAVE_STDINT_H	make/config.h	69;"	d
HAVE_STDINT_H	make/configcommon.h	74;"	d
HAVE_STDINT_H	make/configglib.h	71;"	d
HAVE_STDINT_H	make/configwin32.h	69;"	d
HAVE_STDINT_H	make/wconfig.h	69;"	d
HAVE_STDINT_H	make/wconfigcommon.h	74;"	d
HAVE_STDINT_H	make/wconfigglib.h	69;"	d
HAVE_STDINT_H	make/wconfigwin32.h	69;"	d
HAVE_STDINT_H	spice-common/config.h	74;"	d
HAVE_STDINT_H	win32/config.h	69;"	d
HAVE_STDLIB_H	config.h	72;"	d
HAVE_STDLIB_H	glib/config.h	74;"	d
HAVE_STDLIB_H	make/config.h	72;"	d
HAVE_STDLIB_H	make/configcommon.h	77;"	d
HAVE_STDLIB_H	make/configglib.h	74;"	d
HAVE_STDLIB_H	make/configwin32.h	72;"	d
HAVE_STDLIB_H	make/wconfig.h	72;"	d
HAVE_STDLIB_H	make/wconfigcommon.h	77;"	d
HAVE_STDLIB_H	make/wconfigglib.h	72;"	d
HAVE_STDLIB_H	make/wconfigwin32.h	72;"	d
HAVE_STDLIB_H	spice-common/common/gdi_canvas.c	20;"	d	file:
HAVE_STDLIB_H	spice-common/common/sw_canvas.c	20;"	d	file:
HAVE_STDLIB_H	spice-common/config.h	77;"	d
HAVE_STDLIB_H	win32/config.h	72;"	d
HAVE_STRINGS_H	config.h	75;"	d
HAVE_STRINGS_H	glib/config.h	77;"	d
HAVE_STRINGS_H	make/config.h	75;"	d
HAVE_STRINGS_H	make/configcommon.h	80;"	d
HAVE_STRINGS_H	make/configglib.h	77;"	d
HAVE_STRINGS_H	make/configwin32.h	75;"	d
HAVE_STRINGS_H	make/wconfig.h	75;"	d
HAVE_STRINGS_H	make/wconfigcommon.h	80;"	d
HAVE_STRINGS_H	make/wconfigglib.h	75;"	d
HAVE_STRINGS_H	make/wconfigwin32.h	75;"	d
HAVE_STRINGS_H	spice-common/config.h	80;"	d
HAVE_STRINGS_H	win32/config.h	75;"	d
HAVE_STRING_H	config.h	78;"	d
HAVE_STRING_H	glib/config.h	80;"	d
HAVE_STRING_H	make/config.h	78;"	d
HAVE_STRING_H	make/configcommon.h	83;"	d
HAVE_STRING_H	make/configglib.h	80;"	d
HAVE_STRING_H	make/configwin32.h	78;"	d
HAVE_STRING_H	make/wconfig.h	78;"	d
HAVE_STRING_H	make/wconfigcommon.h	83;"	d
HAVE_STRING_H	make/wconfigglib.h	78;"	d
HAVE_STRING_H	make/wconfigwin32.h	78;"	d
HAVE_STRING_H	spice-common/config.h	83;"	d
HAVE_STRING_H	win32/config.h	78;"	d
HAVE_STRTOK_R	config.h	81;"	d
HAVE_STRTOK_R	glib/config.h	83;"	d
HAVE_STRTOK_R	make/config.h	81;"	d
HAVE_STRTOK_R	make/configglib.h	83;"	d
HAVE_SYS_IPC_H	config.h	84;"	d
HAVE_SYS_IPC_H	glib/config.h	86;"	d
HAVE_SYS_IPC_H	make/config.h	84;"	d
HAVE_SYS_IPC_H	make/configglib.h	86;"	d
HAVE_SYS_SHM_H	config.h	87;"	d
HAVE_SYS_SHM_H	glib/config.h	89;"	d
HAVE_SYS_SHM_H	make/config.h	87;"	d
HAVE_SYS_SHM_H	make/configglib.h	89;"	d
HAVE_SYS_SOCKET_H	config.h	90;"	d
HAVE_SYS_SOCKET_H	glib/config.h	92;"	d
HAVE_SYS_SOCKET_H	make/config.h	90;"	d
HAVE_SYS_SOCKET_H	make/configcommon.h	86;"	d
HAVE_SYS_SOCKET_H	make/configglib.h	92;"	d
HAVE_SYS_SOCKET_H	spice-common/config.h	86;"	d
HAVE_SYS_STAT_H	config.h	93;"	d
HAVE_SYS_STAT_H	glib/config.h	95;"	d
HAVE_SYS_STAT_H	make/config.h	93;"	d
HAVE_SYS_STAT_H	make/configcommon.h	89;"	d
HAVE_SYS_STAT_H	make/configglib.h	95;"	d
HAVE_SYS_STAT_H	make/configwin32.h	93;"	d
HAVE_SYS_STAT_H	make/wconfig.h	93;"	d
HAVE_SYS_STAT_H	make/wconfigcommon.h	89;"	d
HAVE_SYS_STAT_H	make/wconfigglib.h	93;"	d
HAVE_SYS_STAT_H	make/wconfigwin32.h	93;"	d
HAVE_SYS_STAT_H	spice-common/config.h	89;"	d
HAVE_SYS_STAT_H	win32/config.h	93;"	d
HAVE_SYS_TYPES_H	config.h	96;"	d
HAVE_SYS_TYPES_H	glib/config.h	98;"	d
HAVE_SYS_TYPES_H	make/config.h	96;"	d
HAVE_SYS_TYPES_H	make/configcommon.h	92;"	d
HAVE_SYS_TYPES_H	make/configglib.h	98;"	d
HAVE_SYS_TYPES_H	make/configwin32.h	96;"	d
HAVE_SYS_TYPES_H	make/wconfig.h	96;"	d
HAVE_SYS_TYPES_H	make/wconfigcommon.h	92;"	d
HAVE_SYS_TYPES_H	make/wconfigglib.h	96;"	d
HAVE_SYS_TYPES_H	make/wconfigwin32.h	96;"	d
HAVE_SYS_TYPES_H	spice-common/config.h	92;"	d
HAVE_SYS_TYPES_H	win32/config.h	96;"	d
HAVE_TERMIOS_H	config.h	99;"	d
HAVE_TERMIOS_H	glib/config.h	101;"	d
HAVE_TERMIOS_H	make/config.h	99;"	d
HAVE_TERMIOS_H	make/configglib.h	101;"	d
HAVE_UNISTD_H	config.h	102;"	d
HAVE_UNISTD_H	glib/config.h	104;"	d
HAVE_UNISTD_H	make/config.h	102;"	d
HAVE_UNISTD_H	make/configcommon.h	95;"	d
HAVE_UNISTD_H	make/configglib.h	104;"	d
HAVE_UNISTD_H	make/configwin32.h	102;"	d
HAVE_UNISTD_H	make/wconfig.h	102;"	d
HAVE_UNISTD_H	make/wconfigcommon.h	95;"	d
HAVE_UNISTD_H	make/wconfigglib.h	102;"	d
HAVE_UNISTD_H	make/wconfigwin32.h	102;"	d
HAVE_UNISTD_H	spice-common/config.h	95;"	d
HAVE_UNISTD_H	win32/config.h	102;"	d
HAVE_VFORK	make/configcommon.h	98;"	d
HAVE_VFORK	spice-common/config.h	98;"	d
HAVE_WINDOWS	make/configwin32.h	105;"	d
HAVE_WINDOWS	make/wconfig.h	105;"	d
HAVE_WINDOWS	make/wconfigglib.h	105;"	d
HAVE_WINDOWS	make/wconfigwin32.h	105;"	d
HAVE_WINDOWS	win32/config.h	105;"	d
HAVE_WORKING_FORK	make/configcommon.h	104;"	d
HAVE_WORKING_FORK	spice-common/config.h	104;"	d
HAVE_WORKING_VFORK	make/configcommon.h	107;"	d
HAVE_WORKING_VFORK	spice-common/config.h	107;"	d
HAVE_X11	config.h	108;"	d
HAVE_X11	glib/config.h	110;"	d
HAVE_X11	make/config.h	108;"	d
HAVE_X11	make/configglib.h	110;"	d
HAVE_X11_XKBLIB_H	config.h	111;"	d
HAVE_X11_XKBLIB_H	glib/config.h	113;"	d
HAVE_X11_XKBLIB_H	make/config.h	111;"	d
HAVE_X11_XKBLIB_H	make/configglib.h	113;"	d
HTTP_END_MARKER	glib/wocky-http-proxy.c	59;"	d	file:
HWACCEL_CODEC_CAP_EXPERIMENTAL	ffmpeg/include/libavcodec/avcodec.h	1135;"	d
H_SPICE_COMMON	spice-common/common/spice_common.h	19;"	d
H_SPICE_LOG	spice-common/common/log.h	19;"	d
HashEntry	spice-common/common/lz.c	/^typedef struct HashEntry {$/;"	s	file:
HashEntry	spice-common/common/lz.c	/^} HashEntry;$/;"	t	typeref:struct:HashEntry	file:
ICEIL	spice-common/common/lines.c	/^static inline int ICEIL (double x)$/;"	f	file:
IDFT_C2R	ffmpeg/include/libavcodec/avfft.h	/^    IDFT_C2R,$/;"	e	enum:RDFTransformType
IDFT_R2C	ffmpeg/include/libavcodec/avfft.h	/^    IDFT_R2C,$/;"	e	enum:RDFTransformType
IMAGES_CACHE_SIZE_DEFAULT	glib/spice-session-priv.h	40;"	d
IN	win32/win32_spice_interface_types.h	22;"	d
INC_PATH	examples/makefile	/^INC_PATH=-I..\/glib \\$/;"	m
INC_PATH	glib/makefile	/^INC_PATH= -I..\/ \\$/;"	m
INC_PATH	spice-common/common/makefile	/^INC_PATH=-I.. -I..\/spice-protocol\/ -I. -I\/usr\/include\/pixman-1\/ $/;"	m
INC_PATH	win32/makefile	/^INC_PATH=-I..\/glib \\$/;"	m
INFINITY	ffmpeg/include/libavutil/mathematics.h	61;"	d
INIT_IMAGES_CAPACITY	glib/decode-glz.c	79;"	d	file:
IN_OUT	win32/win32_spice_interface_types.h	30;"	d
IS_IMAGE_LOSSY	spice-common/common/canvas_base.c	45;"	d	file:
IS_IMAGE_TYPE_PLT	spice-common/common/lz_common.h	/^static const int IS_IMAGE_TYPE_PLT[] = {0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0};$/;"	v
IS_IMAGE_TYPE_RGB	spice-common/common/lz_common.h	/^static const int IS_IMAGE_TYPE_RGB[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1};$/;"	v
Index	spice-common/python_modules/codegen.py	/^    class Index:$/;"	c	class:CodeWriter
Infohead	win32/create_bmp.h	/^}Infohead;$/;"	t	typeref:struct:__anon51
IntegerType	spice-common/python_modules/ptypes.py	/^class IntegerType(Type):$/;"	c
InternaCtx	spice-common/common/glc.c	/^struct InternaCtx {$/;"	s	file:
InternaCtx	spice-common/common/glc.c	/^typedef struct InternaCtx InternaCtx;$/;"	t	typeref:struct:InternaCtx	file:
InternalPat	spice-common/common/glc.c	/^typedef struct InternalPat {$/;"	s	file:
InternalPat	spice-common/common/glc.c	/^} InternalPat;$/;"	t	typeref:struct:InternalPat	file:
InternalPath	spice-common/common/glc.c	/^typedef struct InternalPath {$/;"	s	file:
InternalPath	spice-common/common/glc.c	/^} InternalPath;$/;"	t	typeref:struct:InternalPath	file:
IsXDecreasingOctant	spice-common/common/lines.c	239;"	d	file:
IsXMajorOctant	spice-common/common/lines.c	237;"	d	file:
IsYDecreasingOctant	spice-common/common/lines.c	240;"	d	file:
IsYMajorOctant	spice-common/common/lines.c	238;"	d	file:
ItemInfo	spice-common/python_modules/demarshal.py	/^class ItemInfo:$/;"	c
J	spice-common/common/quic.c	/^static int J[MELCSTATES] = {$/;"	v	file:
JoinBevel	spice-common/common/lines.h	108;"	d
JoinMiter	spice-common/common/lines.h	106;"	d
JoinRound	spice-common/common/lines.h	107;"	d
LAST_SIGNAL	glib/channel-port.c	/^    LAST_SIGNAL,$/;"	e	enum:__anon10	file:
LAST_SIGNAL	glib/usb-device-manager.c	/^    LAST_SIGNAL,$/;"	e	enum:__anon14	file:
LCXCALLBACK	win32/win32_spice_interface_types.h	/^typedef struct LCXCALLBACK$/;"	s
LCXCALLBACK	win32/win32_spice_interface_types.h	/^}LCXCALLBACK;$/;"	t	typeref:struct:LCXCALLBACK
LCXSpiceMouseButton	win32/win32_spice_interface_types.h	/^typedef enum LCXSpiceMouseButton {$/;"	g
LCXSpiceMouseButton	win32/win32_spice_interface_types.h	/^} LCXSpiceMouseButton;$/;"	t	typeref:enum:LCXSpiceMouseButton
LCX_SPICE_CHANNEL_CLOSED	win32/win32_spice_interface_types.h	/^    LCX_SPICE_CHANNEL_CLOSED,$/;"	e	enum:__anon48
LCX_SPICE_CHANNEL_ERROR_AUTH	win32/win32_spice_interface_types.h	/^    LCX_SPICE_CHANNEL_ERROR_AUTH,$/;"	e	enum:__anon48
LCX_SPICE_CHANNEL_ERROR_CONNECT	win32/win32_spice_interface_types.h	/^    LCX_SPICE_CHANNEL_ERROR_CONNECT = 20,$/;"	e	enum:__anon48
LCX_SPICE_CHANNEL_ERROR_IO	win32/win32_spice_interface_types.h	/^    LCX_SPICE_CHANNEL_ERROR_IO,$/;"	e	enum:__anon48
LCX_SPICE_CHANNEL_ERROR_LINK	win32/win32_spice_interface_types.h	/^    LCX_SPICE_CHANNEL_ERROR_LINK,$/;"	e	enum:__anon48
LCX_SPICE_CHANNEL_ERROR_TLS	win32/win32_spice_interface_types.h	/^    LCX_SPICE_CHANNEL_ERROR_TLS,$/;"	e	enum:__anon48
LCX_SPICE_CHANNEL_NONE	win32/win32_spice_interface_types.h	/^    LCX_SPICE_CHANNEL_NONE = 0,$/;"	e	enum:__anon48
LCX_SPICE_CHANNEL_OPENED	win32/win32_spice_interface_types.h	/^    LCX_SPICE_CHANNEL_OPENED = 10,$/;"	e	enum:__anon48
LCX_SPICE_CHANNEL_SWITCHING	win32/win32_spice_interface_types.h	/^    LCX_SPICE_CHANNEL_SWITCHING,$/;"	e	enum:__anon48
LCX_SPICE_MOUSE_BUTTON_DOWN	win32/win32_spice_interface_types.h	/^    LCX_SPICE_MOUSE_BUTTON_DOWN,$/;"	e	enum:LCXSpiceMouseButton
LCX_SPICE_MOUSE_BUTTON_ENUM_END	win32/win32_spice_interface_types.h	/^    LCX_SPICE_MOUSE_BUTTON_ENUM_END$/;"	e	enum:LCXSpiceMouseButton
LCX_SPICE_MOUSE_BUTTON_INVALID	win32/win32_spice_interface_types.h	/^    LCX_SPICE_MOUSE_BUTTON_INVALID,$/;"	e	enum:LCXSpiceMouseButton
LCX_SPICE_MOUSE_BUTTON_LEFT	win32/win32_spice_interface_types.h	/^    LCX_SPICE_MOUSE_BUTTON_LEFT,$/;"	e	enum:LCXSpiceMouseButton
LCX_SPICE_MOUSE_BUTTON_MIDDLE	win32/win32_spice_interface_types.h	/^    LCX_SPICE_MOUSE_BUTTON_MIDDLE,$/;"	e	enum:LCXSpiceMouseButton
LCX_SPICE_MOUSE_BUTTON_RIGHT	win32/win32_spice_interface_types.h	/^    LCX_SPICE_MOUSE_BUTTON_RIGHT,$/;"	e	enum:LCXSpiceMouseButton
LCX_SPICE_MOUSE_BUTTON_UP	win32/win32_spice_interface_types.h	/^    LCX_SPICE_MOUSE_BUTTON_UP,$/;"	e	enum:LCXSpiceMouseButton
LDFLAGS	spice-common/common/makefile	/^LDFLAGS=-shared -fpic$/;"	m
LIBADD	spice-common/common/makefile	/^LIBADD=-L\/usr\/local\/lib -lcelt051 -lm$/;"	m
LIBAVCODEC_BUILD	ffmpeg/include/libavcodec/version.h	41;"	d
LIBAVCODEC_IDENT	ffmpeg/include/libavcodec/version.h	43;"	d
LIBAVCODEC_VERSION	ffmpeg/include/libavcodec/version.h	38;"	d
LIBAVCODEC_VERSION_INT	ffmpeg/include/libavcodec/version.h	35;"	d
LIBAVCODEC_VERSION_MAJOR	ffmpeg/include/libavcodec/version.h	31;"	d
LIBAVCODEC_VERSION_MICRO	ffmpeg/include/libavcodec/version.h	33;"	d
LIBAVCODEC_VERSION_MINOR	ffmpeg/include/libavcodec/version.h	32;"	d
LIBAVDEVICE_BUILD	ffmpeg/include/libavdevice/version.h	40;"	d
LIBAVDEVICE_IDENT	ffmpeg/include/libavdevice/version.h	42;"	d
LIBAVDEVICE_VERSION	ffmpeg/include/libavdevice/version.h	37;"	d
LIBAVDEVICE_VERSION_INT	ffmpeg/include/libavdevice/version.h	34;"	d
LIBAVDEVICE_VERSION_MAJOR	ffmpeg/include/libavdevice/version.h	30;"	d
LIBAVDEVICE_VERSION_MICRO	ffmpeg/include/libavdevice/version.h	32;"	d
LIBAVDEVICE_VERSION_MINOR	ffmpeg/include/libavdevice/version.h	31;"	d
LIBAVFILTER_BUILD	ffmpeg/include/libavfilter/version.h	42;"	d
LIBAVFILTER_IDENT	ffmpeg/include/libavfilter/version.h	44;"	d
LIBAVFILTER_VERSION	ffmpeg/include/libavfilter/version.h	39;"	d
LIBAVFILTER_VERSION_INT	ffmpeg/include/libavfilter/version.h	36;"	d
LIBAVFILTER_VERSION_MAJOR	ffmpeg/include/libavfilter/version.h	32;"	d
LIBAVFILTER_VERSION_MICRO	ffmpeg/include/libavfilter/version.h	34;"	d
LIBAVFILTER_VERSION_MINOR	ffmpeg/include/libavfilter/version.h	33;"	d
LIBAVFORMAT_BUILD	ffmpeg/include/libavformat/version.h	42;"	d
LIBAVFORMAT_IDENT	ffmpeg/include/libavformat/version.h	44;"	d
LIBAVFORMAT_VERSION	ffmpeg/include/libavformat/version.h	39;"	d
LIBAVFORMAT_VERSION_INT	ffmpeg/include/libavformat/version.h	36;"	d
LIBAVFORMAT_VERSION_MAJOR	ffmpeg/include/libavformat/version.h	32;"	d
LIBAVFORMAT_VERSION_MICRO	ffmpeg/include/libavformat/version.h	34;"	d
LIBAVFORMAT_VERSION_MINOR	ffmpeg/include/libavformat/version.h	33;"	d
LIBAVUTIL_BUILD	ffmpeg/include/libavutil/version.h	68;"	d
LIBAVUTIL_IDENT	ffmpeg/include/libavutil/version.h	70;"	d
LIBAVUTIL_VERSION	ffmpeg/include/libavutil/version.h	65;"	d
LIBAVUTIL_VERSION_INT	ffmpeg/include/libavutil/version.h	62;"	d
LIBAVUTIL_VERSION_MAJOR	ffmpeg/include/libavutil/version.h	58;"	d
LIBAVUTIL_VERSION_MICRO	ffmpeg/include/libavutil/version.h	60;"	d
LIBAVUTIL_VERSION_MINOR	ffmpeg/include/libavutil/version.h	59;"	d
LIBPOSTPROC_BUILD	ffmpeg/include/libpostproc/version.h	41;"	d
LIBPOSTPROC_IDENT	ffmpeg/include/libpostproc/version.h	43;"	d
LIBPOSTPROC_VERSION	ffmpeg/include/libpostproc/version.h	38;"	d
LIBPOSTPROC_VERSION_INT	ffmpeg/include/libpostproc/version.h	35;"	d
LIBPOSTPROC_VERSION_MAJOR	ffmpeg/include/libpostproc/version.h	31;"	d
LIBPOSTPROC_VERSION_MICRO	ffmpeg/include/libpostproc/version.h	33;"	d
LIBPOSTPROC_VERSION_MINOR	ffmpeg/include/libpostproc/version.h	32;"	d
LIBS	examples/makefile	/^LIBS=-pthread \\$/;"	m
LIBS	spice-common/common/makefile	/^LIBS= -lglib-2.0 -lgio-2.0 -lgmodule-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lgobject-2.0 -lglib-2.0 \\$/;"	m
LIBS	win32/makefile	/^LIBS=-lglib-2.0 -lgio-2.0 -lgmodule-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lgobject-2.0 -lglib-2.0 \\$/;"	m
LIBSWRESAMPLE_BUILD	ffmpeg/include/libswresample/version.h	41;"	d
LIBSWRESAMPLE_IDENT	ffmpeg/include/libswresample/version.h	43;"	d
LIBSWRESAMPLE_VERSION	ffmpeg/include/libswresample/version.h	38;"	d
LIBSWRESAMPLE_VERSION_INT	ffmpeg/include/libswresample/version.h	35;"	d
LIBSWRESAMPLE_VERSION_MAJOR	ffmpeg/include/libswresample/version.h	31;"	d
LIBSWRESAMPLE_VERSION_MICRO	ffmpeg/include/libswresample/version.h	33;"	d
LIBSWRESAMPLE_VERSION_MINOR	ffmpeg/include/libswresample/version.h	32;"	d
LIBSWSCALE_BUILD	ffmpeg/include/libswscale/version.h	39;"	d
LIBSWSCALE_IDENT	ffmpeg/include/libswscale/version.h	41;"	d
LIBSWSCALE_VERSION	ffmpeg/include/libswscale/version.h	36;"	d
LIBSWSCALE_VERSION_INT	ffmpeg/include/libswscale/version.h	33;"	d
LIBSWSCALE_VERSION_MAJOR	ffmpeg/include/libswscale/version.h	29;"	d
LIBSWSCALE_VERSION_MICRO	ffmpeg/include/libswscale/version.h	31;"	d
LIBSWSCALE_VERSION_MINOR	ffmpeg/include/libswscale/version.h	30;"	d
LIB_DEFINE_FLAG	win32/makefile	/^LIB_DEFINE_FLAG=$/;"	m
LIB_PATH	examples/makefile	/^LIB_PATH=-L..\/glib \\$/;"	m
LIB_PATH	glib/makefile	/^LIB_PATH=-L\/lib \\$/;"	m
LIB_PATH	spice-common/common/makefile	/^LIB_PATH=$/;"	m
LIB_PATH	win32/makefile	/^LIB_PATH=-L..\/glib \\$/;"	m
LIMIT_OFFSET	spice-common/common/lz.c	426;"	d	file:
LINES_H	spice-common/common/lines.h	50;"	d
LONG	win32/create_bmp.h	/^typedef long LONG;$/;"	t
LT_OBJDIR	config.h	115;"	d
LT_OBJDIR	glib/config.h	117;"	d
LT_OBJDIR	make/config.h	115;"	d
LT_OBJDIR	make/configcommon.h	111;"	d
LT_OBJDIR	make/configglib.h	117;"	d
LT_OBJDIR	make/configwin32.h	115;"	d
LT_OBJDIR	make/wconfig.h	115;"	d
LT_OBJDIR	make/wconfigcommon.h	111;"	d
LT_OBJDIR	make/wconfigglib.h	115;"	d
LT_OBJDIR	make/wconfigwin32.h	115;"	d
LT_OBJDIR	spice-common/config.h	111;"	d
LT_OBJDIR	win32/config.h	115;"	d
LZ_A8	spice-common/common/lz.c	468;"	d	file:
LZ_A8	spice-common/common/lz.c	470;"	d	file:
LZ_A8	spice-common/common/lz.c	472;"	d	file:
LZ_A8	spice-common/common/lz_compress_tmpl.c	544;"	d	file:
LZ_A8	spice-common/common/lz_decompress_tmpl.c	337;"	d	file:
LZ_EXPECT_CONDITIONAL	glib/decode-glz.c	196;"	d	file:
LZ_EXPECT_CONDITIONAL	glib/decode-glz.c	199;"	d	file:
LZ_EXPECT_CONDITIONAL	glib/decode-glz.c	286;"	d	file:
LZ_EXPECT_CONDITIONAL	spice-common/common/lz.c	377;"	d	file:
LZ_EXPECT_CONDITIONAL	spice-common/common/lz.c	380;"	d	file:
LZ_EXPECT_CONDITIONAL	spice-common/common/lz.c	501;"	d	file:
LZ_IMAGE_TYPE_A8	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_A8$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_INVALID	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_INVALID,$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_LOG	spice-common/common/lz_common.h	53;"	d
LZ_IMAGE_TYPE_MASK	spice-common/common/lz_common.h	52;"	d
LZ_IMAGE_TYPE_PLT1_BE	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_PLT1_BE,      \/\/ PLT stands for palette$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_PLT1_LE	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_PLT1_LE,$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_PLT4_BE	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_PLT4_BE,$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_PLT4_LE	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_PLT4_LE,$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_PLT8	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_PLT8,$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_RGB16	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_RGB16,$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_RGB24	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_RGB24,$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_RGB32	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_RGB32,$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_RGBA	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_RGBA,$/;"	e	enum:__anon146
LZ_IMAGE_TYPE_XXXA	spice-common/common/lz_common.h	/^    LZ_IMAGE_TYPE_XXXA,$/;"	e	enum:__anon146
LZ_MAGIC	spice-common/common/lz_common.h	66;"	d
LZ_MAX_WINDOW_SIZE	spice-common/common/lz_common.h	34;"	d
LZ_PLT	glib/decode-glz-tmpl.c	322;"	d	file:
LZ_PLT	glib/decode-glz.c	241;"	d	file:
LZ_PLT	glib/decode-glz.c	244;"	d	file:
LZ_PLT	glib/decode-glz.c	249;"	d	file:
LZ_PLT	glib/decode-glz.c	254;"	d	file:
LZ_PLT	glib/decode-glz.c	259;"	d	file:
LZ_PLT	glib/decode-glz.c	264;"	d	file:
LZ_PLT	spice-common/common/lz.c	438;"	d	file:
LZ_PLT	spice-common/common/lz.c	440;"	d	file:
LZ_PLT	spice-common/common/lz.c	443;"	d	file:
LZ_PLT	spice-common/common/lz.c	448;"	d	file:
LZ_PLT	spice-common/common/lz.c	453;"	d	file:
LZ_PLT	spice-common/common/lz.c	458;"	d	file:
LZ_PLT	spice-common/common/lz.c	463;"	d	file:
LZ_PLT	spice-common/common/lz_compress_tmpl.c	539;"	d	file:
LZ_PLT	spice-common/common/lz_decompress_tmpl.c	328;"	d	file:
LZ_READU16	spice-common/common/lz_compress_tmpl.c	531;"	d	file:
LZ_RGB16	glib/decode-glz-tmpl.c	328;"	d	file:
LZ_RGB16	glib/decode-glz.c	270;"	d	file:
LZ_RGB16	glib/decode-glz.c	272;"	d	file:
LZ_RGB16	spice-common/common/lz.c	476;"	d	file:
LZ_RGB16	spice-common/common/lz.c	478;"	d	file:
LZ_RGB16	spice-common/common/lz.c	480;"	d	file:
LZ_RGB16	spice-common/common/lz_compress_tmpl.c	541;"	d	file:
LZ_RGB16	spice-common/common/lz_decompress_tmpl.c	334;"	d	file:
LZ_RGB24	glib/decode-glz-tmpl.c	329;"	d	file:
LZ_RGB24	glib/decode-glz.c	276;"	d	file:
LZ_RGB24	spice-common/common/lz.c	484;"	d	file:
LZ_RGB24	spice-common/common/lz.c	486;"	d	file:
LZ_RGB24	spice-common/common/lz_compress_tmpl.c	542;"	d	file:
LZ_RGB24	spice-common/common/lz_decompress_tmpl.c	335;"	d	file:
LZ_RGB32	glib/decode-glz-tmpl.c	330;"	d	file:
LZ_RGB32	glib/decode-glz.c	279;"	d	file:
LZ_RGB32	spice-common/common/lz.c	490;"	d	file:
LZ_RGB32	spice-common/common/lz.c	492;"	d	file:
LZ_RGB32	spice-common/common/lz_compress_tmpl.c	543;"	d	file:
LZ_RGB32	spice-common/common/lz_decompress_tmpl.c	336;"	d	file:
LZ_RGB_ALPHA	glib/decode-glz-tmpl.c	331;"	d	file:
LZ_RGB_ALPHA	glib/decode-glz.c	282;"	d	file:
LZ_RGB_ALPHA	spice-common/common/lz.c	495;"	d	file:
LZ_RGB_ALPHA	spice-common/common/lz.c	497;"	d	file:
LZ_RGB_ALPHA	spice-common/common/lz_compress_tmpl.c	540;"	d	file:
LZ_RGB_ALPHA	spice-common/common/lz_decompress_tmpl.c	338;"	d	file:
LZ_UNEXPECT_CONDITIONAL	glib/decode-glz.c	197;"	d	file:
LZ_UNEXPECT_CONDITIONAL	glib/decode-glz.c	200;"	d	file:
LZ_UNEXPECT_CONDITIONAL	glib/decode-glz.c	285;"	d	file:
LZ_UNEXPECT_CONDITIONAL	spice-common/common/lz.c	378;"	d	file:
LZ_UNEXPECT_CONDITIONAL	spice-common/common/lz.c	381;"	d	file:
LZ_UNEXPECT_CONDITIONAL	spice-common/common/lz.c	500;"	d	file:
LZ_VERSION	spice-common/common/lz_common.h	69;"	d
LZ_VERSION_MAJOR	spice-common/common/lz_common.h	67;"	d
LZ_VERSION_MINOR	spice-common/common/lz_common.h	68;"	d
LcxSpiceChannelEvent	win32/win32_spice_interface_types.h	/^} LcxSpiceChannelEvent; $/;"	t	typeref:enum:__anon48
LineDash	spice-common/common/glc.c	/^typedef struct LineDash {$/;"	s	file:
LineDash	spice-common/common/glc.c	/^} LineDash;$/;"	t	typeref:struct:LineDash	file:
LineDoubleDash	spice-common/common/lines.h	95;"	d
LineFacePtr	spice-common/common/lines.c	/^} LineFaceRec, *LineFacePtr;$/;"	t	typeref:struct:_LineFace	file:
LineFaceRec	spice-common/common/lines.c	/^} LineFaceRec, *LineFacePtr;$/;"	t	typeref:struct:_LineFace	file:
LineOnOffDash	spice-common/common/lines.h	94;"	d
LineSolid	spice-common/common/lines.h	93;"	d
LzContext	spice-common/common/lz.h	/^typedef void *LzContext;$/;"	t
LzData	spice-common/common/canvas_base.c	/^typedef struct LzData {$/;"	s	file:
LzData	spice-common/common/canvas_base.c	/^} LzData;$/;"	t	typeref:struct:LzData	file:
LzDecodeUsrData	spice-common/common/canvas_utils.h	/^typedef struct LzDecodeUsrData {$/;"	s
LzDecodeUsrData	spice-common/common/canvas_utils.h	/^} LzDecodeUsrData;$/;"	t	typeref:struct:LzDecodeUsrData
LzImageSegment	spice-common/common/lz.c	/^struct LzImageSegment {$/;"	s	file:
LzImageSegment	spice-common/common/lz.c	/^typedef struct LzImageSegment LzImageSegment;$/;"	t	typeref:struct:LzImageSegment	file:
LzImageType	spice-common/common/lz_common.h	/^} LzImageType;$/;"	t	typeref:enum:__anon146
LzUsrContext	spice-common/common/lz.h	/^struct LzUsrContext {$/;"	s
LzUsrContext	spice-common/common/lz.h	/^typedef struct LzUsrContext LzUsrContext;$/;"	t	typeref:struct:LzUsrContext
MALLOC_ERROR	spice-common/common/mem.c	30;"	d	file:
MAP_ANONYMOUS	glib/coroutine_ucontext.c	35;"	d	file:
MARSHALLER_BUFFER_SIZE	spice-common/common/marshaller.c	56;"	d	file:
MASK	spice-common/common/canvas_base.c	3322;"	d	file:
MAX	spice-common/spice-protocol/spice/macros.h	112;"	d
MAX	spice-common/spice-protocol/spice/macros.h	113;"	d
MAXNUMCODES	spice-common/common/quic.c	46;"	d	file:
MAX_ATR_LEN	glib/channel-smartcard.c	388;"	d	file:
MAX_CHANNELS	spice-common/common/quic.c	126;"	d	file:
MAX_COORDINATE	spice-common/common/lines.c	79;"	d	file:
MAX_COPY	spice-common/common/lz.c	423;"	d	file:
MAX_COPY	spice-common/common/lz_common.h	35;"	d
MAX_DISPLAY	glib/channel-main.c	53;"	d	file:
MAX_DISTANCE	spice-common/common/lz.c	434;"	d	file:
MAX_FARDISTANCE	spice-common/common/lz.c	435;"	d	file:
MAX_GLZ_WINDOW_SIZE_DEFAULT	glib/spice-session-priv.h	42;"	d
MAX_LEN	spice-common/common/lz.c	424;"	d	file:
MAX_MAIN_LOOP	win32/win32_spice_interface_priv.h	11;"	d
MAX_MUX_SIZE	glib/channel-webdav.c	252;"	d	file:
MAX_PROBE_PACKETS	ffmpeg/include/libavformat/avformat.h	1018;"	d
MAX_REORDER_DELAY	ffmpeg/include/libavformat/avformat.h	1035;"	d
MAX_SPICE_CONNECT	win32/win32_spice_interface_priv.h	12;"	d
MAX_SPICE_DATA_HEADER_SIZE	glib/spice-channel-priv.h	43;"	d
MAX_STD_TIMEBASES	ffmpeg/include/libavformat/avformat.h	971;"	d
MAXevol	spice-common/common/quic.c	51;"	d	file:
MAXwminext	spice-common/common/quic.c	66;"	d	file:
MB_TYPE_16x16	ffmpeg/include/libavcodec/avcodec.h	1143;"	d
MB_TYPE_16x8	ffmpeg/include/libavcodec/avcodec.h	1144;"	d
MB_TYPE_8x16	ffmpeg/include/libavcodec/avcodec.h	1145;"	d
MB_TYPE_8x8	ffmpeg/include/libavcodec/avcodec.h	1146;"	d
MB_TYPE_ACPRED	ffmpeg/include/libavcodec/avcodec.h	1149;"	d
MB_TYPE_CBP	ffmpeg/include/libavcodec/avcodec.h	1160;"	d
MB_TYPE_DIRECT2	ffmpeg/include/libavcodec/avcodec.h	1148;"	d
MB_TYPE_GMC	ffmpeg/include/libavcodec/avcodec.h	1150;"	d
MB_TYPE_INTERLACED	ffmpeg/include/libavcodec/avcodec.h	1147;"	d
MB_TYPE_INTRA16x16	ffmpeg/include/libavcodec/avcodec.h	1141;"	d
MB_TYPE_INTRA4x4	ffmpeg/include/libavcodec/avcodec.h	1140;"	d
MB_TYPE_INTRA_PCM	ffmpeg/include/libavcodec/avcodec.h	1142;"	d
MB_TYPE_L0	ffmpeg/include/libavcodec/avcodec.h	1156;"	d
MB_TYPE_L0L1	ffmpeg/include/libavcodec/avcodec.h	1158;"	d
MB_TYPE_L1	ffmpeg/include/libavcodec/avcodec.h	1157;"	d
MB_TYPE_P0L0	ffmpeg/include/libavcodec/avcodec.h	1152;"	d
MB_TYPE_P0L1	ffmpeg/include/libavcodec/avcodec.h	1154;"	d
MB_TYPE_P1L0	ffmpeg/include/libavcodec/avcodec.h	1153;"	d
MB_TYPE_P1L1	ffmpeg/include/libavcodec/avcodec.h	1155;"	d
MB_TYPE_QUANT	ffmpeg/include/libavcodec/avcodec.h	1159;"	d
MB_TYPE_SKIP	ffmpeg/include/libavcodec/avcodec.h	1151;"	d
MELCSTATES	spice-common/common/quic.c	538;"	d	file:
MEMCLEAR	spice-common/common/quic_config.h	29;"	d
ME_EPZS	ffmpeg/include/libavcodec/avcodec.h	/^    ME_EPZS,        \/\/\/< enhanced predictive zonal search$/;"	e	enum:Motion_Est_ID
ME_FULL	ffmpeg/include/libavcodec/avcodec.h	/^    ME_FULL,$/;"	e	enum:Motion_Est_ID
ME_HEX	ffmpeg/include/libavcodec/avcodec.h	/^    ME_HEX,         \/\/\/< hexagon based search$/;"	e	enum:Motion_Est_ID
ME_ITER	ffmpeg/include/libavcodec/avcodec.h	/^    ME_ITER=50,     \/\/\/< iterative search$/;"	e	enum:Motion_Est_ID
ME_LOG	ffmpeg/include/libavcodec/avcodec.h	/^    ME_LOG,$/;"	e	enum:Motion_Est_ID
ME_PHODS	ffmpeg/include/libavcodec/avcodec.h	/^    ME_PHODS,$/;"	e	enum:Motion_Est_ID
ME_TESA	ffmpeg/include/libavcodec/avcodec.h	/^    ME_TESA,        \/\/\/< transformed exhaustive search algorithm$/;"	e	enum:Motion_Est_ID
ME_UMH	ffmpeg/include/libavcodec/avcodec.h	/^    ME_UMH,         \/\/\/< uneven multi-hexagon search$/;"	e	enum:Motion_Est_ID
ME_X1	ffmpeg/include/libavcodec/avcodec.h	/^    ME_X1,          \/\/\/< reserved for experiments$/;"	e	enum:Motion_Est_ID
ME_ZERO	ffmpeg/include/libavcodec/avcodec.h	/^    ME_ZERO = 1,    \/\/\/< no search, that is use 0,0 vector whenever one is needed$/;"	e	enum:Motion_Est_ID
MIN	spice-common/spice-protocol/spice/macros.h	115;"	d
MIN	spice-common/spice-protocol/spice/macros.h	116;"	d
MIN_COORDINATE	spice-common/common/lines.c	80;"	d	file:
MIN_FILE_SIZE	spice-common/common/lz.c	427;"	d	file:
MIN_GLZ_WINDOW_SIZE_DEFAULT	glib/spice-session-priv.h	41;"	d
MINevol	spice-common/common/quic.c	50;"	d	file:
MINwminext	spice-common/common/quic.c	65;"	d	file:
MINwmistart	spice-common/common/quic.c	55;"	d	file:
MIOUTCODES	spice-common/common/lines.c	196;"	d	file:
MIPOLYRELOADLEFT	spice-common/common/lines.c	328;"	d	file:
MIPOLYRELOADRIGHT	spice-common/common/lines.c	340;"	d	file:
MIPOLYSTEPLEFT	spice-common/common/lines.c	352;"	d	file:
MIPOLYSTEPRIGHT	spice-common/common/lines.c	360;"	d	file:
MI_OUTPUT_POINT	spice-common/common/lines.c	1436;"	d	file:
MKBETAG	ffmpeg/include/libavutil/common.h	316;"	d
MKTAG	ffmpeg/include/libavutil/common.h	315;"	d
MM_TIME_DIFF_RESET_THRESH	glib/spice-session.c	2102;"	d	file:
MONITORID_MAX	win32/win32-spicy.h	73;"	d
MONITORS_MAX	glib/channel-display.c	66;"	d	file:
MORE_X	spice-common/common/glc.c	272;"	d	file:
MUTEX_INIT	spice-common/common/mutex.h	29;"	d
MUTEX_LOCK	spice-common/common/mutex.h	30;"	d
MUTEX_UNLOCK	spice-common/common/mutex.h	31;"	d
M_E	ffmpeg/include/libavutil/mathematics.h	31;"	d
M_LN10	ffmpeg/include/libavutil/mathematics.h	37;"	d
M_LN2	ffmpeg/include/libavutil/mathematics.h	34;"	d
M_LOG2_10	ffmpeg/include/libavutil/mathematics.h	40;"	d
M_PHI	ffmpeg/include/libavutil/mathematics.h	43;"	d
M_PI	ffmpeg/include/libavutil/mathematics.h	46;"	d
M_PI_2	ffmpeg/include/libavutil/mathematics.h	49;"	d
M_SQRT1_2	ffmpeg/include/libavutil/mathematics.h	52;"	d
M_SQRT2	ffmpeg/include/libavutil/mathematics.h	55;"	d
MainloopList	win32/win32_spice_interface_priv.h	/^   struct main_loop_context* MainloopList[MAX_MAIN_LOOP];$/;"	m	struct:Win32SpiceGloabInfo	typeref:struct:Win32SpiceGloabInfo::main_loop_context
MarshallerBuffer	spice-common/common/marshaller.c	/^struct MarshallerBuffer {$/;"	s	file:
MarshallerBuffer	spice-common/common/marshaller.c	/^typedef struct MarshallerBuffer MarshallerBuffer;$/;"	t	typeref:struct:MarshallerBuffer	file:
MarshallerItem	spice-common/common/marshaller.c	/^} MarshallerItem;$/;"	t	typeref:struct:__anon135	file:
MarshallerRef	spice-common/common/marshaller.c	/^} MarshallerRef;$/;"	t	typeref:struct:__anon136	file:
MarshallingSource	spice-common/python_modules/marshal.py	/^class MarshallingSource:$/;"	c
Member	spice-common/python_modules/ptypes.py	/^class Member(Containee):$/;"	c
MemberItemInfo	spice-common/python_modules/demarshal.py	/^class MemberItemInfo(ItemInfo):$/;"	c
MessageType	spice-common/python_modules/ptypes.py	/^class MessageType(ContainerType):$/;"	c
Motion_Est_ID	ffmpeg/include/libavcodec/avcodec.h	/^enum Motion_Est_ID {$/;"	g
NAME	glib/channel-main.c	205;"	d	file:
NAN	ffmpeg/include/libavutil/mathematics.h	58;"	d
NDEBUG	win32/win32_spice_interface.c	9;"	d	file:
NEWLINE_TYPE_CR_LF	glib/spice-util.c	/^    NEWLINE_TYPE_CR_LF$/;"	e	enum:__anon24	file:
NEWLINE_TYPE_LF	glib/spice-util.c	/^    NEWLINE_TYPE_LF,$/;"	e	enum:__anon24	file:
NEXT_LINE	spice-common/common/quic.c	1227;"	d	file:
N_STATIC_ITEMS	spice-common/common/marshaller.c	64;"	d	file:
NewlineType	glib/spice-util.c	/^} NewlineType;$/;"	t	typeref:enum:__anon24	file:
NextBand	spice-common/common/lines.c	3491;"	d	file:
NoBlock	spice-common/python_modules/codegen.py	/^    class NoBlock:$/;"	c	class:CodeWriter
OBJS	examples/makefile	/^OBJS=test_bmp.o $/;"	m
OBJS	glib/makefile	/^OBJS:=bio-gio.o glib-compat.o spice-audio.o spice-util.o spice-option.o spice-client.o spice-session.o spice-channel.o gio-coroutine.o channel-base.o channel-webdav.o channel-cursor.o channel-display.o channel-display-mjpeg.o channel-display-h264.o h264_decoder.o channel-inputs.o channel-main.o channel-playback.o channel-port.o channel-record.o channel-smartcard.o channel-usbredir.o smartcard-manager.o spice-uri.o usb-device-manager.o usbutil.o vmcstream.o decode-glz.o decode-jpeg.o decode-zlib.o client_sw_canvas.o wocky-http-proxy.o spice-pulse.o continuation.o coroutine_ucontext.o spice-glib-enums.o spice-marshal.o spice-gstaudio.o$/;"	m
OBJS	spice-common/common/makefile	/^OBJS=generated_server_marshallers.o   mem.o backtrace.o generated_server_demarshallers.o \\$/;"	m
OBJS	win32/makefile	/^OBJS= win32-spicy.o spice-cmdline.o spice-widget-enums.o win32_service.o virt-viewer-file.o virt-viewer-util.o \\$/;"	m
OCTANT1	spice-common/common/lines.c	140;"	d	file:
OCTANT2	spice-common/common/lines.c	141;"	d	file:
OCTANT3	spice-common/common/lines.c	142;"	d	file:
OCTANT4	spice-common/common/lines.c	143;"	d	file:
OCTANT5	spice-common/common/lines.c	144;"	d	file:
OCTANT6	spice-common/common/lines.c	145;"	d	file:
OCTANT7	spice-common/common/lines.c	146;"	d	file:
OCTANT8	spice-common/common/lines.c	147;"	d	file:
OGLCTX_TYPE_PBUF	spice-common/common/ogl_ctx.c	/^    OGLCTX_TYPE_PBUF,$/;"	e	enum:__anon124	file:
OGLCTX_TYPE_PIXMAP	spice-common/common/ogl_ctx.c	/^    OGLCTX_TYPE_PIXMAP,$/;"	e	enum:__anon124	file:
OGLCtx	spice-common/common/ogl_ctx.c	/^struct OGLCtx {$/;"	s	file:
OGLCtx	spice-common/common/ogl_ctx.h	/^typedef struct OGLCtx OGLCtx;$/;"	t	typeref:struct:OGLCtx
OGLPixmapCtx	spice-common/common/ogl_ctx.c	/^typedef struct OGLPixmapCtx {$/;"	s	file:
OGLPixmapCtx	spice-common/common/ogl_ctx.c	/^} OGLPixmapCtx;$/;"	t	typeref:struct:OGLPixmapCtx	file:
ONE_BYTE	spice-common/common/quic.c	816;"	d	file:
ONE_BYTE	spice-common/common/quic_tmpl.c	23;"	d	file:
OUT	win32/win32_spice_interface_types.h	26;"	d
OUTCODES	spice-common/common/lines.c	190;"	d	file:
OUT_ABOVE	spice-common/common/lines.c	187;"	d	file:
OUT_BELOW	spice-common/common/lines.c	188;"	d	file:
OUT_LEFT	spice-common/common/lines.c	185;"	d	file:
OUT_PIXEL	glib/decode-glz-tmpl.c	126;"	d	file:
OUT_PIXEL	glib/decode-glz-tmpl.c	130;"	d	file:
OUT_PIXEL	glib/decode-glz-tmpl.c	144;"	d	file:
OUT_PIXEL	glib/decode-glz-tmpl.c	155;"	d	file:
OUT_PIXEL	glib/decode-glz-tmpl.c	167;"	d	file:
OUT_PIXEL	glib/decode-glz-tmpl.c	333;"	d	file:
OUT_PIXEL	glib/decode-glz-tmpl.c	46;"	d	file:
OUT_PIXEL	glib/decode-glz-tmpl.c	50;"	d	file:
OUT_PIXEL	spice-common/common/lz_decompress_tmpl.c	161;"	d	file:
OUT_PIXEL	spice-common/common/lz_decompress_tmpl.c	165;"	d	file:
OUT_PIXEL	spice-common/common/lz_decompress_tmpl.c	177;"	d	file:
OUT_PIXEL	spice-common/common/lz_decompress_tmpl.c	181;"	d	file:
OUT_PIXEL	spice-common/common/lz_decompress_tmpl.c	197;"	d	file:
OUT_PIXEL	spice-common/common/lz_decompress_tmpl.c	203;"	d	file:
OUT_PIXEL	spice-common/common/lz_decompress_tmpl.c	215;"	d	file:
OUT_PIXEL	spice-common/common/lz_decompress_tmpl.c	340;"	d	file:
OUT_PIXEL	spice-common/common/lz_decompress_tmpl.c	78;"	d	file:
OUT_PIXEL	spice-common/common/lz_decompress_tmpl.c	82;"	d	file:
OUT_RIGHT	spice-common/common/lines.c	186;"	d	file:
OldRedMigrationBegin	glib/channel-main.c	/^typedef struct __attribute__ ((__packed__)) OldRedMigrationBegin {$/;"	s	file:
OldRedMigrationBegin	glib/channel-main.c	/^} OldRedMigrationBegin;$/;"	t	typeref:struct:OldRedMigrationBegin	file:
OutputQueue	glib/channel-webdav.c	/^typedef struct _OutputQueue OutputQueue;$/;"	t	typeref:struct:_OutputQueue	file:
OutputQueueElem	glib/channel-webdav.c	/^} OutputQueueElem;$/;"	t	typeref:struct:_OutputQueueElem	file:
P	glib/spice-util.c	412;"	d	file:
P	glib/spice-util.c	416;"	d	file:
PACKAGE	config.h	118;"	d
PACKAGE	glib/config.h	120;"	d
PACKAGE	make/config.h	118;"	d
PACKAGE	make/configcommon.h	114;"	d
PACKAGE	make/configglib.h	120;"	d
PACKAGE	make/configprotocol.h	5;"	d
PACKAGE	make/configwin32.h	118;"	d
PACKAGE	make/wconfig.h	118;"	d
PACKAGE	make/wconfigcommon.h	114;"	d
PACKAGE	make/wconfigglib.h	118;"	d
PACKAGE	make/wconfigprotocol.h	5;"	d
PACKAGE	make/wconfigwin32.h	118;"	d
PACKAGE	spice-common/config.h	114;"	d
PACKAGE	spice-common/spice-protocol/config.h	5;"	d
PACKAGE	win32/config.h	118;"	d
PACKAGE_BUGREPORT	config.h	121;"	d
PACKAGE_BUGREPORT	glib/config.h	123;"	d
PACKAGE_BUGREPORT	make/config.h	121;"	d
PACKAGE_BUGREPORT	make/configcommon.h	117;"	d
PACKAGE_BUGREPORT	make/configglib.h	123;"	d
PACKAGE_BUGREPORT	make/configprotocol.h	8;"	d
PACKAGE_BUGREPORT	make/configwin32.h	121;"	d
PACKAGE_BUGREPORT	make/wconfig.h	121;"	d
PACKAGE_BUGREPORT	make/wconfigcommon.h	117;"	d
PACKAGE_BUGREPORT	make/wconfigglib.h	121;"	d
PACKAGE_BUGREPORT	make/wconfigprotocol.h	8;"	d
PACKAGE_BUGREPORT	make/wconfigwin32.h	121;"	d
PACKAGE_BUGREPORT	spice-common/config.h	117;"	d
PACKAGE_BUGREPORT	spice-common/spice-protocol/config.h	8;"	d
PACKAGE_BUGREPORT	win32/config.h	121;"	d
PACKAGE_NAME	config.h	124;"	d
PACKAGE_NAME	glib/config.h	126;"	d
PACKAGE_NAME	make/config.h	124;"	d
PACKAGE_NAME	make/configcommon.h	120;"	d
PACKAGE_NAME	make/configglib.h	126;"	d
PACKAGE_NAME	make/configprotocol.h	11;"	d
PACKAGE_NAME	make/configwin32.h	124;"	d
PACKAGE_NAME	make/wconfig.h	124;"	d
PACKAGE_NAME	make/wconfigcommon.h	120;"	d
PACKAGE_NAME	make/wconfigglib.h	124;"	d
PACKAGE_NAME	make/wconfigprotocol.h	11;"	d
PACKAGE_NAME	make/wconfigwin32.h	124;"	d
PACKAGE_NAME	spice-common/config.h	120;"	d
PACKAGE_NAME	spice-common/spice-protocol/config.h	11;"	d
PACKAGE_NAME	win32/config.h	124;"	d
PACKAGE_STRING	config.h	127;"	d
PACKAGE_STRING	glib/config.h	129;"	d
PACKAGE_STRING	make/config.h	127;"	d
PACKAGE_STRING	make/configcommon.h	123;"	d
PACKAGE_STRING	make/configglib.h	129;"	d
PACKAGE_STRING	make/configprotocol.h	14;"	d
PACKAGE_STRING	make/configwin32.h	127;"	d
PACKAGE_STRING	make/wconfig.h	127;"	d
PACKAGE_STRING	make/wconfigcommon.h	123;"	d
PACKAGE_STRING	make/wconfigglib.h	127;"	d
PACKAGE_STRING	make/wconfigprotocol.h	14;"	d
PACKAGE_STRING	make/wconfigwin32.h	127;"	d
PACKAGE_STRING	spice-common/config.h	123;"	d
PACKAGE_STRING	spice-common/spice-protocol/config.h	14;"	d
PACKAGE_STRING	win32/config.h	127;"	d
PACKAGE_TARNAME	config.h	130;"	d
PACKAGE_TARNAME	glib/config.h	132;"	d
PACKAGE_TARNAME	make/config.h	130;"	d
PACKAGE_TARNAME	make/configcommon.h	126;"	d
PACKAGE_TARNAME	make/configglib.h	132;"	d
PACKAGE_TARNAME	make/configprotocol.h	17;"	d
PACKAGE_TARNAME	make/configwin32.h	130;"	d
PACKAGE_TARNAME	make/wconfig.h	130;"	d
PACKAGE_TARNAME	make/wconfigcommon.h	126;"	d
PACKAGE_TARNAME	make/wconfigglib.h	130;"	d
PACKAGE_TARNAME	make/wconfigprotocol.h	17;"	d
PACKAGE_TARNAME	make/wconfigwin32.h	130;"	d
PACKAGE_TARNAME	spice-common/config.h	126;"	d
PACKAGE_TARNAME	spice-common/spice-protocol/config.h	17;"	d
PACKAGE_TARNAME	win32/config.h	130;"	d
PACKAGE_URL	config.h	133;"	d
PACKAGE_URL	glib/config.h	135;"	d
PACKAGE_URL	make/config.h	133;"	d
PACKAGE_URL	make/configcommon.h	129;"	d
PACKAGE_URL	make/configglib.h	135;"	d
PACKAGE_URL	make/configprotocol.h	20;"	d
PACKAGE_URL	make/configwin32.h	133;"	d
PACKAGE_URL	make/wconfig.h	133;"	d
PACKAGE_URL	make/wconfigcommon.h	129;"	d
PACKAGE_URL	make/wconfigglib.h	133;"	d
PACKAGE_URL	make/wconfigprotocol.h	20;"	d
PACKAGE_URL	make/wconfigwin32.h	133;"	d
PACKAGE_URL	spice-common/config.h	129;"	d
PACKAGE_URL	spice-common/spice-protocol/config.h	20;"	d
PACKAGE_URL	win32/config.h	133;"	d
PACKAGE_VERSION	config.h	136;"	d
PACKAGE_VERSION	glib/config.h	138;"	d
PACKAGE_VERSION	make/config.h	136;"	d
PACKAGE_VERSION	make/configcommon.h	132;"	d
PACKAGE_VERSION	make/configglib.h	138;"	d
PACKAGE_VERSION	make/configprotocol.h	23;"	d
PACKAGE_VERSION	make/configwin32.h	136;"	d
PACKAGE_VERSION	make/wconfig.h	136;"	d
PACKAGE_VERSION	make/wconfigcommon.h	132;"	d
PACKAGE_VERSION	make/wconfigglib.h	136;"	d
PACKAGE_VERSION	make/wconfigprotocol.h	23;"	d
PACKAGE_VERSION	make/wconfigwin32.h	136;"	d
PACKAGE_VERSION	spice-common/config.h	132;"	d
PACKAGE_VERSION	spice-common/spice-protocol/config.h	23;"	d
PACKAGE_VERSION	win32/config.h	136;"	d
PARSER_FLAG_COMPLETE_FRAMES	ffmpeg/include/libavcodec/avcodec.h	4573;"	d
PARSER_FLAG_FETCHED_OFFSET	ffmpeg/include/libavcodec/avcodec.h	4576;"	d
PARSER_FLAG_ONCE	ffmpeg/include/libavcodec/avcodec.h	4574;"	d
PARSER_FLAG_USE_CODEC_TS	ffmpeg/include/libavcodec/avcodec.h	4577;"	d
PIXEL	spice-common/common/lz_compress_tmpl.c	106;"	d	file:
PIXEL	spice-common/common/lz_compress_tmpl.c	126;"	d	file:
PIXEL	spice-common/common/lz_compress_tmpl.c	132;"	d	file:
PIXEL	spice-common/common/lz_compress_tmpl.c	528;"	d	file:
PIXEL	spice-common/common/lz_compress_tmpl.c	60;"	d	file:
PIXEL	spice-common/common/lz_compress_tmpl.c	75;"	d	file:
PIXEL	spice-common/common/lz_compress_tmpl.c	91;"	d	file:
PIXEL	spice-common/common/quic_rgb_tmpl.c	24;"	d	file:
PIXEL	spice-common/common/quic_rgb_tmpl.c	45;"	d	file:
PIXEL	spice-common/common/quic_rgb_tmpl.c	66;"	d	file:
PIXEL	spice-common/common/quic_rgb_tmpl.c	729;"	d	file:
PIXEL	spice-common/common/quic_rgb_tmpl.c	87;"	d	file:
PIXEL	spice-common/common/quic_tmpl.c	25;"	d	file:
PIXEL	spice-common/common/quic_tmpl.c	31;"	d	file:
PIXEL	spice-common/common/quic_tmpl.c	37;"	d	file:
PIXEL	spice-common/common/quic_tmpl.c	621;"	d	file:
PIXEL_ID	spice-common/common/lz_compress_tmpl.c	163;"	d	file:
PIXEL_ID	spice-common/common/lz_compress_tmpl.c	527;"	d	file:
PIXMAN_DONT_DEFINE_STDINT	spice-common/common/pixman_utils.h	25;"	d
PIX_FMT_0BGR32	ffmpeg/include/libavutil/pixfmt.h	424;"	d
PIX_FMT_0RGB32	ffmpeg/include/libavutil/pixfmt.h	423;"	d
PIX_FMT_ALPHA	ffmpeg/include/libavutil/pixdesc.h	169;"	d
PIX_FMT_BE	ffmpeg/include/libavutil/pixdesc.h	162;"	d
PIX_FMT_BGR32	ffmpeg/include/libavutil/pixfmt.h	421;"	d
PIX_FMT_BGR32_1	ffmpeg/include/libavutil/pixfmt.h	422;"	d
PIX_FMT_BGR444	ffmpeg/include/libavutil/pixfmt.h	434;"	d
PIX_FMT_BGR48	ffmpeg/include/libavutil/pixfmt.h	431;"	d
PIX_FMT_BGR555	ffmpeg/include/libavutil/pixfmt.h	433;"	d
PIX_FMT_BGR565	ffmpeg/include/libavutil/pixfmt.h	432;"	d
PIX_FMT_BGRA64	ffmpeg/include/libavutil/pixfmt.h	453;"	d
PIX_FMT_BITSTREAM	ffmpeg/include/libavutil/pixdesc.h	164;"	d
PIX_FMT_GBR24P	ffmpeg/include/libavutil/pixfmt.h	415;"	d
PIX_FMT_GBRP10	ffmpeg/include/libavutil/pixfmt.h	455;"	d
PIX_FMT_GBRP12	ffmpeg/include/libavutil/pixfmt.h	456;"	d
PIX_FMT_GBRP14	ffmpeg/include/libavutil/pixfmt.h	457;"	d
PIX_FMT_GBRP16	ffmpeg/include/libavutil/pixfmt.h	458;"	d
PIX_FMT_GBRP9	ffmpeg/include/libavutil/pixfmt.h	454;"	d
PIX_FMT_GRAY16	ffmpeg/include/libavutil/pixfmt.h	426;"	d
PIX_FMT_HWACCEL	ffmpeg/include/libavutil/pixdesc.h	165;"	d
PIX_FMT_NE	ffmpeg/include/libavutil/pixfmt.h	417;"	d
PIX_FMT_PAL	ffmpeg/include/libavutil/pixdesc.h	163;"	d
PIX_FMT_PLANAR	ffmpeg/include/libavutil/pixdesc.h	166;"	d
PIX_FMT_PSEUDOPAL	ffmpeg/include/libavutil/pixdesc.h	168;"	d
PIX_FMT_RGB	ffmpeg/include/libavutil/pixdesc.h	167;"	d
PIX_FMT_RGB32	ffmpeg/include/libavutil/pixfmt.h	419;"	d
PIX_FMT_RGB32_1	ffmpeg/include/libavutil/pixfmt.h	420;"	d
PIX_FMT_RGB444	ffmpeg/include/libavutil/pixfmt.h	430;"	d
PIX_FMT_RGB48	ffmpeg/include/libavutil/pixfmt.h	427;"	d
PIX_FMT_RGB555	ffmpeg/include/libavutil/pixfmt.h	429;"	d
PIX_FMT_RGB565	ffmpeg/include/libavutil/pixfmt.h	428;"	d
PIX_FMT_RGBA64	ffmpeg/include/libavutil/pixfmt.h	452;"	d
PIX_FMT_Y400A	ffmpeg/include/libavutil/pixfmt.h	414;"	d
PIX_FMT_YUV420P10	ffmpeg/include/libavutil/pixfmt.h	439;"	d
PIX_FMT_YUV420P12	ffmpeg/include/libavutil/pixfmt.h	442;"	d
PIX_FMT_YUV420P14	ffmpeg/include/libavutil/pixfmt.h	445;"	d
PIX_FMT_YUV420P16	ffmpeg/include/libavutil/pixfmt.h	448;"	d
PIX_FMT_YUV420P9	ffmpeg/include/libavutil/pixfmt.h	436;"	d
PIX_FMT_YUV422P10	ffmpeg/include/libavutil/pixfmt.h	440;"	d
PIX_FMT_YUV422P12	ffmpeg/include/libavutil/pixfmt.h	443;"	d
PIX_FMT_YUV422P14	ffmpeg/include/libavutil/pixfmt.h	446;"	d
PIX_FMT_YUV422P16	ffmpeg/include/libavutil/pixfmt.h	449;"	d
PIX_FMT_YUV422P9	ffmpeg/include/libavutil/pixfmt.h	437;"	d
PIX_FMT_YUV444P10	ffmpeg/include/libavutil/pixfmt.h	441;"	d
PIX_FMT_YUV444P12	ffmpeg/include/libavutil/pixfmt.h	444;"	d
PIX_FMT_YUV444P14	ffmpeg/include/libavutil/pixfmt.h	447;"	d
PIX_FMT_YUV444P16	ffmpeg/include/libavutil/pixfmt.h	450;"	d
PIX_FMT_YUV444P9	ffmpeg/include/libavutil/pixfmt.h	438;"	d
PLT1_BE	glib/decode-glz-tmpl.c	326;"	d	file:
PLT1_BE	glib/decode-glz.c	260;"	d	file:
PLT1_BE	spice-common/common/lz.c	459;"	d	file:
PLT1_BE	spice-common/common/lz_decompress_tmpl.c	332;"	d	file:
PLT1_LE	glib/decode-glz-tmpl.c	327;"	d	file:
PLT1_LE	glib/decode-glz.c	265;"	d	file:
PLT1_LE	spice-common/common/lz.c	464;"	d	file:
PLT1_LE	spice-common/common/lz_decompress_tmpl.c	333;"	d	file:
PLT4_BE	glib/decode-glz-tmpl.c	324;"	d	file:
PLT4_BE	glib/decode-glz.c	250;"	d	file:
PLT4_BE	spice-common/common/lz.c	449;"	d	file:
PLT4_BE	spice-common/common/lz_decompress_tmpl.c	330;"	d	file:
PLT4_LE	glib/decode-glz-tmpl.c	325;"	d	file:
PLT4_LE	glib/decode-glz.c	255;"	d	file:
PLT4_LE	spice-common/common/lz.c	454;"	d	file:
PLT4_LE	spice-common/common/lz_decompress_tmpl.c	331;"	d	file:
PLT8	glib/decode-glz-tmpl.c	323;"	d	file:
PLT8	glib/decode-glz.c	245;"	d	file:
PLT8	spice-common/common/lz.c	444;"	d	file:
PLT8	spice-common/common/lz_decompress_tmpl.c	329;"	d	file:
PLT_PIXELS_PER_BYTE	spice-common/common/lz_common.h	/^static const int PLT_PIXELS_PER_BYTE[] = {0, 8, 8, 2, 2, 1};$/;"	v
POSTPROC_POSTPROCESS_H	ffmpeg/include/libpostproc/postprocess.h	22;"	d
POSTPROC_POSTPROCESS_VERSION_H	ffmpeg/include/libpostproc/version.h	22;"	d
PP_CPU_CAPS_3DNOW	ffmpeg/include/libpostproc/postprocess.h	90;"	d
PP_CPU_CAPS_ALTIVEC	ffmpeg/include/libpostproc/postprocess.h	91;"	d
PP_CPU_CAPS_AUTO	ffmpeg/include/libpostproc/postprocess.h	92;"	d
PP_CPU_CAPS_MMX	ffmpeg/include/libpostproc/postprocess.h	88;"	d
PP_CPU_CAPS_MMX2	ffmpeg/include/libpostproc/postprocess.h	89;"	d
PP_FORMAT	ffmpeg/include/libpostproc/postprocess.h	94;"	d
PP_FORMAT_411	ffmpeg/include/libpostproc/postprocess.h	97;"	d
PP_FORMAT_420	ffmpeg/include/libpostproc/postprocess.h	95;"	d
PP_FORMAT_422	ffmpeg/include/libpostproc/postprocess.h	96;"	d
PP_FORMAT_440	ffmpeg/include/libpostproc/postprocess.h	99;"	d
PP_FORMAT_444	ffmpeg/include/libpostproc/postprocess.h	98;"	d
PP_PICT_TYPE_QP2	ffmpeg/include/libpostproc/postprocess.h	101;"	d
PP_QUALITY_MAX	ffmpeg/include/libpostproc/postprocess.h	52;"	d
PRED_1	spice-common/common/quic.c	32;"	d	file:
PRODUCT_NAME_LEN	glib/usbutil.c	44;"	d	file:
PROP_0	glib/spice-channel.c	/^    PROP_0,$/;"	e	enum:__anon25	file:
PROP_0	glib/spice-session.c	/^    PROP_0,$/;"	e	enum:__anon2	file:
PROP_0	glib/usb-device-manager.c	/^    PROP_0,$/;"	e	enum:__anon13	file:
PROP_AUDIO	glib/spice-session.c	/^    PROP_AUDIO,$/;"	e	enum:__anon2	file:
PROP_AUTO_CONNECT	glib/usb-device-manager.c	/^    PROP_AUTO_CONNECT,$/;"	e	enum:__anon13	file:
PROP_AUTO_CONNECT_FILTER	glib/usb-device-manager.c	/^    PROP_AUTO_CONNECT_FILTER,$/;"	e	enum:__anon13	file:
PROP_CA	glib/spice-session.c	/^    PROP_CA,$/;"	e	enum:__anon2	file:
PROP_CA	win32/virt-viewer-file.c	/^    PROP_CA,$/;"	e	enum:__anon53	file:
PROP_CACHE_SIZE	glib/spice-session.c	/^    PROP_CACHE_SIZE,$/;"	e	enum:__anon2	file:
PROP_CA_FILE	glib/spice-session.c	/^    PROP_CA_FILE,$/;"	e	enum:__anon2	file:
PROP_CERT_SUBJECT	glib/spice-session.c	/^    PROP_CERT_SUBJECT,$/;"	e	enum:__anon2	file:
PROP_CHANNEL_ID	glib/spice-channel.c	/^    PROP_CHANNEL_ID,$/;"	e	enum:__anon25	file:
PROP_CHANNEL_TYPE	glib/spice-channel.c	/^    PROP_CHANNEL_TYPE,$/;"	e	enum:__anon25	file:
PROP_CIPHERS	glib/spice-session.c	/^    PROP_CIPHERS,$/;"	e	enum:__anon2	file:
PROP_CLIENT_SOCKETS	glib/spice-session.c	/^    PROP_CLIENT_SOCKETS,$/;"	e	enum:__anon2	file:
PROP_COLOR_DEPTH	glib/spice-session.c	/^    PROP_COLOR_DEPTH,$/;"	e	enum:__anon2	file:
PROP_COLOR_DEPTH	win32/virt-viewer-file.c	/^    PROP_COLOR_DEPTH,$/;"	e	enum:__anon53	file:
PROP_DELETE_THIS_FILE	win32/virt-viewer-file.c	/^    PROP_DELETE_THIS_FILE,$/;"	e	enum:__anon53	file:
PROP_DISABLE_CHANNELS	win32/virt-viewer-file.c	/^    PROP_DISABLE_CHANNELS,$/;"	e	enum:__anon53	file:
PROP_DISABLE_EFFECTS	glib/spice-session.c	/^    PROP_DISABLE_EFFECTS,$/;"	e	enum:__anon2	file:
PROP_DISABLE_EFFECTS	win32/virt-viewer-file.c	/^    PROP_DISABLE_EFFECTS,$/;"	e	enum:__anon53	file:
PROP_DUMMY_PROPERTY	win32/virt-viewer-file.c	/^    PROP_DUMMY_PROPERTY,$/;"	e	enum:__anon53	file:
PROP_ENABLE_SMARTCARD	win32/virt-viewer-file.c	/^    PROP_ENABLE_SMARTCARD,$/;"	e	enum:__anon53	file:
PROP_ENABLE_USBREDIR	win32/virt-viewer-file.c	/^    PROP_ENABLE_USBREDIR,$/;"	e	enum:__anon53	file:
PROP_ENABLE_USB_AUTOSHARE	win32/virt-viewer-file.c	/^    PROP_ENABLE_USB_AUTOSHARE,$/;"	e	enum:__anon53	file:
PROP_FULLSCREEN	win32/virt-viewer-file.c	/^    PROP_FULLSCREEN,$/;"	e	enum:__anon53	file:
PROP_GLZ_WINDOW_SIZE	glib/spice-session.c	/^    PROP_GLZ_WINDOW_SIZE,$/;"	e	enum:__anon2	file:
PROP_HOST	glib/spice-session.c	/^    PROP_HOST,$/;"	e	enum:__anon2	file:
PROP_HOST	win32/virt-viewer-file.c	/^    PROP_HOST,$/;"	e	enum:__anon53	file:
PROP_HOST_SUBJECT	win32/virt-viewer-file.c	/^    PROP_HOST_SUBJECT,$/;"	e	enum:__anon53	file:
PROP_INHIBIT_KEYBOARD_GRAB	glib/spice-session.c	/^    PROP_INHIBIT_KEYBOARD_GRAB,$/;"	e	enum:__anon2	file:
PROP_IPV4	glib/spice-session.c	/^    PROP_IPV4,$/;"	e	enum:__anon2	file:
PROP_IPV6	glib/spice-session.c	/^    PROP_IPV6,$/;"	e	enum:__anon2	file:
PROP_MIGRATION_STATE	glib/spice-session.c	/^    PROP_MIGRATION_STATE,$/;"	e	enum:__anon2	file:
PROP_NAME	glib/spice-session.c	/^    PROP_NAME,$/;"	e	enum:__anon2	file:
PROP_PASSWORD	glib/spice-session.c	/^    PROP_PASSWORD,$/;"	e	enum:__anon2	file:
PROP_PASSWORD	win32/virt-viewer-file.c	/^    PROP_PASSWORD,$/;"	e	enum:__anon53	file:
PROP_PORT	glib/spice-session.c	/^    PROP_PORT,$/;"	e	enum:__anon2	file:
PROP_PORT	win32/virt-viewer-file.c	/^    PROP_PORT,$/;"	e	enum:__anon53	file:
PROP_PROTOCOL	glib/spice-session.c	/^    PROP_PROTOCOL,$/;"	e	enum:__anon2	file:
PROP_PROXY	glib/spice-session.c	/^    PROP_PROXY,$/;"	e	enum:__anon2	file:
PROP_PROXY	win32/virt-viewer-file.c	/^    PROP_PROXY,$/;"	e	enum:__anon53	file:
PROP_PUBKEY	glib/spice-session.c	/^    PROP_PUBKEY,$/;"	e	enum:__anon2	file:
PROP_READ_ONLY	glib/spice-session.c	/^    PROP_READ_ONLY,$/;"	e	enum:__anon2	file:
PROP_REDIRECT_ON_CONNECT	glib/usb-device-manager.c	/^    PROP_REDIRECT_ON_CONNECT,$/;"	e	enum:__anon13	file:
PROP_RELEASE_CURSOR	win32/virt-viewer-file.c	/^    PROP_RELEASE_CURSOR,$/;"	e	enum:__anon53	file:
PROP_SECURE_ATTENTION	win32/virt-viewer-file.c	/^    PROP_SECURE_ATTENTION,$/;"	e	enum:__anon53	file:
PROP_SECURE_CHANNELS	glib/spice-session.c	/^    PROP_SECURE_CHANNELS,$/;"	e	enum:__anon2	file:
PROP_SECURE_CHANNELS	win32/virt-viewer-file.c	/^    PROP_SECURE_CHANNELS,$/;"	e	enum:__anon53	file:
PROP_SESSION	glib/spice-channel.c	/^    PROP_SESSION,$/;"	e	enum:__anon25	file:
PROP_SESSION	glib/usb-device-manager.c	/^    PROP_SESSION,$/;"	e	enum:__anon13	file:
PROP_SHARED_DIR	glib/spice-session.c	/^    PROP_SHARED_DIR,$/;"	e	enum:__anon2	file:
PROP_SMARTCARD	glib/spice-session.c	/^    PROP_SMARTCARD,$/;"	e	enum:__anon2	file:
PROP_SMARTCARD_CERTIFICATES	glib/spice-session.c	/^    PROP_SMARTCARD_CERTIFICATES,$/;"	e	enum:__anon2	file:
PROP_SMARTCARD_DB	glib/spice-session.c	/^    PROP_SMARTCARD_DB,$/;"	e	enum:__anon2	file:
PROP_TITLE	win32/virt-viewer-file.c	/^    PROP_TITLE,$/;"	e	enum:__anon53	file:
PROP_TLS_CIPHERS	win32/virt-viewer-file.c	/^    PROP_TLS_CIPHERS,$/;"	e	enum:__anon53	file:
PROP_TLS_PORT	glib/spice-session.c	/^    PROP_TLS_PORT,$/;"	e	enum:__anon2	file:
PROP_TLS_PORT	win32/virt-viewer-file.c	/^    PROP_TLS_PORT,$/;"	e	enum:__anon53	file:
PROP_TOGGLE_FULLSCREEN	win32/virt-viewer-file.c	/^    PROP_TOGGLE_FULLSCREEN,$/;"	e	enum:__anon53	file:
PROP_TOTAL_READ_BYTES	glib/spice-channel.c	/^    PROP_TOTAL_READ_BYTES,$/;"	e	enum:__anon25	file:
PROP_TYPE	win32/virt-viewer-file.c	/^    PROP_TYPE,$/;"	e	enum:__anon53	file:
PROP_URI	glib/spice-session.c	/^    PROP_URI,$/;"	e	enum:__anon2	file:
PROP_USBREDIR	glib/spice-session.c	/^    PROP_USBREDIR,$/;"	e	enum:__anon2	file:
PROP_USB_FILTER	win32/virt-viewer-file.c	/^    PROP_USB_FILTER,$/;"	e	enum:__anon53	file:
PROP_USERNAME	glib/spice-session.c	/^    PROP_USERNAME$/;"	e	enum:__anon2	file:
PROP_USERNAME	win32/virt-viewer-file.c	/^    PROP_USERNAME,$/;"	e	enum:__anon53	file:
PROP_UUID	glib/spice-session.c	/^    PROP_UUID,$/;"	e	enum:__anon2	file:
PROP_VERIFY	glib/spice-session.c	/^    PROP_VERIFY,$/;"	e	enum:__anon2	file:
PROP_VERSION	win32/virt-viewer-file.c	/^    PROP_VERSION,$/;"	e	enum:__anon53	file:
PTRFLAGS_DOWN	win32/win32_spice_interface_types.h	35;"	d
PUT_UTF16	ffmpeg/include/libavutil/common.h	421;"	d
PUT_UTF8	ffmpeg/include/libavutil/common.h	387;"	d
PartialBlock	spice-common/python_modules/codegen.py	/^    class PartialBlock:$/;"	c	class:CodeWriter
Path	spice-common/common/glc.c	/^} Path;$/;"	t	typeref:struct:Pathpath	file:
PathPoint	spice-common/common/glc.c	/^typedef struct PathPoint {$/;"	s	file:
PathPoint	spice-common/common/glc.c	/^} PathPoint;$/;"	t	typeref:struct:PathPoint	file:
PathSegment	spice-common/common/glc.c	/^typedef struct PathSegment {$/;"	s	file:
PathSegment	spice-common/common/glc.c	/^} PathSegment;$/;"	t	typeref:struct:PathSegment	file:
PathStroke	spice-common/common/glc.c	/^typedef struct PathStroke {$/;"	s	file:
PathStroke	spice-common/common/glc.c	/^} PathStroke;$/;"	t	typeref:struct:PathStroke	file:
Pathpath	spice-common/common/glc.c	/^typedef struct Pathpath {$/;"	s	file:
PhodavServer	glib/spice-session-priv.h	/^typedef struct _PhodavServer PhodavServer;$/;"	t	typeref:struct:_PhodavServer
Picture	ffmpeg/include/libavcodec/vda.h	40;"	d
Picture	ffmpeg/include/libavcodec/vda.h	42;"	d
Picture	ffmpeg/include/libavcodec/videotoolbox.h	34;"	d
Picture	ffmpeg/include/libavcodec/videotoolbox.h	36;"	d
PixelFormat	ffmpeg/include/libavutil/pixfmt.h	412;"	d
PixmanData	spice-common/common/canvas_utils.h	/^typedef struct PixmanData {$/;"	s
PixmanData	spice-common/common/canvas_utils.h	/^} PixmanData;$/;"	t	typeref:struct:PixmanData
PointerInfo	spice-common/common/generated_client_demarshallers.c	/^struct PointerInfo {$/;"	s	file:
PointerInfo	spice-common/common/generated_client_demarshallers.c	/^typedef struct PointerInfo PointerInfo;$/;"	t	typeref:struct:PointerInfo	file:
PointerInfo	spice-common/common/generated_client_demarshallers1.c	/^struct PointerInfo {$/;"	s	file:
PointerInfo	spice-common/common/generated_client_demarshallers1.c	/^typedef struct PointerInfo PointerInfo;$/;"	t	typeref:struct:PointerInfo	file:
PointerInfo	spice-common/common/generated_server_demarshallers.c	/^struct PointerInfo {$/;"	s	file:
PointerInfo	spice-common/common/generated_server_demarshallers.c	/^typedef struct PointerInfo PointerInfo;$/;"	t	typeref:struct:PointerInfo	file:
PointerType	spice-common/python_modules/ptypes.py	/^class PointerType(Type):$/;"	c
PolyEdgePtr	spice-common/common/lines.c	/^} PolyEdgeRec, *PolyEdgePtr;$/;"	t	typeref:struct:_PolyEdge	file:
PolyEdgeRec	spice-common/common/lines.c	/^} PolyEdgeRec, *PolyEdgePtr;$/;"	t	typeref:struct:_PolyEdge	file:
PolySlopePtr	spice-common/common/lines.c	/^} PolySlopeRec, *PolySlopePtr;$/;"	t	typeref:struct:_PolySlope	file:
PolySlopeRec	spice-common/common/lines.c	/^} PolySlopeRec, *PolySlopePtr;$/;"	t	typeref:struct:_PolySlope	file:
PolyVertexPtr	spice-common/common/lines.c	/^} PolyVertexRec, *PolyVertexPtr;$/;"	t	typeref:struct:_PolyVertex	file:
PolyVertexRec	spice-common/common/lines.c	/^} PolyVertexRec, *PolyVertexPtr;$/;"	t	typeref:struct:_PolyVertex	file:
ProtocolMember	spice-common/python_modules/ptypes.py	/^class ProtocolMember:$/;"	c
ProtocolType	spice-common/python_modules/ptypes.py	/^class ProtocolType(Type):$/;"	c
QP_STORE_T	ffmpeg/include/libpostproc/postprocess.h	54;"	d
QRegion	spice-common/common/region.h	/^typedef pixman_region32_t QRegion;$/;"	t
QUIC_COMPRESS_RGB	spice-common/common/quic.c	1232;"	d	file:
QUIC_ERROR	spice-common/common/quic.h	37;"	d
QUIC_FAMILY_5BPC	spice-common/common/quic.c	329;"	d	file:
QUIC_FAMILY_5BPC	spice-common/common/quic_family_tmpl.c	31;"	d	file:
QUIC_FAMILY_8BPC	spice-common/common/quic.c	325;"	d	file:
QUIC_FAMILY_8BPC	spice-common/common/quic_family_tmpl.c	23;"	d	file:
QUIC_IMAGE_TYPE_GRAY	spice-common/common/quic.h	/^    QUIC_IMAGE_TYPE_GRAY,$/;"	e	enum:__anon149
QUIC_IMAGE_TYPE_INVALID	spice-common/common/quic.h	/^    QUIC_IMAGE_TYPE_INVALID,$/;"	e	enum:__anon149
QUIC_IMAGE_TYPE_RGB16	spice-common/common/quic.h	/^    QUIC_IMAGE_TYPE_RGB16,$/;"	e	enum:__anon149
QUIC_IMAGE_TYPE_RGB24	spice-common/common/quic.h	/^    QUIC_IMAGE_TYPE_RGB24,$/;"	e	enum:__anon149
QUIC_IMAGE_TYPE_RGB32	spice-common/common/quic.h	/^    QUIC_IMAGE_TYPE_RGB32,$/;"	e	enum:__anon149
QUIC_IMAGE_TYPE_RGBA	spice-common/common/quic.h	/^    QUIC_IMAGE_TYPE_RGBA$/;"	e	enum:__anon149
QUIC_MAGIC	spice-common/common/quic.c	38;"	d	file:
QUIC_OK	spice-common/common/quic.h	38;"	d
QUIC_RGB	spice-common/common/quic.c	36;"	d	file:
QUIC_RGB16	spice-common/common/quic.c	830;"	d	file:
QUIC_RGB16	spice-common/common/quic_rgb_tmpl.c	65;"	d	file:
QUIC_RGB16_TO_32	spice-common/common/quic.c	833;"	d	file:
QUIC_RGB16_TO_32	spice-common/common/quic_rgb_tmpl.c	86;"	d	file:
QUIC_RGB24	spice-common/common/quic.c	827;"	d	file:
QUIC_RGB24	spice-common/common/quic_rgb_tmpl.c	44;"	d	file:
QUIC_RGB32	spice-common/common/quic.c	824;"	d	file:
QUIC_RGB32	spice-common/common/quic_rgb_tmpl.c	23;"	d	file:
QUIC_UNCOMPRESS_RGB	spice-common/common/quic.c	1515;"	d	file:
QUIC_VERSION	spice-common/common/quic.c	41;"	d	file:
QUIC_VERSION_MAJOR	spice-common/common/quic.c	39;"	d	file:
QUIC_VERSION_MINOR	spice-common/common/quic.c	40;"	d	file:
QXLAlphaBlend	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLAlphaBlend {$/;"	s
QXLAlphaBlend	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLAlphaBlend;$/;"	t	typeref:struct:QXLAlphaBlend
QXLBitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLBitmap {$/;"	s
QXLBitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLBitmap;$/;"	t	typeref:struct:QXLBitmap
QXLBitmapFlags	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef enum QXLBitmapFlags {$/;"	g
QXLBitmapFlags	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLBitmapFlags;$/;"	t	typeref:enum:QXLBitmapFlags
QXLBlackness	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLBlackness {$/;"	s
QXLBlackness	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLBlackness, QXLInvers, QXLWhiteness;$/;"	t	typeref:struct:QXLBlackness
QXLBlend	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCopy, QXLBlend;$/;"	t	typeref:struct:QXLCopy
QXLBrush	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLBrush {$/;"	s
QXLBrush	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLBrush;$/;"	t	typeref:struct:QXLBrush
QXLClip	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLClip {$/;"	s
QXLClip	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLClip;$/;"	t	typeref:struct:QXLClip
QXLClipRects	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLClipRects {$/;"	s
QXLClipRects	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLClipRects;$/;"	t	typeref:struct:QXLClipRects
QXLCmdType	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef enum QXLCmdType {$/;"	g
QXLCmdType	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCmdType;$/;"	t	typeref:enum:QXLCmdType
QXLCommand	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLCommand {$/;"	s
QXLCommand	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCommand;$/;"	t	typeref:struct:QXLCommand
QXLCommandExt	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLCommandExt {$/;"	s
QXLCommandExt	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCommandExt;$/;"	t	typeref:struct:QXLCommandExt
QXLCompatAlphaBlend	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLCompatAlphaBlend {$/;"	s
QXLCompatAlphaBlend	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCompatAlphaBlend;$/;"	t	typeref:struct:QXLCompatAlphaBlend
QXLCompatDrawable	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLCompatDrawable {$/;"	s
QXLCompatDrawable	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCompatDrawable;$/;"	t	typeref:struct:QXLCompatDrawable
QXLCompatUpdateCmd	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLCompatUpdateCmd {$/;"	s
QXLCompatUpdateCmd	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCompatUpdateCmd;$/;"	t	typeref:struct:QXLCompatUpdateCmd
QXLComposite	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLComposite {$/;"	s
QXLComposite	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLComposite;$/;"	t	typeref:struct:QXLComposite
QXLCopy	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLCopy {$/;"	s
QXLCopy	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCopy, QXLBlend;$/;"	t	typeref:struct:QXLCopy
QXLCopyBits	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLCopyBits {$/;"	s
QXLCopyBits	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCopyBits;$/;"	t	typeref:struct:QXLCopyBits
QXLCursor	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLCursor {$/;"	s
QXLCursor	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCursor;$/;"	t	typeref:struct:QXLCursor
QXLCursorCmd	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLCursorCmd {$/;"	s
QXLCursorCmd	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCursorCmd;$/;"	t	typeref:struct:QXLCursorCmd
QXLCursorHeader	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLCursorHeader {$/;"	s
QXLCursorHeader	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLCursorHeader;$/;"	t	typeref:struct:QXLCursorHeader
QXLDataChunk	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct  SPICE_ATTR_PACKED QXLDataChunk {$/;"	s
QXLDataChunk	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLDataChunk;$/;"	t	typeref:struct:QXLDataChunk
QXLDrawable	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLDrawable {$/;"	s
QXLDrawable	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLDrawable;$/;"	t	typeref:struct:QXLDrawable
QXLEffectType	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef enum QXLEffectType$/;"	g
QXLEffectType	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLEffectType;$/;"	t	typeref:enum:QXLEffectType
QXLEscapeSetCustomDisplay	spice-common/spice-protocol/spice/qxl_windows.h	/^typedef struct SPICE_ATTR_PACKED QXLEscapeSetCustomDisplay {$/;"	s
QXLEscapeSetCustomDisplay	spice-common/spice-protocol/spice/qxl_windows.h	/^} QXLEscapeSetCustomDisplay;$/;"	t	typeref:struct:QXLEscapeSetCustomDisplay
QXLFIXED	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef int32_t QXLFIXED; \/\/fixed 28.4$/;"	t
QXLFill	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLFill {$/;"	s
QXLFill	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLFill;$/;"	t	typeref:struct:QXLFill
QXLHead	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLHead {$/;"	s
QXLHead	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLHead;$/;"	t	typeref:struct:QXLHead
QXLImage	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLImage {$/;"	s
QXLImage	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLImage;$/;"	t	typeref:struct:QXLImage
QXLImageDescriptor	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLImageDescriptor {$/;"	s
QXLImageDescriptor	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLImageDescriptor;$/;"	t	typeref:struct:QXLImageDescriptor
QXLImageFlags	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef enum QXLImageFlags {$/;"	g
QXLImageFlags	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLImageFlags;$/;"	t	typeref:enum:QXLImageFlags
QXLImageID	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLImageID {$/;"	s
QXLImageID	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLImageID;$/;"	t	typeref:struct:QXLImageID
QXLImageIDUnion	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLImageIDUnion;$/;"	t	typeref:union:__anon80
QXLInvers	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLBlackness, QXLInvers, QXLWhiteness;$/;"	t	typeref:struct:QXLBlackness
QXLJPEGData	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLQUICData, QXLLZRGBData, QXLJPEGData;$/;"	t	typeref:struct:QXLQUICData
QXLLZRGBData	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLQUICData, QXLLZRGBData, QXLJPEGData;$/;"	t	typeref:struct:QXLQUICData
QXLLineAttr	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLLineAttr {$/;"	s
QXLLineAttr	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLLineAttr;$/;"	t	typeref:struct:QXLLineAttr
QXLMemSlot	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLMemSlot {$/;"	s
QXLMemSlot	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLMemSlot;$/;"	t	typeref:struct:QXLMemSlot
QXLMessage	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLMessage {$/;"	s
QXLMessage	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLMessage;$/;"	t	typeref:struct:QXLMessage
QXLMode	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLMode {$/;"	s
QXLMode	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLMode;$/;"	t	typeref:struct:QXLMode
QXLModes	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLModes {$/;"	s
QXLModes	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLModes;$/;"	t	typeref:struct:QXLModes
QXLMonitorsConfig	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLMonitorsConfig {$/;"	s
QXLMonitorsConfig	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLMonitorsConfig;$/;"	t	typeref:struct:QXLMonitorsConfig
QXLOpaque	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLOpaque {$/;"	s
QXLOpaque	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLOpaque;$/;"	t	typeref:struct:QXLOpaque
QXLOperator	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLOperator;$/;"	t	typeref:enum:__anon73
QXLPHYSICAL	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef uint64_t QXLPHYSICAL;$/;"	t
QXLPalette	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLPalette {$/;"	s
QXLPalette	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLPalette;$/;"	t	typeref:struct:QXLPalette
QXLPath	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLPath {$/;"	s
QXLPath	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLPath;$/;"	t	typeref:struct:QXLPath
QXLPathSeg	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLPathSeg {$/;"	s
QXLPathSeg	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLPathSeg;$/;"	t	typeref:struct:QXLPathSeg
QXLPattern	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLPattern {$/;"	s
QXLPattern	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLPattern;$/;"	t	typeref:struct:QXLPattern
QXLPoint	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLPoint {$/;"	s
QXLPoint	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLPoint;$/;"	t	typeref:struct:QXLPoint
QXLPoint16	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLPoint16 {$/;"	s
QXLPoint16	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLPoint16;$/;"	t	typeref:struct:QXLPoint16
QXLPointFix	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLPointFix {$/;"	s
QXLPointFix	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLPointFix;$/;"	t	typeref:struct:QXLPointFix
QXLQMask	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLQMask {$/;"	s
QXLQMask	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLQMask;$/;"	t	typeref:struct:QXLQMask
QXLQUICData	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLQUICData {$/;"	s
QXLQUICData	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLQUICData, QXLLZRGBData, QXLJPEGData;$/;"	t	typeref:struct:QXLQUICData
QXLRam	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLRam {$/;"	s
QXLRam	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLRam;$/;"	t	typeref:struct:QXLRam
QXLRasterGlyph	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLRasterGlyph {$/;"	s
QXLRasterGlyph	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLRasterGlyph;$/;"	t	typeref:struct:QXLRasterGlyph
QXLRect	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLRect {$/;"	s
QXLRect	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLRect;$/;"	t	typeref:struct:QXLRect
QXLReleaseInfo	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef union QXLReleaseInfo {$/;"	u
QXLReleaseInfo	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLReleaseInfo;$/;"	t	typeref:union:QXLReleaseInfo
QXLReleaseInfoExt	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct QXLReleaseInfoExt {$/;"	s
QXLReleaseInfoExt	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLReleaseInfoExt;$/;"	t	typeref:struct:QXLReleaseInfoExt
QXLRom	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLRom {$/;"	s
QXLRom	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLRom;$/;"	t	typeref:struct:QXLRom
QXLRop3	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLRop3 {$/;"	s
QXLRop3	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLRop3;$/;"	t	typeref:struct:QXLRop3
QXLString	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLString {$/;"	s
QXLString	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLString;$/;"	t	typeref:struct:QXLString
QXLStroke	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLStroke {$/;"	s
QXLStroke	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLStroke;$/;"	t	typeref:struct:QXLStroke
QXLSurface	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLSurface {$/;"	s
QXLSurface	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLSurface;$/;"	t	typeref:struct:QXLSurface
QXLSurfaceCmd	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLSurfaceCmd {$/;"	s
QXLSurfaceCmd	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLSurfaceCmd;$/;"	t	typeref:struct:QXLSurfaceCmd
QXLSurfaceCmdType	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef enum QXLSurfaceCmdType {$/;"	g
QXLSurfaceCmdType	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLSurfaceCmdType;$/;"	t	typeref:enum:QXLSurfaceCmdType
QXLSurfaceCreate	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLSurfaceCreate {$/;"	s
QXLSurfaceCreate	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLSurfaceCreate;$/;"	t	typeref:struct:QXLSurfaceCreate
QXLSurfaceId	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLSurfaceId {$/;"	s
QXLSurfaceId	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLSurfaceId;$/;"	t	typeref:struct:QXLSurfaceId
QXLText	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLText {$/;"	s
QXLText	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLText;$/;"	t	typeref:struct:QXLText
QXLTransform	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLTransform;$/;"	t	typeref:struct:__anon74
QXLTransparent	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLTransparent {$/;"	s
QXLTransparent	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLTransparent;$/;"	t	typeref:struct:QXLTransparent
QXLURect	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLURect {$/;"	s
QXLURect	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLURect;$/;"	t	typeref:struct:QXLURect
QXLUpdateCmd	spice-common/spice-protocol/spice/qxl_dev.h	/^typedef struct SPICE_ATTR_PACKED QXLUpdateCmd {$/;"	s
QXLUpdateCmd	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLUpdateCmd;$/;"	t	typeref:struct:QXLUpdateCmd
QXLWhiteness	spice-common/spice-protocol/spice/qxl_dev.h	/^} QXLBlackness, QXLInvers, QXLWhiteness;$/;"	t	typeref:struct:QXLBlackness
QXL_BITMAP_DIRECT	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_BITMAP_DIRECT = (1 << 0),$/;"	e	enum:QXLBitmapFlags
QXL_BITMAP_TOP_DOWN	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_BITMAP_TOP_DOWN = (1 << 2), \/\/ == SPICE_BITMAP_FLAGS_TOP_DOWN$/;"	e	enum:QXLBitmapFlags
QXL_BITMAP_UNSTABLE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_BITMAP_UNSTABLE = (1 << 1),$/;"	e	enum:QXLBitmapFlags
QXL_CMD_CURSOR	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_CMD_CURSOR,$/;"	e	enum:QXLCmdType
QXL_CMD_DRAW	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_CMD_DRAW,$/;"	e	enum:QXLCmdType
QXL_CMD_MESSAGE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_CMD_MESSAGE,$/;"	e	enum:QXLCmdType
QXL_CMD_NOP	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_CMD_NOP,$/;"	e	enum:QXLCmdType
QXL_CMD_SURFACE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_CMD_SURFACE,$/;"	e	enum:QXLCmdType
QXL_CMD_UPDATE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_CMD_UPDATE,$/;"	e	enum:QXLCmdType
QXL_COMMAND_FLAG_COMPAT	spice-common/spice-protocol/spice/qxl_dev.h	206;"	d
QXL_COMMAND_FLAG_COMPAT_16BPP	spice-common/spice-protocol/spice/qxl_dev.h	207;"	d
QXL_COMMAND_RING_SIZE	spice-common/spice-protocol/spice/qxl_dev.h	236;"	d
QXL_COPY_BITS	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_COPY_BITS,$/;"	e	enum:__anon71
QXL_CURSOR_HIDE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_CURSOR_HIDE,$/;"	e	enum:__anon69
QXL_CURSOR_MOVE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_CURSOR_MOVE,$/;"	e	enum:__anon69
QXL_CURSOR_RING_SIZE	spice-common/spice-protocol/spice/qxl_dev.h	237;"	d
QXL_CURSOR_SET	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_CURSOR_SET,$/;"	e	enum:__anon69
QXL_CURSOR_TRAIL	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_CURSOR_TRAIL,$/;"	e	enum:__anon69
QXL_CURSUR_DEVICE_DATA_SIZE	spice-common/spice-protocol/spice/qxl_dev.h	334;"	d
QXL_DEVICE_ID_DEVEL	spice-common/spice-protocol/spice/qxl_dev.h	54;"	d
QXL_DEVICE_ID_STABLE	spice-common/spice-protocol/spice/qxl_dev.h	45;"	d
QXL_DRAW_ALPHA_BLEND	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_ALPHA_BLEND,$/;"	e	enum:__anon71
QXL_DRAW_BLACKNESS	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_BLACKNESS,$/;"	e	enum:__anon71
QXL_DRAW_BLEND	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_BLEND,$/;"	e	enum:__anon71
QXL_DRAW_COMPOSITE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_COMPOSITE$/;"	e	enum:__anon71
QXL_DRAW_COPY	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_COPY,$/;"	e	enum:__anon71
QXL_DRAW_FILL	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_FILL,$/;"	e	enum:__anon71
QXL_DRAW_INVERS	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_INVERS,$/;"	e	enum:__anon71
QXL_DRAW_NOP	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_NOP,$/;"	e	enum:__anon71
QXL_DRAW_OPAQUE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_OPAQUE,$/;"	e	enum:__anon71
QXL_DRAW_ROP3	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_ROP3,$/;"	e	enum:__anon71
QXL_DRAW_STROKE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_STROKE,$/;"	e	enum:__anon71
QXL_DRAW_TEXT	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_TEXT,$/;"	e	enum:__anon71
QXL_DRAW_TRANSPARENT	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_TRANSPARENT,$/;"	e	enum:__anon71
QXL_DRAW_WHITENESS	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_DRAW_WHITENESS,$/;"	e	enum:__anon71
QXL_EFFECT_BLACKNESS_ON_DUP	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_EFFECT_BLACKNESS_ON_DUP = 3,$/;"	e	enum:QXLEffectType
QXL_EFFECT_BLEND	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_EFFECT_BLEND = 0,$/;"	e	enum:QXLEffectType
QXL_EFFECT_NOP	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_EFFECT_NOP = 6,$/;"	e	enum:QXLEffectType
QXL_EFFECT_NOP_ON_DUP	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_EFFECT_NOP_ON_DUP = 5,$/;"	e	enum:QXLEffectType
QXL_EFFECT_OPAQUE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_EFFECT_OPAQUE = 1,$/;"	e	enum:QXLEffectType
QXL_EFFECT_OPAQUE_BRUSH	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_EFFECT_OPAQUE_BRUSH = 7$/;"	e	enum:QXLEffectType
QXL_EFFECT_REVERT_ON_DUP	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_EFFECT_REVERT_ON_DUP = 2,$/;"	e	enum:QXLEffectType
QXL_EFFECT_WHITENESS_ON_DUP	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_EFFECT_WHITENESS_ON_DUP = 4,$/;"	e	enum:QXLEffectType
QXL_ESCAPE_SET_CUSTOM_DISPLAY	spice-common/spice-protocol/spice/qxl_windows.h	/^    QXL_ESCAPE_SET_CUSTOM_DISPLAY = 0x10001,$/;"	e	enum:__anon63
QXL_IMAGE_CACHE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IMAGE_CACHE = (1 << 0),$/;"	e	enum:QXLImageFlags
QXL_IMAGE_GROUP_DEVICE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IMAGE_GROUP_DEVICE,$/;"	e	enum:__anon79
QXL_IMAGE_GROUP_DRIVER	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IMAGE_GROUP_DRIVER,$/;"	e	enum:__anon79
QXL_IMAGE_GROUP_DRIVER_DONT_CACHE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IMAGE_GROUP_DRIVER_DONT_CACHE,$/;"	e	enum:__anon79
QXL_IMAGE_GROUP_RED	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IMAGE_GROUP_RED,$/;"	e	enum:__anon79
QXL_IMAGE_HIGH_BITS_SET	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IMAGE_HIGH_BITS_SET = (1 << 1),$/;"	e	enum:QXLImageFlags
QXL_INTERRUPT_CLIENT	spice-common/spice-protocol/spice/qxl_dev.h	251;"	d
QXL_INTERRUPT_CLIENT_MONITORS_CONFIG	spice-common/spice-protocol/spice/qxl_dev.h	252;"	d
QXL_INTERRUPT_CURSOR	spice-common/spice-protocol/spice/qxl_dev.h	248;"	d
QXL_INTERRUPT_DISPLAY	spice-common/spice-protocol/spice/qxl_dev.h	247;"	d
QXL_INTERRUPT_ERROR	spice-common/spice-protocol/spice/qxl_dev.h	250;"	d
QXL_INTERRUPT_IO_CMD	spice-common/spice-protocol/spice/qxl_dev.h	249;"	d
QXL_IO_ATTACH_PRIMARY	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_ATTACH_PRIMARY,$/;"	e	enum:__anon67
QXL_IO_CREATE_PRIMARY	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_CREATE_PRIMARY,$/;"	e	enum:__anon67
QXL_IO_CREATE_PRIMARY_ASYNC	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_CREATE_PRIMARY_ASYNC,$/;"	e	enum:__anon67
QXL_IO_DESTROY_ALL_SURFACES	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_DESTROY_ALL_SURFACES,$/;"	e	enum:__anon67
QXL_IO_DESTROY_ALL_SURFACES_ASYNC	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_DESTROY_ALL_SURFACES_ASYNC,$/;"	e	enum:__anon67
QXL_IO_DESTROY_PRIMARY	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_DESTROY_PRIMARY,$/;"	e	enum:__anon67
QXL_IO_DESTROY_PRIMARY_ASYNC	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_DESTROY_PRIMARY_ASYNC,$/;"	e	enum:__anon67
QXL_IO_DESTROY_SURFACE_ASYNC	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_DESTROY_SURFACE_ASYNC,$/;"	e	enum:__anon67
QXL_IO_DESTROY_SURFACE_WAIT	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_DESTROY_SURFACE_WAIT,$/;"	e	enum:__anon67
QXL_IO_DETACH_PRIMARY	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_DETACH_PRIMARY,$/;"	e	enum:__anon67
QXL_IO_FLUSH_RELEASE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_FLUSH_RELEASE,$/;"	e	enum:__anon67
QXL_IO_FLUSH_SURFACES_ASYNC	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_FLUSH_SURFACES_ASYNC,$/;"	e	enum:__anon67
QXL_IO_LOG	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_LOG,$/;"	e	enum:__anon67
QXL_IO_MEMSLOT_ADD	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_MEMSLOT_ADD,$/;"	e	enum:__anon67
QXL_IO_MEMSLOT_ADD_ASYNC	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_MEMSLOT_ADD_ASYNC,$/;"	e	enum:__anon67
QXL_IO_MEMSLOT_DEL	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_MEMSLOT_DEL,$/;"	e	enum:__anon67
QXL_IO_MONITORS_CONFIG_ASYNC	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_MONITORS_CONFIG_ASYNC,$/;"	e	enum:__anon67
QXL_IO_NOTIFY_CMD	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_NOTIFY_CMD,$/;"	e	enum:__anon67
QXL_IO_NOTIFY_CURSOR	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_NOTIFY_CURSOR,$/;"	e	enum:__anon67
QXL_IO_NOTIFY_OOM	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_NOTIFY_OOM,$/;"	e	enum:__anon67
QXL_IO_RANGE_INDEX	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_RANGE_INDEX,$/;"	e	enum:__anon66
QXL_IO_RANGE_SIZE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_RANGE_SIZE$/;"	e	enum:__anon67
QXL_IO_RESET	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_RESET,$/;"	e	enum:__anon67
QXL_IO_SET_MODE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_SET_MODE,                  \/* qxl-1 *\/$/;"	e	enum:__anon67
QXL_IO_UPDATE_AREA	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_UPDATE_AREA,$/;"	e	enum:__anon67
QXL_IO_UPDATE_AREA_ASYNC	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_UPDATE_AREA_ASYNC,$/;"	e	enum:__anon67
QXL_IO_UPDATE_IRQ	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_IO_UPDATE_IRQ,$/;"	e	enum:__anon67
QXL_LOG_BUF_SIZE	spice-common/spice-protocol/spice/qxl_dev.h	245;"	d
QXL_OP_ADD	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_ADD                       = 0x0c,$/;"	e	enum:__anon73
QXL_OP_ATOP	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_ATOP                      = 0x09,$/;"	e	enum:__anon73
QXL_OP_ATOP_REVERSE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_ATOP_REVERSE              = 0x0a,$/;"	e	enum:__anon73
QXL_OP_CLEAR	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_CLEAR                     = 0x00,$/;"	e	enum:__anon73
QXL_OP_COLOR_BURN	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_COLOR_BURN                = 0x36,$/;"	e	enum:__anon73
QXL_OP_COLOR_DODGE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_COLOR_DODGE               = 0x35,$/;"	e	enum:__anon73
QXL_OP_DARKEN	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_DARKEN                    = 0x33,$/;"	e	enum:__anon73
QXL_OP_DIFFERENCE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_DIFFERENCE                = 0x39,$/;"	e	enum:__anon73
QXL_OP_DST	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_DST                       = 0x02,$/;"	e	enum:__anon73
QXL_OP_EXCLUSION	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_EXCLUSION                 = 0x3a,$/;"	e	enum:__anon73
QXL_OP_HARD_LIGHT	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_HARD_LIGHT                = 0x37,$/;"	e	enum:__anon73
QXL_OP_HSL_COLOR	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_HSL_COLOR                 = 0x3d,$/;"	e	enum:__anon73
QXL_OP_HSL_HUE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_HSL_HUE                   = 0x3b,$/;"	e	enum:__anon73
QXL_OP_HSL_LUMINOSITY	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_HSL_LUMINOSITY            = 0x3e$/;"	e	enum:__anon73
QXL_OP_HSL_SATURATION	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_HSL_SATURATION            = 0x3c,$/;"	e	enum:__anon73
QXL_OP_IN	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_IN                        = 0x05,$/;"	e	enum:__anon73
QXL_OP_IN_REVERSE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_IN_REVERSE                = 0x06,$/;"	e	enum:__anon73
QXL_OP_LIGHTEN	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_LIGHTEN                   = 0x34,$/;"	e	enum:__anon73
QXL_OP_MULTIPLY	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_MULTIPLY                  = 0x30,$/;"	e	enum:__anon73
QXL_OP_OUT	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_OUT                       = 0x07,$/;"	e	enum:__anon73
QXL_OP_OUT_REVERSE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_OUT_REVERSE               = 0x08,$/;"	e	enum:__anon73
QXL_OP_OVER	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_OVER                      = 0x03,$/;"	e	enum:__anon73
QXL_OP_OVERLAY	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_OVERLAY                   = 0x32,$/;"	e	enum:__anon73
QXL_OP_OVER_REVERSE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_OVER_REVERSE              = 0x04,$/;"	e	enum:__anon73
QXL_OP_SATURATE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_SATURATE                  = 0x0d,$/;"	e	enum:__anon73
QXL_OP_SCREEN	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_SCREEN                    = 0x31,$/;"	e	enum:__anon73
QXL_OP_SOFT_LIGHT	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_SOFT_LIGHT                = 0x38,$/;"	e	enum:__anon73
QXL_OP_SOURCE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_SOURCE		     = 0x01,$/;"	e	enum:__anon73
QXL_OP_XOR	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_OP_XOR                       = 0x0b,$/;"	e	enum:__anon73
QXL_PATH_BEGIN	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_PATH_BEGIN = (1 << 0),$/;"	e	enum:__anon78
QXL_PATH_BEZIER	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_PATH_BEZIER = (1 << 4),$/;"	e	enum:__anon78
QXL_PATH_CLOSE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_PATH_CLOSE = (1 << 3),$/;"	e	enum:__anon78
QXL_PATH_END	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_PATH_END = (1 << 1),$/;"	e	enum:__anon78
QXL_PCI_RANGES	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_PCI_RANGES$/;"	e	enum:__anon66
QXL_RAM_MAGIC	spice-common/spice-protocol/spice/qxl_dev.h	58;"	d
QXL_RAM_RANGE_INDEX	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_RAM_RANGE_INDEX,$/;"	e	enum:__anon66
QXL_RELEASE_RING_SIZE	spice-common/spice-protocol/spice/qxl_dev.h	238;"	d
QXL_REVISION_DEVEL	spice-common/spice-protocol/spice/qxl_dev.h	55;"	d
QXL_REVISION_STABLE_V04	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_REVISION_STABLE_V04=0x01,$/;"	e	enum:__anon65
QXL_REVISION_STABLE_V06	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_REVISION_STABLE_V06=0x02,$/;"	e	enum:__anon65
QXL_REVISION_STABLE_V10	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_REVISION_STABLE_V10=0x03,$/;"	e	enum:__anon65
QXL_REVISION_STABLE_V12	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_REVISION_STABLE_V12=0x04,$/;"	e	enum:__anon65
QXL_ROM_MAGIC	spice-common/spice-protocol/spice/qxl_dev.h	57;"	d
QXL_ROM_RANGE_INDEX	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_ROM_RANGE_INDEX,$/;"	e	enum:__anon66
QXL_SET_IMAGE_ID	spice-common/spice-protocol/spice/qxl_dev.h	713;"	d
QXL_SURFACE_CMD_CREATE	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_SURFACE_CMD_CREATE,$/;"	e	enum:QXLSurfaceCmdType
QXL_SURFACE_CMD_DESTROY	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_SURFACE_CMD_DESTROY,$/;"	e	enum:QXLSurfaceCmdType
QXL_SURF_FLAG_KEEP_DATA	spice-common/spice-protocol/spice/qxl_dev.h	222;"	d
QXL_SURF_TYPE_PRIMARY	spice-common/spice-protocol/spice/qxl_dev.h	220;"	d
QXL_VRAM_RANGE_INDEX	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXL_VRAM_RANGE_INDEX,$/;"	e	enum:__anon66
QuicContext	spice-common/common/quic.h	/^typedef void *QuicContext;$/;"	t
QuicData	spice-common/common/canvas_base.c	/^typedef struct QuicData {$/;"	s	file:
QuicData	spice-common/common/canvas_base.c	/^} QuicData;$/;"	t	typeref:struct:QuicData	file:
QuicFamily	spice-common/common/quic.c	/^typedef struct QuicFamily {$/;"	s	file:
QuicFamily	spice-common/common/quic.c	/^} QuicFamily;$/;"	t	typeref:struct:QuicFamily	file:
QuicImageType	spice-common/common/quic.h	/^} QuicImageType;$/;"	t	typeref:enum:__anon149
QuicUsrContext	spice-common/common/quic.h	/^struct QuicUsrContext {$/;"	s
QuicUsrContext	spice-common/common/quic.h	/^typedef struct QuicUsrContext QuicUsrContext;$/;"	t	typeref:struct:QuicUsrContext
QuickSortSpans	spice-common/common/lines.c	/^static void QuickSortSpans($/;"	f	file:
QuickSortSpansX	spice-common/common/lines.c	/^QuickSortSpansX (DDXPointRec points[], int widths[], int numSpans)$/;"	f	file:
RASTER_OP	spice-common/common/pixman_utils.c	85;"	d	file:
RDFTContext	ffmpeg/include/libavcodec/avfft.h	/^typedef struct RDFTContext RDFTContext;$/;"	t	typeref:struct:RDFTContext
RDFTransformType	ffmpeg/include/libavcodec/avfft.h	/^enum RDFTransformType {$/;"	g
REDHAT_PCI_VENDOR_ID	spice-common/spice-protocol/spice/qxl_dev.h	42;"	d
REDHAT_PCI_VENDOR_ID	spice-common/spice-protocol/spice/vdi_dev.h	40;"	d
REGION_TEST_ALL	spice-common/common/region.h	35;"	d
REGION_TEST_LEFT_EXCLUSIVE	spice-common/common/region.h	32;"	d
REGION_TEST_RIGHT_EXCLUSIVE	spice-common/common/region.h	33;"	d
REGION_TEST_SHARED	spice-common/common/region.h	34;"	d
RGB_BYTES_PER_PIXEL	spice-common/common/lz_common.h	/^static const int RGB_BYTES_PER_PIXEL[] = {0, 1, 1, 1, 1, 1, 2, 3, 4, 4, 4, 1};$/;"	v
RGB_data	win32/create_bmp.h	/^}RGB_data;\/\/RGB TYPE$/;"	t	typeref:struct:__anon52
RING_FOREACH	spice-common/common/ring.h	143;"	d
RING_FOREACH_REVERSED	spice-common/common/ring.h	148;"	d
RING_FOREACH_SAFE	spice-common/common/ring.h	137;"	d
RLE	spice-common/common/quic.c	30;"	d	file:
RLE_PRED_1_IMP	spice-common/common/quic_rgb_tmpl.c	189;"	d	file:
RLE_PRED_1_IMP	spice-common/common/quic_rgb_tmpl.c	197;"	d	file:
RLE_PRED_1_IMP	spice-common/common/quic_rgb_tmpl.c	735;"	d	file:
RLE_PRED_1_IMP	spice-common/common/quic_tmpl.c	54;"	d	file:
RLE_PRED_1_IMP	spice-common/common/quic_tmpl.c	626;"	d	file:
RLE_PRED_1_IMP	spice-common/common/quic_tmpl.c	62;"	d	file:
RLE_PRED_2	spice-common/common/quic.c	34;"	d	file:
RLE_PRED_2_IMP	spice-common/common/quic_rgb_tmpl.c	201;"	d	file:
RLE_PRED_2_IMP	spice-common/common/quic_rgb_tmpl.c	208;"	d	file:
RLE_PRED_2_IMP	spice-common/common/quic_rgb_tmpl.c	736;"	d	file:
RLE_PRED_2_IMP	spice-common/common/quic_tmpl.c	627;"	d	file:
RLE_PRED_2_IMP	spice-common/common/quic_tmpl.c	66;"	d	file:
RLE_PRED_2_IMP	spice-common/common/quic_tmpl.c	73;"	d	file:
RLE_PRED_3_IMP	spice-common/common/quic_rgb_tmpl.c	212;"	d	file:
RLE_PRED_3_IMP	spice-common/common/quic_rgb_tmpl.c	217;"	d	file:
RLE_PRED_3_IMP	spice-common/common/quic_rgb_tmpl.c	737;"	d	file:
RLE_PRED_3_IMP	spice-common/common/quic_tmpl.c	628;"	d	file:
RLE_PRED_3_IMP	spice-common/common/quic_tmpl.c	77;"	d	file:
RLE_PRED_3_IMP	spice-common/common/quic_tmpl.c	82;"	d	file:
RLE_STAT	spice-common/common/quic.c	31;"	d	file:
ROP3_FILL_HANDLERS	spice-common/common/rop3.c	373;"	d	file:
ROP3_HANDLERS	spice-common/common/rop3.c	149;"	d	file:
ROP3_HANDLERS_DEPTH	spice-common/common/rop3.c	67;"	d	file:
ROP3_NUM_OPS	spice-common/common/rop3.c	36;"	d	file:
ROPInput	spice-common/common/canvas_base.c	/^} ROPInput;$/;"	t	typeref:enum:__anon120	file:
ROP_INPUT_BRUSH	spice-common/common/canvas_base.c	/^    ROP_INPUT_BRUSH,$/;"	e	enum:__anon120	file:
ROP_INPUT_DEST	spice-common/common/canvas_base.c	/^    ROP_INPUT_DEST$/;"	e	enum:__anon120	file:
ROP_INPUT_SRC	spice-common/common/canvas_base.c	/^    ROP_INPUT_SRC,$/;"	e	enum:__anon120	file:
ROP_TABLE	spice-common/common/pixman_utils.c	126;"	d	file:
ROUND	spice-common/common/canvas_base.c	43;"	d	file:
ROUNDED_DIV	ffmpeg/include/libavutil/common.h	55;"	d
RSHIFT	ffmpeg/include/libavutil/common.h	53;"	d
RcOverride	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct RcOverride{$/;"	s
RcOverride	ffmpeg/include/libavcodec/avcodec.h	/^} RcOverride;$/;"	t	typeref:struct:RcOverride
ReSampleContext	ffmpeg/include/libavcodec/avcodec.h	/^typedef struct ReSampleContext ReSampleContext;$/;"	t	typeref:struct:ReSampleContext
Ring	spice-common/common/ring.h	/^typedef struct Ring {$/;"	s
Ring	spice-common/common/ring.h	/^} Ring;$/;"	t	typeref:struct:Ring
RingItem	spice-common/common/ring.h	/^typedef struct Ring RingItem;$/;"	t	typeref:struct:Ring
RootDemarshallingDestination	spice-common/python_modules/demarshal.py	/^class RootDemarshallingDestination(DemarshallingDestination):$/;"	c
RootMarshallingSource	spice-common/python_modules/marshal.py	/^class RootMarshallingSource(MarshallingSource):$/;"	c
SAME_PIXEL	spice-common/common/lz_compress_tmpl.c	158;"	d	file:
SAME_PIXEL	spice-common/common/lz_compress_tmpl.c	530;"	d	file:
SAME_PIXEL	spice-common/common/lz_compress_tmpl.c	64;"	d	file:
SAME_PIXEL	spice-common/common/lz_compress_tmpl.c	79;"	d	file:
SAME_PIXEL	spice-common/common/lz_compress_tmpl.c	94;"	d	file:
SAME_PIXEL	spice-common/common/quic_rgb_tmpl.c	106;"	d	file:
SAME_PIXEL	spice-common/common/quic_rgb_tmpl.c	734;"	d	file:
SASL_MAX_DATA_LEN	glib/spice-channel.c	1335;"	d	file:
SASL_MAX_MECHLIST_LEN	glib/spice-channel.c	1333;"	d	file:
SASL_MAX_MECHNAME_LEN	glib/spice-channel.c	1334;"	d	file:
SByteArray	win32/win32_spice_interface_types.h	/^typedef struct SByteArray$/;"	s
SByteArray	win32/win32_spice_interface_types.h	/^}SByteArray;$/;"	t	typeref:struct:SByteArray
SET_GLC_BOX	spice-common/common/gl_canvas.c	164;"	d	file:
SET_GLC_RECT	spice-common/common/gl_canvas.c	157;"	d	file:
SET_b	spice-common/common/quic_rgb_tmpl.c	101;"	d	file:
SET_b	spice-common/common/quic_rgb_tmpl.c	38;"	d	file:
SET_b	spice-common/common/quic_rgb_tmpl.c	59;"	d	file:
SET_b	spice-common/common/quic_rgb_tmpl.c	763;"	d	file:
SET_b	spice-common/common/quic_rgb_tmpl.c	80;"	d	file:
SET_g	spice-common/common/quic_rgb_tmpl.c	36;"	d	file:
SET_g	spice-common/common/quic_rgb_tmpl.c	57;"	d	file:
SET_g	spice-common/common/quic_rgb_tmpl.c	761;"	d	file:
SET_g	spice-common/common/quic_rgb_tmpl.c	78;"	d	file:
SET_g	spice-common/common/quic_rgb_tmpl.c	99;"	d	file:
SET_r	spice-common/common/quic_rgb_tmpl.c	34;"	d	file:
SET_r	spice-common/common/quic_rgb_tmpl.c	55;"	d	file:
SET_r	spice-common/common/quic_rgb_tmpl.c	759;"	d	file:
SET_r	spice-common/common/quic_rgb_tmpl.c	76;"	d	file:
SET_r	spice-common/common/quic_rgb_tmpl.c	97;"	d	file:
SIZE_OVERFLOWS	spice-common/common/mem.c	137;"	d	file:
SLICE_FLAG_ALLOW_FIELD	ffmpeg/include/libavcodec/avcodec.h	2035;"	d
SLICE_FLAG_ALLOW_PLANE	ffmpeg/include/libavcodec/avcodec.h	2036;"	d
SLICE_FLAG_CODED_ORDER	ffmpeg/include/libavcodec/avcodec.h	2034;"	d
SND_CODEC_ANY_FREQUENCY	spice-common/common/snd_codec.h	53;"	d
SND_CODEC_CELT_BIT_RATE	spice-common/common/snd_codec.h	38;"	d
SND_CODEC_CELT_COMPRESSED_FRAME_BYTES	spice-common/common/snd_codec.h	40;"	d
SND_CODEC_CELT_FRAME_SIZE	spice-common/common/snd_codec.h	37;"	d
SND_CODEC_CELT_PLAYBACK_FREQ	spice-common/common/snd_codec.h	39;"	d
SND_CODEC_DECODE	spice-common/common/snd_codec.h	64;"	d
SND_CODEC_DECODER_UNAVAILABLE	spice-common/common/snd_codec.h	58;"	d
SND_CODEC_DECODE_FAILED	spice-common/common/snd_codec.h	60;"	d
SND_CODEC_ENCODE	spice-common/common/snd_codec.h	63;"	d
SND_CODEC_ENCODER_UNAVAILABLE	spice-common/common/snd_codec.h	57;"	d
SND_CODEC_ENCODE_FAILED	spice-common/common/snd_codec.h	59;"	d
SND_CODEC_INVALID_ENCODE_SIZE	spice-common/common/snd_codec.h	61;"	d
SND_CODEC_MAX_COMPRESSED_BYTES	spice-common/common/snd_codec.h	51;"	d
SND_CODEC_MAX_FRAME_BYTES	spice-common/common/snd_codec.h	50;"	d
SND_CODEC_MAX_FRAME_SIZE	spice-common/common/snd_codec.h	49;"	d
SND_CODEC_OK	spice-common/common/snd_codec.h	55;"	d
SND_CODEC_OPUS_COMPRESSED_FRAME_BYTES	spice-common/common/snd_codec.h	45;"	d
SND_CODEC_OPUS_FRAME_SIZE	spice-common/common/snd_codec.h	43;"	d
SND_CODEC_OPUS_PLAYBACK_FREQ	spice-common/common/snd_codec.h	44;"	d
SND_CODEC_PLAYBACK_CHAN	spice-common/common/snd_codec.h	47;"	d
SND_CODEC_UNAVAILABLE	spice-common/common/snd_codec.h	56;"	d
SOCKET_TIMEOUT	glib/spice-session.c	1919;"	d	file:
SOLID_RASTER_OP	spice-common/common/pixman_utils.c	41;"	d	file:
SPICEC_ERROR_CODE_AGENT_ERROR	spice-common/spice-protocol/spice/error_codes.h	44;"	d
SPICEC_ERROR_CODE_AGENT_TIMEOUT	spice-common/spice-protocol/spice/error_codes.h	43;"	d
SPICEC_ERROR_CODE_CMD_LINE_ERROR	spice-common/spice-protocol/spice/error_codes.h	48;"	d
SPICEC_ERROR_CODE_CONNECT_FAILED	spice-common/spice-protocol/spice/error_codes.h	37;"	d
SPICEC_ERROR_CODE_ERROR	spice-common/spice-protocol/spice/error_codes.h	35;"	d
SPICEC_ERROR_CODE_GETHOSTBYNAME_FAILED	spice-common/spice-protocol/spice/error_codes.h	36;"	d
SPICEC_ERROR_CODE_INVALID_ARG	spice-common/spice-protocol/spice/error_codes.h	47;"	d
SPICEC_ERROR_CODE_NOT_ENOUGH_MEMORY	spice-common/spice-protocol/spice/error_codes.h	42;"	d
SPICEC_ERROR_CODE_PERMISSION_DENIED	spice-common/spice-protocol/spice/error_codes.h	46;"	d
SPICEC_ERROR_CODE_RECV_FAILED	spice-common/spice-protocol/spice/error_codes.h	40;"	d
SPICEC_ERROR_CODE_SEND_FAILED	spice-common/spice-protocol/spice/error_codes.h	39;"	d
SPICEC_ERROR_CODE_SOCKET_FAILED	spice-common/spice-protocol/spice/error_codes.h	38;"	d
SPICEC_ERROR_CODE_SSL_ERROR	spice-common/spice-protocol/spice/error_codes.h	41;"	d
SPICEC_ERROR_CODE_SUCCESS	spice-common/spice-protocol/spice/error_codes.h	34;"	d
SPICEC_ERROR_CODE_VERSION_MISMATCH	spice-common/spice-protocol/spice/error_codes.h	45;"	d
SPICEGTK_DECODE_H_	glib/decode.h	19;"	d
SPICE_ABORT_LEVEL_DEFAULT	spice-common/common/log.c	65;"	d	file:
SPICE_ABORT_LEVEL_DEFAULT	spice-common/common/log.c	67;"	d	file:
SPICE_AGENT_MAX_DATA_SIZE	spice-common/common/messages.h	199;"	d
SPICE_ALIGN	spice-common/spice-protocol/spice/macros.h	127;"	d
SPICE_ALPHA_FLAGS_DEST_HAS_ALPHA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ALPHA_FLAGS_DEST_HAS_ALPHA = (1 << 0),$/;"	e	enum:SpiceAlphaFlags
SPICE_ALPHA_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ALPHA_FLAGS_MASK = 0x3$/;"	e	enum:SpiceAlphaFlags
SPICE_ALPHA_FLAGS_SRC_SURFACE_HAS_ALPHA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ALPHA_FLAGS_SRC_SURFACE_HAS_ALPHA = (1 << 1),$/;"	e	enum:SpiceAlphaFlags
SPICE_ATTR_NORETURN	spice-common/common/macros.h	23;"	d
SPICE_ATTR_NORETURN	spice-common/common/macros.h	28;"	d
SPICE_ATTR_PACKED	spice-common/spice-protocol/spice/end-packed.h	34;"	d
SPICE_ATTR_PACKED	spice-common/spice-protocol/spice/qxl_dev.h	/^        struct SPICE_ATTR_PACKED {$/;"	s	union:QXLCursorCmd::__anon70
SPICE_ATTR_PACKED	spice-common/spice-protocol/spice/start-packed.h	50;"	d
SPICE_ATTR_PACKED	spice-common/spice-protocol/spice/start-packed.h	60;"	d
SPICE_ATTR_PRINTF	spice-common/common/macros.h	25;"	d
SPICE_ATTR_PRINTF	spice-common/common/macros.h	29;"	d
SPICE_AUDIO	glib/spice-audio.h	29;"	d
SPICE_AUDIO_CLASS	glib/spice-audio.h	32;"	d
SPICE_AUDIO_DATA_MODE_CELT_0_5_1	spice-common/spice-protocol/spice/enums.h	/^    SPICE_AUDIO_DATA_MODE_CELT_0_5_1,$/;"	e	enum:SpiceAudioDataMode
SPICE_AUDIO_DATA_MODE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_AUDIO_DATA_MODE_ENUM_END$/;"	e	enum:SpiceAudioDataMode
SPICE_AUDIO_DATA_MODE_INVALID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_AUDIO_DATA_MODE_INVALID,$/;"	e	enum:SpiceAudioDataMode
SPICE_AUDIO_DATA_MODE_OPUS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_AUDIO_DATA_MODE_OPUS,$/;"	e	enum:SpiceAudioDataMode
SPICE_AUDIO_DATA_MODE_RAW	spice-common/spice-protocol/spice/enums.h	/^    SPICE_AUDIO_DATA_MODE_RAW,$/;"	e	enum:SpiceAudioDataMode
SPICE_AUDIO_FMT_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_AUDIO_FMT_ENUM_END$/;"	e	enum:SpiceAudioFmt
SPICE_AUDIO_FMT_INVALID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_AUDIO_FMT_INVALID,$/;"	e	enum:SpiceAudioFmt
SPICE_AUDIO_FMT_S16	spice-common/spice-protocol/spice/enums.h	/^    SPICE_AUDIO_FMT_S16,$/;"	e	enum:SpiceAudioFmt
SPICE_AUDIO_GET_CLASS	glib/spice-audio.h	41;"	d
SPICE_AUDIO_GET_PRIVATE	glib/spice-audio.c	57;"	d	file:
SPICE_BEGIN_DECLS	spice-common/spice-protocol/spice/macros.h	100;"	d
SPICE_BEGIN_DECLS	spice-common/spice-protocol/spice/macros.h	97;"	d
SPICE_BITMAP_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FLAGS_MASK = 0x7$/;"	e	enum:SpiceBitmapFlags
SPICE_BITMAP_FLAGS_PAL_CACHE_ME	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FLAGS_PAL_CACHE_ME = (1 << 0),$/;"	e	enum:SpiceBitmapFlags
SPICE_BITMAP_FLAGS_PAL_FROM_CACHE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FLAGS_PAL_FROM_CACHE = (1 << 1),$/;"	e	enum:SpiceBitmapFlags
SPICE_BITMAP_FLAGS_TOP_DOWN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FLAGS_TOP_DOWN = (1 << 2),$/;"	e	enum:SpiceBitmapFlags
SPICE_BITMAP_FMT_16BIT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_16BIT,$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_1BIT_BE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_1BIT_BE,$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_1BIT_LE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_1BIT_LE,$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_24BIT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_24BIT,$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_32BIT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_32BIT,$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_4BIT_BE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_4BIT_BE,$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_4BIT_LE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_4BIT_LE,$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_8BIT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_8BIT,$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_8BIT_A	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_8BIT_A,$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_ENUM_END$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_INVALID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_INVALID,$/;"	e	enum:SpiceBitmapFmt
SPICE_BITMAP_FMT_RGBA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BITMAP_FMT_RGBA,$/;"	e	enum:SpiceBitmapFmt
SPICE_BNF	spice-common/python_modules/spice_parser.py	/^def SPICE_BNF():$/;"	f
SPICE_BRUSH_TYPE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BRUSH_TYPE_ENUM_END$/;"	e	enum:SpiceBrushType
SPICE_BRUSH_TYPE_NONE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BRUSH_TYPE_NONE,$/;"	e	enum:SpiceBrushType
SPICE_BRUSH_TYPE_PATTERN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BRUSH_TYPE_PATTERN,$/;"	e	enum:SpiceBrushType
SPICE_BRUSH_TYPE_SOLID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_BRUSH_TYPE_SOLID,$/;"	e	enum:SpiceBrushType
SPICE_BYTESWAP16	spice-common/spice-protocol/spice/macros.h	286;"	d
SPICE_BYTESWAP16	spice-common/spice-protocol/spice/macros.h	322;"	d
SPICE_BYTESWAP16	spice-common/spice-protocol/spice/macros.h	347;"	d
SPICE_BYTESWAP16	spice-common/spice-protocol/spice/macros.h	351;"	d
SPICE_BYTESWAP16	spice-common/spice-protocol/spice/macros.h	356;"	d
SPICE_BYTESWAP16_CONSTANT	spice-common/spice-protocol/spice/macros.h	201;"	d
SPICE_BYTESWAP16_IA32	spice-common/spice-protocol/spice/macros.h	233;"	d
SPICE_BYTESWAP16_IA64	spice-common/spice-protocol/spice/macros.h	290;"	d
SPICE_BYTESWAP32	spice-common/spice-protocol/spice/macros.h	287;"	d
SPICE_BYTESWAP32	spice-common/spice-protocol/spice/macros.h	323;"	d
SPICE_BYTESWAP32	spice-common/spice-protocol/spice/macros.h	348;"	d
SPICE_BYTESWAP32	spice-common/spice-protocol/spice/macros.h	352;"	d
SPICE_BYTESWAP32	spice-common/spice-protocol/spice/macros.h	357;"	d
SPICE_BYTESWAP32_CONSTANT	spice-common/spice-protocol/spice/macros.h	205;"	d
SPICE_BYTESWAP32_IA32	spice-common/spice-protocol/spice/macros.h	247;"	d
SPICE_BYTESWAP32_IA32	spice-common/spice-protocol/spice/macros.h	261;"	d
SPICE_BYTESWAP32_IA64	spice-common/spice-protocol/spice/macros.h	301;"	d
SPICE_BYTESWAP32_X86_64	spice-common/spice-protocol/spice/macros.h	326;"	d
SPICE_BYTESWAP64	spice-common/spice-protocol/spice/macros.h	288;"	d
SPICE_BYTESWAP64	spice-common/spice-protocol/spice/macros.h	324;"	d
SPICE_BYTESWAP64	spice-common/spice-protocol/spice/macros.h	349;"	d
SPICE_BYTESWAP64	spice-common/spice-protocol/spice/macros.h	353;"	d
SPICE_BYTESWAP64	spice-common/spice-protocol/spice/macros.h	358;"	d
SPICE_BYTESWAP64_CONSTANT	spice-common/spice-protocol/spice/macros.h	211;"	d
SPICE_BYTESWAP64_IA32	spice-common/spice-protocol/spice/macros.h	272;"	d
SPICE_BYTESWAP64_IA64	spice-common/spice-protocol/spice/macros.h	312;"	d
SPICE_BYTESWAP64_X86_64	spice-common/spice-protocol/spice/macros.h	336;"	d
SPICE_CHANNEL	glib/spice-channel.h	29;"	d
SPICE_CHANNEL_CACHE_H_	glib/spice-channel-cache.h	19;"	d
SPICE_CHANNEL_CLASS	glib/spice-channel.h	30;"	d
SPICE_CHANNEL_CLOSED	glib/spice-channel.h	/^    SPICE_CHANNEL_CLOSED,$/;"	e	enum:__anon29
SPICE_CHANNEL_CURSOR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_CURSOR,$/;"	e	enum:__anon82
SPICE_CHANNEL_DISPLAY	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_DISPLAY,$/;"	e	enum:__anon82
SPICE_CHANNEL_ENUMS_H	glib/spice-channel-enums.h	2;"	d
SPICE_CHANNEL_ERROR_AUTH	glib/spice-channel.h	/^    SPICE_CHANNEL_ERROR_AUTH,$/;"	e	enum:__anon29
SPICE_CHANNEL_ERROR_CONNECT	glib/spice-channel.h	/^    SPICE_CHANNEL_ERROR_CONNECT = 20,$/;"	e	enum:__anon29
SPICE_CHANNEL_ERROR_IO	glib/spice-channel.h	/^    SPICE_CHANNEL_ERROR_IO,$/;"	e	enum:__anon29
SPICE_CHANNEL_ERROR_LINK	glib/spice-channel.h	/^    SPICE_CHANNEL_ERROR_LINK,$/;"	e	enum:__anon29
SPICE_CHANNEL_ERROR_TLS	glib/spice-channel.h	/^    SPICE_CHANNEL_ERROR_TLS,$/;"	e	enum:__anon29
SPICE_CHANNEL_EVENT	glib/spice-channel.c	/^    SPICE_CHANNEL_EVENT,$/;"	e	enum:__anon26	file:
SPICE_CHANNEL_GET_CLASS	glib/spice-channel.h	33;"	d
SPICE_CHANNEL_GET_PRIVATE	glib/spice-channel.c	77;"	d	file:
SPICE_CHANNEL_INPUTS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_INPUTS,$/;"	e	enum:__anon82
SPICE_CHANNEL_LAST_SIGNAL	glib/spice-channel.c	/^    SPICE_CHANNEL_LAST_SIGNAL,$/;"	e	enum:__anon26	file:
SPICE_CHANNEL_MAIN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_MAIN = 1,$/;"	e	enum:__anon82
SPICE_CHANNEL_NONE	glib/spice-channel.h	/^    SPICE_CHANNEL_NONE = 0,$/;"	e	enum:__anon29
SPICE_CHANNEL_OPENED	glib/spice-channel.h	/^    SPICE_CHANNEL_OPENED = 10,$/;"	e	enum:__anon29
SPICE_CHANNEL_OPEN_FD	glib/spice-channel.c	/^    SPICE_CHANNEL_OPEN_FD,$/;"	e	enum:__anon26	file:
SPICE_CHANNEL_PLAYBACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_PLAYBACK,$/;"	e	enum:__anon82
SPICE_CHANNEL_PORT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_PORT,$/;"	e	enum:__anon82
SPICE_CHANNEL_RECORD	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_RECORD,$/;"	e	enum:__anon82
SPICE_CHANNEL_SMARTCARD	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_SMARTCARD,$/;"	e	enum:__anon82
SPICE_CHANNEL_STATE_CONNECTING	glib/spice-channel-priv.h	/^    SPICE_CHANNEL_STATE_CONNECTING,$/;"	e	enum:spice_channel_state
SPICE_CHANNEL_STATE_MIGRATING	glib/spice-channel-priv.h	/^    SPICE_CHANNEL_STATE_MIGRATING,$/;"	e	enum:spice_channel_state
SPICE_CHANNEL_STATE_MIGRATION_HANDSHAKE	glib/spice-channel-priv.h	/^    SPICE_CHANNEL_STATE_MIGRATION_HANDSHAKE,$/;"	e	enum:spice_channel_state
SPICE_CHANNEL_STATE_READY	glib/spice-channel-priv.h	/^    SPICE_CHANNEL_STATE_READY,$/;"	e	enum:spice_channel_state
SPICE_CHANNEL_STATE_SWITCHING	glib/spice-channel-priv.h	/^    SPICE_CHANNEL_STATE_SWITCHING,$/;"	e	enum:spice_channel_state
SPICE_CHANNEL_STATE_UNCONNECTED	glib/spice-channel-priv.h	/^    SPICE_CHANNEL_STATE_UNCONNECTED = 0,$/;"	e	enum:spice_channel_state
SPICE_CHANNEL_SWITCHING	glib/spice-channel.h	/^    SPICE_CHANNEL_SWITCHING,$/;"	e	enum:__anon29
SPICE_CHANNEL_TUNNEL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_TUNNEL,$/;"	e	enum:__anon82
SPICE_CHANNEL_USBREDIR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_USBREDIR,$/;"	e	enum:__anon82
SPICE_CHANNEL_WEBDAV	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CHANNEL_WEBDAV,$/;"	e	enum:__anon82
SPICE_CHUNKS_FLAGS_FREE	spice-common/common/mem.h	/^    SPICE_CHUNKS_FLAGS_FREE = (1<<1)$/;"	e	enum:__anon156
SPICE_CHUNKS_FLAGS_UNSTABLE	spice-common/common/mem.h	/^    SPICE_CHUNKS_FLAGS_UNSTABLE = (1<<0),$/;"	e	enum:__anon156
SPICE_CLIENT_ERROR	glib/spice-client.h	54;"	d
SPICE_CLIENT_ERROR_AUTH_NEEDS_PASSWORD	glib/spice-client.h	/^    SPICE_CLIENT_ERROR_AUTH_NEEDS_PASSWORD,$/;"	e	enum:__anon4
SPICE_CLIENT_ERROR_AUTH_NEEDS_PASSWORD_AND_USERNAME	glib/spice-client.h	/^    SPICE_CLIENT_ERROR_AUTH_NEEDS_PASSWORD_AND_USERNAME,$/;"	e	enum:__anon4
SPICE_CLIENT_ERROR_FAILED	glib/spice-client.h	/^    SPICE_CLIENT_ERROR_FAILED,$/;"	e	enum:__anon4
SPICE_CLIENT_USB_DEVICE_LOST	glib/spice-client.h	/^    SPICE_CLIENT_USB_DEVICE_LOST,$/;"	e	enum:__anon4
SPICE_CLIENT_USB_DEVICE_REJECTED	glib/spice-client.h	/^    SPICE_CLIENT_USB_DEVICE_REJECTED,$/;"	e	enum:__anon4
SPICE_CLIP_TYPE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CLIP_TYPE_ENUM_END$/;"	e	enum:SpiceClipType
SPICE_CLIP_TYPE_NONE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CLIP_TYPE_NONE,$/;"	e	enum:SpiceClipType
SPICE_CLIP_TYPE_RECTS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CLIP_TYPE_RECTS,$/;"	e	enum:SpiceClipType
SPICE_CMDLINE_H_	win32/spice-cmdline.h	20;"	d
SPICE_COMMON_CAP_AUTH_SASL	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_COMMON_CAP_AUTH_SASL,$/;"	e	enum:__anon112
SPICE_COMMON_CAP_AUTH_SPICE	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_COMMON_CAP_AUTH_SPICE,$/;"	e	enum:__anon112
SPICE_COMMON_CAP_MINI_HEADER	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_COMMON_CAP_MINI_HEADER,$/;"	e	enum:__anon112
SPICE_COMMON_CAP_PROTOCOL_AUTH_SELECTION	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_COMMON_CAP_PROTOCOL_AUTH_SELECTION,$/;"	e	enum:__anon112
SPICE_COMMON_H_	glib/spice-common.h	19;"	d
SPICE_COMMON_H_	win32/spice-common.h	19;"	d
SPICE_COMPOSITE_COMPONENT_ALPHA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_COMPONENT_ALPHA = (1 << 18),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_DEST_OPAQUE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_DEST_OPAQUE = (1 << 24),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_FLAGS_MASK = 0x1ffffff$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_HAS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_HAS_MASK = (1 << 19),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_HAS_MASK_TRANSFORM	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_HAS_MASK_TRANSFORM = (1 << 21),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_HAS_SRC_TRANSFORM	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_HAS_SRC_TRANSFORM = (1 << 20),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_MASK_FILTER0	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_MASK_FILTER0 = (1 << 11),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_MASK_FILTER2	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_MASK_FILTER2 = (1 << 13),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_MASK_FITLER1	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_MASK_FITLER1 = (1 << 12),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_MASK_OPAQUE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_MASK_OPAQUE = (1 << 23),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_MASK_REPEAT0	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_MASK_REPEAT0 = (1 << 16),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_MASK_REPEAT1	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_MASK_REPEAT1 = (1 << 17),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_OP0	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_OP0 = (1 << 0),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_OP1	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_OP1 = (1 << 1),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_OP2	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_OP2 = (1 << 2),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_OP3	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_OP3 = (1 << 3),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_OP4	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_OP4 = (1 << 4),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_OP5	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_OP5 = (1 << 5),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_OP6	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_OP6 = (1 << 6),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_OP7	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_OP7 = (1 << 7),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_SOURCE_OPAQUE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_SOURCE_OPAQUE = (1 << 22),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_SRC_FILTER0	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_SRC_FILTER0 = (1 << 8),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_SRC_FILTER1	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_SRC_FILTER1 = (1 << 9),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_SRC_FILTER2	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_SRC_FILTER2 = (1 << 10),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_SRC_REPEAT0	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_SRC_REPEAT0 = (1 << 14),$/;"	e	enum:SpiceCompositeFlags
SPICE_COMPOSITE_SRC_REPEAT1	spice-common/spice-protocol/spice/enums.h	/^    SPICE_COMPOSITE_SRC_REPEAT1 = (1 << 15),$/;"	e	enum:SpiceCompositeFlags
SPICE_CONTAINEROF	spice-common/spice-protocol/spice/macros.h	141;"	d
SPICE_CURSOR_CHANNEL	glib/channel-cursor.h	26;"	d
SPICE_CURSOR_CHANNEL_CLASS	glib/channel-cursor.h	27;"	d
SPICE_CURSOR_CHANNEL_GET_CLASS	glib/channel-cursor.h	30;"	d
SPICE_CURSOR_CHANNEL_GET_PRIVATE	glib/channel-cursor.c	44;"	d	file:
SPICE_CURSOR_FLAGS_CACHE_ME	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_FLAGS_CACHE_ME = (1 << 1),$/;"	e	enum:SpiceCursorFlags
SPICE_CURSOR_FLAGS_FROM_CACHE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_FLAGS_FROM_CACHE = (1 << 2),$/;"	e	enum:SpiceCursorFlags
SPICE_CURSOR_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_FLAGS_MASK = 0x7$/;"	e	enum:SpiceCursorFlags
SPICE_CURSOR_FLAGS_NONE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_FLAGS_NONE = (1 << 0),$/;"	e	enum:SpiceCursorFlags
SPICE_CURSOR_HIDE	glib/channel-cursor.c	/^    SPICE_CURSOR_HIDE,$/;"	e	enum:__anon28	file:
SPICE_CURSOR_LAST_SIGNAL	glib/channel-cursor.c	/^    SPICE_CURSOR_LAST_SIGNAL,$/;"	e	enum:__anon28	file:
SPICE_CURSOR_MOVE	glib/channel-cursor.c	/^    SPICE_CURSOR_MOVE,$/;"	e	enum:__anon28	file:
SPICE_CURSOR_RESET	glib/channel-cursor.c	/^    SPICE_CURSOR_RESET,$/;"	e	enum:__anon28	file:
SPICE_CURSOR_SET	glib/channel-cursor.c	/^    SPICE_CURSOR_SET,$/;"	e	enum:__anon28	file:
SPICE_CURSOR_TYPE_ALPHA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_TYPE_ALPHA,$/;"	e	enum:SpiceCursorType
SPICE_CURSOR_TYPE_COLOR16	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_TYPE_COLOR16,$/;"	e	enum:SpiceCursorType
SPICE_CURSOR_TYPE_COLOR24	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_TYPE_COLOR24,$/;"	e	enum:SpiceCursorType
SPICE_CURSOR_TYPE_COLOR32	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_TYPE_COLOR32,$/;"	e	enum:SpiceCursorType
SPICE_CURSOR_TYPE_COLOR4	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_TYPE_COLOR4,$/;"	e	enum:SpiceCursorType
SPICE_CURSOR_TYPE_COLOR8	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_TYPE_COLOR8,$/;"	e	enum:SpiceCursorType
SPICE_CURSOR_TYPE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_TYPE_ENUM_END$/;"	e	enum:SpiceCursorType
SPICE_CURSOR_TYPE_MONO	spice-common/spice-protocol/spice/enums.h	/^    SPICE_CURSOR_TYPE_MONO,$/;"	e	enum:SpiceCursorType
SPICE_CursorMove	win32/win32_spice_interface_types.h	/^typedef struct SPICE_CursorMove$/;"	s
SPICE_CursorMove	win32/win32_spice_interface_types.h	/^}SPICE_CursorMove;$/;"	t	typeref:struct:SPICE_CursorMove
SPICE_CursorSet	win32/win32_spice_interface_types.h	/^typedef struct SPICE_CursorSet$/;"	s
SPICE_CursorSet	win32/win32_spice_interface_types.h	/^}SPICE_CursorSet;$/;"	t	typeref:struct:SPICE_CursorSet
SPICE_DEBUG	glib/spice-util.h	35;"	d
SPICE_DEPRECATED	glib/spice-util.h	55;"	d
SPICE_DEPRECATED	glib/spice-util.h	58;"	d
SPICE_DEPRECATED_FOR	glib/spice-util.h	54;"	d
SPICE_DEPRECATED_FOR	glib/spice-util.h	57;"	d
SPICE_DESKTOP_INTEGRATION	glib/desktop-integration.h	29;"	d
SPICE_DESKTOP_INTEGRATION_CLASS	glib/desktop-integration.h	30;"	d
SPICE_DESKTOP_INTEGRATION_GET_CLASS	glib/desktop-integration.h	33;"	d
SPICE_DISPLAY	win32/win32-spice-widget.h	33;"	d
SPICE_DISPLAY_CAP_A8_SURFACE	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_DISPLAY_CAP_A8_SURFACE,$/;"	e	enum:__anon116
SPICE_DISPLAY_CAP_COMPOSITE	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_DISPLAY_CAP_COMPOSITE,$/;"	e	enum:__anon116
SPICE_DISPLAY_CAP_MONITORS_CONFIG	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_DISPLAY_CAP_MONITORS_CONFIG,$/;"	e	enum:__anon116
SPICE_DISPLAY_CAP_SIZED_STREAM	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_DISPLAY_CAP_SIZED_STREAM,$/;"	e	enum:__anon116
SPICE_DISPLAY_CAP_STREAM_REPORT	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_DISPLAY_CAP_STREAM_REPORT,$/;"	e	enum:__anon116
SPICE_DISPLAY_CHANNEL	glib/channel-display.h	26;"	d
SPICE_DISPLAY_CHANNEL_CLASS	glib/channel-display.h	27;"	d
SPICE_DISPLAY_CHANNEL_GET_CLASS	glib/channel-display.h	30;"	d
SPICE_DISPLAY_CHANNEL_GET_PRIVATE	glib/channel-display.c	63;"	d	file:
SPICE_DISPLAY_CLASS	win32/win32-spice-widget.h	34;"	d
SPICE_DISPLAY_GET_CLASS	win32/win32-spice-widget.h	37;"	d
SPICE_DISPLAY_GET_PRIVATE	win32/win32-spice-widget-priv.h	44;"	d
SPICE_DISPLAY_INVALIDATE	glib/channel-display.c	/^    SPICE_DISPLAY_INVALIDATE,$/;"	e	enum:__anon8	file:
SPICE_DISPLAY_KEY_EVENT_CLICK	win32/win32-spice-widget.h	/^	SPICE_DISPLAY_KEY_EVENT_CLICK = 3,$/;"	e	enum:__anon49
SPICE_DISPLAY_KEY_EVENT_PRESS	win32/win32-spice-widget.h	/^	SPICE_DISPLAY_KEY_EVENT_PRESS = 1,$/;"	e	enum:__anon49
SPICE_DISPLAY_KEY_EVENT_RELEASE	win32/win32-spice-widget.h	/^	SPICE_DISPLAY_KEY_EVENT_RELEASE = 2,$/;"	e	enum:__anon49
SPICE_DISPLAY_LAST_SIGNAL	glib/channel-display.c	/^    SPICE_DISPLAY_LAST_SIGNAL,$/;"	e	enum:__anon8	file:
SPICE_DISPLAY_MARK	glib/channel-display.c	/^    SPICE_DISPLAY_MARK,$/;"	e	enum:__anon8	file:
SPICE_DISPLAY_PRIMARY_CREATE	glib/channel-display.c	/^    SPICE_DISPLAY_PRIMARY_CREATE,$/;"	e	enum:__anon8	file:
SPICE_DISPLAY_PRIMARY_DESTROY	glib/channel-display.c	/^    SPICE_DISPLAY_PRIMARY_DESTROY,$/;"	e	enum:__anon8	file:
SPICE_END_CHANNEL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_END_CHANNEL$/;"	e	enum:__anon82
SPICE_END_DECLS	spice-common/spice-protocol/spice/macros.h	101;"	d
SPICE_END_DECLS	spice-common/spice-protocol/spice/macros.h	98;"	d
SPICE_ERR	logger/spice_log.h	12;"	d
SPICE_ERR	logger/spice_log.h	8;"	d
SPICE_FIXED28_4	spice-common/common/draw.h	/^typedef int32_t SPICE_FIXED28_4;$/;"	t
SPICE_GET_ADDRESS	spice-common/common/draw.h	41;"	d
SPICE_GLIB_ENUMS_H	glib/spice-glib-enums.h	5;"	d
SPICE_GNUC_ALLOC_SIZE	spice-common/spice-protocol/spice/macros.h	51;"	d
SPICE_GNUC_ALLOC_SIZE	spice-common/spice-protocol/spice/macros.h	54;"	d
SPICE_GNUC_ALLOC_SIZE2	spice-common/spice-protocol/spice/macros.h	52;"	d
SPICE_GNUC_ALLOC_SIZE2	spice-common/spice-protocol/spice/macros.h	55;"	d
SPICE_GNUC_CONST	spice-common/spice-protocol/spice/macros.h	63;"	d
SPICE_GNUC_CONST	spice-common/spice-protocol/spice/macros.h	71;"	d
SPICE_GNUC_DEPRECATED	spice-common/spice-protocol/spice/macros.h	77;"	d
SPICE_GNUC_DEPRECATED	spice-common/spice-protocol/spice/macros.h	79;"	d
SPICE_GNUC_DEPRECATED_FOR	glib/spice-util.h	46;"	d
SPICE_GNUC_DEPRECATED_FOR	glib/spice-util.h	49;"	d
SPICE_GNUC_FORMAT	spice-common/spice-protocol/spice/macros.h	61;"	d
SPICE_GNUC_FORMAT	spice-common/spice-protocol/spice/macros.h	69;"	d
SPICE_GNUC_MALLOC	spice-common/spice-protocol/spice/macros.h	38;"	d
SPICE_GNUC_MALLOC	spice-common/spice-protocol/spice/macros.h	41;"	d
SPICE_GNUC_MAY_ALIAS	spice-common/spice-protocol/spice/macros.h	83;"	d
SPICE_GNUC_MAY_ALIAS	spice-common/spice-protocol/spice/macros.h	85;"	d
SPICE_GNUC_NORETURN	spice-common/spice-protocol/spice/macros.h	62;"	d
SPICE_GNUC_NORETURN	spice-common/spice-protocol/spice/macros.h	70;"	d
SPICE_GNUC_NO_INSTRUMENT	spice-common/spice-protocol/spice/macros.h	65;"	d
SPICE_GNUC_NO_INSTRUMENT	spice-common/spice-protocol/spice/macros.h	73;"	d
SPICE_GNUC_NULL_TERMINATED	spice-common/spice-protocol/spice/macros.h	45;"	d
SPICE_GNUC_NULL_TERMINATED	spice-common/spice-protocol/spice/macros.h	47;"	d
SPICE_GNUC_PRINTF	spice-common/spice-protocol/spice/macros.h	59;"	d
SPICE_GNUC_PRINTF	spice-common/spice-protocol/spice/macros.h	67;"	d
SPICE_GNUC_PURE	spice-common/spice-protocol/spice/macros.h	37;"	d
SPICE_GNUC_PURE	spice-common/spice-protocol/spice/macros.h	40;"	d
SPICE_GNUC_SCANF	spice-common/spice-protocol/spice/macros.h	60;"	d
SPICE_GNUC_SCANF	spice-common/spice-protocol/spice/macros.h	68;"	d
SPICE_GNUC_UNUSED	spice-common/spice-protocol/spice/macros.h	64;"	d
SPICE_GNUC_UNUSED	spice-common/spice-protocol/spice/macros.h	72;"	d
SPICE_GNUC_WARN_UNUSED_RESULT	spice-common/spice-protocol/spice/macros.h	89;"	d
SPICE_GNUC_WARN_UNUSED_RESULT	spice-common/spice-protocol/spice/macros.h	91;"	d
SPICE_GRAB_SEQUENCE_H	win32/spice-grabsequence.h	23;"	d
SPICE_GSTAUDIO	glib/spice-gstaudio.h	27;"	d
SPICE_GSTAUDIO_CLASS	glib/spice-gstaudio.h	28;"	d
SPICE_GSTAUDIO_GET_CLASS	glib/spice-gstaudio.h	31;"	d
SPICE_GSTAUDIO_GET_PRIVATE	glib/spice-gstaudio.c	34;"	d	file:
SPICE_GTK_CHECK_VERSION	glib/spice-version.h	63;"	d
SPICE_GTK_LOCALEDIR	win32/makefile	/^SPICE_GTK_LOCALEDIR = \/usr\/local\/share\/locale$/;"	m
SPICE_GTK_MAJOR_VERSION	glib/spice-version.h	35;"	d
SPICE_GTK_MICRO_VERSION	glib/spice-version.h	51;"	d
SPICE_GTK_MINOR_VERSION	glib/spice-version.h	43;"	d
SPICE_GTK_SESSION	win32/spice-gtk-session.h	26;"	d
SPICE_GTK_SESSION_CLASS	win32/spice-gtk-session.h	27;"	d
SPICE_GTK_SESSION_GET_CLASS	win32/spice-gtk-session.h	30;"	d
SPICE_HANDLE	win32/win32_spice_interface_types.h	/^typedef void* SPICE_HANDLE  ;$/;"	t
SPICE_IMAGE_FLAGS_CACHE_ME	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_FLAGS_CACHE_ME = (1 << 0),$/;"	e	enum:SpiceImageFlags
SPICE_IMAGE_FLAGS_CACHE_REPLACE_ME	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_FLAGS_CACHE_REPLACE_ME = (1 << 2),$/;"	e	enum:SpiceImageFlags
SPICE_IMAGE_FLAGS_HIGH_BITS_SET	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_FLAGS_HIGH_BITS_SET = (1 << 1),$/;"	e	enum:SpiceImageFlags
SPICE_IMAGE_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_FLAGS_MASK = 0x7$/;"	e	enum:SpiceImageFlags
SPICE_IMAGE_SCALE_MODE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_SCALE_MODE_ENUM_END$/;"	e	enum:SpiceImageScaleMode
SPICE_IMAGE_SCALE_MODE_INTERPOLATE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_SCALE_MODE_INTERPOLATE,$/;"	e	enum:SpiceImageScaleMode
SPICE_IMAGE_SCALE_MODE_NEAREST	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_SCALE_MODE_NEAREST,$/;"	e	enum:SpiceImageScaleMode
SPICE_IMAGE_TYPE_BITMAP	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_BITMAP,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_ENUM_END$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_FROM_CACHE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_FROM_CACHE,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_FROM_CACHE_LOSSLESS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_FROM_CACHE_LOSSLESS,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_GLZ_RGB	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_GLZ_RGB,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_JPEG	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_JPEG,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_JPEG_ALPHA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_JPEG_ALPHA,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_LZ_PLT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_LZ_PLT = 100,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_LZ_RGB	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_LZ_RGB,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_QUIC	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_QUIC,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_RESERVED	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_RESERVED,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_SURFACE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_SURFACE,$/;"	e	enum:SpiceImageType
SPICE_IMAGE_TYPE_ZLIB_GLZ_RGB	spice-common/spice-protocol/spice/enums.h	/^    SPICE_IMAGE_TYPE_ZLIB_GLZ_RGB,$/;"	e	enum:SpiceImageType
SPICE_INFO_CODE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_INFO_CODE_ENUM_END$/;"	e	enum:SpiceInfoCode
SPICE_INFO_GENERAL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_INFO_GENERAL,$/;"	e	enum:SpiceInfoCode
SPICE_INPUTS_CAPS_LOCK	glib/channel-inputs.h	/^    SPICE_INPUTS_CAPS_LOCK   = (1 << 2)$/;"	e	enum:__anon9
SPICE_INPUTS_CAP_KEY_SCANCODE	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_INPUTS_CAP_KEY_SCANCODE,$/;"	e	enum:__anon117
SPICE_INPUTS_CHANNEL	glib/channel-inputs.h	26;"	d
SPICE_INPUTS_CHANNEL_CLASS	glib/channel-inputs.h	27;"	d
SPICE_INPUTS_CHANNEL_GET_CLASS	glib/channel-inputs.h	30;"	d
SPICE_INPUTS_CHANNEL_GET_PRIVATE	glib/channel-inputs.c	43;"	d	file:
SPICE_INPUTS_LAST_SIGNAL	glib/channel-inputs.c	/^    SPICE_INPUTS_LAST_SIGNAL,$/;"	e	enum:__anon11	file:
SPICE_INPUTS_MODIFIERS	glib/channel-inputs.c	/^    SPICE_INPUTS_MODIFIERS,$/;"	e	enum:__anon11	file:
SPICE_INPUTS_NUM_LOCK	glib/channel-inputs.h	/^    SPICE_INPUTS_NUM_LOCK    = (1 << 1),$/;"	e	enum:__anon9
SPICE_INPUTS_SCROLL_LOCK	glib/channel-inputs.h	/^    SPICE_INPUTS_SCROLL_LOCK = (1 << 0),$/;"	e	enum:__anon9
SPICE_INPUT_MOTION_ACK_BUNCH	spice-common/spice-protocol/spice/protocol.h	108;"	d
SPICE_INT64_CONSTANT	spice-common/spice-protocol/spice/macros.h	188;"	d
SPICE_INT64_CONSTANT	spice-common/spice-protocol/spice/macros.h	192;"	d
SPICE_INT64_CONSTANT	spice-common/spice-protocol/spice/macros.h	195;"	d
SPICE_IS_AUDIO	glib/spice-audio.h	35;"	d
SPICE_IS_AUDIO_CLASS	glib/spice-audio.h	38;"	d
SPICE_IS_CHANNEL	glib/spice-channel.h	31;"	d
SPICE_IS_CHANNEL_CLASS	glib/spice-channel.h	32;"	d
SPICE_IS_CURSOR_CHANNEL	glib/channel-cursor.h	28;"	d
SPICE_IS_CURSOR_CHANNEL_CLASS	glib/channel-cursor.h	29;"	d
SPICE_IS_DESKTOP_INTEGRATION	glib/desktop-integration.h	31;"	d
SPICE_IS_DESKTOP_INTEGRATION_CLASS	glib/desktop-integration.h	32;"	d
SPICE_IS_DISPLAY	win32/win32-spice-widget.h	35;"	d
SPICE_IS_DISPLAY_CHANNEL	glib/channel-display.h	28;"	d
SPICE_IS_DISPLAY_CHANNEL_CLASS	glib/channel-display.h	29;"	d
SPICE_IS_DISPLAY_CLASS	win32/win32-spice-widget.h	36;"	d
SPICE_IS_GSTAUDIO	glib/spice-gstaudio.h	29;"	d
SPICE_IS_GSTAUDIO_CLASS	glib/spice-gstaudio.h	30;"	d
SPICE_IS_GTK_SESSION	win32/spice-gtk-session.h	28;"	d
SPICE_IS_GTK_SESSION_CLASS	win32/spice-gtk-session.h	29;"	d
SPICE_IS_INPUTS_CHANNEL	glib/channel-inputs.h	28;"	d
SPICE_IS_INPUTS_CHANNEL_CLASS	glib/channel-inputs.h	29;"	d
SPICE_IS_MAIN_CHANNEL	glib/channel-main.h	28;"	d
SPICE_IS_MAIN_CHANNEL_CLASS	glib/channel-main.h	29;"	d
SPICE_IS_PLAYBACK_CHANNEL	glib/channel-playback.h	28;"	d
SPICE_IS_PLAYBACK_CHANNEL_CLASS	glib/channel-playback.h	29;"	d
SPICE_IS_PORT_CHANNEL	glib/channel-port.h	29;"	d
SPICE_IS_PORT_CHANNEL_CLASS	glib/channel-port.h	30;"	d
SPICE_IS_PULSE	glib/spice-pulse.h	29;"	d
SPICE_IS_PULSE_CLASS	glib/spice-pulse.h	30;"	d
SPICE_IS_RECORD_CHANNEL	glib/channel-record.h	28;"	d
SPICE_IS_RECORD_CHANNEL_CLASS	glib/channel-record.h	29;"	d
SPICE_IS_SESSION	glib/spice-session.h	32;"	d
SPICE_IS_SESSION_CLASS	glib/spice-session.h	33;"	d
SPICE_IS_SMARTCARD_CHANNEL	glib/channel-smartcard.h	28;"	d
SPICE_IS_SMARTCARD_CHANNEL_CLASS	glib/channel-smartcard.h	29;"	d
SPICE_IS_SMARTCARD_MANAGER	glib/smartcard-manager.h	29;"	d
SPICE_IS_SMARTCARD_MANAGER_CLASS	glib/smartcard-manager.h	30;"	d
SPICE_IS_URI	glib/spice-uri.h	28;"	d
SPICE_IS_URI_CLASS	glib/spice-uri.h	29;"	d
SPICE_IS_USBREDIR_CHANNEL	glib/channel-usbredir.h	31;"	d
SPICE_IS_USBREDIR_CHANNEL_CLASS	glib/channel-usbredir.h	32;"	d
SPICE_IS_USB_DEVICE_MANAGER	glib/usb-device-manager.h	32;"	d
SPICE_IS_USB_DEVICE_MANAGER_CLASS	glib/usb-device-manager.h	33;"	d
SPICE_IS_VMC_INPUT_STREAM	glib/vmcstream.h	30;"	d
SPICE_IS_VMC_INPUT_STREAM_CLASS	glib/vmcstream.h	31;"	d
SPICE_IS_VMC_OUTPUT_STREAM	glib/vmcstream.h	57;"	d
SPICE_IS_VMC_OUTPUT_STREAM_CLASS	glib/vmcstream.h	58;"	d
SPICE_IS_VMC_STREAM	glib/vmcstream.h	69;"	d
SPICE_IS_VMC_STREAM_CLASS	glib/vmcstream.h	70;"	d
SPICE_IS_WEBDAV_CHANNEL	glib/channel-webdav.h	30;"	d
SPICE_IS_WEBDAV_CHANNEL_CLASS	glib/channel-webdav.h	31;"	d
SPICE_IS_WIN_USB_DRIVER	glib/win-usb-driver-install.h	35;"	d
SPICE_IS_WIN_USB_DRIVER_CLASS	glib/win-usb-driver-install.h	39;"	d
SPICE_Invalidate	win32/win32_spice_interface_types.h	/^typedef struct SPICE_Invalidate$/;"	s
SPICE_Invalidate	win32/win32_spice_interface_types.h	/^}SPICE_Invalidate;$/;"	t	typeref:struct:SPICE_Invalidate
SPICE_JPEG_ALPHA_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_JPEG_ALPHA_FLAGS_MASK = 0x1$/;"	e	enum:SpiceJpegAlphaFlags
SPICE_JPEG_ALPHA_FLAGS_TOP_DOWN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_JPEG_ALPHA_FLAGS_TOP_DOWN = (1 << 0),$/;"	e	enum:SpiceJpegAlphaFlags
SPICE_KEYBOARD_MODIFIER_FLAGS_CAPS_LOCK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_KEYBOARD_MODIFIER_FLAGS_CAPS_LOCK = (1 << 2),$/;"	e	enum:SpiceKeyboardModifierFlags
SPICE_KEYBOARD_MODIFIER_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_KEYBOARD_MODIFIER_FLAGS_MASK = 0x7$/;"	e	enum:SpiceKeyboardModifierFlags
SPICE_KEYBOARD_MODIFIER_FLAGS_NUM_LOCK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_KEYBOARD_MODIFIER_FLAGS_NUM_LOCK = (1 << 1),$/;"	e	enum:SpiceKeyboardModifierFlags
SPICE_KEYBOARD_MODIFIER_FLAGS_SCROLL_LOCK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_KEYBOARD_MODIFIER_FLAGS_SCROLL_LOCK = (1 << 0),$/;"	e	enum:SpiceKeyboardModifierFlags
SPICE_LIKELY	spice-common/spice-protocol/spice/macros.h	179;"	d
SPICE_LIKELY	spice-common/spice-protocol/spice/macros.h	182;"	d
SPICE_LINE_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINE_FLAGS_MASK = 0xc$/;"	e	enum:SpiceLineFlags
SPICE_LINE_FLAGS_START_WITH_GAP	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINE_FLAGS_START_WITH_GAP = (1 << 2),$/;"	e	enum:SpiceLineFlags
SPICE_LINE_FLAGS_STYLED	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINE_FLAGS_STYLED = (1 << 3),$/;"	e	enum:SpiceLineFlags
SPICE_LINK_ERR_BAD_CONNECTION_ID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_BAD_CONNECTION_ID,$/;"	e	enum:SpiceLinkErr
SPICE_LINK_ERR_CHANNEL_NOT_AVAILABLE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_CHANNEL_NOT_AVAILABLE,$/;"	e	enum:SpiceLinkErr
SPICE_LINK_ERR_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_ENUM_END$/;"	e	enum:SpiceLinkErr
SPICE_LINK_ERR_ERROR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_ERROR,$/;"	e	enum:SpiceLinkErr
SPICE_LINK_ERR_INVALID_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_INVALID_DATA,$/;"	e	enum:SpiceLinkErr
SPICE_LINK_ERR_INVALID_MAGIC	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_INVALID_MAGIC,$/;"	e	enum:SpiceLinkErr
SPICE_LINK_ERR_NEED_SECURED	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_NEED_SECURED,$/;"	e	enum:SpiceLinkErr
SPICE_LINK_ERR_NEED_UNSECURED	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_NEED_UNSECURED,$/;"	e	enum:SpiceLinkErr
SPICE_LINK_ERR_OK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_OK,$/;"	e	enum:SpiceLinkErr
SPICE_LINK_ERR_PERMISSION_DENIED	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_PERMISSION_DENIED,$/;"	e	enum:SpiceLinkErr
SPICE_LINK_ERR_VERSION_MISMATCH	spice-common/spice-protocol/spice/enums.h	/^    SPICE_LINK_ERR_VERSION_MISMATCH,$/;"	e	enum:SpiceLinkErr
SPICE_LOG	logger/spice_log.h	11;"	d
SPICE_LOG	logger/spice_log.h	7;"	d
SPICE_LOG_DOMAIN	spice-common/common/log.h	28;"	d
SPICE_LOG_LEVEL_CRITICAL	spice-common/common/log.h	/^    SPICE_LOG_LEVEL_CRITICAL,$/;"	e	enum:__anon155
SPICE_LOG_LEVEL_DEBUG	spice-common/common/log.h	/^    SPICE_LOG_LEVEL_DEBUG,$/;"	e	enum:__anon155
SPICE_LOG_LEVEL_ERROR	spice-common/common/log.h	/^    SPICE_LOG_LEVEL_ERROR,$/;"	e	enum:__anon155
SPICE_LOG_LEVEL_INFO	spice-common/common/log.h	/^    SPICE_LOG_LEVEL_INFO,$/;"	e	enum:__anon155
SPICE_LOG_LEVEL_WARNING	spice-common/common/log.h	/^    SPICE_LOG_LEVEL_WARNING,$/;"	e	enum:__anon155
SPICE_MAGIC	spice-common/spice-protocol/spice/protocol.h	38;"	d
SPICE_MAIN_AGENT_UPDATE	glib/channel-main.c	/^    SPICE_MAIN_AGENT_UPDATE,$/;"	e	enum:__anon17	file:
SPICE_MAIN_CAP_AGENT_CONNECTED_TOKENS	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_MAIN_CAP_AGENT_CONNECTED_TOKENS,$/;"	e	enum:__anon115
SPICE_MAIN_CAP_NAME_AND_UUID	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_MAIN_CAP_NAME_AND_UUID,$/;"	e	enum:__anon115
SPICE_MAIN_CAP_SEAMLESS_MIGRATE	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_MAIN_CAP_SEAMLESS_MIGRATE,$/;"	e	enum:__anon115
SPICE_MAIN_CAP_SEMI_SEAMLESS_MIGRATE	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_MAIN_CAP_SEMI_SEAMLESS_MIGRATE,$/;"	e	enum:__anon115
SPICE_MAIN_CHANNEL	glib/channel-main.h	26;"	d
SPICE_MAIN_CHANNEL_CLASS	glib/channel-main.h	27;"	d
SPICE_MAIN_CHANNEL_GET_CLASS	glib/channel-main.h	30;"	d
SPICE_MAIN_CHANNEL_GET_PRIVATE	glib/channel-main.c	50;"	d	file:
SPICE_MAIN_CLIPBOARD	glib/channel-main.c	/^    SPICE_MAIN_CLIPBOARD,$/;"	e	enum:__anon17	file:
SPICE_MAIN_CLIPBOARD_GRAB	glib/channel-main.c	/^    SPICE_MAIN_CLIPBOARD_GRAB,$/;"	e	enum:__anon17	file:
SPICE_MAIN_CLIPBOARD_RELEASE	glib/channel-main.c	/^    SPICE_MAIN_CLIPBOARD_RELEASE,$/;"	e	enum:__anon17	file:
SPICE_MAIN_CLIPBOARD_REQUEST	glib/channel-main.c	/^    SPICE_MAIN_CLIPBOARD_REQUEST,$/;"	e	enum:__anon17	file:
SPICE_MAIN_CLIPBOARD_SELECTION	glib/channel-main.c	/^    SPICE_MAIN_CLIPBOARD_SELECTION,$/;"	e	enum:__anon17	file:
SPICE_MAIN_CLIPBOARD_SELECTION_GRAB	glib/channel-main.c	/^    SPICE_MAIN_CLIPBOARD_SELECTION_GRAB,$/;"	e	enum:__anon17	file:
SPICE_MAIN_CLIPBOARD_SELECTION_RELEASE	glib/channel-main.c	/^    SPICE_MAIN_CLIPBOARD_SELECTION_RELEASE,$/;"	e	enum:__anon17	file:
SPICE_MAIN_CLIPBOARD_SELECTION_REQUEST	glib/channel-main.c	/^    SPICE_MAIN_CLIPBOARD_SELECTION_REQUEST,$/;"	e	enum:__anon17	file:
SPICE_MAIN_LAST_SIGNAL	glib/channel-main.c	/^    SPICE_MAIN_LAST_SIGNAL,$/;"	e	enum:__anon17	file:
SPICE_MAIN_MOUSE_UPDATE	glib/channel-main.c	/^    SPICE_MAIN_MOUSE_UPDATE,$/;"	e	enum:__anon17	file:
SPICE_MASK_FLAGS_INVERS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MASK_FLAGS_INVERS = (1 << 0),$/;"	e	enum:SpiceMaskFlags
SPICE_MASK_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MASK_FLAGS_MASK = 0x1$/;"	e	enum:SpiceMaskFlags
SPICE_MAX_PASSWORD_LENGTH	spice-common/spice-protocol/spice/protocol.h	43;"	d
SPICE_MEMBER	spice-common/spice-protocol/spice/macros.h	146;"	d
SPICE_MEMBER_P	spice-common/spice-protocol/spice/macros.h	144;"	d
SPICE_MENU_INTERNAL_ID_BASE	spice-common/spice-protocol/spice/controller_prot.h	119;"	d
SPICE_MENU_INTERNAL_ID_SHIFT	spice-common/spice-protocol/spice/controller_prot.h	120;"	d
SPICE_MIGRATE_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MIGRATE_FLAGS_MASK = 0x3$/;"	e	enum:SpiceMigrateFlags
SPICE_MIGRATE_NEED_DATA_TRANSFER	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MIGRATE_NEED_DATA_TRANSFER = (1 << 1),$/;"	e	enum:SpiceMigrateFlags
SPICE_MIGRATE_NEED_FLUSH	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MIGRATE_NEED_FLUSH = (1 << 0),$/;"	e	enum:SpiceMigrateFlags
SPICE_MIGRATION_STARTED	glib/channel-main.c	/^    SPICE_MIGRATION_STARTED,$/;"	e	enum:__anon17	file:
SPICE_MOUSE_BUTTON_DOWN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_DOWN,$/;"	e	enum:SpiceMouseButton
SPICE_MOUSE_BUTTON_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_ENUM_END$/;"	e	enum:SpiceMouseButton
SPICE_MOUSE_BUTTON_INVALID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_INVALID,$/;"	e	enum:SpiceMouseButton
SPICE_MOUSE_BUTTON_LEFT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_LEFT,$/;"	e	enum:SpiceMouseButton
SPICE_MOUSE_BUTTON_MASK_LEFT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_MASK_LEFT = (1 << 0),$/;"	e	enum:SpiceMouseButtonMask
SPICE_MOUSE_BUTTON_MASK_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_MASK_MASK = 0x7$/;"	e	enum:SpiceMouseButtonMask
SPICE_MOUSE_BUTTON_MASK_MIDDLE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_MASK_MIDDLE = (1 << 1),$/;"	e	enum:SpiceMouseButtonMask
SPICE_MOUSE_BUTTON_MASK_RIGHT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_MASK_RIGHT = (1 << 2),$/;"	e	enum:SpiceMouseButtonMask
SPICE_MOUSE_BUTTON_MIDDLE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_MIDDLE,$/;"	e	enum:SpiceMouseButton
SPICE_MOUSE_BUTTON_RIGHT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_RIGHT,$/;"	e	enum:SpiceMouseButton
SPICE_MOUSE_BUTTON_UP	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_BUTTON_UP,$/;"	e	enum:SpiceMouseButton
SPICE_MOUSE_MODE_CLIENT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_MODE_CLIENT = (1 << 1),$/;"	e	enum:SpiceMouseMode
SPICE_MOUSE_MODE_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_MODE_MASK = 0x3$/;"	e	enum:SpiceMouseMode
SPICE_MOUSE_MODE_SERVER	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MOUSE_MODE_SERVER = (1 << 0),$/;"	e	enum:SpiceMouseMode
SPICE_MSGC_ACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_ACK,$/;"	e	enum:__anon84
SPICE_MSGC_ACK_SYNC	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_ACK_SYNC = 1,$/;"	e	enum:__anon84
SPICE_MSGC_DISCONNECTING	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_DISCONNECTING,$/;"	e	enum:__anon84
SPICE_MSGC_DISPLAY_INIT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_DISPLAY_INIT = 101,$/;"	e	enum:__anon88
SPICE_MSGC_DISPLAY_STREAM_REPORT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_DISPLAY_STREAM_REPORT,$/;"	e	enum:__anon88
SPICE_MSGC_END_DISPLAY	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_END_DISPLAY$/;"	e	enum:__anon88
SPICE_MSGC_END_INPUTS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_END_INPUTS$/;"	e	enum:__anon90
SPICE_MSGC_END_MAIN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_END_MAIN$/;"	e	enum:__anon86
SPICE_MSGC_END_PORT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_END_PORT$/;"	e	enum:__anon102
SPICE_MSGC_END_RECORD	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_END_RECORD$/;"	e	enum:__anon94
SPICE_MSGC_END_SMARTCARD	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_END_SMARTCARD$/;"	e	enum:__anon98
SPICE_MSGC_END_SPICEVMC	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_END_SPICEVMC$/;"	e	enum:__anon100
SPICE_MSGC_END_TUNNEL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_END_TUNNEL$/;"	e	enum:__anon96
SPICE_MSGC_INPUTS_KEY_DOWN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_INPUTS_KEY_DOWN = 101,$/;"	e	enum:__anon90
SPICE_MSGC_INPUTS_KEY_MODIFIERS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_INPUTS_KEY_MODIFIERS,$/;"	e	enum:__anon90
SPICE_MSGC_INPUTS_KEY_SCANCODE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_INPUTS_KEY_SCANCODE,$/;"	e	enum:__anon90
SPICE_MSGC_INPUTS_KEY_UP	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_INPUTS_KEY_UP,$/;"	e	enum:__anon90
SPICE_MSGC_INPUTS_MOUSE_MOTION	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_INPUTS_MOUSE_MOTION = 111,$/;"	e	enum:__anon90
SPICE_MSGC_INPUTS_MOUSE_POSITION	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_INPUTS_MOUSE_POSITION,$/;"	e	enum:__anon90
SPICE_MSGC_INPUTS_MOUSE_PRESS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_INPUTS_MOUSE_PRESS,$/;"	e	enum:__anon90
SPICE_MSGC_INPUTS_MOUSE_RELEASE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_INPUTS_MOUSE_RELEASE,$/;"	e	enum:__anon90
SPICE_MSGC_MAIN_AGENT_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_AGENT_DATA,$/;"	e	enum:__anon86
SPICE_MSGC_MAIN_AGENT_START	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_AGENT_START,$/;"	e	enum:__anon86
SPICE_MSGC_MAIN_AGENT_TOKEN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_AGENT_TOKEN,$/;"	e	enum:__anon86
SPICE_MSGC_MAIN_ATTACH_CHANNELS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_ATTACH_CHANNELS,$/;"	e	enum:__anon86
SPICE_MSGC_MAIN_CLIENT_INFO	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_CLIENT_INFO = 101,$/;"	e	enum:__anon86
SPICE_MSGC_MAIN_MIGRATE_CONNECTED	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_MIGRATE_CONNECTED,$/;"	e	enum:__anon86
SPICE_MSGC_MAIN_MIGRATE_CONNECTED_SEAMLESS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_MIGRATE_CONNECTED_SEAMLESS,$/;"	e	enum:__anon86
SPICE_MSGC_MAIN_MIGRATE_CONNECT_ERROR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_MIGRATE_CONNECT_ERROR,$/;"	e	enum:__anon86
SPICE_MSGC_MAIN_MIGRATE_DST_DO_SEAMLESS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_MIGRATE_DST_DO_SEAMLESS,$/;"	e	enum:__anon86
SPICE_MSGC_MAIN_MIGRATE_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_MIGRATE_END,$/;"	e	enum:__anon86
SPICE_MSGC_MAIN_MOUSE_MODE_REQUEST	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MAIN_MOUSE_MODE_REQUEST,$/;"	e	enum:__anon86
SPICE_MSGC_MIGRATE_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MIGRATE_DATA,$/;"	e	enum:__anon84
SPICE_MSGC_MIGRATE_FLUSH_MARK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_MIGRATE_FLUSH_MARK,$/;"	e	enum:__anon84
SPICE_MSGC_PONG	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_PONG,$/;"	e	enum:__anon84
SPICE_MSGC_PORT_EVENT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_PORT_EVENT = 201,$/;"	e	enum:__anon102
SPICE_MSGC_RECORD_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_RECORD_DATA = 101,$/;"	e	enum:__anon94
SPICE_MSGC_RECORD_MODE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_RECORD_MODE,$/;"	e	enum:__anon94
SPICE_MSGC_RECORD_START_MARK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_RECORD_START_MARK,$/;"	e	enum:__anon94
SPICE_MSGC_SMARTCARD_ATR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_SMARTCARD_ATR = 101,$/;"	e	enum:__anon98
SPICE_MSGC_SMARTCARD_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_SMARTCARD_DATA = 101,$/;"	e	enum:__anon98
SPICE_MSGC_SMARTCARD_ERROR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_SMARTCARD_ERROR = 101,$/;"	e	enum:__anon98
SPICE_MSGC_SMARTCARD_HEADER	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_SMARTCARD_HEADER = 101,$/;"	e	enum:__anon98
SPICE_MSGC_SMARTCARD_READER_ADD	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_SMARTCARD_READER_ADD = 101,$/;"	e	enum:__anon98
SPICE_MSGC_SPICEVMC_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_SPICEVMC_DATA = 101,$/;"	e	enum:__anon100
SPICE_MSGC_TUNNEL_SERVICE_ADD	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_TUNNEL_SERVICE_ADD = 101,$/;"	e	enum:__anon96
SPICE_MSGC_TUNNEL_SERVICE_REMOVE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_TUNNEL_SERVICE_REMOVE,$/;"	e	enum:__anon96
SPICE_MSGC_TUNNEL_SOCKET_CLOSED	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_TUNNEL_SOCKET_CLOSED,$/;"	e	enum:__anon96
SPICE_MSGC_TUNNEL_SOCKET_CLOSED_ACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_TUNNEL_SOCKET_CLOSED_ACK,$/;"	e	enum:__anon96
SPICE_MSGC_TUNNEL_SOCKET_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_TUNNEL_SOCKET_DATA,$/;"	e	enum:__anon96
SPICE_MSGC_TUNNEL_SOCKET_FIN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_TUNNEL_SOCKET_FIN,$/;"	e	enum:__anon96
SPICE_MSGC_TUNNEL_SOCKET_OPEN_ACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_TUNNEL_SOCKET_OPEN_ACK,$/;"	e	enum:__anon96
SPICE_MSGC_TUNNEL_SOCKET_OPEN_NACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_TUNNEL_SOCKET_OPEN_NACK,$/;"	e	enum:__anon96
SPICE_MSGC_TUNNEL_SOCKET_TOKEN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSGC_TUNNEL_SOCKET_TOKEN,$/;"	e	enum:__anon96
SPICE_MSG_BASE_LAST	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_BASE_LAST = 100,$/;"	e	enum:__anon83
SPICE_MSG_CURSOR_HIDE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_CURSOR_HIDE,$/;"	e	enum:__anon91
SPICE_MSG_CURSOR_INIT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_CURSOR_INIT = 101,$/;"	e	enum:__anon91
SPICE_MSG_CURSOR_INVAL_ALL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_CURSOR_INVAL_ALL,$/;"	e	enum:__anon91
SPICE_MSG_CURSOR_INVAL_ONE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_CURSOR_INVAL_ONE,$/;"	e	enum:__anon91
SPICE_MSG_CURSOR_MOVE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_CURSOR_MOVE,$/;"	e	enum:__anon91
SPICE_MSG_CURSOR_RESET	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_CURSOR_RESET,$/;"	e	enum:__anon91
SPICE_MSG_CURSOR_SET	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_CURSOR_SET,$/;"	e	enum:__anon91
SPICE_MSG_CURSOR_TRAIL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_CURSOR_TRAIL,$/;"	e	enum:__anon91
SPICE_MSG_DISCONNECTING	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISCONNECTING,$/;"	e	enum:__anon83
SPICE_MSG_DISPLAY_COPY_BITS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_COPY_BITS,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_ALPHA_BLEND	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_ALPHA_BLEND,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_BLACKNESS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_BLACKNESS,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_BLEND	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_BLEND,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_COMPOSITE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_COMPOSITE,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_COPY	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_COPY,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_FILL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_FILL = 302,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_INVERS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_INVERS,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_OPAQUE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_OPAQUE,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_ROP3	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_ROP3,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_STROKE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_STROKE,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_TEXT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_TEXT,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_TRANSPARENT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_TRANSPARENT,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_DRAW_WHITENESS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_DRAW_WHITENESS,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_INVAL_ALL_PALETTES	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_INVAL_ALL_PALETTES,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_INVAL_ALL_PIXMAPS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_INVAL_ALL_PIXMAPS,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_INVAL_LIST	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_INVAL_LIST,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_INVAL_PALETTE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_INVAL_PALETTE,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_MARK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_MARK,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_MODE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_MODE = 101,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_MONITORS_CONFIG	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_MONITORS_CONFIG,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_RESET	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_RESET,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_STREAM_ACTIVATE_REPORT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_STREAM_ACTIVATE_REPORT,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_STREAM_CLIP	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_STREAM_CLIP,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_STREAM_CREATE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_STREAM_CREATE = 122,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_STREAM_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_STREAM_DATA,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_STREAM_DATA_SIZED	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_STREAM_DATA_SIZED,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_STREAM_DESTROY	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_STREAM_DESTROY,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_STREAM_DESTROY_ALL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_STREAM_DESTROY_ALL,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_SURFACE_CREATE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_SURFACE_CREATE,$/;"	e	enum:__anon87
SPICE_MSG_DISPLAY_SURFACE_DESTROY	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_DISPLAY_SURFACE_DESTROY,$/;"	e	enum:__anon87
SPICE_MSG_END_CURSOR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_END_CURSOR$/;"	e	enum:__anon91
SPICE_MSG_END_DISPLAY	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_END_DISPLAY$/;"	e	enum:__anon87
SPICE_MSG_END_INPUTS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_END_INPUTS$/;"	e	enum:__anon89
SPICE_MSG_END_MAIN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_END_MAIN$/;"	e	enum:__anon85
SPICE_MSG_END_PLAYBACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_END_PLAYBACK$/;"	e	enum:__anon92
SPICE_MSG_END_PORT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_END_PORT$/;"	e	enum:__anon101
SPICE_MSG_END_RECORD	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_END_RECORD$/;"	e	enum:__anon93
SPICE_MSG_END_SMARTCARD	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_END_SMARTCARD$/;"	e	enum:__anon97
SPICE_MSG_END_SPICEVMC	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_END_SPICEVMC$/;"	e	enum:__anon99
SPICE_MSG_END_TUNNEL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_END_TUNNEL$/;"	e	enum:__anon95
SPICE_MSG_INPUTS_INIT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_INPUTS_INIT = 101,$/;"	e	enum:__anon89
SPICE_MSG_INPUTS_KEY_MODIFIERS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_INPUTS_KEY_MODIFIERS,$/;"	e	enum:__anon89
SPICE_MSG_INPUTS_MOUSE_MOTION_ACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_INPUTS_MOUSE_MOTION_ACK = 111,$/;"	e	enum:__anon89
SPICE_MSG_LIST	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_LIST,$/;"	e	enum:__anon83
SPICE_MSG_MAIN_AGENT_CONNECTED	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_AGENT_CONNECTED,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_AGENT_CONNECTED_TOKENS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_AGENT_CONNECTED_TOKENS,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_AGENT_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_AGENT_DATA,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_AGENT_DISCONNECTED	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_AGENT_DISCONNECTED,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_AGENT_TOKEN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_AGENT_TOKEN,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_CHANNELS_LIST	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_CHANNELS_LIST,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_INIT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_INIT,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_MIGRATE_BEGIN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_MIGRATE_BEGIN = 101,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_MIGRATE_BEGIN_SEAMLESS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_MIGRATE_BEGIN_SEAMLESS,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_MIGRATE_CANCEL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_MIGRATE_CANCEL,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_MIGRATE_DST_SEAMLESS_ACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_MIGRATE_DST_SEAMLESS_ACK,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_MIGRATE_DST_SEAMLESS_NACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_MIGRATE_DST_SEAMLESS_NACK,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_MIGRATE_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_MIGRATE_END,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_MIGRATE_SWITCH_HOST	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_MIGRATE_SWITCH_HOST,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_MOUSE_MODE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_MOUSE_MODE,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_MULTI_MEDIA_TIME	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_MULTI_MEDIA_TIME,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_NAME	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_NAME,$/;"	e	enum:__anon85
SPICE_MSG_MAIN_UUID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MAIN_UUID,$/;"	e	enum:__anon85
SPICE_MSG_MIGRATE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MIGRATE = 1,$/;"	e	enum:__anon83
SPICE_MSG_MIGRATE_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_MIGRATE_DATA,$/;"	e	enum:__anon83
SPICE_MSG_NOTIFY	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_NOTIFY,$/;"	e	enum:__anon83
SPICE_MSG_PING	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_PING,$/;"	e	enum:__anon83
SPICE_MSG_PLAYBACK_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_PLAYBACK_DATA = 101,$/;"	e	enum:__anon92
SPICE_MSG_PLAYBACK_LATENCY	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_PLAYBACK_LATENCY,$/;"	e	enum:__anon92
SPICE_MSG_PLAYBACK_MODE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_PLAYBACK_MODE,$/;"	e	enum:__anon92
SPICE_MSG_PLAYBACK_MUTE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_PLAYBACK_MUTE,$/;"	e	enum:__anon92
SPICE_MSG_PLAYBACK_START	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_PLAYBACK_START,$/;"	e	enum:__anon92
SPICE_MSG_PLAYBACK_STOP	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_PLAYBACK_STOP,$/;"	e	enum:__anon92
SPICE_MSG_PLAYBACK_VOLUME	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_PLAYBACK_VOLUME,$/;"	e	enum:__anon92
SPICE_MSG_PORT_EVENT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_PORT_EVENT,$/;"	e	enum:__anon101
SPICE_MSG_PORT_INIT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_PORT_INIT = 201,$/;"	e	enum:__anon101
SPICE_MSG_RECORD_MUTE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_RECORD_MUTE,$/;"	e	enum:__anon93
SPICE_MSG_RECORD_START	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_RECORD_START = 101,$/;"	e	enum:__anon93
SPICE_MSG_RECORD_STOP	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_RECORD_STOP,$/;"	e	enum:__anon93
SPICE_MSG_RECORD_VOLUME	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_RECORD_VOLUME,$/;"	e	enum:__anon93
SPICE_MSG_SET_ACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_SET_ACK,$/;"	e	enum:__anon83
SPICE_MSG_SMARTCARD_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_SMARTCARD_DATA = 101,$/;"	e	enum:__anon97
SPICE_MSG_SPICEVMC_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_SPICEVMC_DATA = 101,$/;"	e	enum:__anon99
SPICE_MSG_TUNNEL_INIT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_TUNNEL_INIT = 101,$/;"	e	enum:__anon95
SPICE_MSG_TUNNEL_SERVICE_IP_MAP	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_TUNNEL_SERVICE_IP_MAP,$/;"	e	enum:__anon95
SPICE_MSG_TUNNEL_SOCKET_CLOSE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_TUNNEL_SOCKET_CLOSE,$/;"	e	enum:__anon95
SPICE_MSG_TUNNEL_SOCKET_CLOSED_ACK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_TUNNEL_SOCKET_CLOSED_ACK,$/;"	e	enum:__anon95
SPICE_MSG_TUNNEL_SOCKET_DATA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_TUNNEL_SOCKET_DATA,$/;"	e	enum:__anon95
SPICE_MSG_TUNNEL_SOCKET_FIN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_TUNNEL_SOCKET_FIN,$/;"	e	enum:__anon95
SPICE_MSG_TUNNEL_SOCKET_OPEN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_TUNNEL_SOCKET_OPEN,$/;"	e	enum:__anon95
SPICE_MSG_TUNNEL_SOCKET_TOKEN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_TUNNEL_SOCKET_TOKEN,$/;"	e	enum:__anon95
SPICE_MSG_WAIT_FOR_CHANNELS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_MSG_WAIT_FOR_CHANNELS,$/;"	e	enum:__anon83
SPICE_MainChannelEvent	win32/win32_spice_interface_types.h	/^typedef struct SPICE_MainChannelEvent$/;"	s
SPICE_MainChannelEvent	win32/win32_spice_interface_types.h	/^}SPICE_MainChannelEvent;$/;"	t	typeref:struct:SPICE_MainChannelEvent
SPICE_NOTIFY_SEVERITY_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_NOTIFY_SEVERITY_ENUM_END$/;"	e	enum:SpiceNotifySeverity
SPICE_NOTIFY_SEVERITY_ERROR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_NOTIFY_SEVERITY_ERROR,$/;"	e	enum:SpiceNotifySeverity
SPICE_NOTIFY_SEVERITY_INFO	spice-common/spice-protocol/spice/enums.h	/^    SPICE_NOTIFY_SEVERITY_INFO,$/;"	e	enum:SpiceNotifySeverity
SPICE_NOTIFY_SEVERITY_WARN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_NOTIFY_SEVERITY_WARN,$/;"	e	enum:SpiceNotifySeverity
SPICE_NOTIFY_VISIBILITY_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_NOTIFY_VISIBILITY_ENUM_END$/;"	e	enum:SpiceNotifyVisibility
SPICE_NOTIFY_VISIBILITY_HIGH	spice-common/spice-protocol/spice/enums.h	/^    SPICE_NOTIFY_VISIBILITY_HIGH,$/;"	e	enum:SpiceNotifyVisibility
SPICE_NOTIFY_VISIBILITY_LOW	spice-common/spice-protocol/spice/enums.h	/^    SPICE_NOTIFY_VISIBILITY_LOW,$/;"	e	enum:SpiceNotifyVisibility
SPICE_NOTIFY_VISIBILITY_MEDIUM	spice-common/spice-protocol/spice/enums.h	/^    SPICE_NOTIFY_VISIBILITY_MEDIUM,$/;"	e	enum:SpiceNotifyVisibility
SPICE_N_ELEMENTS	spice-common/spice-protocol/spice/macros.h	125;"	d
SPICE_OFFSETOF	spice-common/spice-protocol/spice/macros.h	134;"	d
SPICE_OFFSETOF	spice-common/spice-protocol/spice/macros.h	137;"	d
SPICE_OPTION_H	glib/spice-option.h	19;"	d
SPICE_PATH_BEGIN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PATH_BEGIN = (1 << 0),$/;"	e	enum:SpicePathFlags
SPICE_PATH_BEZIER	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PATH_BEZIER = (1 << 4),$/;"	e	enum:SpicePathFlags
SPICE_PATH_CLOSE	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PATH_CLOSE = (1 << 3),$/;"	e	enum:SpicePathFlags
SPICE_PATH_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PATH_END = (1 << 1),$/;"	e	enum:SpicePathFlags
SPICE_PATH_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PATH_FLAGS_MASK = 0x1b$/;"	e	enum:SpicePathFlags
SPICE_PLAYBACK_CAP_CELT_0_5_1	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_PLAYBACK_CAP_CELT_0_5_1,$/;"	e	enum:__anon113
SPICE_PLAYBACK_CAP_LATENCY	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_PLAYBACK_CAP_LATENCY,$/;"	e	enum:__anon113
SPICE_PLAYBACK_CAP_OPUS	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_PLAYBACK_CAP_OPUS,$/;"	e	enum:__anon113
SPICE_PLAYBACK_CAP_VOLUME	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_PLAYBACK_CAP_VOLUME,$/;"	e	enum:__anon113
SPICE_PLAYBACK_CHANNEL	glib/channel-playback.h	26;"	d
SPICE_PLAYBACK_CHANNEL_CLASS	glib/channel-playback.h	27;"	d
SPICE_PLAYBACK_CHANNEL_GET_CLASS	glib/channel-playback.h	30;"	d
SPICE_PLAYBACK_CHANNEL_GET_PRIVATE	glib/channel-playback.c	48;"	d	file:
SPICE_PLAYBACK_DATA	glib/channel-playback.c	/^    SPICE_PLAYBACK_DATA,$/;"	e	enum:__anon5	file:
SPICE_PLAYBACK_DEFAULT_LATENCY_MS	glib/channel-playback.c	90;"	d	file:
SPICE_PLAYBACK_GET_DELAY	glib/channel-playback.c	/^    SPICE_PLAYBACK_GET_DELAY,$/;"	e	enum:__anon5	file:
SPICE_PLAYBACK_LAST_SIGNAL	glib/channel-playback.c	/^    SPICE_PLAYBACK_LAST_SIGNAL,$/;"	e	enum:__anon5	file:
SPICE_PLAYBACK_START	glib/channel-playback.c	/^    SPICE_PLAYBACK_START,$/;"	e	enum:__anon5	file:
SPICE_PLAYBACK_STOP	glib/channel-playback.c	/^    SPICE_PLAYBACK_STOP,$/;"	e	enum:__anon5	file:
SPICE_PORT_CHANNEL	glib/channel-port.h	27;"	d
SPICE_PORT_CHANNEL_CLASS	glib/channel-port.h	28;"	d
SPICE_PORT_CHANNEL_GET_CLASS	glib/channel-port.h	31;"	d
SPICE_PORT_CHANNEL_GET_PRIVATE	glib/channel-port.c	56;"	d	file:
SPICE_PORT_DATA	glib/channel-port.c	/^    SPICE_PORT_DATA,$/;"	e	enum:__anon10	file:
SPICE_PORT_EVENT	glib/channel-port.c	/^    SPICE_PORT_EVENT,$/;"	e	enum:__anon10	file:
SPICE_PORT_EVENT_BREAK	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_PORT_EVENT_BREAK,$/;"	e	enum:__anon118
SPICE_PORT_EVENT_CLOSED	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_PORT_EVENT_CLOSED,$/;"	e	enum:__anon118
SPICE_PORT_EVENT_OPENED	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_PORT_EVENT_OPENED,$/;"	e	enum:__anon118
SPICE_PUBKEY_TYPE_DH	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_DH,$/;"	e	enum:SpicePubkeyType
SPICE_PUBKEY_TYPE_DSA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_DSA,$/;"	e	enum:SpicePubkeyType
SPICE_PUBKEY_TYPE_DSA1	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_DSA1,$/;"	e	enum:SpicePubkeyType
SPICE_PUBKEY_TYPE_DSA2	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_DSA2,$/;"	e	enum:SpicePubkeyType
SPICE_PUBKEY_TYPE_DSA3	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_DSA3,$/;"	e	enum:SpicePubkeyType
SPICE_PUBKEY_TYPE_DSA4	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_DSA4,$/;"	e	enum:SpicePubkeyType
SPICE_PUBKEY_TYPE_EC	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_EC,$/;"	e	enum:SpicePubkeyType
SPICE_PUBKEY_TYPE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_ENUM_END$/;"	e	enum:SpicePubkeyType
SPICE_PUBKEY_TYPE_INVALID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_INVALID,$/;"	e	enum:SpicePubkeyType
SPICE_PUBKEY_TYPE_RSA	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_RSA,$/;"	e	enum:SpicePubkeyType
SPICE_PUBKEY_TYPE_RSA2	spice-common/spice-protocol/spice/enums.h	/^    SPICE_PUBKEY_TYPE_RSA2,$/;"	e	enum:SpicePubkeyType
SPICE_PULSE	glib/spice-pulse.h	27;"	d
SPICE_PULSE_CLASS	glib/spice-pulse.h	28;"	d
SPICE_PULSE_GET_CLASS	glib/spice-pulse.h	31;"	d
SPICE_PULSE_GET_PRIVATE	glib/spice-pulse.c	29;"	d	file:
SPICE_RECORD_CAP_CELT_0_5_1	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_RECORD_CAP_CELT_0_5_1,$/;"	e	enum:__anon114
SPICE_RECORD_CAP_OPUS	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_RECORD_CAP_OPUS,$/;"	e	enum:__anon114
SPICE_RECORD_CAP_VOLUME	spice-common/spice-protocol/spice/protocol.h	/^    SPICE_RECORD_CAP_VOLUME,$/;"	e	enum:__anon114
SPICE_RECORD_CHANNEL	glib/channel-record.h	26;"	d
SPICE_RECORD_CHANNEL_CLASS	glib/channel-record.h	27;"	d
SPICE_RECORD_CHANNEL_GET_CLASS	glib/channel-record.h	30;"	d
SPICE_RECORD_CHANNEL_GET_PRIVATE	glib/channel-record.c	50;"	d	file:
SPICE_RECORD_LAST_SIGNAL	glib/channel-record.c	/^    SPICE_RECORD_LAST_SIGNAL,$/;"	e	enum:__anon6	file:
SPICE_RECORD_START	glib/channel-record.c	/^    SPICE_RECORD_START,$/;"	e	enum:__anon6	file:
SPICE_RECORD_STOP	glib/channel-record.c	/^    SPICE_RECORD_STOP,$/;"	e	enum:__anon6	file:
SPICE_RESERVED_PADDING	glib/spice-util.h	41;"	d
SPICE_RESOURCE_TYPE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_RESOURCE_TYPE_ENUM_END$/;"	e	enum:SpiceResourceType
SPICE_RES_TYPE_INVALID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_RES_TYPE_INVALID,$/;"	e	enum:SpiceResourceType
SPICE_RES_TYPE_PIXMAP	spice-common/spice-protocol/spice/enums.h	/^    SPICE_RES_TYPE_PIXMAP,$/;"	e	enum:SpiceResourceType
SPICE_RING_CONS_ITEM	spice-common/spice-protocol/spice/ipc_ring.h	120;"	d
SPICE_RING_CONS_WAIT	spice-common/spice-protocol/spice/ipc_ring.h	122;"	d
SPICE_RING_DECLARE	spice-common/spice-protocol/spice/ipc_ring.h	71;"	d
SPICE_RING_INDEX_MASK	spice-common/spice-protocol/spice/ipc_ring.h	97;"	d
SPICE_RING_INIT	spice-common/spice-protocol/spice/ipc_ring.h	89;"	d
SPICE_RING_IS_EMPTY	spice-common/spice-protocol/spice/ipc_ring.h	101;"	d
SPICE_RING_IS_FULL	spice-common/spice-protocol/spice/ipc_ring.h	103;"	d
SPICE_RING_IS_PACKED	spice-common/spice-protocol/spice/ipc_ring.h	99;"	d
SPICE_RING_POP	spice-common/spice-protocol/spice/ipc_ring.h	129;"	d
SPICE_RING_PROD_ITEM	spice-common/spice-protocol/spice/ipc_ring.h	105;"	d
SPICE_RING_PROD_WAIT	spice-common/spice-protocol/spice/ipc_ring.h	107;"	d
SPICE_RING_PUSH	spice-common/spice-protocol/spice/ipc_ring.h	114;"	d
SPICE_ROPD_INVERS_BRUSH	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_INVERS_BRUSH = (1 << 1),$/;"	e	enum:SpiceRopd
SPICE_ROPD_INVERS_DEST	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_INVERS_DEST = (1 << 2),$/;"	e	enum:SpiceRopd
SPICE_ROPD_INVERS_RES	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_INVERS_RES = (1 << 10),$/;"	e	enum:SpiceRopd
SPICE_ROPD_INVERS_SRC	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_INVERS_SRC = (1 << 0),$/;"	e	enum:SpiceRopd
SPICE_ROPD_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_MASK = 0x7ff$/;"	e	enum:SpiceRopd
SPICE_ROPD_OP_AND	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_OP_AND = (1 << 5),$/;"	e	enum:SpiceRopd
SPICE_ROPD_OP_BLACKNESS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_OP_BLACKNESS = (1 << 7),$/;"	e	enum:SpiceRopd
SPICE_ROPD_OP_INVERS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_OP_INVERS = (1 << 9),$/;"	e	enum:SpiceRopd
SPICE_ROPD_OP_OR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_OP_OR = (1 << 4),$/;"	e	enum:SpiceRopd
SPICE_ROPD_OP_PUT	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_OP_PUT = (1 << 3),$/;"	e	enum:SpiceRopd
SPICE_ROPD_OP_WHITENESS	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_OP_WHITENESS = (1 << 8),$/;"	e	enum:SpiceRopd
SPICE_ROPD_OP_XOR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_ROPD_OP_XOR = (1 << 6),$/;"	e	enum:SpiceRopd
SPICE_ROP_AND	spice-common/common/pixman_utils.h	/^    SPICE_ROP_AND,           \/* 0x1    src AND dst *\/$/;"	e	enum:__anon137
SPICE_ROP_AND_INVERTED	spice-common/common/pixman_utils.h	/^    SPICE_ROP_AND_INVERTED,  \/* 0x4    (NOT src) AND dst *\/$/;"	e	enum:__anon137
SPICE_ROP_AND_REVERSE	spice-common/common/pixman_utils.h	/^    SPICE_ROP_AND_REVERSE,   \/* 0x2    src AND NOT dst *\/$/;"	e	enum:__anon137
SPICE_ROP_CLEAR	spice-common/common/pixman_utils.h	/^    SPICE_ROP_CLEAR,         \/* 0x0    0 *\/$/;"	e	enum:__anon137
SPICE_ROP_COPY	spice-common/common/pixman_utils.h	/^    SPICE_ROP_COPY,          \/* 0x3    src *\/$/;"	e	enum:__anon137
SPICE_ROP_COPY_INVERTED	spice-common/common/pixman_utils.h	/^    SPICE_ROP_COPY_INVERTED, \/* 0xc    NOT src *\/$/;"	e	enum:__anon137
SPICE_ROP_EQUIV	spice-common/common/pixman_utils.h	/^    SPICE_ROP_EQUIV,         \/* 0x9    (NOT src) XOR dst *\/$/;"	e	enum:__anon137
SPICE_ROP_INVERT	spice-common/common/pixman_utils.h	/^    SPICE_ROP_INVERT,        \/* 0xa    NOT dst *\/$/;"	e	enum:__anon137
SPICE_ROP_NAND	spice-common/common/pixman_utils.h	/^    SPICE_ROP_NAND,          \/* 0xe    (NOT src) OR (NOT dst) *\/$/;"	e	enum:__anon137
SPICE_ROP_NOOP	spice-common/common/pixman_utils.h	/^    SPICE_ROP_NOOP,          \/* 0x5    dst *\/$/;"	e	enum:__anon137
SPICE_ROP_NOR	spice-common/common/pixman_utils.h	/^    SPICE_ROP_NOR,           \/* 0x8    (NOT src) AND (NOT dst) *\/$/;"	e	enum:__anon137
SPICE_ROP_OR	spice-common/common/pixman_utils.h	/^    SPICE_ROP_OR,            \/* 0x7    src OR dst *\/$/;"	e	enum:__anon137
SPICE_ROP_OR_INVERTED	spice-common/common/pixman_utils.h	/^    SPICE_ROP_OR_INVERTED,   \/* 0xd    (NOT src) OR dst *\/$/;"	e	enum:__anon137
SPICE_ROP_OR_REVERSE	spice-common/common/pixman_utils.h	/^    SPICE_ROP_OR_REVERSE,    \/* 0xb    src OR (NOT dst) *\/$/;"	e	enum:__anon137
SPICE_ROP_SET	spice-common/common/pixman_utils.h	/^    SPICE_ROP_SET            \/* 0xf    1 *\/$/;"	e	enum:__anon137
SPICE_ROP_XOR	spice-common/common/pixman_utils.h	/^    SPICE_ROP_XOR,           \/* 0x6    src XOR dst *\/$/;"	e	enum:__anon137
SPICE_SESSION	glib/spice-session.h	30;"	d
SPICE_SESSION_CHANNEL_DESTROY	glib/spice-session.c	/^    SPICE_SESSION_CHANNEL_DESTROY,$/;"	e	enum:__anon3	file:
SPICE_SESSION_CHANNEL_NEW	glib/spice-session.c	/^    SPICE_SESSION_CHANNEL_NEW,$/;"	e	enum:__anon3	file:
SPICE_SESSION_CLASS	glib/spice-session.h	31;"	d
SPICE_SESSION_GET_CLASS	glib/spice-session.h	34;"	d
SPICE_SESSION_GET_PRIVATE	glib/spice-session.c	76;"	d	file:
SPICE_SESSION_LAST_SIGNAL	glib/spice-session.c	/^    SPICE_SESSION_LAST_SIGNAL,$/;"	e	enum:__anon3	file:
SPICE_SESSION_MIGRATION_MIGRATING	glib/spice-session.h	/^    SPICE_SESSION_MIGRATION_MIGRATING,$/;"	e	enum:__anon19
SPICE_SESSION_MIGRATION_NONE	glib/spice-session.h	/^    SPICE_SESSION_MIGRATION_NONE,$/;"	e	enum:__anon19
SPICE_SESSION_MIGRATION_SWITCHING	glib/spice-session.h	/^    SPICE_SESSION_MIGRATION_SWITCHING,$/;"	e	enum:__anon19
SPICE_SESSION_MM_TIME_RESET	glib/spice-session.c	/^    SPICE_SESSION_MM_TIME_RESET,$/;"	e	enum:__anon3	file:
SPICE_SESSION_VERIFY_HOSTNAME	glib/spice-session.h	/^    SPICE_SESSION_VERIFY_HOSTNAME = (1 << 1),$/;"	e	enum:__anon18
SPICE_SESSION_VERIFY_PUBKEY	glib/spice-session.h	/^    SPICE_SESSION_VERIFY_PUBKEY   = (1 << 0),$/;"	e	enum:__anon18
SPICE_SESSION_VERIFY_SUBJECT	glib/spice-session.h	/^    SPICE_SESSION_VERIFY_SUBJECT  = (1 << 2),$/;"	e	enum:__anon18
SPICE_SET_ADDRESS	spice-common/common/draw.h	42;"	d
SPICE_SMARTCARD_CHANNEL	glib/channel-smartcard.h	26;"	d
SPICE_SMARTCARD_CHANNEL_CLASS	glib/channel-smartcard.h	27;"	d
SPICE_SMARTCARD_CHANNEL_GET_CLASS	glib/channel-smartcard.h	30;"	d
SPICE_SMARTCARD_CHANNEL_GET_PRIVATE	glib/channel-smartcard.c	52;"	d	file:
SPICE_SMARTCARD_MANAGER	glib/smartcard-manager.h	27;"	d
SPICE_SMARTCARD_MANAGER_CARD_INSERTED	glib/smartcard-manager.c	/^    SPICE_SMARTCARD_MANAGER_CARD_INSERTED,$/;"	e	enum:__anon21	file:
SPICE_SMARTCARD_MANAGER_CARD_REMOVED	glib/smartcard-manager.c	/^    SPICE_SMARTCARD_MANAGER_CARD_REMOVED,$/;"	e	enum:__anon21	file:
SPICE_SMARTCARD_MANAGER_CLASS	glib/smartcard-manager.h	28;"	d
SPICE_SMARTCARD_MANAGER_GET_CLASS	glib/smartcard-manager.h	31;"	d
SPICE_SMARTCARD_MANAGER_GET_PRIVATE	glib/smartcard-manager.c	54;"	d	file:
SPICE_SMARTCARD_MANAGER_LAST_SIGNAL	glib/smartcard-manager.c	/^    SPICE_SMARTCARD_MANAGER_LAST_SIGNAL,$/;"	e	enum:__anon21	file:
SPICE_SMARTCARD_MANAGER_READER_ADDED	glib/smartcard-manager.c	/^    SPICE_SMARTCARD_MANAGER_READER_ADDED,$/;"	e	enum:__anon21	file:
SPICE_SMARTCARD_MANAGER_READER_REMOVED	glib/smartcard-manager.c	/^    SPICE_SMARTCARD_MANAGER_READER_REMOVED,$/;"	e	enum:__anon21	file:
SPICE_SOFTWARE_READER_NAME	glib/smartcard-manager.c	403;"	d	file:
SPICE_SSL_VERIFY_OP	spice-common/common/ssl_verify.h	/^} SPICE_SSL_VERIFY_OP;$/;"	t	typeref:enum:__anon130
SPICE_SSL_VERIFY_OP_HOSTNAME	spice-common/common/ssl_verify.h	/^  SPICE_SSL_VERIFY_OP_HOSTNAME = (1 << 1),$/;"	e	enum:__anon130
SPICE_SSL_VERIFY_OP_NONE	spice-common/common/ssl_verify.h	/^  SPICE_SSL_VERIFY_OP_NONE     = 0,$/;"	e	enum:__anon130
SPICE_SSL_VERIFY_OP_PUBKEY	spice-common/common/ssl_verify.h	/^  SPICE_SSL_VERIFY_OP_PUBKEY   = (1 << 0),$/;"	e	enum:__anon130
SPICE_SSL_VERIFY_OP_SUBJECT	spice-common/common/ssl_verify.h	/^  SPICE_SSL_VERIFY_OP_SUBJECT  = (1 << 2),$/;"	e	enum:__anon130
SPICE_STAT_MAGIC	spice-common/spice-protocol/spice/stats.h	38;"	d
SPICE_STAT_NODE_FLAG_ENABLED	spice-common/spice-protocol/spice/stats.h	/^    SPICE_STAT_NODE_FLAG_ENABLED = (1 << 0),$/;"	e	enum:__anon64
SPICE_STAT_NODE_FLAG_VALUE	spice-common/spice-protocol/spice/stats.h	/^    SPICE_STAT_NODE_FLAG_VALUE = (1 << 2),$/;"	e	enum:__anon64
SPICE_STAT_NODE_FLAG_VISIBLE	spice-common/spice-protocol/spice/stats.h	/^    SPICE_STAT_NODE_FLAG_VISIBLE = (1 << 1),$/;"	e	enum:__anon64
SPICE_STAT_NODE_MASK_SHOW	spice-common/spice-protocol/spice/stats.h	47;"	d
SPICE_STAT_NODE_MASK_SHOW_VALUE	spice-common/spice-protocol/spice/stats.h	48;"	d
SPICE_STAT_NODE_NAME_MAX	spice-common/spice-protocol/spice/stats.h	37;"	d
SPICE_STAT_SHM_NAME	spice-common/spice-protocol/spice/stats.h	36;"	d
SPICE_STAT_VERSION	spice-common/spice-protocol/spice/stats.h	39;"	d
SPICE_STMT_END	spice-common/spice-protocol/spice/macros.h	158;"	d
SPICE_STMT_START	spice-common/spice-protocol/spice/macros.h	157;"	d
SPICE_STREAM_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_STREAM_FLAGS_MASK = 0x1$/;"	e	enum:SpiceStreamFlags
SPICE_STREAM_FLAGS_TOP_DOWN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_STREAM_FLAGS_TOP_DOWN = (1 << 0),$/;"	e	enum:SpiceStreamFlags
SPICE_STRINGIFY	spice-common/common/log.h	31;"	d
SPICE_STRINGIFY_ARG	spice-common/common/log.h	32;"	d
SPICE_STRING_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_STRING_FLAGS_MASK = 0xf$/;"	e	enum:SpiceStringFlags
SPICE_STRING_FLAGS_RASTER_A1	spice-common/spice-protocol/spice/enums.h	/^    SPICE_STRING_FLAGS_RASTER_A1 = (1 << 0),$/;"	e	enum:SpiceStringFlags
SPICE_STRING_FLAGS_RASTER_A4	spice-common/spice-protocol/spice/enums.h	/^    SPICE_STRING_FLAGS_RASTER_A4 = (1 << 1),$/;"	e	enum:SpiceStringFlags
SPICE_STRING_FLAGS_RASTER_A8	spice-common/spice-protocol/spice/enums.h	/^    SPICE_STRING_FLAGS_RASTER_A8 = (1 << 2),$/;"	e	enum:SpiceStringFlags
SPICE_STRING_FLAGS_RASTER_TOP_DOWN	spice-common/spice-protocol/spice/enums.h	/^    SPICE_STRING_FLAGS_RASTER_TOP_DOWN = (1 << 3),$/;"	e	enum:SpiceStringFlags
SPICE_STRLOC	spice-common/common/log.h	34;"	d
SPICE_SURFACE_FLAGS_MASK	spice-common/spice-protocol/spice/enums.h	/^    SPICE_SURFACE_FLAGS_MASK = 0x1$/;"	e	enum:SpiceSurfaceFlags
SPICE_SURFACE_FLAGS_PRIMARY	spice-common/spice-protocol/spice/enums.h	/^    SPICE_SURFACE_FLAGS_PRIMARY = (1 << 0),$/;"	e	enum:SpiceSurfaceFlags
SPICE_SURFACE_FMT_16_555	spice-common/spice-protocol/spice/enums.h	/^    SPICE_SURFACE_FMT_16_555 = 16,$/;"	e	enum:SpiceSurfaceFmt
SPICE_SURFACE_FMT_16_565	spice-common/spice-protocol/spice/enums.h	/^    SPICE_SURFACE_FMT_16_565 = 80,$/;"	e	enum:SpiceSurfaceFmt
SPICE_SURFACE_FMT_1_A	spice-common/spice-protocol/spice/enums.h	/^    SPICE_SURFACE_FMT_1_A,$/;"	e	enum:SpiceSurfaceFmt
SPICE_SURFACE_FMT_32_ARGB	spice-common/spice-protocol/spice/enums.h	/^    SPICE_SURFACE_FMT_32_ARGB = 96,$/;"	e	enum:SpiceSurfaceFmt
SPICE_SURFACE_FMT_32_xRGB	spice-common/spice-protocol/spice/enums.h	/^    SPICE_SURFACE_FMT_32_xRGB = 32,$/;"	e	enum:SpiceSurfaceFmt
SPICE_SURFACE_FMT_8_A	spice-common/spice-protocol/spice/enums.h	/^    SPICE_SURFACE_FMT_8_A = 8,$/;"	e	enum:SpiceSurfaceFmt
SPICE_SURFACE_FMT_DEPTH	spice-common/common/draw.h	95;"	d
SPICE_SURFACE_FMT_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_SURFACE_FMT_ENUM_END$/;"	e	enum:SpiceSurfaceFmt
SPICE_SURFACE_FMT_INVALID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_SURFACE_FMT_INVALID,$/;"	e	enum:SpiceSurfaceFmt
SPICE_SettringChange	win32/win32_spice_interface_types.h	/^typedef struct SPICE_SettringChange$/;"	s
SPICE_SettringChange	win32/win32_spice_interface_types.h	/^}SPICE_SettringChange;$/;"	t	typeref:struct:SPICE_SettringChange
SPICE_TICKET_KEY_PAIR_LENGTH	spice-common/spice-protocol/spice/protocol.h	44;"	d
SPICE_TICKET_PUBKEY_BYTES	spice-common/spice-protocol/spice/protocol.h	45;"	d
SPICE_TUNNEL_IP_TYPE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_TUNNEL_IP_TYPE_ENUM_END$/;"	e	enum:SpiceTunnelIpType
SPICE_TUNNEL_IP_TYPE_INVALID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_TUNNEL_IP_TYPE_INVALID,$/;"	e	enum:SpiceTunnelIpType
SPICE_TUNNEL_IP_TYPE_IPv4	spice-common/spice-protocol/spice/enums.h	/^    SPICE_TUNNEL_IP_TYPE_IPv4,$/;"	e	enum:SpiceTunnelIpType
SPICE_TUNNEL_SERVICE_TYPE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_TUNNEL_SERVICE_TYPE_ENUM_END$/;"	e	enum:SpiceTunnelServiceType
SPICE_TUNNEL_SERVICE_TYPE_GENERIC	spice-common/spice-protocol/spice/enums.h	/^    SPICE_TUNNEL_SERVICE_TYPE_GENERIC,$/;"	e	enum:SpiceTunnelServiceType
SPICE_TUNNEL_SERVICE_TYPE_INVALID	spice-common/spice-protocol/spice/enums.h	/^    SPICE_TUNNEL_SERVICE_TYPE_INVALID,$/;"	e	enum:SpiceTunnelServiceType
SPICE_TUNNEL_SERVICE_TYPE_IPP	spice-common/spice-protocol/spice/enums.h	/^    SPICE_TUNNEL_SERVICE_TYPE_IPP,$/;"	e	enum:SpiceTunnelServiceType
SPICE_TYPE_AUDIO	glib/spice-audio.h	27;"	d
SPICE_TYPE_CHANNEL	glib/spice-channel.h	28;"	d
SPICE_TYPE_CHANNEL_EVENT	glib/spice-glib-enums.h	9;"	d
SPICE_TYPE_CURSOR_CHANNEL	glib/channel-cursor.h	25;"	d
SPICE_TYPE_DESKTOP_INTEGRATION	glib/desktop-integration.h	28;"	d
SPICE_TYPE_DISPLAY	win32/win32-spice-widget.h	32;"	d
SPICE_TYPE_DISPLAY_CHANNEL	glib/channel-display.h	25;"	d
SPICE_TYPE_DISPLAY_KEY_EVENT	win32/spice-widget-enums.h	12;"	d
SPICE_TYPE_GRAB_SEQUENCE	win32/spice-grabsequence.h	30;"	d
SPICE_TYPE_GSTAUDIO	glib/spice-gstaudio.h	26;"	d
SPICE_TYPE_GTK_SESSION	win32/spice-gtk-session.h	25;"	d
SPICE_TYPE_INPUTS_CHANNEL	glib/channel-inputs.h	25;"	d
SPICE_TYPE_INPUTS_LOCK	glib/spice-glib-enums.h	11;"	d
SPICE_TYPE_MAIN_CHANNEL	glib/channel-main.h	25;"	d
SPICE_TYPE_PLAYBACK_CHANNEL	glib/channel-playback.h	25;"	d
SPICE_TYPE_PORT_CHANNEL	glib/channel-port.h	26;"	d
SPICE_TYPE_PULSE	glib/spice-pulse.h	26;"	d
SPICE_TYPE_RECORD_CHANNEL	glib/channel-record.h	25;"	d
SPICE_TYPE_SESSION	glib/spice-session.h	29;"	d
SPICE_TYPE_SESSION_MIGRATION	glib/spice-glib-enums.h	15;"	d
SPICE_TYPE_SESSION_VERIFY	glib/spice-glib-enums.h	13;"	d
SPICE_TYPE_SMARTCARD_CHANNEL	glib/channel-smartcard.h	25;"	d
SPICE_TYPE_SMARTCARD_MANAGER	glib/smartcard-manager.h	26;"	d
SPICE_TYPE_SMARTCARD_READER	glib/smartcard-manager.h	33;"	d
SPICE_TYPE_URI	glib/spice-uri.h	25;"	d
SPICE_TYPE_USBREDIR_CHANNEL	glib/channel-usbredir.h	28;"	d
SPICE_TYPE_USB_DEVICE	glib/usb-device-manager.h	36;"	d
SPICE_TYPE_USB_DEVICE_MANAGER	glib/usb-device-manager.h	29;"	d
SPICE_TYPE_VMC_INPUT_STREAM	glib/vmcstream.h	27;"	d
SPICE_TYPE_VMC_OUTPUT_STREAM	glib/vmcstream.h	54;"	d
SPICE_TYPE_VMC_STREAM	glib/vmcstream.h	66;"	d
SPICE_TYPE_WEBDAV_CHANNEL	glib/channel-webdav.h	27;"	d
SPICE_TYPE_WIN_USB_DRIVER	glib/win-usb-driver-install.h	32;"	d
SPICE_UINT64_CONSTANT	spice-common/spice-protocol/spice/macros.h	187;"	d
SPICE_UINT64_CONSTANT	spice-common/spice-protocol/spice/macros.h	191;"	d
SPICE_UINT64_CONSTANT	spice-common/spice-protocol/spice/macros.h	194;"	d
SPICE_UNLIKELY	spice-common/spice-protocol/spice/macros.h	180;"	d
SPICE_UNLIKELY	spice-common/spice-protocol/spice/macros.h	183;"	d
SPICE_URI	glib/spice-uri.h	26;"	d
SPICE_URI_CLASS	glib/spice-uri.h	27;"	d
SPICE_URI_DUMMY_PROPERTY	glib/spice-uri.c	/^    SPICE_URI_DUMMY_PROPERTY,$/;"	e	enum:__anon1	file:
SPICE_URI_GET_CLASS	glib/spice-uri.h	30;"	d
SPICE_URI_HOSTNAME	glib/spice-uri.c	/^    SPICE_URI_HOSTNAME,$/;"	e	enum:__anon1	file:
SPICE_URI_PASSWORD	glib/spice-uri.c	/^    SPICE_URI_PASSWORD,$/;"	e	enum:__anon1	file:
SPICE_URI_PORT	glib/spice-uri.c	/^    SPICE_URI_PORT$/;"	e	enum:__anon1	file:
SPICE_URI_SCHEME	glib/spice-uri.c	/^    SPICE_URI_SCHEME,$/;"	e	enum:__anon1	file:
SPICE_URI_USER	glib/spice-uri.c	/^    SPICE_URI_USER,$/;"	e	enum:__anon1	file:
SPICE_USBAddDev	win32/win32_spice_interface_types.h	/^typedef struct SPICE_USBAddDev$/;"	s
SPICE_USBAddDev	win32/win32_spice_interface_types.h	/^}SPICE_USBAddDev;$/;"	t	typeref:struct:SPICE_USBAddDev
SPICE_USBConnectFaild	win32/win32_spice_interface_types.h	/^typedef struct SPICE_USBConnectFaild$/;"	s
SPICE_USBConnectFaild	win32/win32_spice_interface_types.h	/^}SPICE_USBConnectFaild;$/;"	t	typeref:struct:SPICE_USBConnectFaild
SPICE_USBDeviceErr	win32/win32_spice_interface_types.h	/^typedef struct SPICE_USBDeviceErr$/;"	s
SPICE_USBDeviceErr	win32/win32_spice_interface_types.h	/^}SPICE_USBDeviceErr;$/;"	t	typeref:struct:SPICE_USBDeviceErr
SPICE_USBREDIR_CHANNEL	glib/channel-usbredir.h	29;"	d
SPICE_USBREDIR_CHANNEL_CLASS	glib/channel-usbredir.h	30;"	d
SPICE_USBREDIR_CHANNEL_GET_CLASS	glib/channel-usbredir.h	33;"	d
SPICE_USBREDIR_CHANNEL_GET_PRIVATE	glib/channel-usbredir.c	55;"	d	file:
SPICE_USBRemove	win32/win32_spice_interface_types.h	/^typedef struct SPICE_USBRemove$/;"	s
SPICE_USBRemove	win32/win32_spice_interface_types.h	/^}SPICE_USBRemove;$/;"	t	typeref:struct:SPICE_USBRemove
SPICE_USB_DEVICE_MANAGER	glib/usb-device-manager.h	30;"	d
SPICE_USB_DEVICE_MANAGER_CLASS	glib/usb-device-manager.h	31;"	d
SPICE_USB_DEVICE_MANAGER_GET_CLASS	glib/usb-device-manager.h	34;"	d
SPICE_USB_DEVICE_MANAGER_GET_PRIVATE	glib/usb-device-manager.c	83;"	d	file:
SPICE_USB_DEVICE_STATE_CONNECTED	glib/usb-device-manager.c	/^    SPICE_USB_DEVICE_STATE_CONNECTED,$/;"	e	enum:__anon15	file:
SPICE_USB_DEVICE_STATE_CONNECTING	glib/usb-device-manager.c	/^    SPICE_USB_DEVICE_STATE_CONNECTING,$/;"	e	enum:__anon15	file:
SPICE_USB_DEVICE_STATE_DISCONNECTING	glib/usb-device-manager.c	/^    SPICE_USB_DEVICE_STATE_DISCONNECTING,$/;"	e	enum:__anon15	file:
SPICE_USB_DEVICE_STATE_INSTALLED	glib/usb-device-manager.c	/^    SPICE_USB_DEVICE_STATE_INSTALLED,$/;"	e	enum:__anon15	file:
SPICE_USB_DEVICE_STATE_INSTALLING	glib/usb-device-manager.c	/^    SPICE_USB_DEVICE_STATE_INSTALLING,$/;"	e	enum:__anon15	file:
SPICE_USB_DEVICE_STATE_MAX	glib/usb-device-manager.c	/^    SPICE_USB_DEVICE_STATE_MAX$/;"	e	enum:__anon15	file:
SPICE_USB_DEVICE_STATE_NONE	glib/usb-device-manager.c	/^    SPICE_USB_DEVICE_STATE_NONE = 0, \/* this is also DISCONNECTED *\/$/;"	e	enum:__anon15	file:
SPICE_USB_DEVICE_STATE_UNINSTALLING	glib/usb-device-manager.c	/^    SPICE_USB_DEVICE_STATE_UNINSTALLING,$/;"	e	enum:__anon15	file:
SPICE_UTIL_H	glib/spice-util.h	19;"	d
SPICE_UTIL_PRIV_H	glib/spice-util-priv.h	19;"	d
SPICE_VERSION_MAJOR	spice-common/spice-protocol/spice/protocol.h	39;"	d
SPICE_VERSION_MINOR	spice-common/spice-protocol/spice/protocol.h	40;"	d
SPICE_VIDEO_CODEC_TYPE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VIDEO_CODEC_TYPE_ENUM_END$/;"	e	enum:SpiceVideoCodecType
SPICE_VIDEO_CODEC_TYPE_H264	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VIDEO_CODEC_TYPE_H264 = 2,$/;"	e	enum:SpiceVideoCodecType
SPICE_VIDEO_CODEC_TYPE_MJPEG	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VIDEO_CODEC_TYPE_MJPEG = 1,$/;"	e	enum:SpiceVideoCodecType
SPICE_VMC_INPUT_STREAM	glib/vmcstream.h	28;"	d
SPICE_VMC_INPUT_STREAM_CLASS	glib/vmcstream.h	29;"	d
SPICE_VMC_INPUT_STREAM_GET_CLASS	glib/vmcstream.h	32;"	d
SPICE_VMC_OUTPUT_STREAM	glib/vmcstream.h	55;"	d
SPICE_VMC_OUTPUT_STREAM_CLASS	glib/vmcstream.h	56;"	d
SPICE_VMC_OUTPUT_STREAM_GET_CLASS	glib/vmcstream.h	59;"	d
SPICE_VMC_STREAM	glib/vmcstream.h	67;"	d
SPICE_VMC_STREAM_CLASS	glib/vmcstream.h	68;"	d
SPICE_VMC_STREAM_GET_CLASS	glib/vmcstream.h	71;"	d
SPICE_VSC_MESSAGE_TYPE_APDU	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VSC_MESSAGE_TYPE_APDU,$/;"	e	enum:SpiceVscMessageType
SPICE_VSC_MESSAGE_TYPE_ATR	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VSC_MESSAGE_TYPE_ATR,$/;"	e	enum:SpiceVscMessageType
SPICE_VSC_MESSAGE_TYPE_CardRemove	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VSC_MESSAGE_TYPE_CardRemove,$/;"	e	enum:SpiceVscMessageType
SPICE_VSC_MESSAGE_TYPE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VSC_MESSAGE_TYPE_ENUM_END$/;"	e	enum:SpiceVscMessageType
SPICE_VSC_MESSAGE_TYPE_Error	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VSC_MESSAGE_TYPE_Error,$/;"	e	enum:SpiceVscMessageType
SPICE_VSC_MESSAGE_TYPE_Flush	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VSC_MESSAGE_TYPE_Flush,$/;"	e	enum:SpiceVscMessageType
SPICE_VSC_MESSAGE_TYPE_FlushComplete	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VSC_MESSAGE_TYPE_FlushComplete,$/;"	e	enum:SpiceVscMessageType
SPICE_VSC_MESSAGE_TYPE_Init	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VSC_MESSAGE_TYPE_Init = 1,$/;"	e	enum:SpiceVscMessageType
SPICE_VSC_MESSAGE_TYPE_ReaderAdd	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VSC_MESSAGE_TYPE_ReaderAdd,$/;"	e	enum:SpiceVscMessageType
SPICE_VSC_MESSAGE_TYPE_ReaderRemove	spice-common/spice-protocol/spice/enums.h	/^    SPICE_VSC_MESSAGE_TYPE_ReaderRemove,$/;"	e	enum:SpiceVscMessageType
SPICE_WARN_CODE_ENUM_END	spice-common/spice-protocol/spice/enums.h	/^    SPICE_WARN_CODE_ENUM_END$/;"	e	enum:SpiceWarnCode
SPICE_WARN_GENERAL	spice-common/spice-protocol/spice/enums.h	/^    SPICE_WARN_GENERAL,$/;"	e	enum:SpiceWarnCode
SPICE_WARRING	logger/spice_log.h	13;"	d
SPICE_WARRING	logger/spice_log.h	9;"	d
SPICE_WEBDAV_CHANNEL	glib/channel-webdav.h	28;"	d
SPICE_WEBDAV_CHANNEL_CLASS	glib/channel-webdav.h	29;"	d
SPICE_WEBDAV_CHANNEL_GET_CLASS	glib/channel-webdav.h	32;"	d
SPICE_WEBDAV_CHANNEL_GET_PRIVATE	glib/channel-webdav.c	50;"	d	file:
SPICE_WIDGET_ENUMS_H	win32/spice-widget-enums.h	5;"	d
SPICE_WIN_USB_DRIVER	glib/win-usb-driver-install.h	33;"	d
SPICE_WIN_USB_DRIVER_CLASS	glib/win-usb-driver-install.h	37;"	d
SPICE_WIN_USB_DRIVER_ERROR	glib/win-usb-driver-install.h	85;"	d
SPICE_WIN_USB_DRIVER_ERROR_FAILED	glib/win-usb-driver-install.h	/^    SPICE_WIN_USB_DRIVER_ERROR_FAILED,$/;"	e	enum:__anon20
SPICE_WIN_USB_DRIVER_ERROR_MESSAGE	glib/win-usb-driver-install.h	/^    SPICE_WIN_USB_DRIVER_ERROR_MESSAGE,$/;"	e	enum:__anon20
SPICE_WIN_USB_DRIVER_GET_CLASS	glib/win-usb-driver-install.h	41;"	d
SPICE_WIN_USB_DRIVER_GET_PRIVATE	glib/win-usb-driver-install.c	44;"	d	file:
SPICE_WIN_USB_DRIVER_H	glib/win-usb-driver-install.h	23;"	d
SPICY_C	win32/win32-spicy.c	25;"	d	file:
SQSECANT	spice-common/common/lines.c	298;"	d	file:
SRC	examples/makefile	/^SRC=test_bmp.c ..\/win32\/create_bmp.c$/;"	m
SRC	win32/makefile	/^SRC=win32-spicy.c win32-spicy.h win32-spice-widget.h win32-spice-widget.c win32-spice-widget-priv.h config.h \\$/;"	m
SSL_VERIFY_H	spice-common/common/ssl_verify.h	20;"	d
STATE_CAPS_LOCK	win32/win32-spicy.h	/^    STATE_CAPS_LOCK,$/;"	e	enum:__anon46
STATE_CONNECTED	glib/channel-usbredir.c	/^    STATE_CONNECTED,$/;"	e	enum:SpiceUsbredirChannelState	file:
STATE_DISCONNECTED	glib/channel-usbredir.c	/^    STATE_DISCONNECTED,$/;"	e	enum:SpiceUsbredirChannelState	file:
STATE_DISCONNECTING	glib/channel-usbredir.c	/^    STATE_DISCONNECTING,$/;"	e	enum:SpiceUsbredirChannelState	file:
STATE_MAX	win32/win32-spicy.h	/^    STATE_MAX,$/;"	e	enum:__anon46
STATE_NAME	glib/spice-pulse.c	74;"	d	file:
STATE_NUM_LOCK	win32/win32-spicy.h	/^    STATE_NUM_LOCK,$/;"	e	enum:__anon46
STATE_SCROLL_LOCK	win32/win32-spicy.h	/^    STATE_SCROLL_LOCK,$/;"	e	enum:__anon46
STATE_WAITING_FOR_ACL_HELPER	glib/channel-usbredir.c	/^    STATE_WAITING_FOR_ACL_HELPER,$/;"	e	enum:SpiceUsbredirChannelState	file:
STATIC_MUTEX	glib/spice-util-priv.h	37;"	d
STATIC_MUTEX	glib/spice-util-priv.h	43;"	d
STATIC_MUTEX_CLEAR	glib/spice-util-priv.h	39;"	d
STATIC_MUTEX_CLEAR	glib/spice-util-priv.h	45;"	d
STATIC_MUTEX_INIT	glib/spice-util-priv.h	38;"	d
STATIC_MUTEX_INIT	glib/spice-util-priv.h	44;"	d
STATIC_MUTEX_LOCK	glib/spice-util-priv.h	40;"	d
STATIC_MUTEX_LOCK	glib/spice-util-priv.h	46;"	d
STATIC_MUTEX_UNLOCK	glib/spice-util-priv.h	41;"	d
STATIC_MUTEX_UNLOCK	glib/spice-util-priv.h	47;"	d
STDC_HEADERS	config.h	139;"	d
STDC_HEADERS	glib/config.h	141;"	d
STDC_HEADERS	make/config.h	139;"	d
STDC_HEADERS	make/configcommon.h	143;"	d
STDC_HEADERS	make/configglib.h	141;"	d
STDC_HEADERS	make/configwin32.h	139;"	d
STDC_HEADERS	make/wconfig.h	139;"	d
STDC_HEADERS	make/wconfigcommon.h	143;"	d
STDC_HEADERS	make/wconfigglib.h	139;"	d
STDC_HEADERS	make/wconfigwin32.h	139;"	d
STDC_HEADERS	spice-common/config.h	143;"	d
STDC_HEADERS	win32/config.h	139;"	d
STREAM_PLAYBACK_SYNC_DROP_SEQ_LEN_LIMIT	glib/channel-display.c	1382;"	d	file:
STREAM_REPORT_DROP_SEQ_LEN_LIMIT	glib/channel-display.c	1230;"	d	file:
STRIP	makefile	/^STRIP=$(CC)-strip$/;"	m
SUBDIRS	makefile	/^SUBDIRS :=  .\/spice-common .\/glib .\/win32 .\/examples $/;"	m
SUBDIRS	spice-common/makefile	/^SUBDIRS :=  .\/common  $/;"	m
SUBSUMES	spice-common/common/region.c	39;"	d	file:
SUBTITLE_ASS	ffmpeg/include/libavcodec/avcodec.h	/^    SUBTITLE_ASS,$/;"	e	enum:AVSubtitleType
SUBTITLE_BITMAP	ffmpeg/include/libavcodec/avcodec.h	/^    SUBTITLE_BITMAP,                \/\/\/< A bitmap, pict will be set$/;"	e	enum:AVSubtitleType
SUBTITLE_NONE	ffmpeg/include/libavcodec/avcodec.h	/^    SUBTITLE_NONE,$/;"	e	enum:AVSubtitleType
SUBTITLE_TEXT	ffmpeg/include/libavcodec/avcodec.h	/^    SUBTITLE_TEXT,$/;"	e	enum:AVSubtitleType
SWAP	glib/spice-channel.c	2879;"	d	file:
SWAPINT	spice-common/common/lines.c	204;"	d	file:
SWAPINT_PAIR	spice-common/common/lines.c	210;"	d	file:
SWAPPT	spice-common/common/lines.c	207;"	d	file:
SWRESAMPLE_SWRESAMPLE_H	ffmpeg/include/libswresample/swresample.h	22;"	d
SWR_CH_MAX	ffmpeg/include/libswresample/swresample.h	130;"	d
SWR_DITHER_NB	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_NB,              \/\/\/< not part of API\/ABI$/;"	e	enum:SwrDitherType
SWR_DITHER_NONE	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_NONE = 0,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_NS = 64,         \/\/\/< not part of API\/ABI$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_F_WEIGHTED	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_NS_F_WEIGHTED,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_HIGH_SHIBATA	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_NS_HIGH_SHIBATA,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_IMPROVED_E_WEIGHTED	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_NS_IMPROVED_E_WEIGHTED,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_LIPSHITZ	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_NS_LIPSHITZ,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_LOW_SHIBATA	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_NS_LOW_SHIBATA,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_MODIFIED_E_WEIGHTED	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_NS_MODIFIED_E_WEIGHTED,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_SHIBATA	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_NS_SHIBATA,$/;"	e	enum:SwrDitherType
SWR_DITHER_RECTANGULAR	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_RECTANGULAR,$/;"	e	enum:SwrDitherType
SWR_DITHER_TRIANGULAR	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_TRIANGULAR,$/;"	e	enum:SwrDitherType
SWR_DITHER_TRIANGULAR_HIGHPASS	ffmpeg/include/libswresample/swresample.h	/^    SWR_DITHER_TRIANGULAR_HIGHPASS,$/;"	e	enum:SwrDitherType
SWR_ENGINE_NB	ffmpeg/include/libswresample/swresample.h	/^    SWR_ENGINE_NB,              \/\/\/< not part of API\/ABI$/;"	e	enum:SwrEngine
SWR_ENGINE_SOXR	ffmpeg/include/libswresample/swresample.h	/^    SWR_ENGINE_SOXR,            \/**< SoX Resampler *\/$/;"	e	enum:SwrEngine
SWR_ENGINE_SWR	ffmpeg/include/libswresample/swresample.h	/^    SWR_ENGINE_SWR,             \/**< SW Resampler *\/$/;"	e	enum:SwrEngine
SWR_FILTER_TYPE_BLACKMAN_NUTTALL	ffmpeg/include/libswresample/swresample.h	/^    SWR_FILTER_TYPE_BLACKMAN_NUTTALL,   \/**< Blackman Nuttall Windowed Sinc *\/$/;"	e	enum:SwrFilterType
SWR_FILTER_TYPE_CUBIC	ffmpeg/include/libswresample/swresample.h	/^    SWR_FILTER_TYPE_CUBIC,              \/**< Cubic *\/$/;"	e	enum:SwrFilterType
SWR_FILTER_TYPE_KAISER	ffmpeg/include/libswresample/swresample.h	/^    SWR_FILTER_TYPE_KAISER,             \/**< Kaiser Windowed Sinc *\/$/;"	e	enum:SwrFilterType
SWR_FLAG_RESAMPLE	ffmpeg/include/libswresample/swresample.h	140;"	d
SWR_VERSION_H	ffmpeg/include/libswresample/version.h	22;"	d
SWSCALE_SWSCALE_H	ffmpeg/include/libswscale/swscale.h	22;"	d
SWSCALE_VERSION_H	ffmpeg/include/libswscale/version.h	20;"	d
SWS_ACCURATE_RND	ffmpeg/include/libswscale/swscale.h	81;"	d
SWS_AREA	ffmpeg/include/libswscale/swscale.h	61;"	d
SWS_BICUBIC	ffmpeg/include/libswscale/swscale.h	58;"	d
SWS_BICUBLIN	ffmpeg/include/libswscale/swscale.h	62;"	d
SWS_BILINEAR	ffmpeg/include/libswscale/swscale.h	57;"	d
SWS_BITEXACT	ffmpeg/include/libswscale/swscale.h	82;"	d
SWS_CPU_CAPS_3DNOW	ffmpeg/include/libswscale/swscale.h	93;"	d
SWS_CPU_CAPS_ALTIVEC	ffmpeg/include/libswscale/swscale.h	94;"	d
SWS_CPU_CAPS_BFIN	ffmpeg/include/libswscale/swscale.h	96;"	d
SWS_CPU_CAPS_MMX	ffmpeg/include/libswscale/swscale.h	90;"	d
SWS_CPU_CAPS_MMX2	ffmpeg/include/libswscale/swscale.h	92;"	d
SWS_CPU_CAPS_MMXEXT	ffmpeg/include/libswscale/swscale.h	91;"	d
SWS_CPU_CAPS_SSE2	ffmpeg/include/libswscale/swscale.h	98;"	d
SWS_CS_DEFAULT	ffmpeg/include/libswscale/swscale.h	109;"	d
SWS_CS_FCC	ffmpeg/include/libswscale/swscale.h	104;"	d
SWS_CS_ITU601	ffmpeg/include/libswscale/swscale.h	105;"	d
SWS_CS_ITU624	ffmpeg/include/libswscale/swscale.h	106;"	d
SWS_CS_ITU709	ffmpeg/include/libswscale/swscale.h	103;"	d
SWS_CS_SMPTE170M	ffmpeg/include/libswscale/swscale.h	107;"	d
SWS_CS_SMPTE240M	ffmpeg/include/libswscale/swscale.h	108;"	d
SWS_DIRECT_BGR	ffmpeg/include/libswscale/swscale.h	80;"	d
SWS_ERROR_DIFFUSION	ffmpeg/include/libswscale/swscale.h	83;"	d
SWS_FAST_BILINEAR	ffmpeg/include/libswscale/swscale.h	56;"	d
SWS_FULL_CHR_H_INP	ffmpeg/include/libswscale/swscale.h	79;"	d
SWS_FULL_CHR_H_INT	ffmpeg/include/libswscale/swscale.h	77;"	d
SWS_GAUSS	ffmpeg/include/libswscale/swscale.h	63;"	d
SWS_LANCZOS	ffmpeg/include/libswscale/swscale.h	65;"	d
SWS_MAX_REDUCE_CUTOFF	ffmpeg/include/libswscale/swscale.h	101;"	d
SWS_PARAM_DEFAULT	ffmpeg/include/libswscale/swscale.h	71;"	d
SWS_POINT	ffmpeg/include/libswscale/swscale.h	60;"	d
SWS_PRINT_INFO	ffmpeg/include/libswscale/swscale.h	73;"	d
SWS_SINC	ffmpeg/include/libswscale/swscale.h	64;"	d
SWS_SPLINE	ffmpeg/include/libswscale/swscale.h	66;"	d
SWS_SRC_V_CHR_DROP_MASK	ffmpeg/include/libswscale/swscale.h	68;"	d
SWS_SRC_V_CHR_DROP_SHIFT	ffmpeg/include/libswscale/swscale.h	69;"	d
SWS_X	ffmpeg/include/libswscale/swscale.h	59;"	d
SW_CANVAS_CACHE	glib/client_sw_canvas.c	18;"	d	file:
SW_CANVAS_CACHE	glib/client_sw_canvas.h	21;"	d
SetYMajorOctant	spice-common/common/lines.c	232;"	d	file:
SmartcardManagerInitArgs	glib/smartcard-manager.c	/^} SmartcardManagerInitArgs;$/;"	t	typeref:struct:__anon22	file:
SmartcardSource	glib/smartcard-manager.c	/^typedef struct _SmartcardSource SmartcardSource;$/;"	t	typeref:struct:_SmartcardSource	file:
SmartcardSourceFunc	glib/smartcard-manager.c	/^typedef gboolean (*SmartcardSourceFunc)(VEvent *event, gpointer user_data);$/;"	t	file:
SndCodec	spice-common/common/snd_codec.h	/^typedef struct SndCodecInternal * SndCodec;$/;"	t	typeref:struct:SndCodecInternal
SndCodecInternal	spice-common/common/snd_codec.c	/^} SndCodecInternal;$/;"	t	typeref:struct:__anon134	file:
SpanDataPtr	spice-common/common/lines.c	/^} SpanDataRec, *SpanDataPtr;$/;"	t	typeref:struct:_SpanData	file:
SpanDataRec	spice-common/common/lines.c	/^} SpanDataRec, *SpanDataPtr;$/;"	t	typeref:struct:_SpanData	file:
SpanGroup	spice-common/common/lines.c	/^} SpanGroup;$/;"	t	typeref:struct:__anon148	file:
Spans	spice-common/common/lines.c	/^} Spans;$/;"	t	typeref:struct:__anon147	file:
SpiceAlphaBlend	spice-common/common/draw.h	/^typedef struct SpiceAlphaBlend {$/;"	s
SpiceAlphaBlend	spice-common/common/draw.h	/^} SpiceAlphaBlend;$/;"	t	typeref:struct:SpiceAlphaBlend
SpiceAlphaFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceAlphaFlags {$/;"	g
SpiceAlphaFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceAlphaFlags;$/;"	t	typeref:enum:SpiceAlphaFlags
SpiceAudio	glib/spice-audio.h	/^typedef struct _SpiceAudio SpiceAudio;$/;"	t	typeref:struct:_SpiceAudio
SpiceAudioClass	glib/spice-audio.h	/^typedef struct _SpiceAudioClass SpiceAudioClass;$/;"	t	typeref:struct:_SpiceAudioClass
SpiceAudioDataMode	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceAudioDataMode {$/;"	g
SpiceAudioDataMode	spice-common/spice-protocol/spice/enums.h	/^} SpiceAudioDataMode;$/;"	t	typeref:enum:SpiceAudioDataMode
SpiceAudioFmt	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceAudioFmt {$/;"	g
SpiceAudioFmt	spice-common/spice-protocol/spice/enums.h	/^} SpiceAudioFmt;$/;"	t	typeref:enum:SpiceAudioFmt
SpiceAudioPrivate	glib/spice-audio.h	/^typedef struct _SpiceAudioPrivate SpiceAudioPrivate;$/;"	t	typeref:struct:_SpiceAudioPrivate
SpiceBitmap	spice-common/common/draw.h	/^typedef struct SpiceBitmap {$/;"	s
SpiceBitmap	spice-common/common/draw.h	/^} SpiceBitmap;$/;"	t	typeref:struct:SpiceBitmap
SpiceBitmapFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceBitmapFlags {$/;"	g
SpiceBitmapFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceBitmapFlags;$/;"	t	typeref:enum:SpiceBitmapFlags
SpiceBitmapFmt	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceBitmapFmt {$/;"	g
SpiceBitmapFmt	spice-common/spice-protocol/spice/enums.h	/^} SpiceBitmapFmt;$/;"	t	typeref:enum:SpiceBitmapFmt
SpiceBlackness	spice-common/common/draw.h	/^typedef struct SpiceBlackness {$/;"	s
SpiceBlackness	spice-common/common/draw.h	/^} SpiceBlackness, SpiceInvers, SpiceWhiteness;$/;"	t	typeref:struct:SpiceBlackness
SpiceBlend	spice-common/common/draw.h	/^} SpiceCopy, SpiceBlend;$/;"	t	typeref:struct:SpiceCopy
SpiceBrush	spice-common/common/draw.h	/^typedef struct SpiceBrush {$/;"	s
SpiceBrush	spice-common/common/draw.h	/^} SpiceBrush;$/;"	t	typeref:struct:SpiceBrush
SpiceBrushType	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceBrushType {$/;"	g
SpiceBrushType	spice-common/spice-protocol/spice/enums.h	/^} SpiceBrushType;$/;"	t	typeref:enum:SpiceBrushType
SpiceBuffer	spice-common/common/mem.h	/^typedef struct SpiceBuffer$/;"	s
SpiceBuffer	spice-common/common/mem.h	/^} SpiceBuffer;$/;"	t	typeref:struct:SpiceBuffer
SpiceButtonEvent	win32/win32_spice_interface.c	/^void SpiceButtonEvent(IN_OUT SPICE_HANDLE sh,IN int hspice,IN int  x, IN int y, IN int metaState, IN int type)$/;"	f
SpiceCallBacks	win32/win32_spice_interface_types.h	/^typedef struct SpiceCallBacks$/;"	s
SpiceCallBacks	win32/win32_spice_interface_types.h	/^}SpiceCallBacks;$/;"	t	typeref:struct:SpiceCallBacks
SpiceCanvas	spice-common/common/canvas_base.h	/^typedef struct _SpiceCanvas SpiceCanvas;$/;"	t	typeref:struct:_SpiceCanvas
SpiceCanvasOps	spice-common/common/canvas_base.h	/^} SpiceCanvasOps;$/;"	t	typeref:struct:__anon145
SpiceChannel	glib/spice-types.h	/^typedef struct _SpiceChannel SpiceChannel;$/;"	t	typeref:struct:_SpiceChannel
SpiceChannelClass	glib/spice-types.h	/^typedef struct _SpiceChannelClass SpiceChannelClass;$/;"	t	typeref:struct:_SpiceChannelClass
SpiceChannelEvent	glib/spice-channel.h	/^} SpiceChannelEvent;$/;"	t	typeref:enum:__anon29
SpiceChannelId	spice-common/common/messages.h	/^typedef struct SpiceChannelId {$/;"	s
SpiceChannelId	spice-common/common/messages.h	/^} SpiceChannelId;$/;"	t	typeref:struct:SpiceChannelId
SpiceChannelPrivate	glib/spice-types.h	/^typedef struct _SpiceChannelPrivate SpiceChannelPrivate;$/;"	t	typeref:struct:_SpiceChannelPrivate
SpiceChunk	spice-common/common/mem.h	/^typedef struct SpiceChunk {$/;"	s
SpiceChunk	spice-common/common/mem.h	/^} SpiceChunk;$/;"	t	typeref:struct:SpiceChunk
SpiceChunks	spice-common/common/mem.h	/^typedef struct SpiceChunks {$/;"	s
SpiceChunks	spice-common/common/mem.h	/^} SpiceChunks;$/;"	t	typeref:struct:SpiceChunks
SpiceClientError	glib/spice-client.h	/^} SpiceClientError;$/;"	t	typeref:enum:__anon4
SpiceClip	spice-common/common/draw.h	/^typedef struct SpiceClip {$/;"	s
SpiceClip	spice-common/common/draw.h	/^} SpiceClip;$/;"	t	typeref:struct:SpiceClip
SpiceClipRects	spice-common/common/draw.h	/^typedef struct SpiceClipRects {$/;"	s
SpiceClipRects	spice-common/common/draw.h	/^} SpiceClipRects;$/;"	t	typeref:struct:SpiceClipRects
SpiceClipType	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceClipType {$/;"	g
SpiceClipType	spice-common/spice-protocol/spice/enums.h	/^} SpiceClipType;$/;"	t	typeref:enum:SpiceClipType
SpiceClose	win32/win32_spice_interface.c	/^int SpiceClose(IN_OUT SPICE_HANDLE sh,IN int hspice)$/;"	f
SpiceCloseMain	win32/win32_spice_interface.c	/^int SpiceCloseMain(IN_OUT SPICE_HANDLE sh,IN int hmain)$/;"	f
SpiceComposite	spice-common/common/draw.h	/^typedef struct SpiceComposite {$/;"	s
SpiceComposite	spice-common/common/draw.h	/^} SpiceComposite;$/;"	t	typeref:struct:SpiceComposite
SpiceCompositeFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceCompositeFlags {$/;"	g
SpiceCompositeFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceCompositeFlags;$/;"	t	typeref:enum:SpiceCompositeFlags
SpiceConnList	win32/win32_spice_interface_priv.h	/^   priv_spice_connection* SpiceConnList[MAX_SPICE_CONNECT]; $/;"	m	struct:Win32SpiceGloabInfo
SpiceConnect	win32/win32_spice_interface.c	/^int SpiceConnect(IN_OUT SPICE_HANDLE sh,IN int hspice,IN const char * host,IN const char * port,IN const char *tp,$/;"	f
SpiceConnectARGS	win32/win32_spice_interface.c	/^struct SpiceConnectARGS$/;"	s	file:
SpiceConnect_thread	win32/win32_spice_interface.c	/^static gboolean  SpiceConnect_thread(gpointer data)$/;"	f	file:
SpiceCopy	spice-common/common/draw.h	/^typedef struct SpiceCopy {$/;"	s
SpiceCopy	spice-common/common/draw.h	/^} SpiceCopy, SpiceBlend;$/;"	t	typeref:struct:SpiceCopy
SpiceCreateOvirtSession	win32/win32_spice_interface.c	/^int SpiceCreateOvirtSession(IN_OUT SPICE_HANDLE sh,IN int hspice,IN const char* URI, IN const char * user, IN const char *  pass,$/;"	f
SpiceCursor	spice-common/common/messages.h	/^typedef struct SpiceCursor {$/;"	s
SpiceCursor	spice-common/common/messages.h	/^} SpiceCursor;$/;"	t	typeref:struct:SpiceCursor
SpiceCursorChannel	glib/channel-cursor.h	/^typedef struct _SpiceCursorChannel SpiceCursorChannel;$/;"	t	typeref:struct:_SpiceCursorChannel
SpiceCursorChannelClass	glib/channel-cursor.h	/^typedef struct _SpiceCursorChannelClass SpiceCursorChannelClass;$/;"	t	typeref:struct:_SpiceCursorChannelClass
SpiceCursorChannelPrivate	glib/channel-cursor.h	/^typedef struct _SpiceCursorChannelPrivate SpiceCursorChannelPrivate;$/;"	t	typeref:struct:_SpiceCursorChannelPrivate
SpiceCursorFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceCursorFlags {$/;"	g
SpiceCursorFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceCursorFlags;$/;"	t	typeref:enum:SpiceCursorFlags
SpiceCursorHeader	spice-common/common/draw.h	/^typedef struct SpiceCursorHeader {$/;"	s
SpiceCursorHeader	spice-common/common/draw.h	/^} SpiceCursorHeader;$/;"	t	typeref:struct:SpiceCursorHeader
SpiceCursorType	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceCursorType {$/;"	g
SpiceCursorType	spice-common/spice-protocol/spice/enums.h	/^} SpiceCursorType;$/;"	t	typeref:enum:SpiceCursorType
SpiceDataHeader	spice-common/spice-protocol/spice/protocol.h	/^typedef struct SPICE_ATTR_PACKED SpiceDataHeader {$/;"	s
SpiceDataHeader	spice-common/spice-protocol/spice/protocol.h	/^} SpiceDataHeader;$/;"	t	typeref:struct:SpiceDataHeader
SpiceDesktopIntegration	glib/desktop-integration.h	/^typedef struct _SpiceDesktopIntegration SpiceDesktopIntegration;$/;"	t	typeref:struct:_SpiceDesktopIntegration
SpiceDesktopIntegrationClass	glib/desktop-integration.h	/^typedef struct _SpiceDesktopIntegrationClass SpiceDesktopIntegrationClass;$/;"	t	typeref:struct:_SpiceDesktopIntegrationClass
SpiceDesktopIntegrationPrivate	glib/desktop-integration.h	/^typedef struct _SpiceDesktopIntegrationPrivate SpiceDesktopIntegrationPrivate;$/;"	t	typeref:struct:_SpiceDesktopIntegrationPrivate
SpiceDisconnect	win32/win32_spice_interface.c	/^void SpiceDisconnect(IN_OUT SPICE_HANDLE sh,IN int hspice)$/;"	f
SpiceDisplay	win32/win32-spice-widget.h	/^typedef struct _SpiceDisplay SpiceDisplay;$/;"	t	typeref:struct:_SpiceDisplay
SpiceDisplayChannel	glib/channel-display.h	/^typedef struct _SpiceDisplayChannel SpiceDisplayChannel;$/;"	t	typeref:struct:_SpiceDisplayChannel
SpiceDisplayChannelClass	glib/channel-display.h	/^typedef struct _SpiceDisplayChannelClass SpiceDisplayChannelClass;$/;"	t	typeref:struct:_SpiceDisplayChannelClass
SpiceDisplayChannelPrivate	glib/channel-display.h	/^typedef struct _SpiceDisplayChannelPrivate SpiceDisplayChannelPrivate;$/;"	t	typeref:struct:_SpiceDisplayChannelPrivate
SpiceDisplayClass	win32/win32-spice-widget.h	/^typedef struct _SpiceDisplayClass SpiceDisplayClass;$/;"	t	typeref:struct:_SpiceDisplayClass
SpiceDisplayKeyEvent	win32/win32-spice-widget.h	/^} SpiceDisplayKeyEvent;$/;"	t	typeref:enum:__anon49
SpiceDisplayMonitorConfig	glib/channel-display.h	/^typedef struct _SpiceDisplayMonitorConfig SpiceDisplayMonitorConfig;$/;"	t	typeref:struct:_SpiceDisplayMonitorConfig
SpiceDisplayPrimary	glib/channel-display.h	/^typedef struct _SpiceDisplayPrimary SpiceDisplayPrimary;$/;"	t	typeref:struct:_SpiceDisplayPrimary
SpiceDisplayPrivate	win32/win32-spice-widget.h	/^typedef struct _SpiceDisplayPrivate SpiceDisplayPrivate;$/;"	t	typeref:struct:_SpiceDisplayPrivate
SpiceEnableAutoUSBRedirect	win32/win32_spice_interface.c	/^void SpiceEnableAutoUSBRedirect(IN_OUT SPICE_HANDLE sh,IN int hspice,IN int enable) $/;"	f
SpiceEnableAutoUSBRedirectBefore	win32/win32_spice_interface.c	/^void SpiceEnableAutoUSBRedirectBefore(IN_OUT SPICE_HANDLE sh,IN int hspice,IN int enable) $/;"	f
SpiceFetchVmNames	win32/win32_spice_interface.c	/^int SpiceFetchVmNames(IN_OUT SPICE_HANDLE sh,IN int hspice,IN const char *URI, IN const char* user, IN const char* password,$/;"	f
SpiceFileXferTask	glib/channel-main.c	/^typedef struct SpiceFileXferTask {$/;"	s	file:
SpiceFileXferTask	glib/channel-main.c	/^} SpiceFileXferTask;$/;"	t	typeref:struct:SpiceFileXferTask	file:
SpiceFill	spice-common/common/draw.h	/^typedef struct SpiceFill {$/;"	s
SpiceFill	spice-common/common/draw.h	/^} SpiceFill;$/;"	t	typeref:struct:SpiceFill
SpiceGlzDecoder	spice-common/common/canvas_base.h	/^typedef struct _SpiceGlzDecoder SpiceGlzDecoder;$/;"	t	typeref:struct:_SpiceGlzDecoder
SpiceGlzDecoderOps	spice-common/common/canvas_base.h	/^} SpiceGlzDecoderOps;$/;"	t	typeref:struct:__anon143
SpiceGlzDecoderWindow	glib/decode-glz.c	/^struct SpiceGlzDecoderWindow {$/;"	s	file:
SpiceGlzDecoderWindow	glib/decode.h	/^typedef struct SpiceGlzDecoderWindow SpiceGlzDecoderWindow;$/;"	t	typeref:struct:SpiceGlzDecoderWindow
SpiceGrabSequence	win32/spice-grabsequence.h	/^typedef struct _SpiceGrabSequence SpiceGrabSequence;$/;"	t	typeref:struct:_SpiceGrabSequence
SpiceGstaudio	glib/spice-gstaudio.h	/^typedef struct _SpiceGstaudio SpiceGstaudio;$/;"	t	typeref:struct:_SpiceGstaudio
SpiceGstaudioClass	glib/spice-gstaudio.h	/^typedef struct _SpiceGstaudioClass SpiceGstaudioClass;$/;"	t	typeref:struct:_SpiceGstaudioClass
SpiceGstaudioPrivate	glib/spice-gstaudio.h	/^typedef struct _SpiceGstaudioPrivate SpiceGstaudioPrivate;$/;"	t	typeref:struct:_SpiceGstaudioPrivate
SpiceGtkSession	win32/spice-gtk-session.h	/^typedef struct _SpiceGtkSession SpiceGtkSession;$/;"	t	typeref:struct:_SpiceGtkSession
SpiceGtkSessionClass	win32/spice-gtk-session.h	/^typedef struct _SpiceGtkSessionClass SpiceGtkSessionClass;$/;"	t	typeref:struct:_SpiceGtkSessionClass
SpiceGtkSessionPrivate	win32/spice-gtk-session.h	/^typedef struct _SpiceGtkSessionPrivate SpiceGtkSessionPrivate;$/;"	t	typeref:struct:_SpiceGtkSessionPrivate
SpiceHead	spice-common/common/messages.h	/^} SpiceHead;$/;"	t	typeref:struct:SpiceMsgDisplayHead
SpiceImage	spice-common/common/draw.h	/^typedef struct SpiceImage {$/;"	s
SpiceImage	spice-common/common/draw.h	/^} SpiceImage;$/;"	t	typeref:struct:SpiceImage
SpiceImageCache	spice-common/common/canvas_base.h	/^typedef struct _SpiceImageCache SpiceImageCache;$/;"	t	typeref:struct:_SpiceImageCache
SpiceImageCacheOps	spice-common/common/canvas_base.h	/^} SpiceImageCacheOps;$/;"	t	typeref:struct:__anon140
SpiceImageDescriptor	spice-common/common/draw.h	/^typedef struct SpiceImageDescriptor {$/;"	s
SpiceImageDescriptor	spice-common/common/draw.h	/^} SpiceImageDescriptor;$/;"	t	typeref:struct:SpiceImageDescriptor
SpiceImageFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceImageFlags {$/;"	g
SpiceImageFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceImageFlags;$/;"	t	typeref:enum:SpiceImageFlags
SpiceImageScaleMode	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceImageScaleMode {$/;"	g
SpiceImageScaleMode	spice-common/spice-protocol/spice/enums.h	/^} SpiceImageScaleMode;$/;"	t	typeref:enum:SpiceImageScaleMode
SpiceImageSurfaces	spice-common/common/canvas_base.h	/^typedef struct _SpiceImageSurfaces SpiceImageSurfaces;$/;"	t	typeref:struct:_SpiceImageSurfaces
SpiceImageSurfacesOps	spice-common/common/canvas_base.h	/^} SpiceImageSurfacesOps;$/;"	t	typeref:struct:__anon141
SpiceImageType	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceImageType {$/;"	g
SpiceImageType	spice-common/spice-protocol/spice/enums.h	/^} SpiceImageType;$/;"	t	typeref:enum:SpiceImageType
SpiceInfoCode	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceInfoCode {$/;"	g
SpiceInfoCode	spice-common/spice-protocol/spice/enums.h	/^} SpiceInfoCode;$/;"	t	typeref:enum:SpiceInfoCode
SpiceInit	win32/win32_spice_interface.c	/^SPICE_HANDLE SpiceInit()$/;"	f
SpiceInputsChannel	glib/channel-inputs.h	/^typedef struct _SpiceInputsChannel SpiceInputsChannel;$/;"	t	typeref:struct:_SpiceInputsChannel
SpiceInputsChannelClass	glib/channel-inputs.h	/^typedef struct _SpiceInputsChannelClass SpiceInputsChannelClass;$/;"	t	typeref:struct:_SpiceInputsChannelClass
SpiceInputsChannelPrivate	glib/channel-inputs.h	/^typedef struct _SpiceInputsChannelPrivate SpiceInputsChannelPrivate;$/;"	t	typeref:struct:_SpiceInputsChannelPrivate
SpiceInputsLock	glib/channel-inputs.h	/^} SpiceInputsLock;$/;"	t	typeref:enum:__anon9
SpiceInvers	spice-common/common/draw.h	/^} SpiceBlackness, SpiceInvers, SpiceWhiteness;$/;"	t	typeref:struct:SpiceBlackness
SpiceJPEGAlphaData	spice-common/common/draw.h	/^typedef struct SpiceJPEGAlphaData {$/;"	s
SpiceJPEGAlphaData	spice-common/common/draw.h	/^} SpiceJPEGAlphaData;$/;"	t	typeref:struct:SpiceJPEGAlphaData
SpiceJPEGData	spice-common/common/draw.h	/^} SpiceQUICData, SpiceLZRGBData, SpiceJPEGData;$/;"	t	typeref:struct:SpiceQUICData
SpiceJpegAlphaFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceJpegAlphaFlags {$/;"	g
SpiceJpegAlphaFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceJpegAlphaFlags;$/;"	t	typeref:enum:SpiceJpegAlphaFlags
SpiceJpegDecoder	spice-common/common/canvas_base.h	/^typedef struct _SpiceJpegDecoder SpiceJpegDecoder;$/;"	t	typeref:struct:_SpiceJpegDecoder
SpiceJpegDecoderOps	spice-common/common/canvas_base.h	/^typedef struct SpiceJpegDecoderOps {$/;"	s
SpiceJpegDecoderOps	spice-common/common/canvas_base.h	/^} SpiceJpegDecoderOps;$/;"	t	typeref:struct:SpiceJpegDecoderOps
SpiceKeyEvent	win32/win32_spice_interface.c	/^void SpiceKeyEvent(IN_OUT SPICE_HANDLE sh,IN int hspice,IN bool down, IN int hardware_keycode)$/;"	f
SpiceKeyboardModifierFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceKeyboardModifierFlags {$/;"	g
SpiceKeyboardModifierFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceKeyboardModifierFlags;$/;"	t	typeref:enum:SpiceKeyboardModifierFlags
SpiceLZPLTData	spice-common/common/draw.h	/^typedef struct SpiceLZPLTData {$/;"	s
SpiceLZPLTData	spice-common/common/draw.h	/^} SpiceLZPLTData;$/;"	t	typeref:struct:SpiceLZPLTData
SpiceLZRGBData	spice-common/common/draw.h	/^} SpiceQUICData, SpiceLZRGBData, SpiceJPEGData;$/;"	t	typeref:struct:SpiceQUICData
SpiceLineAttr	spice-common/common/draw.h	/^typedef struct SpiceLineAttr {$/;"	s
SpiceLineAttr	spice-common/common/draw.h	/^} SpiceLineAttr;$/;"	t	typeref:struct:SpiceLineAttr
SpiceLineFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceLineFlags {$/;"	g
SpiceLineFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceLineFlags;$/;"	t	typeref:enum:SpiceLineFlags
SpiceLinkAuthMechanism	spice-common/spice-protocol/spice/protocol.h	/^typedef struct SPICE_ATTR_PACKED SpiceLinkAuthMechanism {$/;"	s
SpiceLinkAuthMechanism	spice-common/spice-protocol/spice/protocol.h	/^} SpiceLinkAuthMechanism;$/;"	t	typeref:struct:SpiceLinkAuthMechanism
SpiceLinkEncryptedTicket	spice-common/spice-protocol/spice/protocol.h	/^typedef struct SPICE_ATTR_PACKED SpiceLinkEncryptedTicket {$/;"	s
SpiceLinkEncryptedTicket	spice-common/spice-protocol/spice/protocol.h	/^} SpiceLinkEncryptedTicket;$/;"	t	typeref:struct:SpiceLinkEncryptedTicket
SpiceLinkErr	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceLinkErr {$/;"	g
SpiceLinkErr	spice-common/spice-protocol/spice/enums.h	/^} SpiceLinkErr;$/;"	t	typeref:enum:SpiceLinkErr
SpiceLinkHeader	spice-common/spice-protocol/spice/protocol.h	/^typedef struct SPICE_ATTR_PACKED SpiceLinkHeader {$/;"	s
SpiceLinkHeader	spice-common/spice-protocol/spice/protocol.h	/^} SpiceLinkHeader;$/;"	t	typeref:struct:SpiceLinkHeader
SpiceLinkMess	spice-common/spice-protocol/spice/protocol.h	/^typedef struct SPICE_ATTR_PACKED SpiceLinkMess {$/;"	s
SpiceLinkMess	spice-common/spice-protocol/spice/protocol.h	/^} SpiceLinkMess;$/;"	t	typeref:struct:SpiceLinkMess
SpiceLinkReply	spice-common/spice-protocol/spice/protocol.h	/^typedef struct SPICE_ATTR_PACKED SpiceLinkReply {$/;"	s
SpiceLinkReply	spice-common/spice-protocol/spice/protocol.h	/^} SpiceLinkReply;$/;"	t	typeref:struct:SpiceLinkReply
SpiceLogLevel	spice-common/common/log.h	/^} SpiceLogLevel;$/;"	t	typeref:enum:__anon155
SpiceMainChannel	glib/channel-main.h	/^typedef struct _SpiceMainChannel SpiceMainChannel;$/;"	t	typeref:struct:_SpiceMainChannel
SpiceMainChannelClass	glib/channel-main.h	/^typedef struct _SpiceMainChannelClass SpiceMainChannelClass;$/;"	t	typeref:struct:_SpiceMainChannelClass
SpiceMainChannelPrivate	glib/channel-main.h	/^typedef struct _SpiceMainChannelPrivate SpiceMainChannelPrivate;$/;"	t	typeref:struct:_SpiceMainChannelPrivate
SpiceMarshaller	spice-common/common/marshaller.c	/^struct SpiceMarshaller {$/;"	s	file:
SpiceMarshaller	spice-common/common/marshaller.h	/^typedef struct SpiceMarshaller SpiceMarshaller;$/;"	t	typeref:struct:SpiceMarshaller
SpiceMarshallerData	spice-common/common/marshaller.c	/^struct SpiceMarshallerData {$/;"	s	file:
SpiceMarshallerData	spice-common/common/marshaller.c	/^typedef struct SpiceMarshallerData SpiceMarshallerData;$/;"	t	typeref:struct:SpiceMarshallerData	file:
SpiceMaskFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceMaskFlags {$/;"	g
SpiceMaskFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceMaskFlags;$/;"	t	typeref:enum:SpiceMaskFlags
SpiceMessageMarshallers	spice-common/common/client_marshallers.h	/^} SpiceMessageMarshallers;$/;"	t	typeref:struct:__anon119
SpiceMigrateFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceMigrateFlags {$/;"	g
SpiceMigrateFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceMigrateFlags;$/;"	t	typeref:enum:SpiceMigrateFlags
SpiceMigrationDstInfo	spice-common/common/messages.h	/^typedef struct SpiceMigrationDstInfo {$/;"	s
SpiceMigrationDstInfo	spice-common/common/messages.h	/^} SpiceMigrationDstInfo;$/;"	t	typeref:struct:SpiceMigrationDstInfo
SpiceMiniDataHeader	spice-common/spice-protocol/spice/protocol.h	/^typedef struct SPICE_ATTR_PACKED SpiceMiniDataHeader {$/;"	s
SpiceMiniDataHeader	spice-common/spice-protocol/spice/protocol.h	/^} SpiceMiniDataHeader;$/;"	t	typeref:struct:SpiceMiniDataHeader
SpiceMouseButton	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceMouseButton {$/;"	g
SpiceMouseButton	spice-common/spice-protocol/spice/enums.h	/^} SpiceMouseButton;$/;"	t	typeref:enum:SpiceMouseButton
SpiceMouseButtonMask	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceMouseButtonMask {$/;"	g
SpiceMouseButtonMask	spice-common/spice-protocol/spice/enums.h	/^} SpiceMouseButtonMask;$/;"	t	typeref:enum:SpiceMouseButtonMask
SpiceMouseMode	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceMouseMode {$/;"	g
SpiceMouseMode	spice-common/spice-protocol/spice/enums.h	/^} SpiceMouseMode;$/;"	t	typeref:enum:SpiceMouseMode
SpiceMsgAudioMute	spice-common/common/messages.h	/^typedef struct SpiceMsgAudioMute {$/;"	s
SpiceMsgAudioMute	spice-common/common/messages.h	/^} SpiceMsgAudioMute;$/;"	t	typeref:struct:SpiceMsgAudioMute
SpiceMsgAudioVolume	spice-common/common/messages.h	/^typedef struct SpiceMsgAudioVolume {$/;"	s
SpiceMsgAudioVolume	spice-common/common/messages.h	/^} SpiceMsgAudioVolume;$/;"	t	typeref:struct:SpiceMsgAudioVolume
SpiceMsgChannels	spice-common/common/messages.h	/^typedef struct SpiceMsgChannels {$/;"	s
SpiceMsgChannels	spice-common/common/messages.h	/^} SpiceMsgChannels;$/;"	t	typeref:struct:SpiceMsgChannels
SpiceMsgCursorInit	spice-common/common/messages.h	/^typedef struct SpiceMsgCursorInit {$/;"	s
SpiceMsgCursorInit	spice-common/common/messages.h	/^} SpiceMsgCursorInit;$/;"	t	typeref:struct:SpiceMsgCursorInit
SpiceMsgCursorMove	spice-common/common/messages.h	/^typedef struct SpiceMsgCursorMove {$/;"	s
SpiceMsgCursorMove	spice-common/common/messages.h	/^} SpiceMsgCursorMove;$/;"	t	typeref:struct:SpiceMsgCursorMove
SpiceMsgCursorSet	spice-common/common/messages.h	/^typedef struct SpiceMsgCursorSet {$/;"	s
SpiceMsgCursorSet	spice-common/common/messages.h	/^} SpiceMsgCursorSet;$/;"	t	typeref:struct:SpiceMsgCursorSet
SpiceMsgCursorTrail	spice-common/common/messages.h	/^typedef struct SpiceMsgCursorTrail {$/;"	s
SpiceMsgCursorTrail	spice-common/common/messages.h	/^} SpiceMsgCursorTrail;$/;"	t	typeref:struct:SpiceMsgCursorTrail
SpiceMsgData	spice-common/common/messages.h	/^typedef struct SpiceMsgData {$/;"	s
SpiceMsgData	spice-common/common/messages.h	/^} SpiceMsgData;$/;"	t	typeref:struct:SpiceMsgData
SpiceMsgDisconnect	spice-common/common/messages.h	/^typedef struct SpiceMsgDisconnect {$/;"	s
SpiceMsgDisconnect	spice-common/common/messages.h	/^} SpiceMsgDisconnect;$/;"	t	typeref:struct:SpiceMsgDisconnect
SpiceMsgDisplayBase	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayBase {$/;"	s
SpiceMsgDisplayBase	spice-common/common/messages.h	/^} SpiceMsgDisplayBase;$/;"	t	typeref:struct:SpiceMsgDisplayBase
SpiceMsgDisplayCopyBits	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayCopyBits {$/;"	s
SpiceMsgDisplayCopyBits	spice-common/common/messages.h	/^} SpiceMsgDisplayCopyBits;$/;"	t	typeref:struct:SpiceMsgDisplayCopyBits
SpiceMsgDisplayDrawAlphaBlend	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawAlphaBlend {$/;"	s
SpiceMsgDisplayDrawAlphaBlend	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawAlphaBlend;$/;"	t	typeref:struct:SpiceMsgDisplayDrawAlphaBlend
SpiceMsgDisplayDrawBlackness	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawBlackness {$/;"	s
SpiceMsgDisplayDrawBlackness	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawBlackness;$/;"	t	typeref:struct:SpiceMsgDisplayDrawBlackness
SpiceMsgDisplayDrawBlend	spice-common/common/messages.h	/^typedef SpiceMsgDisplayDrawCopy SpiceMsgDisplayDrawBlend;$/;"	t
SpiceMsgDisplayDrawComposite	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawComposite {$/;"	s
SpiceMsgDisplayDrawComposite	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawComposite;$/;"	t	typeref:struct:SpiceMsgDisplayDrawComposite
SpiceMsgDisplayDrawCopy	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawCopy {$/;"	s
SpiceMsgDisplayDrawCopy	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawCopy;$/;"	t	typeref:struct:SpiceMsgDisplayDrawCopy
SpiceMsgDisplayDrawFill	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawFill {$/;"	s
SpiceMsgDisplayDrawFill	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawFill;$/;"	t	typeref:struct:SpiceMsgDisplayDrawFill
SpiceMsgDisplayDrawInvers	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawInvers {$/;"	s
SpiceMsgDisplayDrawInvers	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawInvers;$/;"	t	typeref:struct:SpiceMsgDisplayDrawInvers
SpiceMsgDisplayDrawOpaque	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawOpaque {$/;"	s
SpiceMsgDisplayDrawOpaque	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawOpaque;$/;"	t	typeref:struct:SpiceMsgDisplayDrawOpaque
SpiceMsgDisplayDrawRop3	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawRop3 {$/;"	s
SpiceMsgDisplayDrawRop3	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawRop3;$/;"	t	typeref:struct:SpiceMsgDisplayDrawRop3
SpiceMsgDisplayDrawStroke	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawStroke {$/;"	s
SpiceMsgDisplayDrawStroke	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawStroke;$/;"	t	typeref:struct:SpiceMsgDisplayDrawStroke
SpiceMsgDisplayDrawText	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawText {$/;"	s
SpiceMsgDisplayDrawText	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawText;$/;"	t	typeref:struct:SpiceMsgDisplayDrawText
SpiceMsgDisplayDrawTransparent	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawTransparent {$/;"	s
SpiceMsgDisplayDrawTransparent	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawTransparent;$/;"	t	typeref:struct:SpiceMsgDisplayDrawTransparent
SpiceMsgDisplayDrawWhiteness	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayDrawWhiteness {$/;"	s
SpiceMsgDisplayDrawWhiteness	spice-common/common/messages.h	/^} SpiceMsgDisplayDrawWhiteness;$/;"	t	typeref:struct:SpiceMsgDisplayDrawWhiteness
SpiceMsgDisplayHead	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayHead {$/;"	s
SpiceMsgDisplayInvalOne	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayInvalOne {$/;"	s
SpiceMsgDisplayInvalOne	spice-common/common/messages.h	/^} SpiceMsgDisplayInvalOne;$/;"	t	typeref:struct:SpiceMsgDisplayInvalOne
SpiceMsgDisplayMode	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayMode {$/;"	s
SpiceMsgDisplayMode	spice-common/common/messages.h	/^} SpiceMsgDisplayMode;$/;"	t	typeref:struct:SpiceMsgDisplayMode
SpiceMsgDisplayMonitorsConfig	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayMonitorsConfig {$/;"	s
SpiceMsgDisplayMonitorsConfig	spice-common/common/messages.h	/^} SpiceMsgDisplayMonitorsConfig;$/;"	t	typeref:struct:SpiceMsgDisplayMonitorsConfig
SpiceMsgDisplayStreamActivateReport	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayStreamActivateReport {$/;"	s
SpiceMsgDisplayStreamActivateReport	spice-common/common/messages.h	/^} SpiceMsgDisplayStreamActivateReport;$/;"	t	typeref:struct:SpiceMsgDisplayStreamActivateReport
SpiceMsgDisplayStreamClip	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayStreamClip {$/;"	s
SpiceMsgDisplayStreamClip	spice-common/common/messages.h	/^} SpiceMsgDisplayStreamClip;$/;"	t	typeref:struct:SpiceMsgDisplayStreamClip
SpiceMsgDisplayStreamCreate	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayStreamCreate {$/;"	s
SpiceMsgDisplayStreamCreate	spice-common/common/messages.h	/^} SpiceMsgDisplayStreamCreate;$/;"	t	typeref:struct:SpiceMsgDisplayStreamCreate
SpiceMsgDisplayStreamData	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayStreamData {$/;"	s
SpiceMsgDisplayStreamData	spice-common/common/messages.h	/^} SpiceMsgDisplayStreamData;$/;"	t	typeref:struct:SpiceMsgDisplayStreamData
SpiceMsgDisplayStreamDataSized	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayStreamDataSized {$/;"	s
SpiceMsgDisplayStreamDataSized	spice-common/common/messages.h	/^} SpiceMsgDisplayStreamDataSized;$/;"	t	typeref:struct:SpiceMsgDisplayStreamDataSized
SpiceMsgDisplayStreamDestroy	spice-common/common/messages.h	/^typedef struct SpiceMsgDisplayStreamDestroy {$/;"	s
SpiceMsgDisplayStreamDestroy	spice-common/common/messages.h	/^} SpiceMsgDisplayStreamDestroy;$/;"	t	typeref:struct:SpiceMsgDisplayStreamDestroy
SpiceMsgEmpty	spice-common/common/messages.h	/^typedef struct SpiceMsgEmpty {$/;"	s
SpiceMsgEmpty	spice-common/common/messages.h	/^} SpiceMsgEmpty;$/;"	t	typeref:struct:SpiceMsgEmpty
SpiceMsgIn	glib/spice-channel.h	/^typedef struct _SpiceMsgIn  SpiceMsgIn;$/;"	t	typeref:struct:_SpiceMsgIn
SpiceMsgInputsInit	spice-common/common/messages.h	/^typedef struct SpiceMsgInputsInit {$/;"	s
SpiceMsgInputsInit	spice-common/common/messages.h	/^} SpiceMsgInputsInit;$/;"	t	typeref:struct:SpiceMsgInputsInit
SpiceMsgInputsKeyModifiers	spice-common/common/messages.h	/^typedef struct SpiceMsgInputsKeyModifiers {$/;"	s
SpiceMsgInputsKeyModifiers	spice-common/common/messages.h	/^} SpiceMsgInputsKeyModifiers;$/;"	t	typeref:struct:SpiceMsgInputsKeyModifiers
SpiceMsgMainAgentConnectedTokens	spice-common/common/messages.h	/^typedef struct SpiceMsgMainAgentTokens SpiceMsgMainAgentConnectedTokens;$/;"	t	typeref:struct:SpiceMsgMainAgentTokens
SpiceMsgMainAgentDisconnect	spice-common/common/messages.h	/^typedef struct SpiceMsgMainAgentDisconnect {$/;"	s
SpiceMsgMainAgentDisconnect	spice-common/common/messages.h	/^} SpiceMsgMainAgentDisconnect;$/;"	t	typeref:struct:SpiceMsgMainAgentDisconnect
SpiceMsgMainAgentTokens	spice-common/common/messages.h	/^typedef struct SpiceMsgMainAgentTokens {$/;"	s
SpiceMsgMainAgentTokens	spice-common/common/messages.h	/^} SpiceMsgMainAgentTokens, SpiceMsgcMainAgentTokens, SpiceMsgcMainAgentStart;$/;"	t	typeref:struct:SpiceMsgMainAgentTokens
SpiceMsgMainInit	spice-common/common/messages.h	/^typedef struct SpiceMsgMainInit {$/;"	s
SpiceMsgMainInit	spice-common/common/messages.h	/^} SpiceMsgMainInit;$/;"	t	typeref:struct:SpiceMsgMainInit
SpiceMsgMainMigrateBeginSeamless	spice-common/common/messages.h	/^typedef struct SpiceMsgMainMigrateBeginSeamless {$/;"	s
SpiceMsgMainMigrateBeginSeamless	spice-common/common/messages.h	/^} SpiceMsgMainMigrateBeginSeamless;$/;"	t	typeref:struct:SpiceMsgMainMigrateBeginSeamless
SpiceMsgMainMigrationBegin	spice-common/common/messages.h	/^typedef struct SpiceMsgMainMigrationBegin {$/;"	s
SpiceMsgMainMigrationBegin	spice-common/common/messages.h	/^} SpiceMsgMainMigrationBegin;$/;"	t	typeref:struct:SpiceMsgMainMigrationBegin
SpiceMsgMainMigrationSwitchHost	spice-common/common/messages.h	/^typedef struct SpiceMsgMainMigrationSwitchHost {$/;"	s
SpiceMsgMainMigrationSwitchHost	spice-common/common/messages.h	/^} SpiceMsgMainMigrationSwitchHost;$/;"	t	typeref:struct:SpiceMsgMainMigrationSwitchHost
SpiceMsgMainMouseMode	spice-common/common/messages.h	/^typedef struct SpiceMsgMainMouseMode {$/;"	s
SpiceMsgMainMouseMode	spice-common/common/messages.h	/^} SpiceMsgMainMouseMode;$/;"	t	typeref:struct:SpiceMsgMainMouseMode
SpiceMsgMainMultiMediaTime	spice-common/common/messages.h	/^typedef struct SpiceMsgMainMultiMediaTime {$/;"	s
SpiceMsgMainMultiMediaTime	spice-common/common/messages.h	/^} SpiceMsgMainMultiMediaTime;$/;"	t	typeref:struct:SpiceMsgMainMultiMediaTime
SpiceMsgMainName	spice-common/common/messages.h	/^typedef struct SpiceMsgMainName {$/;"	s
SpiceMsgMainName	spice-common/common/messages.h	/^} SpiceMsgMainName;$/;"	t	typeref:struct:SpiceMsgMainName
SpiceMsgMainUuid	spice-common/common/messages.h	/^typedef struct SpiceMsgMainUuid {$/;"	s
SpiceMsgMainUuid	spice-common/common/messages.h	/^} SpiceMsgMainUuid;$/;"	t	typeref:struct:SpiceMsgMainUuid
SpiceMsgMigrate	spice-common/common/messages.h	/^typedef struct SpiceMsgMigrate {$/;"	s
SpiceMsgMigrate	spice-common/common/messages.h	/^} SpiceMsgMigrate;$/;"	t	typeref:struct:SpiceMsgMigrate
SpiceMsgNotify	spice-common/common/messages.h	/^typedef struct SpiceMsgNotify {$/;"	s
SpiceMsgNotify	spice-common/common/messages.h	/^} SpiceMsgNotify;$/;"	t	typeref:struct:SpiceMsgNotify
SpiceMsgOut	glib/spice-channel.h	/^typedef struct _SpiceMsgOut SpiceMsgOut;$/;"	t	typeref:struct:_SpiceMsgOut
SpiceMsgPing	spice-common/common/messages.h	/^typedef struct SpiceMsgPing {$/;"	s
SpiceMsgPing	spice-common/common/messages.h	/^} SpiceMsgPing;$/;"	t	typeref:struct:SpiceMsgPing
SpiceMsgPlaybackLatency	spice-common/common/messages.h	/^typedef struct SpiceMsgPlaybackLatency {$/;"	s
SpiceMsgPlaybackLatency	spice-common/common/messages.h	/^} SpiceMsgPlaybackLatency;$/;"	t	typeref:struct:SpiceMsgPlaybackLatency
SpiceMsgPlaybackMode	spice-common/common/messages.h	/^typedef struct SpiceMsgPlaybackMode {$/;"	s
SpiceMsgPlaybackMode	spice-common/common/messages.h	/^} SpiceMsgPlaybackMode, SpiceMsgcRecordMode;$/;"	t	typeref:struct:SpiceMsgPlaybackMode
SpiceMsgPlaybackPacket	spice-common/common/messages.h	/^typedef struct SpiceMsgPlaybackPacket {$/;"	s
SpiceMsgPlaybackPacket	spice-common/common/messages.h	/^} SpiceMsgPlaybackPacket, SpiceMsgcRecordPacket;$/;"	t	typeref:struct:SpiceMsgPlaybackPacket
SpiceMsgPlaybackStart	spice-common/common/messages.h	/^typedef struct SpiceMsgPlaybackStart {$/;"	s
SpiceMsgPlaybackStart	spice-common/common/messages.h	/^} SpiceMsgPlaybackStart;$/;"	t	typeref:struct:SpiceMsgPlaybackStart
SpiceMsgPortEvent	spice-common/common/messages.h	/^typedef struct SpiceMsgPortEvent {$/;"	s
SpiceMsgPortEvent	spice-common/common/messages.h	/^} SpiceMsgPortEvent;$/;"	t	typeref:struct:SpiceMsgPortEvent
SpiceMsgPortInit	spice-common/common/messages.h	/^typedef struct SpiceMsgPortInit {$/;"	s
SpiceMsgPortInit	spice-common/common/messages.h	/^} SpiceMsgPortInit;$/;"	t	typeref:struct:SpiceMsgPortInit
SpiceMsgRecordStart	spice-common/common/messages.h	/^typedef struct SpiceMsgRecordStart {$/;"	s
SpiceMsgRecordStart	spice-common/common/messages.h	/^} SpiceMsgRecordStart;$/;"	t	typeref:struct:SpiceMsgRecordStart
SpiceMsgSetAck	spice-common/common/messages.h	/^typedef struct SpiceMsgSetAck {$/;"	s
SpiceMsgSetAck	spice-common/common/messages.h	/^} SpiceMsgSetAck;$/;"	t	typeref:struct:SpiceMsgSetAck
SpiceMsgSmartcard	spice-common/common/messages.h	/^typedef struct SpiceMsgSmartcard {$/;"	s
SpiceMsgSmartcard	spice-common/common/messages.h	/^} SpiceMsgSmartcard;$/;"	t	typeref:struct:SpiceMsgSmartcard
SpiceMsgSurfaceCreate	spice-common/common/messages.h	/^typedef struct SpiceMsgSurfaceCreate {$/;"	s
SpiceMsgSurfaceCreate	spice-common/common/messages.h	/^} SpiceMsgSurfaceCreate;$/;"	t	typeref:struct:SpiceMsgSurfaceCreate
SpiceMsgSurfaceDestroy	spice-common/common/messages.h	/^typedef struct SpiceMsgSurfaceDestroy {$/;"	s
SpiceMsgSurfaceDestroy	spice-common/common/messages.h	/^} SpiceMsgSurfaceDestroy;$/;"	t	typeref:struct:SpiceMsgSurfaceDestroy
SpiceMsgTunnelInit	spice-common/common/messages.h	/^typedef struct SpiceMsgTunnelInit {$/;"	s
SpiceMsgTunnelInit	spice-common/common/messages.h	/^} SpiceMsgTunnelInit;$/;"	t	typeref:struct:SpiceMsgTunnelInit
SpiceMsgTunnelIpInfo	spice-common/common/messages.h	/^typedef struct SpiceMsgTunnelIpInfo {$/;"	s
SpiceMsgTunnelIpInfo	spice-common/common/messages.h	/^} SpiceMsgTunnelIpInfo;$/;"	t	typeref:struct:SpiceMsgTunnelIpInfo
SpiceMsgTunnelServiceIpMap	spice-common/common/messages.h	/^typedef struct SpiceMsgTunnelServiceIpMap {$/;"	s
SpiceMsgTunnelServiceIpMap	spice-common/common/messages.h	/^} SpiceMsgTunnelServiceIpMap;$/;"	t	typeref:struct:SpiceMsgTunnelServiceIpMap
SpiceMsgTunnelSocketClose	spice-common/common/messages.h	/^typedef struct SpiceMsgTunnelSocketClose {$/;"	s
SpiceMsgTunnelSocketClose	spice-common/common/messages.h	/^} SpiceMsgTunnelSocketClose;$/;"	t	typeref:struct:SpiceMsgTunnelSocketClose
SpiceMsgTunnelSocketClosedAck	spice-common/common/messages.h	/^typedef struct SpiceMsgTunnelSocketClosedAck {$/;"	s
SpiceMsgTunnelSocketClosedAck	spice-common/common/messages.h	/^} SpiceMsgTunnelSocketClosedAck;$/;"	t	typeref:struct:SpiceMsgTunnelSocketClosedAck
SpiceMsgTunnelSocketData	spice-common/common/messages.h	/^typedef struct SpiceMsgTunnelSocketData {$/;"	s
SpiceMsgTunnelSocketData	spice-common/common/messages.h	/^} SpiceMsgTunnelSocketData;$/;"	t	typeref:struct:SpiceMsgTunnelSocketData
SpiceMsgTunnelSocketFin	spice-common/common/messages.h	/^typedef struct SpiceMsgTunnelSocketFin {$/;"	s
SpiceMsgTunnelSocketFin	spice-common/common/messages.h	/^} SpiceMsgTunnelSocketFin;$/;"	t	typeref:struct:SpiceMsgTunnelSocketFin
SpiceMsgTunnelSocketOpen	spice-common/common/messages.h	/^typedef struct SpiceMsgTunnelSocketOpen {$/;"	s
SpiceMsgTunnelSocketOpen	spice-common/common/messages.h	/^} SpiceMsgTunnelSocketOpen;$/;"	t	typeref:struct:SpiceMsgTunnelSocketOpen
SpiceMsgTunnelSocketTokens	spice-common/common/messages.h	/^typedef struct SpiceMsgTunnelSocketTokens {$/;"	s
SpiceMsgTunnelSocketTokens	spice-common/common/messages.h	/^} SpiceMsgTunnelSocketTokens;$/;"	t	typeref:struct:SpiceMsgTunnelSocketTokens
SpiceMsgWaitForChannels	spice-common/common/messages.h	/^typedef struct SpiceMsgWaitForChannels {$/;"	s
SpiceMsgWaitForChannels	spice-common/common/messages.h	/^} SpiceMsgWaitForChannels;$/;"	t	typeref:struct:SpiceMsgWaitForChannels
SpiceMsgcAckSync	spice-common/common/messages.h	/^typedef struct SpiceMsgcAckSync {$/;"	s
SpiceMsgcAckSync	spice-common/common/messages.h	/^} SpiceMsgcAckSync;$/;"	t	typeref:struct:SpiceMsgcAckSync
SpiceMsgcClientInfo	spice-common/common/messages.h	/^typedef struct SpiceMsgcClientInfo {$/;"	s
SpiceMsgcClientInfo	spice-common/common/messages.h	/^} SpiceMsgcClientInfo;$/;"	t	typeref:struct:SpiceMsgcClientInfo
SpiceMsgcDisplayInit	spice-common/common/messages.h	/^typedef struct SpiceMsgcDisplayInit {$/;"	s
SpiceMsgcDisplayInit	spice-common/common/messages.h	/^} SpiceMsgcDisplayInit;$/;"	t	typeref:struct:SpiceMsgcDisplayInit
SpiceMsgcDisplayStreamReport	spice-common/common/messages.h	/^typedef struct SpiceMsgcDisplayStreamReport {$/;"	s
SpiceMsgcDisplayStreamReport	spice-common/common/messages.h	/^} SpiceMsgcDisplayStreamReport;$/;"	t	typeref:struct:SpiceMsgcDisplayStreamReport
SpiceMsgcKeyDown	spice-common/common/messages.h	/^typedef struct SpiceMsgcKeyDown {$/;"	s
SpiceMsgcKeyDown	spice-common/common/messages.h	/^} SpiceMsgcKeyDown;$/;"	t	typeref:struct:SpiceMsgcKeyDown
SpiceMsgcKeyModifiers	spice-common/common/messages.h	/^typedef struct SpiceMsgcKeyModifiers {$/;"	s
SpiceMsgcKeyModifiers	spice-common/common/messages.h	/^} SpiceMsgcKeyModifiers;$/;"	t	typeref:struct:SpiceMsgcKeyModifiers
SpiceMsgcKeyUp	spice-common/common/messages.h	/^typedef struct SpiceMsgcKeyUp {$/;"	s
SpiceMsgcKeyUp	spice-common/common/messages.h	/^} SpiceMsgcKeyUp;$/;"	t	typeref:struct:SpiceMsgcKeyUp
SpiceMsgcMainAgentStart	spice-common/common/messages.h	/^} SpiceMsgMainAgentTokens, SpiceMsgcMainAgentTokens, SpiceMsgcMainAgentStart;$/;"	t	typeref:struct:SpiceMsgMainAgentTokens
SpiceMsgcMainAgentTokens	spice-common/common/messages.h	/^} SpiceMsgMainAgentTokens, SpiceMsgcMainAgentTokens, SpiceMsgcMainAgentStart;$/;"	t	typeref:struct:SpiceMsgMainAgentTokens
SpiceMsgcMainMigrateDstDoSeamless	spice-common/common/messages.h	/^typedef struct SpiceMsgcMainMigrateDstDoSeamless {$/;"	s
SpiceMsgcMainMigrateDstDoSeamless	spice-common/common/messages.h	/^} SpiceMsgcMainMigrateDstDoSeamless;$/;"	t	typeref:struct:SpiceMsgcMainMigrateDstDoSeamless
SpiceMsgcMainMouseModeRequest	spice-common/common/messages.h	/^typedef struct SpiceMsgcMainMouseModeRequest {$/;"	s
SpiceMsgcMainMouseModeRequest	spice-common/common/messages.h	/^} SpiceMsgcMainMouseModeRequest;$/;"	t	typeref:struct:SpiceMsgcMainMouseModeRequest
SpiceMsgcMouseMotion	spice-common/common/messages.h	/^typedef struct SpiceMsgcMouseMotion {$/;"	s
SpiceMsgcMouseMotion	spice-common/common/messages.h	/^} SpiceMsgcMouseMotion;$/;"	t	typeref:struct:SpiceMsgcMouseMotion
SpiceMsgcMousePosition	spice-common/common/messages.h	/^typedef struct SpiceMsgcMousePosition {$/;"	s
SpiceMsgcMousePosition	spice-common/common/messages.h	/^} SpiceMsgcMousePosition;$/;"	t	typeref:struct:SpiceMsgcMousePosition
SpiceMsgcMousePress	spice-common/common/messages.h	/^typedef struct SpiceMsgcMousePress {$/;"	s
SpiceMsgcMousePress	spice-common/common/messages.h	/^} SpiceMsgcMousePress;$/;"	t	typeref:struct:SpiceMsgcMousePress
SpiceMsgcMouseRelease	spice-common/common/messages.h	/^typedef struct SpiceMsgcMouseRelease {$/;"	s
SpiceMsgcMouseRelease	spice-common/common/messages.h	/^} SpiceMsgcMouseRelease;$/;"	t	typeref:struct:SpiceMsgcMouseRelease
SpiceMsgcPortEvent	spice-common/common/messages.h	/^typedef struct SpiceMsgcPortEvent {$/;"	s
SpiceMsgcPortEvent	spice-common/common/messages.h	/^} SpiceMsgcPortEvent;$/;"	t	typeref:struct:SpiceMsgcPortEvent
SpiceMsgcRecordMode	spice-common/common/messages.h	/^} SpiceMsgPlaybackMode, SpiceMsgcRecordMode;$/;"	t	typeref:struct:SpiceMsgPlaybackMode
SpiceMsgcRecordPacket	spice-common/common/messages.h	/^} SpiceMsgPlaybackPacket, SpiceMsgcRecordPacket;$/;"	t	typeref:struct:SpiceMsgPlaybackPacket
SpiceMsgcRecordStartMark	spice-common/common/messages.h	/^typedef struct SpiceMsgcRecordStartMark {$/;"	s
SpiceMsgcRecordStartMark	spice-common/common/messages.h	/^} SpiceMsgcRecordStartMark;$/;"	t	typeref:struct:SpiceMsgcRecordStartMark
SpiceMsgcSmartcard	spice-common/common/messages.h	/^typedef struct SpiceMsgcSmartcard {$/;"	s
SpiceMsgcSmartcard	spice-common/common/messages.h	/^} SpiceMsgcSmartcard;$/;"	t	typeref:struct:SpiceMsgcSmartcard
SpiceMsgcTunnelAddGenericService	spice-common/common/messages.h	/^typedef struct SpiceMsgcTunnelAddGenericService {$/;"	s
SpiceMsgcTunnelAddGenericService	spice-common/common/messages.h	/^} SpiceMsgcTunnelAddGenericService;$/;"	t	typeref:struct:SpiceMsgcTunnelAddGenericService
SpiceMsgcTunnelRemoveService	spice-common/common/messages.h	/^typedef struct SpiceMsgcTunnelRemoveService {$/;"	s
SpiceMsgcTunnelRemoveService	spice-common/common/messages.h	/^} SpiceMsgcTunnelRemoveService;$/;"	t	typeref:struct:SpiceMsgcTunnelRemoveService
SpiceMsgcTunnelSocketClosed	spice-common/common/messages.h	/^typedef struct SpiceMsgcTunnelSocketClosed {$/;"	s
SpiceMsgcTunnelSocketClosed	spice-common/common/messages.h	/^} SpiceMsgcTunnelSocketClosed;$/;"	t	typeref:struct:SpiceMsgcTunnelSocketClosed
SpiceMsgcTunnelSocketClosedAck	spice-common/common/messages.h	/^typedef struct SpiceMsgcTunnelSocketClosedAck {$/;"	s
SpiceMsgcTunnelSocketClosedAck	spice-common/common/messages.h	/^} SpiceMsgcTunnelSocketClosedAck;$/;"	t	typeref:struct:SpiceMsgcTunnelSocketClosedAck
SpiceMsgcTunnelSocketData	spice-common/common/messages.h	/^typedef struct SpiceMsgcTunnelSocketData {$/;"	s
SpiceMsgcTunnelSocketData	spice-common/common/messages.h	/^} SpiceMsgcTunnelSocketData;$/;"	t	typeref:struct:SpiceMsgcTunnelSocketData
SpiceMsgcTunnelSocketFin	spice-common/common/messages.h	/^typedef struct SpiceMsgcTunnelSocketFin {$/;"	s
SpiceMsgcTunnelSocketFin	spice-common/common/messages.h	/^} SpiceMsgcTunnelSocketFin;$/;"	t	typeref:struct:SpiceMsgcTunnelSocketFin
SpiceMsgcTunnelSocketOpenAck	spice-common/common/messages.h	/^typedef struct SpiceMsgcTunnelSocketOpenAck {$/;"	s
SpiceMsgcTunnelSocketOpenAck	spice-common/common/messages.h	/^} SpiceMsgcTunnelSocketOpenAck;$/;"	t	typeref:struct:SpiceMsgcTunnelSocketOpenAck
SpiceMsgcTunnelSocketOpenNack	spice-common/common/messages.h	/^typedef struct SpiceMsgcTunnelSocketOpenNack {$/;"	s
SpiceMsgcTunnelSocketOpenNack	spice-common/common/messages.h	/^} SpiceMsgcTunnelSocketOpenNack;$/;"	t	typeref:struct:SpiceMsgcTunnelSocketOpenNack
SpiceMsgcTunnelSocketTokens	spice-common/common/messages.h	/^typedef struct SpiceMsgcTunnelSocketTokens {$/;"	s
SpiceMsgcTunnelSocketTokens	spice-common/common/messages.h	/^} SpiceMsgcTunnelSocketTokens;$/;"	t	typeref:struct:SpiceMsgcTunnelSocketTokens
SpiceNotifySeverity	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceNotifySeverity {$/;"	g
SpiceNotifySeverity	spice-common/spice-protocol/spice/enums.h	/^} SpiceNotifySeverity;$/;"	t	typeref:enum:SpiceNotifySeverity
SpiceNotifyVisibility	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceNotifyVisibility {$/;"	g
SpiceNotifyVisibility	spice-common/spice-protocol/spice/enums.h	/^} SpiceNotifyVisibility;$/;"	t	typeref:enum:SpiceNotifyVisibility
SpiceOpaque	spice-common/common/draw.h	/^typedef struct SpiceOpaque {$/;"	s
SpiceOpaque	spice-common/common/draw.h	/^} SpiceOpaque;$/;"	t	typeref:struct:SpiceOpaque
SpiceOpen	win32/win32_spice_interface.c	/^int SpiceOpen(IN_OUT SPICE_HANDLE sh)$/;"	f
SpiceOpenMain	win32/win32_spice_interface.c	/^int SpiceOpenMain(IN_OUT SPICE_HANDLE sh)$/;"	f
SpiceOpenSSLVerify	spice-common/common/ssl_verify.h	/^} SpiceOpenSSLVerify;$/;"	t	typeref:struct:__anon131
SpicePalette	spice-common/common/draw.h	/^typedef struct SpicePalette {$/;"	s
SpicePalette	spice-common/common/draw.h	/^} SpicePalette;$/;"	t	typeref:struct:SpicePalette
SpicePaletteCache	spice-common/common/canvas_base.h	/^typedef struct _SpicePaletteCache SpicePaletteCache;$/;"	t	typeref:struct:_SpicePaletteCache
SpicePaletteCacheOps	spice-common/common/canvas_base.h	/^} SpicePaletteCacheOps;$/;"	t	typeref:struct:__anon142
SpicePath	spice-common/common/draw.h	/^typedef struct SpicePath {$/;"	s
SpicePath	spice-common/common/draw.h	/^} SpicePath;$/;"	t	typeref:struct:SpicePath
SpicePathFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpicePathFlags {$/;"	g
SpicePathFlags	spice-common/spice-protocol/spice/enums.h	/^} SpicePathFlags;$/;"	t	typeref:enum:SpicePathFlags
SpicePathSeg	spice-common/common/draw.h	/^typedef struct SpicePathSeg {$/;"	s
SpicePathSeg	spice-common/common/draw.h	/^} SpicePathSeg;$/;"	t	typeref:struct:SpicePathSeg
SpicePattern	spice-common/common/draw.h	/^typedef struct SpicePattern {$/;"	s
SpicePattern	spice-common/common/draw.h	/^} SpicePattern;$/;"	t	typeref:struct:SpicePattern
SpicePlaybackChannel	glib/channel-playback.h	/^typedef struct _SpicePlaybackChannel SpicePlaybackChannel;$/;"	t	typeref:struct:_SpicePlaybackChannel
SpicePlaybackChannelClass	glib/channel-playback.h	/^typedef struct _SpicePlaybackChannelClass SpicePlaybackChannelClass;$/;"	t	typeref:struct:_SpicePlaybackChannelClass
SpicePlaybackChannelPrivate	glib/channel-playback.h	/^typedef struct _SpicePlaybackChannelPrivate SpicePlaybackChannelPrivate;$/;"	t	typeref:struct:_SpicePlaybackChannelPrivate
SpicePoint	spice-common/common/draw.h	/^typedef struct SpicePoint {$/;"	s
SpicePoint	spice-common/common/draw.h	/^} SpicePoint;$/;"	t	typeref:struct:SpicePoint
SpicePoint16	spice-common/common/draw.h	/^typedef struct SpicePoint16 {$/;"	s
SpicePoint16	spice-common/common/draw.h	/^} SpicePoint16;$/;"	t	typeref:struct:SpicePoint16
SpicePointFix	spice-common/common/draw.h	/^typedef struct SpicePointFix {$/;"	s
SpicePointFix	spice-common/common/draw.h	/^} SpicePointFix;$/;"	t	typeref:struct:SpicePointFix
SpicePortChannel	glib/channel-port.h	/^typedef struct _SpicePortChannel SpicePortChannel;$/;"	t	typeref:struct:_SpicePortChannel
SpicePortChannelClass	glib/channel-port.h	/^typedef struct _SpicePortChannelClass SpicePortChannelClass;$/;"	t	typeref:struct:_SpicePortChannelClass
SpicePortChannelPrivate	glib/channel-port.h	/^typedef struct _SpicePortChannelPrivate SpicePortChannelPrivate;$/;"	t	typeref:struct:_SpicePortChannelPrivate
SpicePubkeyType	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpicePubkeyType {$/;"	g
SpicePubkeyType	spice-common/spice-protocol/spice/enums.h	/^} SpicePubkeyType;$/;"	t	typeref:enum:SpicePubkeyType
SpicePulse	glib/spice-pulse.h	/^typedef struct _SpicePulse SpicePulse;$/;"	t	typeref:struct:_SpicePulse
SpicePulseClass	glib/spice-pulse.h	/^typedef struct _SpicePulseClass SpicePulseClass;$/;"	t	typeref:struct:_SpicePulseClass
SpicePulsePrivate	glib/spice-pulse.h	/^typedef struct _SpicePulsePrivate SpicePulsePrivate;$/;"	t	typeref:struct:_SpicePulsePrivate
SpiceQMask	spice-common/common/draw.h	/^typedef struct SpiceQMask {$/;"	s
SpiceQMask	spice-common/common/draw.h	/^} SpiceQMask;$/;"	t	typeref:struct:SpiceQMask
SpiceQUICData	spice-common/common/draw.h	/^typedef struct SpiceQUICData {$/;"	s
SpiceQUICData	spice-common/common/draw.h	/^} SpiceQUICData, SpiceLZRGBData, SpiceJPEGData;$/;"	t	typeref:struct:SpiceQUICData
SpiceROP	spice-common/common/pixman_utils.h	/^} SpiceROP;$/;"	t	typeref:enum:__anon137
SpiceRasterGlyph	spice-common/common/draw.h	/^typedef struct SpiceRasterGlyph {$/;"	s
SpiceRasterGlyph	spice-common/common/draw.h	/^} SpiceRasterGlyph;$/;"	t	typeref:struct:SpiceRasterGlyph
SpiceRecordChannel	glib/channel-record.h	/^typedef struct _SpiceRecordChannel SpiceRecordChannel;$/;"	t	typeref:struct:_SpiceRecordChannel
SpiceRecordChannelClass	glib/channel-record.h	/^typedef struct _SpiceRecordChannelClass SpiceRecordChannelClass;$/;"	t	typeref:struct:_SpiceRecordChannelClass
SpiceRecordChannelPrivate	glib/channel-record.h	/^typedef struct _SpiceRecordChannelPrivate SpiceRecordChannelPrivate;$/;"	t	typeref:struct:_SpiceRecordChannelPrivate
SpiceRect	spice-common/common/draw.h	/^typedef struct SpiceRect {$/;"	s
SpiceRect	spice-common/common/draw.h	/^} SpiceRect;$/;"	t	typeref:struct:SpiceRect
SpiceRequestResolution	win32/win32_spice_interface.c	/^void SpiceRequestResolution(IN_OUT SPICE_HANDLE sh,IN int hspice,IN int x, IN int y)$/;"	f
SpiceRequestResolution_io	win32/win32_io.c	/^void SpiceRequestResolution_io(gint x, gint y,SpiceDisplay* display)$/;"	f
SpiceResourceID	spice-common/common/messages.h	/^typedef struct SpiceResourceID {$/;"	s
SpiceResourceID	spice-common/common/messages.h	/^} SpiceResourceID;$/;"	t	typeref:struct:SpiceResourceID
SpiceResourceList	spice-common/common/messages.h	/^typedef struct SpiceResourceList {$/;"	s
SpiceResourceList	spice-common/common/messages.h	/^} SpiceResourceList;$/;"	t	typeref:struct:SpiceResourceList
SpiceResourceType	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceResourceType {$/;"	g
SpiceResourceType	spice-common/spice-protocol/spice/enums.h	/^} SpiceResourceType;$/;"	t	typeref:enum:SpiceResourceType
SpiceRop3	spice-common/common/draw.h	/^typedef struct SpiceRop3 {$/;"	s
SpiceRop3	spice-common/common/draw.h	/^} SpiceRop3;$/;"	t	typeref:struct:SpiceRop3
SpiceRopd	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceRopd {$/;"	g
SpiceRopd	spice-common/spice-protocol/spice/enums.h	/^} SpiceRopd;$/;"	t	typeref:enum:SpiceRopd
SpiceRunMainLoop	win32/win32_spice_interface.c	/^int SpiceRunMainLoop(IN_OUT SPICE_HANDLE sh,IN int hmain,bool default_ctx)$/;"	f
SpiceSession	glib/spice-types.h	/^typedef struct _SpiceSession SpiceSession;$/;"	t	typeref:struct:_SpiceSession
SpiceSessionClass	glib/spice-types.h	/^typedef struct _SpiceSessionClass SpiceSessionClass;$/;"	t	typeref:struct:_SpiceSessionClass
SpiceSessionMigration	glib/spice-session.h	/^} SpiceSessionMigration;$/;"	t	typeref:enum:__anon19
SpiceSessionPrivate	glib/spice-types.h	/^typedef struct _SpiceSessionPrivate SpiceSessionPrivate;$/;"	t	typeref:struct:_SpiceSessionPrivate
SpiceSessionVerify	glib/spice-session.h	/^} SpiceSessionVerify;$/;"	t	typeref:enum:__anon18
SpiceSetCalls	win32/win32_spice_interface.c	/^void SpiceSetCalls(IN_OUT SPICE_HANDLE sh,IN int hspice,SpiceCallBacks *scbs,int cc)$/;"	f
SpiceSetUSBDisconnect	win32/win32_spice_interface.c	/^void SpiceSetUSBDisconnect(IN_OUT SPICE_HANDLE sh,IN int hspice,IN void * dev) $/;"	f
SpiceSetUSBFilter	win32/win32_spice_interface.c	/^void SpiceSetUSBFilter(IN_OUT SPICE_HANDLE sh,IN int hspice,IN const char * filter)$/;"	f
SpiceSetUSBFilterBefore	win32/win32_spice_interface.c	/^void SpiceSetUSBFilterBefore(IN_OUT SPICE_HANDLE sh,IN int hspice,IN const char * filter)$/;"	f
SpiceSetUSBRedirOnConnectFilter	win32/win32_spice_interface.c	/^void SpiceSetUSBRedirOnConnectFilter(IN_OUT SPICE_HANDLE sh,IN int hspice,IN const char * filter) $/;"	f
SpiceSetUSBRedirOnConnectFilterBefore	win32/win32_spice_interface.c	/^void SpiceSetUSBRedirOnConnectFilterBefore(IN_OUT SPICE_HANDLE sh,IN int hspice,IN const char * filter) $/;"	f
SpiceSmartcardChannel	glib/channel-smartcard.h	/^typedef struct _SpiceSmartcardChannel SpiceSmartcardChannel;$/;"	t	typeref:struct:_SpiceSmartcardChannel
SpiceSmartcardChannelClass	glib/channel-smartcard.h	/^typedef struct _SpiceSmartcardChannelClass SpiceSmartcardChannelClass;$/;"	t	typeref:struct:_SpiceSmartcardChannelClass
SpiceSmartcardChannelMessage	glib/channel-smartcard.c	/^typedef struct _SpiceSmartcardChannelMessage SpiceSmartcardChannelMessage;$/;"	t	typeref:struct:_SpiceSmartcardChannelMessage	file:
SpiceSmartcardChannelPrivate	glib/channel-smartcard.h	/^typedef struct _SpiceSmartcardChannelPrivate SpiceSmartcardChannelPrivate;$/;"	t	typeref:struct:_SpiceSmartcardChannelPrivate
SpiceSmartcardManager	glib/smartcard-manager.h	/^typedef struct _SpiceSmartcardManager SpiceSmartcardManager;$/;"	t	typeref:struct:_SpiceSmartcardManager
SpiceSmartcardManagerClass	glib/smartcard-manager.h	/^typedef struct _SpiceSmartcardManagerClass SpiceSmartcardManagerClass;$/;"	t	typeref:struct:_SpiceSmartcardManagerClass
SpiceSmartcardManagerPrivate	glib/smartcard-manager.h	/^typedef struct _SpiceSmartcardManagerPrivate SpiceSmartcardManagerPrivate;$/;"	t	typeref:struct:_SpiceSmartcardManagerPrivate
SpiceSmartcardReader	glib/smartcard-manager.h	/^typedef struct _SpiceSmartcardReader SpiceSmartcardReader;$/;"	t	typeref:struct:_SpiceSmartcardReader
SpiceStartSessionFromVvFile	win32/win32_spice_interface.c	/^int SpiceStartSessionFromVvFile(IN_OUT SPICE_HANDLE sh,IN int hspice,IN const char* vvFileName,IN  bool sound)$/;"	f
SpiceStat	spice-common/spice-protocol/spice/stats.h	/^typedef struct SpiceStat {$/;"	s
SpiceStat	spice-common/spice-protocol/spice/stats.h	/^} SpiceStat;$/;"	t	typeref:struct:SpiceStat
SpiceStatNode	spice-common/spice-protocol/spice/stats.h	/^typedef struct SpiceStatNode {$/;"	s
SpiceStatNode	spice-common/spice-protocol/spice/stats.h	/^} SpiceStatNode;$/;"	t	typeref:struct:SpiceStatNode
SpiceStopMainLoop	win32/win32_spice_interface.c	/^int SpiceStopMainLoop(IN_OUT SPICE_HANDLE sh,IN int hmain)$/;"	f
SpiceStreamDataHeader	spice-common/common/messages.h	/^typedef struct SpiceStreamDataHeader {$/;"	s
SpiceStreamDataHeader	spice-common/common/messages.h	/^} SpiceStreamDataHeader;$/;"	t	typeref:struct:SpiceStreamDataHeader
SpiceStreamFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceStreamFlags {$/;"	g
SpiceStreamFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceStreamFlags;$/;"	t	typeref:enum:SpiceStreamFlags
SpiceString	spice-common/common/draw.h	/^typedef struct SpiceString {$/;"	s
SpiceString	spice-common/common/draw.h	/^} SpiceString;$/;"	t	typeref:struct:SpiceString
SpiceStringFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceStringFlags {$/;"	g
SpiceStringFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceStringFlags;$/;"	t	typeref:enum:SpiceStringFlags
SpiceStroke	spice-common/common/draw.h	/^typedef struct SpiceStroke {$/;"	s
SpiceStroke	spice-common/common/draw.h	/^} SpiceStroke;$/;"	t	typeref:struct:SpiceStroke
SpiceSubMessage	spice-common/spice-protocol/spice/protocol.h	/^typedef struct SPICE_ATTR_PACKED SpiceSubMessage {$/;"	s
SpiceSubMessage	spice-common/spice-protocol/spice/protocol.h	/^} SpiceSubMessage;$/;"	t	typeref:struct:SpiceSubMessage
SpiceSubMessageList	spice-common/spice-protocol/spice/protocol.h	/^typedef struct SPICE_ATTR_PACKED SpiceSubMessageList {$/;"	s
SpiceSubMessageList	spice-common/spice-protocol/spice/protocol.h	/^} SpiceSubMessageList;$/;"	t	typeref:struct:SpiceSubMessageList
SpiceSurface	spice-common/common/draw.h	/^typedef struct SpiceSurface {$/;"	s
SpiceSurface	spice-common/common/draw.h	/^} SpiceSurface;$/;"	t	typeref:struct:SpiceSurface
SpiceSurfaceFlags	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceSurfaceFlags {$/;"	g
SpiceSurfaceFlags	spice-common/spice-protocol/spice/enums.h	/^} SpiceSurfaceFlags;$/;"	t	typeref:enum:SpiceSurfaceFlags
SpiceSurfaceFmt	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceSurfaceFmt {$/;"	g
SpiceSurfaceFmt	spice-common/spice-protocol/spice/enums.h	/^} SpiceSurfaceFmt;$/;"	t	typeref:enum:SpiceSurfaceFmt
SpiceText	spice-common/common/draw.h	/^typedef struct SpiceText {$/;"	s
SpiceText	spice-common/common/draw.h	/^} SpiceText;$/;"	t	typeref:struct:SpiceText
SpiceTransform	spice-common/common/draw.h	/^typedef struct SpiceTransform {$/;"	s
SpiceTransform	spice-common/common/draw.h	/^} SpiceTransform;$/;"	t	typeref:struct:SpiceTransform
SpiceTransparent	spice-common/common/draw.h	/^typedef struct SpiceTransparent {$/;"	s
SpiceTransparent	spice-common/common/draw.h	/^} SpiceTransparent;$/;"	t	typeref:struct:SpiceTransparent
SpiceTunnelIPv4	spice-common/common/messages.h	/^typedef uint8_t SpiceTunnelIPv4[4];$/;"	t
SpiceTunnelIpType	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceTunnelIpType {$/;"	g
SpiceTunnelIpType	spice-common/spice-protocol/spice/enums.h	/^} SpiceTunnelIpType;$/;"	t	typeref:enum:SpiceTunnelIpType
SpiceTunnelServiceType	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceTunnelServiceType {$/;"	g
SpiceTunnelServiceType	spice-common/spice-protocol/spice/enums.h	/^} SpiceTunnelServiceType;$/;"	t	typeref:enum:SpiceTunnelServiceType
SpiceURI	glib/spice-uri.h	/^typedef struct _SpiceURI SpiceURI;$/;"	t	typeref:struct:_SpiceURI
SpiceURIClass	glib/spice-uri.h	/^typedef struct _SpiceURIClass SpiceURIClass;$/;"	t	typeref:struct:_SpiceURIClass
SpiceURIPrivate	glib/spice-uri.h	/^typedef struct _SpiceURIPrivate SpiceURIPrivate;$/;"	t	typeref:struct:_SpiceURIPrivate
SpiceUSBRedirect	win32/win32_spice_interface.c	/^void SpiceUSBRedirect(IN_OUT SPICE_HANDLE sh,IN int hspice,IN void * dev) $/;"	f
SpiceUninit	win32/win32_spice_interface.c	/^void SpiceUninit(IN_OUT SPICE_HANDLE sh)$/;"	f
SpiceUsbDevice	glib/usb-device-manager.h	/^typedef struct _SpiceUsbDevice SpiceUsbDevice;$/;"	t	typeref:struct:_SpiceUsbDevice
SpiceUsbDeviceInfo	glib/usb-device-manager.c	/^} SpiceUsbDeviceInfo;$/;"	t	typeref:struct:_SpiceUsbDeviceInfo	file:
SpiceUsbDeviceManager	glib/usb-device-manager.h	/^typedef struct _SpiceUsbDeviceManager SpiceUsbDeviceManager;$/;"	t	typeref:struct:_SpiceUsbDeviceManager
SpiceUsbDeviceManagerClass	glib/usb-device-manager.h	/^typedef struct _SpiceUsbDeviceManagerClass SpiceUsbDeviceManagerClass;$/;"	t	typeref:struct:_SpiceUsbDeviceManagerClass
SpiceUsbDeviceManagerPrivate	glib/usb-device-manager.h	/^typedef struct _SpiceUsbDeviceManagerPrivate SpiceUsbDeviceManagerPrivate;$/;"	t	typeref:struct:_SpiceUsbDeviceManagerPrivate
SpiceUsbredirChannel	glib/channel-usbredir.h	/^typedef struct _SpiceUsbredirChannel SpiceUsbredirChannel;$/;"	t	typeref:struct:_SpiceUsbredirChannel
SpiceUsbredirChannelClass	glib/channel-usbredir.h	/^typedef struct _SpiceUsbredirChannelClass SpiceUsbredirChannelClass;$/;"	t	typeref:struct:_SpiceUsbredirChannelClass
SpiceUsbredirChannelPrivate	glib/channel-usbredir.h	/^typedef struct _SpiceUsbredirChannelPrivate SpiceUsbredirChannelPrivate;$/;"	t	typeref:struct:_SpiceUsbredirChannelPrivate
SpiceUsbredirChannelState	glib/channel-usbredir.c	/^enum SpiceUsbredirChannelState {$/;"	g	file:
SpiceVideoCodecType	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceVideoCodecType {$/;"	g
SpiceVideoCodecType	spice-common/spice-protocol/spice/enums.h	/^} SpiceVideoCodecType;$/;"	t	typeref:enum:SpiceVideoCodecType
SpiceVmcInputStream	glib/vmcstream.h	/^typedef struct _SpiceVmcInputStream          SpiceVmcInputStream;$/;"	t	typeref:struct:_SpiceVmcInputStream
SpiceVmcInputStreamClass	glib/vmcstream.h	/^typedef struct _SpiceVmcInputStreamClass     SpiceVmcInputStreamClass;$/;"	t	typeref:struct:_SpiceVmcInputStreamClass
SpiceVmcOutputStream	glib/vmcstream.h	/^typedef struct _SpiceVmcOutputStream          SpiceVmcOutputStream;$/;"	t	typeref:struct:_SpiceVmcOutputStream
SpiceVmcOutputStreamClass	glib/vmcstream.h	/^typedef struct _SpiceVmcOutputStreamClass     SpiceVmcOutputStreamClass;$/;"	t	typeref:struct:_SpiceVmcOutputStreamClass
SpiceVmcStream	glib/vmcstream.h	/^typedef struct _SpiceVmcStream                SpiceVmcStream;$/;"	t	typeref:struct:_SpiceVmcStream
SpiceVmcStreamClass	glib/vmcstream.h	/^typedef struct _SpiceVmcStreamClass           SpiceVmcStreamClass;$/;"	t	typeref:struct:_SpiceVmcStreamClass
SpiceVscMessageType	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceVscMessageType {$/;"	g
SpiceVscMessageType	spice-common/spice-protocol/spice/enums.h	/^} SpiceVscMessageType;$/;"	t	typeref:enum:SpiceVscMessageType
SpiceWaitForChannel	spice-common/common/messages.h	/^typedef struct SpiceWaitForChannel {$/;"	s
SpiceWaitForChannel	spice-common/common/messages.h	/^} SpiceWaitForChannel;$/;"	t	typeref:struct:SpiceWaitForChannel
SpiceWarnCode	spice-common/spice-protocol/spice/enums.h	/^typedef enum SpiceWarnCode {$/;"	g
SpiceWarnCode	spice-common/spice-protocol/spice/enums.h	/^} SpiceWarnCode;$/;"	t	typeref:enum:SpiceWarnCode
SpiceWebdavChannel	glib/channel-webdav.h	/^typedef struct _SpiceWebdavChannel SpiceWebdavChannel;$/;"	t	typeref:struct:_SpiceWebdavChannel
SpiceWebdavChannelClass	glib/channel-webdav.h	/^typedef struct _SpiceWebdavChannelClass SpiceWebdavChannelClass;$/;"	t	typeref:struct:_SpiceWebdavChannelClass
SpiceWebdavChannelPrivate	glib/channel-webdav.h	/^typedef struct _SpiceWebdavChannelPrivate SpiceWebdavChannelPrivate;$/;"	t	typeref:struct:_SpiceWebdavChannelPrivate
SpiceWhiteness	spice-common/common/draw.h	/^} SpiceBlackness, SpiceInvers, SpiceWhiteness;$/;"	t	typeref:struct:SpiceBlackness
SpiceWinUsbDriver	glib/win-usb-driver-install.h	/^typedef struct _SpiceWinUsbDriver          SpiceWinUsbDriver;$/;"	t	typeref:struct:_SpiceWinUsbDriver
SpiceWinUsbDriverClass	glib/win-usb-driver-install.h	/^typedef struct _SpiceWinUsbDriverClass     SpiceWinUsbDriverClass;$/;"	t	typeref:struct:_SpiceWinUsbDriverClass
SpiceWinUsbDriverError	glib/win-usb-driver-install.h	/^} SpiceWinUsbDriverError;$/;"	t	typeref:enum:__anon20
SpiceWinUsbDriverPrivate	glib/win-usb-driver-install.h	/^typedef struct _SpiceWinUsbDriverPrivate   SpiceWinUsbDriverPrivate;$/;"	t	typeref:struct:_SpiceWinUsbDriverPrivate
SpiceWindow	win32/win32-spicy.h	/^typedef struct _SpiceWindow SpiceWindow;$/;"	t	typeref:struct:_SpiceWindow
SpiceWindowClass	win32/win32-spicy.h	/^typedef struct _SpiceWindowClass SpiceWindowClass;$/;"	t	typeref:struct:_SpiceWindowClass
SpiceZlibDecoder	spice-common/common/canvas_base.h	/^typedef struct _SpiceZlibDecoder SpiceZlibDecoder;$/;"	t	typeref:struct:_SpiceZlibDecoder
SpiceZlibDecoderOps	spice-common/common/canvas_base.h	/^} SpiceZlibDecoderOps;$/;"	t	typeref:struct:__anon144
SpiceZlibGlzRGBData	spice-common/common/draw.h	/^typedef struct SpiceZlibGlzRGBData {$/;"	s
SpiceZlibGlzRGBData	spice-common/common/draw.h	/^} SpiceZlibGlzRGBData;$/;"	t	typeref:struct:SpiceZlibGlzRGBData
StepAround	spice-common/common/lines.c	1864;"	d	file:
StrokeGC	spice-common/common/canvas_base.c	/^} StrokeGC;$/;"	t	typeref:struct:__anon121	file:
StrokeLines	spice-common/common/canvas_base.c	/^} StrokeLines;$/;"	t	typeref:struct:__anon123	file:
StructType	spice-common/python_modules/ptypes.py	/^class StructType(ContainerType):$/;"	c
SubDemarshallingDestination	spice-common/python_modules/demarshal.py	/^class SubDemarshallingDestination(DemarshallingDestination):$/;"	c
SubMarshallingSource	spice-common/python_modules/marshal.py	/^class SubMarshallingSource(MarshallingSource):$/;"	c
SwCanvas	spice-common/common/sw_canvas.c	/^struct SwCanvas {$/;"	s	file:
SwCanvas	spice-common/common/sw_canvas.c	/^typedef struct SwCanvas SwCanvas;$/;"	t	typeref:struct:SwCanvas	file:
Switch	spice-common/python_modules/ptypes.py	/^class Switch(Containee):$/;"	c
SwitchCase	spice-common/python_modules/ptypes.py	/^class SwitchCase:$/;"	c
SwrContext	ffmpeg/include/libswresample/swresample.h	/^typedef struct SwrContext SwrContext;$/;"	t	typeref:struct:SwrContext
SwrDitherType	ffmpeg/include/libswresample/swresample.h	/^enum SwrDitherType {$/;"	g
SwrEngine	ffmpeg/include/libswresample/swresample.h	/^enum SwrEngine {$/;"	g
SwrFilterType	ffmpeg/include/libswresample/swresample.h	/^enum SwrFilterType {$/;"	g
SwsFilter	ffmpeg/include/libswscale/swscale.h	/^typedef struct SwsFilter {$/;"	s
SwsFilter	ffmpeg/include/libswscale/swscale.h	/^} SwsFilter;$/;"	t	typeref:struct:SwsFilter
SwsVector	ffmpeg/include/libswscale/swscale.h	/^typedef struct SwsVector {$/;"	s
SwsVector	ffmpeg/include/libswscale/swscale.h	/^} SwsVector;$/;"	t	typeref:struct:SwsVector
TABRAND_SEEDMASK	spice-common/common/quic.c	207;"	d	file:
TABRAND_TABSIZE	spice-common/common/quic.c	206;"	d	file:
TESS_CALL_BACK_TYPE	spice-common/common/glc.c	1377;"	d	file:
TESS_CALL_BACK_TYPE	spice-common/common/glc.c	1379;"	d	file:
TESS_VERTEX_ALLOC_BUNCH	spice-common/common/glc.c	44;"	d	file:
THREE_BYTE	spice-common/common/quic.c	838;"	d	file:
THREE_BYTE	spice-common/common/quic_tmpl.c	29;"	d	file:
TILED_RASTER_OP	spice-common/common/pixman_utils.c	53;"	d	file:
TO_RGB32	glib/decode-glz-tmpl.c	332;"	d	file:
TO_RGB32	glib/decode-glz.c	246;"	d	file:
TO_RGB32	glib/decode-glz.c	251;"	d	file:
TO_RGB32	glib/decode-glz.c	256;"	d	file:
TO_RGB32	glib/decode-glz.c	261;"	d	file:
TO_RGB32	glib/decode-glz.c	266;"	d	file:
TO_RGB32	glib/decode-glz.c	273;"	d	file:
TO_RGB32	spice-common/common/lz.c	445;"	d	file:
TO_RGB32	spice-common/common/lz.c	450;"	d	file:
TO_RGB32	spice-common/common/lz.c	455;"	d	file:
TO_RGB32	spice-common/common/lz.c	460;"	d	file:
TO_RGB32	spice-common/common/lz.c	465;"	d	file:
TO_RGB32	spice-common/common/lz.c	473;"	d	file:
TO_RGB32	spice-common/common/lz.c	481;"	d	file:
TO_RGB32	spice-common/common/lz_decompress_tmpl.c	339;"	d	file:
TRUE	spice-common/spice-protocol/spice/macros.h	109;"	d
T_2MDY	spice-common/common/lines.c	1182;"	d	file:
T_2NDX	spice-common/common/lines.c	1181;"	d	file:
T_ADDDX	spice-common/common/lines.c	1186;"	d	file:
T_ADDDY	spice-common/common/lines.c	1188;"	d	file:
T_ADDONE	spice-common/common/lines.c	1194;"	d	file:
T_BIASSUBONE	spice-common/common/lines.c	1190;"	d	file:
T_DIV2DX	spice-common/common/lines.c	1192;"	d	file:
T_DIV2DY	spice-common/common/lines.c	1193;"	d	file:
T_DXNOTY	spice-common/common/lines.c	1183;"	d	file:
T_DYNOTX	spice-common/common/lines.c	1184;"	d	file:
T_SUBBIAS	spice-common/common/lines.c	1191;"	d	file:
T_SUBDX	spice-common/common/lines.c	1187;"	d	file:
T_SUBDXORY	spice-common/common/lines.c	1185;"	d	file:
T_SUBDY	spice-common/common/lines.c	1189;"	d	file:
TassVertex	spice-common/common/glc.c	/^struct TassVertex {$/;"	s	file:
TassVertex	spice-common/common/glc.c	/^typedef struct TassVertex TassVertex;$/;"	t	typeref:struct:TassVertex	file:
TassVertexBuf	spice-common/common/glc.c	/^struct TassVertexBuf {$/;"	s	file:
TassVertexBuf	spice-common/common/glc.c	/^typedef struct TassVertexBuf TassVertexBuf;$/;"	t	typeref:struct:TassVertexBuf	file:
Type	spice-common/python_modules/ptypes.py	/^class Type:$/;"	c
TypeAlias	spice-common/python_modules/ptypes.py	/^class TypeAlias(Type):$/;"	c
TypeRef	spice-common/python_modules/ptypes.py	/^class TypeRef(Type):$/;"	c
UINT16_FROM_LE	spice-common/common/pixman_utils.c	1051;"	d	file:
UINT16_FROM_LE	spice-common/common/pixman_utils.c	1054;"	d	file:
UINT32_FROM_LE	spice-common/common/pixman_utils.c	1052;"	d	file:
UINT32_FROM_LE	spice-common/common/pixman_utils.c	1055;"	d	file:
UNCOMPRESS_ONE	spice-common/common/quic_rgb_tmpl.c	583;"	d	file:
UNCOMPRESS_ONE	spice-common/common/quic_rgb_tmpl.c	750;"	d	file:
UNCOMPRESS_ONE_0	spice-common/common/quic_rgb_tmpl.c	575;"	d	file:
UNCOMPRESS_ONE_0	spice-common/common/quic_rgb_tmpl.c	749;"	d	file:
UNCOMPRESS_ONE_ROW0	spice-common/common/quic_rgb_tmpl.c	468;"	d	file:
UNCOMPRESS_ONE_ROW0	spice-common/common/quic_rgb_tmpl.c	748;"	d	file:
UNCOMPRESS_ONE_ROW0_0	spice-common/common/quic_rgb_tmpl.c	461;"	d	file:
UNCOMPRESS_ONE_ROW0_0	spice-common/common/quic_rgb_tmpl.c	747;"	d	file:
UNCOMPRESS_PIX_START	spice-common/common/quic_rgb_tmpl.c	103;"	d	file:
UNCOMPRESS_PIX_START	spice-common/common/quic_rgb_tmpl.c	40;"	d	file:
UNCOMPRESS_PIX_START	spice-common/common/quic_rgb_tmpl.c	61;"	d	file:
UNCOMPRESS_PIX_START	spice-common/common/quic_rgb_tmpl.c	765;"	d	file:
UNCOMPRESS_PIX_START	spice-common/common/quic_rgb_tmpl.c	82;"	d	file:
UPDATE_MODEL	spice-common/common/quic_rgb_tmpl.c	179;"	d	file:
UPDATE_MODEL	spice-common/common/quic_rgb_tmpl.c	738;"	d	file:
URI_QUERY_SEP	glib/spice-session.c	268;"	d	file:
URI_QUERY_START	glib/spice-session.c	267;"	d	file:
URI_SCHEME_SPICE	glib/spice-session.c	266;"	d	file:
USBClerkDriverOp	glib/win-usb-clerk.h	/^typedef struct USBClerkDriverOp {$/;"	s
USBClerkDriverOp	glib/win-usb-clerk.h	/^} USBClerkDriverOp;$/;"	t	typeref:struct:USBClerkDriverOp
USBClerkHeader	glib/win-usb-clerk.h	/^typedef struct USBClerkHeader {$/;"	s
USBClerkHeader	glib/win-usb-clerk.h	/^} USBClerkHeader;$/;"	t	typeref:struct:USBClerkHeader
USBClerkReply	glib/win-usb-clerk.h	/^typedef struct USBClerkReply {$/;"	s
USBClerkReply	glib/win-usb-clerk.h	/^} USBClerkReply;$/;"	t	typeref:struct:USBClerkReply
USB_CLERK_DRIVER_INSTALL	glib/win-usb-clerk.h	/^    USB_CLERK_DRIVER_INSTALL = 1,$/;"	e	enum:__anon27
USB_CLERK_DRIVER_REMOVE	glib/win-usb-clerk.h	/^    USB_CLERK_DRIVER_REMOVE,$/;"	e	enum:__anon27
USB_CLERK_DRIVER_SESSION_INSTALL	glib/win-usb-clerk.h	/^    USB_CLERK_DRIVER_SESSION_INSTALL,$/;"	e	enum:__anon27
USB_CLERK_END_MESSAGE	glib/win-usb-clerk.h	/^    USB_CLERK_END_MESSAGE,$/;"	e	enum:__anon27
USB_CLERK_MAGIC	glib/win-usb-clerk.h	7;"	d
USB_CLERK_PIPE_NAME	glib/win-usb-clerk.h	6;"	d
USB_CLERK_REPLY	glib/win-usb-clerk.h	/^    USB_CLERK_REPLY,$/;"	e	enum:__anon27
USB_CLERK_VERSION	glib/win-usb-clerk.h	8;"	d
USB_IDS	glib/makefile	/^USB_IDS = \/var\/lib\/usbutils\/usb.ids$/;"	m
USE_GDBUS	config.h	145;"	d
USE_GDBUS	glib/config.h	147;"	d
USE_GDBUS	make/config.h	145;"	d
USE_GDBUS	make/configglib.h	147;"	d
USE_GDBUS	make/configwin32.h	145;"	d
USE_GDBUS	make/wconfig.h	145;"	d
USE_GDBUS	make/wconfigglib.h	145;"	d
USE_GDBUS	make/wconfigwin32.h	145;"	d
USE_GDBUS	win32/config.h	145;"	d
USE_GUDEV	glib/usb-device-manager.c	37;"	d	file:
USE_LIBUSB_HOTPLUG	config.h	151;"	d
USE_LIBUSB_HOTPLUG	glib/config.h	153;"	d
USE_LIBUSB_HOTPLUG	make/config.h	151;"	d
USE_LIBUSB_HOTPLUG	make/configglib.h	153;"	d
USE_LINE_ANTIALIAS	spice-common/common/glc.c	113;"	d	file:
USE_USBREDIR	config.h	163;"	d
USE_USBREDIR	glib/config.h	165;"	d
USE_USBREDIR	make/config.h	163;"	d
USE_USBREDIR	make/configglib.h	165;"	d
USE_USBREDIR	make/configwin32.h	163;"	d
USE_USBREDIR	make/wconfig.h	163;"	d
USE_USBREDIR	make/wconfigglib.h	163;"	d
USE_USBREDIR	make/wconfigwin32.h	163;"	d
USE_USBREDIR	win32/config.h	163;"	d
UUID_FMT	glib/spice-util-priv.h	26;"	d
UniquifySpansX	spice-common/common/lines.c	/^UniquifySpansX (Spans * spans, DDXPointRec * newPoints, int *newWidths)$/;"	f	file:
UpdateBitmap	win32/win32_io.c	/^void UpdateBitmap (SpiceDisplay* display,char* bitmap, gint x, gint y, gint width, gint height) $/;"	f
UsbInstallCbInfo	glib/usb-device-manager.c	/^} UsbInstallCbInfo;$/;"	t	typeref:struct:_UsbInstallCbInfo	file:
VDAgentAnnounceCapabilities	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentAnnounceCapabilities {$/;"	s
VDAgentAnnounceCapabilities	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentAnnounceCapabilities;$/;"	t	typeref:struct:VDAgentAnnounceCapabilities
VDAgentClipboard	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentClipboard {$/;"	s
VDAgentClipboard	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentClipboard;$/;"	t	typeref:struct:VDAgentClipboard
VDAgentClipboardGrab	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentClipboardGrab {$/;"	s
VDAgentClipboardGrab	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentClipboardGrab;$/;"	t	typeref:struct:VDAgentClipboardGrab
VDAgentClipboardRelease	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentClipboardRelease {$/;"	s
VDAgentClipboardRelease	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentClipboardRelease;$/;"	t	typeref:struct:VDAgentClipboardRelease
VDAgentClipboardRequest	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentClipboardRequest {$/;"	s
VDAgentClipboardRequest	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentClipboardRequest;$/;"	t	typeref:struct:VDAgentClipboardRequest
VDAgentDisplayConfig	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentDisplayConfig {$/;"	s
VDAgentDisplayConfig	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentDisplayConfig;$/;"	t	typeref:struct:VDAgentDisplayConfig
VDAgentFileXferDataMessage	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentFileXferDataMessage {$/;"	s
VDAgentFileXferDataMessage	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentFileXferDataMessage;$/;"	t	typeref:struct:VDAgentFileXferDataMessage
VDAgentFileXferStartMessage	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentFileXferStartMessage {$/;"	s
VDAgentFileXferStartMessage	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentFileXferStartMessage;$/;"	t	typeref:struct:VDAgentFileXferStartMessage
VDAgentFileXferStatusMessage	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentFileXferStatusMessage {$/;"	s
VDAgentFileXferStatusMessage	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentFileXferStatusMessage;$/;"	t	typeref:struct:VDAgentFileXferStatusMessage
VDAgentMaxClipboard	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentMaxClipboard {$/;"	s
VDAgentMaxClipboard	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentMaxClipboard;$/;"	t	typeref:struct:VDAgentMaxClipboard
VDAgentMessage	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentMessage {$/;"	s
VDAgentMessage	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentMessage;$/;"	t	typeref:struct:VDAgentMessage
VDAgentMonConfig	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentMonConfig {$/;"	s
VDAgentMonConfig	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentMonConfig;$/;"	t	typeref:struct:VDAgentMonConfig
VDAgentMonitorsConfig	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentMonitorsConfig {$/;"	s
VDAgentMonitorsConfig	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentMonitorsConfig;$/;"	t	typeref:struct:VDAgentMonitorsConfig
VDAgentMouseState	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentMouseState {$/;"	s
VDAgentMouseState	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentMouseState;$/;"	t	typeref:struct:VDAgentMouseState
VDAgentReply	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDAgentReply {$/;"	s
VDAgentReply	spice-common/spice-protocol/spice/vd_agent.h	/^} VDAgentReply;$/;"	t	typeref:struct:VDAgentReply
VDIChunkHeader	spice-common/spice-protocol/spice/vd_agent.h	/^typedef struct SPICE_ATTR_PACKED VDIChunkHeader {$/;"	s
VDIChunkHeader	spice-common/spice-protocol/spice/vd_agent.h	/^} VDIChunkHeader;$/;"	t	typeref:struct:VDIChunkHeader
VDIPortPacket	spice-common/spice-protocol/spice/vdi_dev.h	/^typedef struct SPICE_ATTR_PACKED VDIPortPacket {$/;"	s
VDIPortPacket	spice-common/spice-protocol/spice/vdi_dev.h	/^} VDIPortPacket;$/;"	t	typeref:struct:VDIPortPacket
VDIPortRam	spice-common/spice-protocol/spice/vdi_dev.h	/^typedef struct SPICE_ATTR_PACKED VDIPortRam {$/;"	s
VDIPortRam	spice-common/spice-protocol/spice/vdi_dev.h	/^} VDIPortRam;$/;"	t	typeref:struct:VDIPortRam
VDI_PORT_DEVICE_ID	spice-common/spice-protocol/spice/vdi_dev.h	42;"	d
VDI_PORT_INTERRUPT	spice-common/spice-protocol/spice/vdi_dev.h	45;"	d
VDI_PORT_IO_CONNECTION	spice-common/spice-protocol/spice/vdi_dev.h	/^    VDI_PORT_IO_CONNECTION,$/;"	e	enum:__anon62
VDI_PORT_IO_NOTIFY	spice-common/spice-protocol/spice/vdi_dev.h	/^    VDI_PORT_IO_NOTIFY = 4,$/;"	e	enum:__anon62
VDI_PORT_IO_RANGE_INDEX	spice-common/spice-protocol/spice/vdi_dev.h	/^    VDI_PORT_IO_RANGE_INDEX,$/;"	e	enum:__anon61
VDI_PORT_IO_RANGE_SIZE	spice-common/spice-protocol/spice/vdi_dev.h	/^    VDI_PORT_IO_RANGE_SIZE = 12$/;"	e	enum:__anon62
VDI_PORT_IO_UPDATE_IRQ	spice-common/spice-protocol/spice/vdi_dev.h	/^    VDI_PORT_IO_UPDATE_IRQ = 8,$/;"	e	enum:__anon62
VDI_PORT_MAGIC	spice-common/spice-protocol/spice/vdi_dev.h	47;"	d
VDI_PORT_RAM_RANGE_INDEX	spice-common/spice-protocol/spice/vdi_dev.h	/^    VDI_PORT_RAM_RANGE_INDEX,$/;"	e	enum:__anon61
VDI_PORT_REVISION	spice-common/spice-protocol/spice/vdi_dev.h	43;"	d
VDP_CLIENT_PORT	spice-common/spice-protocol/spice/vd_agent.h	/^    VDP_CLIENT_PORT = 1,$/;"	e	enum:__anon103
VDP_END_PORT	spice-common/spice-protocol/spice/vd_agent.h	/^    VDP_END_PORT$/;"	e	enum:__anon103
VDP_SERVER_PORT	spice-common/spice-protocol/spice/vd_agent.h	/^    VDP_SERVER_PORT,$/;"	e	enum:__anon103
VD_AGENT_ANNOUNCE_CAPABILITIES	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_ANNOUNCE_CAPABILITIES,$/;"	e	enum:__anon104
VD_AGENT_CAPS_BYTES	spice-common/spice-protocol/spice/vd_agent.h	240;"	d
VD_AGENT_CAPS_SIZE	spice-common/spice-protocol/spice/vd_agent.h	238;"	d
VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE	spice-common/spice-protocol/spice/vd_agent.h	235;"	d
VD_AGENT_CAP_CLIPBOARD	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_CLIPBOARD,$/;"	e	enum:__anon110
VD_AGENT_CAP_CLIPBOARD_BY_DEMAND	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_CLIPBOARD_BY_DEMAND,$/;"	e	enum:__anon110
VD_AGENT_CAP_CLIPBOARD_SELECTION	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_CLIPBOARD_SELECTION,$/;"	e	enum:__anon110
VD_AGENT_CAP_DISPLAY_CONFIG	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_DISPLAY_CONFIG,$/;"	e	enum:__anon110
VD_AGENT_CAP_GUEST_LINEEND_CRLF	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_GUEST_LINEEND_CRLF,$/;"	e	enum:__anon110
VD_AGENT_CAP_GUEST_LINEEND_LF	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_GUEST_LINEEND_LF,$/;"	e	enum:__anon110
VD_AGENT_CAP_MAX_CLIPBOARD	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_MAX_CLIPBOARD,$/;"	e	enum:__anon110
VD_AGENT_CAP_MONITORS_CONFIG	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_MONITORS_CONFIG,$/;"	e	enum:__anon110
VD_AGENT_CAP_MOUSE_STATE	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_MOUSE_STATE = 0,$/;"	e	enum:__anon110
VD_AGENT_CAP_REPLY	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_REPLY,$/;"	e	enum:__anon110
VD_AGENT_CAP_SPARSE_MONITORS_CONFIG	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CAP_SPARSE_MONITORS_CONFIG,$/;"	e	enum:__anon110
VD_AGENT_CLIENT_DISCONNECTED	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIENT_DISCONNECTED,$/;"	e	enum:__anon104
VD_AGENT_CLIPBOARD	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD,$/;"	e	enum:__anon104
VD_AGENT_CLIPBOARD_GRAB	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_GRAB,$/;"	e	enum:__anon104
VD_AGENT_CLIPBOARD_IMAGE_BMP	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_IMAGE_BMP,  \/* optional *\/$/;"	e	enum:__anon109
VD_AGENT_CLIPBOARD_IMAGE_JPG	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_IMAGE_JPG,  \/* optional *\/$/;"	e	enum:__anon109
VD_AGENT_CLIPBOARD_IMAGE_PNG	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_IMAGE_PNG,  \/* All clients with image support should support this one *\/$/;"	e	enum:__anon109
VD_AGENT_CLIPBOARD_IMAGE_TIFF	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_IMAGE_TIFF, \/* optional *\/$/;"	e	enum:__anon109
VD_AGENT_CLIPBOARD_MAX_SIZE_DEFAULT	spice-common/spice-protocol/spice/vd_agent.h	61;"	d
VD_AGENT_CLIPBOARD_MAX_SIZE_ENV	spice-common/spice-protocol/spice/vd_agent.h	62;"	d
VD_AGENT_CLIPBOARD_NONE	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_NONE = 0,$/;"	e	enum:__anon109
VD_AGENT_CLIPBOARD_RELEASE	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_RELEASE,$/;"	e	enum:__anon104
VD_AGENT_CLIPBOARD_REQUEST	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_REQUEST,$/;"	e	enum:__anon104
VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD = 0,$/;"	e	enum:__anon111
VD_AGENT_CLIPBOARD_SELECTION_PRIMARY	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_SELECTION_PRIMARY,$/;"	e	enum:__anon111
VD_AGENT_CLIPBOARD_SELECTION_SECONDARY	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_SELECTION_SECONDARY,$/;"	e	enum:__anon111
VD_AGENT_CLIPBOARD_UTF8_TEXT	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CLIPBOARD_UTF8_TEXT,$/;"	e	enum:__anon109
VD_AGENT_CONFIG_MONITORS_FLAG_USE_POS	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_CONFIG_MONITORS_FLAG_USE_POS = (1 << 0),$/;"	e	enum:__anon106
VD_AGENT_DBUTTON_MASK	spice-common/spice-protocol/spice/vd_agent.h	145;"	d
VD_AGENT_DISPLAY_CONFIG	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_DISPLAY_CONFIG,$/;"	e	enum:__anon104
VD_AGENT_DISPLAY_CONFIG_FLAG_DISABLE_ANIMATION	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_DISPLAY_CONFIG_FLAG_DISABLE_ANIMATION = (1 << 2),$/;"	e	enum:__anon107
VD_AGENT_DISPLAY_CONFIG_FLAG_DISABLE_FONT_SMOOTH	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_DISPLAY_CONFIG_FLAG_DISABLE_FONT_SMOOTH = (1 << 1),$/;"	e	enum:__anon107
VD_AGENT_DISPLAY_CONFIG_FLAG_DISABLE_WALLPAPER	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_DISPLAY_CONFIG_FLAG_DISABLE_WALLPAPER = (1 << 0),$/;"	e	enum:__anon107
VD_AGENT_DISPLAY_CONFIG_FLAG_SET_COLOR_DEPTH	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_DISPLAY_CONFIG_FLAG_SET_COLOR_DEPTH = (1 << 3),$/;"	e	enum:__anon107
VD_AGENT_END_CAP	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_END_CAP,$/;"	e	enum:__anon110
VD_AGENT_END_MESSAGE	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_END_MESSAGE,$/;"	e	enum:__anon104
VD_AGENT_ERROR	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_ERROR,$/;"	e	enum:__anon108
VD_AGENT_FILE_XFER_DATA	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_FILE_XFER_DATA,$/;"	e	enum:__anon104
VD_AGENT_FILE_XFER_START	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_FILE_XFER_START,$/;"	e	enum:__anon104
VD_AGENT_FILE_XFER_STATUS	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_FILE_XFER_STATUS,$/;"	e	enum:__anon104
VD_AGENT_FILE_XFER_STATUS_CANCELLED	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_FILE_XFER_STATUS_CANCELLED,$/;"	e	enum:__anon105
VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA,$/;"	e	enum:__anon105
VD_AGENT_FILE_XFER_STATUS_ERROR	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_FILE_XFER_STATUS_ERROR,$/;"	e	enum:__anon105
VD_AGENT_FILE_XFER_STATUS_SUCCESS	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_FILE_XFER_STATUS_SUCCESS,$/;"	e	enum:__anon105
VD_AGENT_HAS_CAPABILITY	spice-common/spice-protocol/spice/vd_agent.h	242;"	d
VD_AGENT_LBUTTON_MASK	spice-common/spice-protocol/spice/vd_agent.h	141;"	d
VD_AGENT_MAX_CLIPBOARD	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_MAX_CLIPBOARD,$/;"	e	enum:__anon104
VD_AGENT_MAX_DATA_SIZE	spice-common/spice-protocol/spice/vd_agent.h	58;"	d
VD_AGENT_MBUTTON_MASK	spice-common/spice-protocol/spice/vd_agent.h	142;"	d
VD_AGENT_MONITORS_CONFIG	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_MONITORS_CONFIG,$/;"	e	enum:__anon104
VD_AGENT_MOUSE_STATE	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_MOUSE_STATE = 1,$/;"	e	enum:__anon104
VD_AGENT_PROTOCOL	spice-common/spice-protocol/spice/vd_agent.h	57;"	d
VD_AGENT_RBUTTON_MASK	spice-common/spice-protocol/spice/vd_agent.h	143;"	d
VD_AGENT_REPLY	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_REPLY,$/;"	e	enum:__anon104
VD_AGENT_SET_CAPABILITY	spice-common/spice-protocol/spice/vd_agent.h	245;"	d
VD_AGENT_SUCCESS	spice-common/spice-protocol/spice/vd_agent.h	/^    VD_AGENT_SUCCESS = 1,$/;"	e	enum:__anon108
VD_AGENT_UBUTTON_MASK	spice-common/spice-protocol/spice/vd_agent.h	144;"	d
VENDOR_NAME_LEN	glib/usbutil.c	43;"	d	file:
VERSION	config.h	166;"	d
VERSION	glib/config.h	168;"	d
VERSION	make/config.h	166;"	d
VERSION	make/configcommon.h	152;"	d
VERSION	make/configglib.h	168;"	d
VERSION	make/configprotocol.h	26;"	d
VERSION	make/configwin32.h	166;"	d
VERSION	make/wconfig.h	166;"	d
VERSION	make/wconfigcommon.h	152;"	d
VERSION	make/wconfigglib.h	166;"	d
VERSION	make/wconfigprotocol.h	26;"	d
VERSION	make/wconfigwin32.h	166;"	d
VERSION	spice-common/config.h	152;"	d
VERSION	spice-common/spice-protocol/config.h	26;"	d
VERSION	win32/config.h	166;"	d
VERTEX2	spice-common/common/glc.c	159;"	d	file:
VIRT_VIEWER_ERROR	win32/virt-viewer-util.h	39;"	d
VIRT_VIEWER_ERROR_FAILED	win32/virt-viewer-util.h	/^    VIRT_VIEWER_ERROR_FAILED,$/;"	e	enum:__anon47
VIRT_VIEWER_FILE	win32/virt-viewer-file.h	29;"	d
VIRT_VIEWER_FILE_CLASS	win32/virt-viewer-file.h	30;"	d
VIRT_VIEWER_FILE_GET_CLASS	win32/virt-viewer-file.h	33;"	d
VIRT_VIEWER_FILE_GET_PRIVATE	win32/virt-viewer-file.c	79;"	d	file:
VIRT_VIEWER_IS_FILE	win32/virt-viewer-file.h	31;"	d
VIRT_VIEWER_IS_FILE_CLASS	win32/virt-viewer-file.h	32;"	d
VIRT_VIEWER_TYPE_FILE	win32/virt-viewer-file.h	28;"	d
VIRT_VIEWER_UTIL_H	win32/virt-viewer-util.h	25;"	d
VNAME	spice-common/common/quic_family_tmpl.c	114;"	d	file:
VNAME	spice-common/common/quic_family_tmpl.c	25;"	d	file:
VNAME	spice-common/common/quic_family_tmpl.c	33;"	d	file:
VOLUME_NORMAL	glib/spice-gstaudio.c	398;"	d	file:
VORBIS_FLAG_COMMENT	ffmpeg/include/libavcodec/vorbis_parser.h	49;"	d
VORBIS_FLAG_HEADER	ffmpeg/include/libavcodec/vorbis_parser.h	48;"	d
VORBIS_FLAG_SETUP	ffmpeg/include/libavcodec/vorbis_parser.h	50;"	d
V_BOTTOM	spice-common/common/lines.c	2962;"	d	file:
V_LEFT	spice-common/common/lines.c	2963;"	d	file:
V_RIGHT	spice-common/common/lines.c	2961;"	d	file:
V_TOP	spice-common/common/lines.c	2960;"	d	file:
Vertex	spice-common/common/glc.c	/^typedef GLdouble Vertex[3];$/;"	t	file:
VirtViewerFile	win32/virt-viewer-file.h	/^typedef struct _VirtViewerFile VirtViewerFile;$/;"	t	typeref:struct:_VirtViewerFile
VirtViewerFileClass	win32/virt-viewer-file.h	/^typedef struct _VirtViewerFileClass VirtViewerFileClass;$/;"	t	typeref:struct:_VirtViewerFileClass
VirtViewerFilePrivate	win32/virt-viewer-file.h	/^typedef struct _VirtViewerFilePrivate VirtViewerFilePrivate;$/;"	t	typeref:struct:_VirtViewerFilePrivate
WIN_OVERFLOW_FACTOR	glib/decode-glz.c	80;"	d	file:
WIN_REALLOC_FACTOR	glib/decode-glz.c	81;"	d	file:
WITH_GSTAUDIO	config.h	170;"	d
WITH_GSTAUDIO	glib/config.h	172;"	d
WITH_GSTAUDIO	make/config.h	170;"	d
WITH_GSTAUDIO	make/configglib.h	172;"	d
WITH_GSTAUDIO	make/configwin32.h	169;"	d
WITH_GSTAUDIO	make/wconfig.h	169;"	d
WITH_GSTAUDIO	make/wconfigglib.h	169;"	d
WITH_GSTAUDIO	make/wconfigwin32.h	169;"	d
WITH_GSTAUDIO	win32/config.h	169;"	d
WITH_GTHREAD	config.h	173;"	d
WITH_GTHREAD	glib/config.h	175;"	d
WITH_GTHREAD	make/config.h	173;"	d
WITH_GTHREAD	make/configglib.h	175;"	d
WITH_GTHREAD	make/configwin32.h	172;"	d
WITH_GTHREAD	make/wconfig.h	172;"	d
WITH_GTHREAD	make/wconfigglib.h	172;"	d
WITH_GTHREAD	make/wconfigwin32.h	172;"	d
WITH_GTHREAD	win32/config.h	172;"	d
WITH_UCONTEXT	config.h	179;"	d
WITH_UCONTEXT	glib/config.h	181;"	d
WITH_UCONTEXT	make/config.h	179;"	d
WITH_UCONTEXT	make/configglib.h	181;"	d
WITH_UCONTEXT	make/configwin32.h	178;"	d
WITH_UCONTEXT	make/wconfig.h	178;"	d
WITH_UCONTEXT	make/wconfigglib.h	178;"	d
WITH_UCONTEXT	make/wconfigwin32.h	178;"	d
WITH_UCONTEXT	win32/config.h	178;"	d
WITH_USBIDS	config.h	182;"	d
WITH_USBIDS	glib/config.h	184;"	d
WITH_USBIDS	make/config.h	182;"	d
WITH_USBIDS	make/configglib.h	184;"	d
WITH_WINFIBER	config.h	185;"	d
WITH_WINFIBER	glib/config.h	187;"	d
WITH_WINFIBER	make/config.h	185;"	d
WITH_WINFIBER	make/configglib.h	187;"	d
WITH_WINFIBER	make/configwin32.h	184;"	d
WITH_WINFIBER	make/wconfig.h	184;"	d
WITH_WINFIBER	make/wconfigglib.h	184;"	d
WITH_WINFIBER	make/wconfigwin32.h	184;"	d
WITH_WINFIBER	win32/config.h	184;"	d
WOCKY_HTTPS_PROXY	glib/wocky-http-proxy.h	42;"	d
WOCKY_HTTPS_PROXY_CLASS	glib/wocky-http-proxy.h	43;"	d
WOCKY_HTTPS_PROXY_GET_CLASS	glib/wocky-http-proxy.h	46;"	d
WOCKY_HTTP_PROXY	glib/wocky-http-proxy.h	29;"	d
WOCKY_HTTP_PROXY_CLASS	glib/wocky-http-proxy.h	30;"	d
WOCKY_HTTP_PROXY_GET_CLASS	glib/wocky-http-proxy.h	33;"	d
WOCKY_IS_HTTPS_PROXY	glib/wocky-http-proxy.h	44;"	d
WOCKY_IS_HTTPS_PROXY_CLASS	glib/wocky-http-proxy.h	45;"	d
WOCKY_IS_HTTP_PROXY	glib/wocky-http-proxy.h	31;"	d
WOCKY_IS_HTTP_PROXY_CLASS	glib/wocky-http-proxy.h	32;"	d
WOCKY_TYPE_HTTPS_PROXY	glib/wocky-http-proxy.h	41;"	d
WOCKY_TYPE_HTTP_PROXY	glib/wocky-http-proxy.h	28;"	d
WORD	win32/create_bmp.h	/^typedef unsigned short WORD;$/;"	t
WORDS_BIGENDIAN	config.h	194;"	d
WORDS_BIGENDIAN	glib/config.h	196;"	d
WORDS_BIGENDIAN	make/config.h	194;"	d
WORDS_BIGENDIAN	make/configglib.h	196;"	d
WORDS_BIGENDIAN	make/configwin32.h	193;"	d
WORDS_BIGENDIAN	make/wconfig.h	193;"	d
WORDS_BIGENDIAN	make/wconfigglib.h	193;"	d
WORDS_BIGENDIAN	make/wconfigwin32.h	193;"	d
WORDS_BIGENDIAN	win32/config.h	193;"	d
WaitForChannelData	glib/channel-base.c	/^typedef struct WaitForChannelData$/;"	s	file:
WaitForChannelData	glib/channel-base.c	/^} WaitForChannelData;$/;"	t	typeref:struct:WaitForChannelData	file:
WaitImageData	glib/channel-display.c	/^} WaitImageData;$/;"	t	typeref:struct:_WaitImageData	file:
WeakHandlerCtx	glib/spice-util.c	/^} WeakHandlerCtx;$/;"	t	typeref:struct:__anon23	file:
WeakHandlerCtx	win32/virt-viewer-util.c	/^} WeakHandlerCtx;$/;"	t	typeref:struct:__anon45	file:
Win32SpiceGloabInfo	win32/win32_spice_interface_priv.h	/^typedef struct Win32SpiceGloabInfo$/;"	s
Win32SpiceGloabInfo	win32/win32_spice_interface_priv.h	/^}Win32SpiceGloabInfo;$/;"	t	typeref:struct:Win32SpiceGloabInfo
WockyHttpProxy	glib/wocky-http-proxy.h	/^typedef struct _WockyHttpProxy        WockyHttpProxy;$/;"	t	typeref:struct:_WockyHttpProxy
WockyHttpProxyClass	glib/wocky-http-proxy.h	/^typedef struct _WockyHttpProxyClass   WockyHttpProxyClass;$/;"	t	typeref:struct:_WockyHttpProxyClass
WockyHttpsProxy	glib/wocky-http-proxy.h	/^typedef struct _WockyHttpsProxy        WockyHttpsProxy;$/;"	t	typeref:struct:_WockyHttpsProxy
WockyHttpsProxyClass	glib/wocky-http-proxy.h	/^typedef struct _WockyHttpsProxyClass   WockyHttpsProxyClass;$/;"	t	typeref:struct:_WockyHttpsProxyClass
X509_NAME	spice-common/common/ssl_verify.h	34;"	d
XDECREASING	spice-common/common/lines.c	136;"	d	file:
XMAJOROCTANTS	spice-common/common/lines.c	149;"	d	file:
XMD_H	glib/channel-display-priv.h	26;"	d
XMD_H	glib/decode-jpeg.c	25;"	d	file:
X_AXIS	spice-common/common/lines.c	182;"	d	file:
Y	spice-common/common/glc.c	158;"	d	file:
YDECREASING	spice-common/common/lines.c	137;"	d	file:
YMAJOR	spice-common/common/lines.c	138;"	d	file:
YMAX	spice-common/common/lines.c	447;"	d	file:
YMIN	spice-common/common/lines.c	446;"	d	file:
Y_AXIS	spice-common/common/lines.c	183;"	d	file:
ZLIB_WINAPI	glib/decode-zlib.c	23;"	d	file:
_ANDROID_SPICY_H	win32/win32-spicy.h	19;"	d
_CONTINUATION_H_	glib/continuation.h	22;"	d
_COROUTINE_H_	glib/coroutine.h	22;"	d
_CreateOvirtSession	win32/win32_service.c	/^int _CreateOvirtSession(const gchar *uri, const gchar *user, const gchar *password,$/;"	f
_FORTIFY_SOURCE	config.h	12;"	d
_FORTIFY_SOURCE	glib/config.h	14;"	d
_FORTIFY_SOURCE	glib/continuation.c	24;"	d	file:
_FORTIFY_SOURCE	make/config.h	12;"	d
_FORTIFY_SOURCE	make/configglib.h	14;"	d
_FORTIFY_SOURCE	make/configwin32.h	12;"	d
_FORTIFY_SOURCE	make/wconfig.h	12;"	d
_FORTIFY_SOURCE	make/wconfigglib.h	12;"	d
_FORTIFY_SOURCE	make/wconfigwin32.h	12;"	d
_FORTIFY_SOURCE	win32/config.h	12;"	d
_GConditionWaitSource	glib/gio-coroutine.c	/^typedef struct _GConditionWaitSource$/;"	s	file:
_GCoroutine	glib/gio-coroutine.h	/^struct _GCoroutine$/;"	s
_GENERATED_HEADERS_H	spice-common/common/generated_server_marshallers.h	24;"	d
_GL_CONCAT	spice-common/common/verify.h	144;"	d
_GL_CONCAT0	spice-common/common/verify.h	145;"	d
_GL_COUNTER	spice-common/common/verify.h	152;"	d
_GL_COUNTER	spice-common/common/verify.h	154;"	d
_GL_GENSYM	spice-common/common/verify.h	159;"	d
_GL_HAVE_STATIC_ASSERT	spice-common/common/verify.h	40;"	d
_GL_HAVE__STATIC_ASSERT	spice-common/common/verify.h	35;"	d
_GL_VERIFY	spice-common/common/verify.h	197;"	d
_GL_VERIFY	spice-common/common/verify.h	199;"	d
_GL_VERIFY_H	spice-common/common/verify.h	21;"	d
_GL_VERIFY_TRUE	spice-common/common/verify.h	165;"	d
_GL_VERIFY_TYPE	spice-common/common/verify.h	176;"	d
_GL_VERIFY_TYPE	spice-common/common/verify.h	179;"	d
_GL_VERIFY_TYPE	spice-common/common/verify.h	185;"	d
_GUdevClient	glib/win-usb-dev.h	/^struct _GUdevClient$/;"	s
_GUdevClientClass	glib/win-usb-dev.h	/^struct _GUdevClientClass$/;"	s
_GUdevClientPrivate	glib/win-usb-dev.c	/^struct _GUdevClientPrivate {$/;"	s	file:
_GUdevDevice	glib/win-usb-dev.h	/^struct _GUdevDevice$/;"	s
_GUdevDeviceClass	glib/win-usb-dev.h	/^struct _GUdevDeviceClass$/;"	s
_GUdevDeviceInfo	glib/win-usb-dev.c	/^struct _GUdevDeviceInfo {$/;"	s	file:
_GUdevDevicePrivate	glib/win-usb-dev.c	/^struct _GUdevDevicePrivate$/;"	s	file:
_G_DEFINE_BOXED_TYPE_BEGIN	glib/glib-compat.h	31;"	d
_G_DEFINE_BOXED_TYPE_BEGIN	glib/glib-compat.h	56;"	d
_H264Decoder	glib/h264_decoder.h	/^typedef struct _H264Decoder$/;"	s
_H264StreamInfo	glib/h264_type.h	/^typedef struct _H264StreamInfo$/;"	s
_H_CANVAS_BASE	spice-common/common/canvas_base.h	20;"	d
_H_CANVAS_UTILS	spice-common/common/canvas_utils.h	20;"	d
_H_CONTROLLER_PROT	spice-common/spice-protocol/spice/controller_prot.h	19;"	d
_H_DEMARSHAL	spice-common/common/client_demarshallers.h	18;"	d
_H_FOREIGN_MENU_PROT	spice-common/spice-protocol/spice/foreign_menu_prot.h	19;"	d
_H_GLCTX	spice-common/common/ogl_ctx.h	20;"	d
_H_GL_CANVASE	spice-common/common/glc.h	22;"	d
_H_MARSHALLER	spice-common/common/marshaller.h	20;"	d
_H_MARSHALLERS	spice-common/common/client_marshallers.h	20;"	d
_H_MEM	spice-common/common/mem.h	20;"	d
_H_MESSAGES	spice-common/common/messages.h	32;"	d
_H_MUTEX	spice-common/common/mutex.h	20;"	d
_H_QXL_DEV	spice-common/spice-protocol/spice/qxl_dev.h	33;"	d
_H_QXL_WINDOWS	spice-common/spice-protocol/spice/qxl_windows.h	2;"	d
_H_RECT	spice-common/common/rect.h	20;"	d
_H_REGION	spice-common/common/region.h	20;"	d
_H_RING2	spice-common/common/ring.h	20;"	d
_H_ROP3	spice-common/common/rop3.h	20;"	d
_H_SND_CODEC	spice-common/common/snd_codec.h	20;"	d
_H_SPICE_BARRIER	spice-common/spice-protocol/spice/barrier.h	33;"	d
_H_SPICE_DRAW	spice-common/common/draw.h	32;"	d
_H_SPICE_ENUMS	spice-common/spice-protocol/spice/enums.h	20;"	d
_H_SPICE_ERROR_CODES	spice-common/spice-protocol/spice/error_codes.h	32;"	d
_H_SPICE_MACROS	spice-common/spice-protocol/spice/macros.h	29;"	d
_H_SPICE_PROTOCOL	spice-common/spice-protocol/spice/protocol.h	32;"	d
_H_SPICE_RING	spice-common/spice-protocol/spice/ipc_ring.h	33;"	d
_H_SPICE_STATS	spice-common/spice-protocol/spice/stats.h	32;"	d
_H_SPICE_TYPES	spice-common/spice-protocol/spice/types.h	33;"	d
_H_USBCLERK	glib/win-usb-clerk.h	2;"	d
_H_VDI_DEV	spice-common/spice-protocol/spice/vdi_dev.h	32;"	d
_H_VD_AGENT	spice-common/spice-protocol/spice/vd_agent.h	32;"	d
_H__CANVAS	spice-common/common/sw_canvas.h	20;"	d
_H__GDI_CANVAS	spice-common/common/gdi_canvas.h	20;"	d
_H__GL_CANVAS	spice-common/common/gl_canvas.h	20;"	d
_H__PIXMAN_UTILS	spice-common/common/pixman_utils.h	20;"	d
_LZ_COMMON_H	spice-common/common/lz_common.h	24;"	d
_LineFace	spice-common/common/lines.c	/^typedef struct _LineFace {$/;"	s	file:
_OutputQueue	glib/channel-webdav.c	/^struct _OutputQueue {$/;"	s	file:
_OutputQueueElem	glib/channel-webdav.c	/^typedef struct _OutputQueueElem {$/;"	s	file:
_PIXEL_A	spice-common/common/quic_rgb_tmpl.c	111;"	d	file:
_PIXEL_A	spice-common/common/quic_rgb_tmpl.c	731;"	d	file:
_PIXEL_A	spice-common/common/quic_tmpl.c	49;"	d	file:
_PIXEL_A	spice-common/common/quic_tmpl.c	623;"	d	file:
_PIXEL_B	spice-common/common/quic_rgb_tmpl.c	112;"	d	file:
_PIXEL_B	spice-common/common/quic_rgb_tmpl.c	732;"	d	file:
_PIXEL_B	spice-common/common/quic_tmpl.c	50;"	d	file:
_PIXEL_B	spice-common/common/quic_tmpl.c	624;"	d	file:
_PIXEL_C	spice-common/common/quic_rgb_tmpl.c	113;"	d	file:
_PIXEL_C	spice-common/common/quic_rgb_tmpl.c	733;"	d	file:
_PIXEL_C	spice-common/common/quic_tmpl.c	51;"	d	file:
_PIXEL_C	spice-common/common/quic_tmpl.c	625;"	d	file:
_PolyEdge	spice-common/common/lines.c	/^typedef struct _PolyEdge {$/;"	s	file:
_PolySlope	spice-common/common/lines.c	/^typedef struct _PolySlope {$/;"	s	file:
_PolyVertex	spice-common/common/lines.c	/^typedef struct _PolyVertex {$/;"	s	file:
_SPICE_BOOLEAN_EXPR	spice-common/spice-protocol/spice/macros.h	170;"	d
_SPICE_MSB_MASK	spice-common/spice-protocol/spice/ipc_ring.h	49;"	d
_SPICE_MSB_MASK16	spice-common/spice-protocol/spice/ipc_ring.h	46;"	d
_SPICE_MSB_MASK4	spice-common/spice-protocol/spice/ipc_ring.h	37;"	d
_SPICE_MSB_MASK8	spice-common/spice-protocol/spice/ipc_ring.h	43;"	d
_SPICE_NEW	spice-common/common/mem.h	104;"	d
_SPICE_NEW	spice-common/common/mem.h	136;"	d
_SPICE_POWER2_ALIGN	spice-common/spice-protocol/spice/ipc_ring.h	52;"	d
_SPICE_POWER2_TO_SHIFT	spice-common/spice-protocol/spice/ipc_ring.h	66;"	d
_SPICE_RENEW	spice-common/common/mem.h	118;"	d
_SPICE_RENEW	spice-common/common/mem.h	138;"	d
_SPICE_TOSHIFT_16	spice-common/spice-protocol/spice/ipc_ring.h	63;"	d
_SPICE_TOSHIFT_4	spice-common/spice-protocol/spice/ipc_ring.h	55;"	d
_SPICE_TOSHIFT_8	spice-common/spice-protocol/spice/ipc_ring.h	60;"	d
_SmartcardSource	glib/smartcard-manager.c	/^struct _SmartcardSource {$/;"	s	file:
_SpanData	spice-common/common/lines.c	/^typedef struct _SpanData {$/;"	s	file:
_SpiceAudio	glib/spice-audio.h	/^struct _SpiceAudio {$/;"	s
_SpiceAudioClass	glib/spice-audio.h	/^struct _SpiceAudioClass {$/;"	s
_SpiceAudioPrivate	glib/spice-audio-priv.h	/^struct _SpiceAudioPrivate {$/;"	s
_SpiceCanvas	spice-common/common/canvas_base.h	/^struct _SpiceCanvas {$/;"	s
_SpiceChannel	glib/spice-channel.h	/^struct _SpiceChannel$/;"	s
_SpiceChannelClass	glib/spice-channel.h	/^struct _SpiceChannelClass$/;"	s
_SpiceChannelPrivate	glib/spice-channel-priv.h	/^struct _SpiceChannelPrivate {$/;"	s
_SpiceCursorChannel	glib/channel-cursor.h	/^struct _SpiceCursorChannel {$/;"	s
_SpiceCursorChannelClass	glib/channel-cursor.h	/^struct _SpiceCursorChannelClass {$/;"	s
_SpiceCursorChannelPrivate	glib/channel-cursor.c	/^struct _SpiceCursorChannelPrivate {$/;"	s	file:
_SpiceDesktopIntegration	glib/desktop-integration.h	/^struct _SpiceDesktopIntegration$/;"	s
_SpiceDesktopIntegrationClass	glib/desktop-integration.h	/^struct _SpiceDesktopIntegrationClass$/;"	s
_SpiceDisplay	win32/win32-spice-widget.h	/^struct _SpiceDisplay {$/;"	s
_SpiceDisplayChannel	glib/channel-display.h	/^struct _SpiceDisplayChannel {$/;"	s
_SpiceDisplayChannelClass	glib/channel-display.h	/^struct _SpiceDisplayChannelClass {$/;"	s
_SpiceDisplayChannelPrivate	glib/channel-display.c	/^struct _SpiceDisplayChannelPrivate {$/;"	s	file:
_SpiceDisplayClass	win32/win32-spice-widget.h	/^struct _SpiceDisplayClass {$/;"	s
_SpiceDisplayMonitorConfig	glib/channel-display.h	/^struct _SpiceDisplayMonitorConfig {$/;"	s
_SpiceDisplayPrimary	glib/channel-display.h	/^struct _SpiceDisplayPrimary {$/;"	s
_SpiceDisplayPrivate	win32/win32-spice-widget-priv.h	/^struct _SpiceDisplayPrivate {$/;"	s
_SpiceGlzDecoder	spice-common/common/canvas_base.h	/^struct _SpiceGlzDecoder {$/;"	s
_SpiceGrabSequence	win32/spice-grabsequence.h	/^struct _SpiceGrabSequence {$/;"	s
_SpiceGstaudio	glib/spice-gstaudio.h	/^struct _SpiceGstaudio {$/;"	s
_SpiceGstaudioClass	glib/spice-gstaudio.h	/^struct _SpiceGstaudioClass {$/;"	s
_SpiceGstaudioPrivate	glib/spice-gstaudio.c	/^struct _SpiceGstaudioPrivate {$/;"	s	file:
_SpiceGtkSession	win32/spice-gtk-session.h	/^struct _SpiceGtkSession$/;"	s
_SpiceGtkSessionClass	win32/spice-gtk-session.h	/^struct _SpiceGtkSessionClass$/;"	s
_SpiceImageCache	spice-common/common/canvas_base.h	/^struct _SpiceImageCache {$/;"	s
_SpiceImageSurfaces	spice-common/common/canvas_base.h	/^struct _SpiceImageSurfaces {$/;"	s
_SpiceInputsChannel	glib/channel-inputs.h	/^struct _SpiceInputsChannel {$/;"	s
_SpiceInputsChannelClass	glib/channel-inputs.h	/^struct _SpiceInputsChannelClass {$/;"	s
_SpiceInputsChannelPrivate	glib/channel-inputs.c	/^struct _SpiceInputsChannelPrivate {$/;"	s	file:
_SpiceJpegDecoder	spice-common/common/canvas_base.h	/^struct _SpiceJpegDecoder {$/;"	s
_SpiceMainChannel	glib/channel-main.h	/^struct _SpiceMainChannel {$/;"	s
_SpiceMainChannelClass	glib/channel-main.h	/^struct _SpiceMainChannelClass {$/;"	s
_SpiceMainChannelPrivate	glib/channel-main.c	/^struct _SpiceMainChannelPrivate  {$/;"	s	file:
_SpiceMsgIn	glib/spice-channel-priv.h	/^struct _SpiceMsgIn {$/;"	s
_SpiceMsgOut	glib/spice-channel-priv.h	/^struct _SpiceMsgOut {$/;"	s
_SpicePaletteCache	spice-common/common/canvas_base.h	/^struct _SpicePaletteCache {$/;"	s
_SpicePlaybackChannel	glib/channel-playback.h	/^struct _SpicePlaybackChannel {$/;"	s
_SpicePlaybackChannelClass	glib/channel-playback.h	/^struct _SpicePlaybackChannelClass {$/;"	s
_SpicePlaybackChannelPrivate	glib/channel-playback.c	/^struct _SpicePlaybackChannelPrivate {$/;"	s	file:
_SpicePortChannel	glib/channel-port.h	/^struct _SpicePortChannel {$/;"	s
_SpicePortChannelClass	glib/channel-port.h	/^struct _SpicePortChannelClass {$/;"	s
_SpicePortChannelPrivate	glib/channel-port.c	/^struct _SpicePortChannelPrivate {$/;"	s	file:
_SpicePulse	glib/spice-pulse.h	/^struct _SpicePulse {$/;"	s
_SpicePulseClass	glib/spice-pulse.h	/^struct _SpicePulseClass {$/;"	s
_SpicePulsePrivate	glib/spice-pulse.c	/^struct _SpicePulsePrivate {$/;"	s	file:
_SpiceRecordChannel	glib/channel-record.h	/^struct _SpiceRecordChannel {$/;"	s
_SpiceRecordChannelClass	glib/channel-record.h	/^struct _SpiceRecordChannelClass {$/;"	s
_SpiceRecordChannelPrivate	glib/channel-record.c	/^struct _SpiceRecordChannelPrivate {$/;"	s	file:
_SpiceSession	glib/spice-session.h	/^struct _SpiceSession$/;"	s
_SpiceSessionClass	glib/spice-session.h	/^struct _SpiceSessionClass$/;"	s
_SpiceSessionPrivate	glib/spice-session-priv.h	/^struct _SpiceSessionPrivate {$/;"	s
_SpiceSmartcardChannel	glib/channel-smartcard.h	/^struct _SpiceSmartcardChannel {$/;"	s
_SpiceSmartcardChannelClass	glib/channel-smartcard.h	/^struct _SpiceSmartcardChannelClass {$/;"	s
_SpiceSmartcardChannelMessage	glib/channel-smartcard.c	/^struct _SpiceSmartcardChannelMessage {$/;"	s	file:
_SpiceSmartcardChannelPrivate	glib/channel-smartcard.c	/^struct _SpiceSmartcardChannelPrivate {$/;"	s	file:
_SpiceSmartcardManager	glib/smartcard-manager.h	/^struct _SpiceSmartcardManager$/;"	s
_SpiceSmartcardManagerClass	glib/smartcard-manager.h	/^struct _SpiceSmartcardManagerClass$/;"	s
_SpiceSmartcardManagerPrivate	glib/smartcard-manager.c	/^struct _SpiceSmartcardManagerPrivate {$/;"	s	file:
_SpiceURI	glib/spice-uri.c	/^struct _SpiceURI {$/;"	s	file:
_SpiceURIClass	glib/spice-uri.c	/^struct _SpiceURIClass {$/;"	s	file:
_SpiceUsbDeviceInfo	glib/usb-device-manager.c	/^typedef struct _SpiceUsbDeviceInfo {$/;"	s	file:
_SpiceUsbDeviceManager	glib/usb-device-manager.h	/^struct _SpiceUsbDeviceManager$/;"	s
_SpiceUsbDeviceManagerClass	glib/usb-device-manager.h	/^struct _SpiceUsbDeviceManagerClass$/;"	s
_SpiceUsbDeviceManagerPrivate	glib/usb-device-manager.c	/^struct _SpiceUsbDeviceManagerPrivate {$/;"	s	file:
_SpiceUsbredirChannel	glib/channel-usbredir.h	/^struct _SpiceUsbredirChannel {$/;"	s
_SpiceUsbredirChannelClass	glib/channel-usbredir.h	/^struct _SpiceUsbredirChannelClass {$/;"	s
_SpiceUsbredirChannelPrivate	glib/channel-usbredir.c	/^struct _SpiceUsbredirChannelPrivate {$/;"	s	file:
_SpiceVmcInputStream	glib/vmcstream.c	/^struct _SpiceVmcInputStream$/;"	s	file:
_SpiceVmcInputStreamClass	glib/vmcstream.c	/^struct _SpiceVmcInputStreamClass$/;"	s	file:
_SpiceVmcOutputStream	glib/vmcstream.c	/^struct _SpiceVmcOutputStream$/;"	s	file:
_SpiceVmcOutputStreamClass	glib/vmcstream.c	/^struct _SpiceVmcOutputStreamClass$/;"	s	file:
_SpiceVmcStream	glib/vmcstream.c	/^struct _SpiceVmcStream$/;"	s	file:
_SpiceVmcStreamClass	glib/vmcstream.c	/^struct _SpiceVmcStreamClass$/;"	s	file:
_SpiceWebdavChannel	glib/channel-webdav.h	/^struct _SpiceWebdavChannel {$/;"	s
_SpiceWebdavChannelClass	glib/channel-webdav.h	/^struct _SpiceWebdavChannelClass {$/;"	s
_SpiceWebdavChannelPrivate	glib/channel-webdav.c	/^struct _SpiceWebdavChannelPrivate {$/;"	s	file:
_SpiceWinUsbDriver	glib/win-usb-driver-install.h	/^struct _SpiceWinUsbDriver$/;"	s
_SpiceWinUsbDriverClass	glib/win-usb-driver-install.h	/^struct _SpiceWinUsbDriverClass$/;"	s
_SpiceWinUsbDriverPrivate	glib/win-usb-driver-install.c	/^struct _SpiceWinUsbDriverPrivate {$/;"	s	file:
_SpiceWindow	win32/win32-spicy.h	/^struct _SpiceWindow {$/;"	s
_SpiceWindowClass	win32/win32-spicy.h	/^struct _SpiceWindowClass$/;"	s
_SpiceZlibDecoder	spice-common/common/canvas_base.h	/^struct _SpiceZlibDecoder {$/;"	s
_Static_assert	spice-common/common/verify.h	207;"	d
_UsbInstallCbInfo	glib/usb-device-manager.c	/^typedef struct _UsbInstallCbInfo {$/;"	s	file:
_VirtViewerFile	win32/virt-viewer-file.h	/^struct _VirtViewerFile$/;"	s
_VirtViewerFileClass	win32/virt-viewer-file.h	/^struct _VirtViewerFileClass$/;"	s
_VirtViewerFilePrivate	win32/virt-viewer-file.c	/^struct _VirtViewerFilePrivate {$/;"	s	file:
_WIN32_WINNT	ffmpeg/include/libavcodec/d3d11va.h	34;"	d
_WIN32_WINNT	ffmpeg/include/libavcodec/d3d11va.h	35;"	d
_WIN32_WINNT	ffmpeg/include/libavcodec/dxva2.h	33;"	d
_WIN32_WINNT	ffmpeg/include/libavcodec/dxva2.h	34;"	d
_WOCKY_HTTP_PROXY_H_	glib/wocky-http-proxy.h	22;"	d
_WaitImageData	glib/channel-display.c	/^typedef struct _WaitImageData$/;"	s	file:
_WockyHttpProxy	glib/wocky-http-proxy.c	/^struct _WockyHttpProxy$/;"	s	file:
_WockyHttpProxyClass	glib/wocky-http-proxy.c	/^struct _WockyHttpProxyClass$/;"	s	file:
_WockyHttpsProxy	glib/wocky-http-proxy.c	/^struct _WockyHttpsProxy$/;"	s	file:
_WockyHttpsProxyClass	glib/wocky-http-proxy.c	/^struct _WockyHttpsProxyClass$/;"	s	file:
_XOPEN_SOURCE	spice-common/common/lines.c	57;"	d	file:
_XOPEN_SOURCE	spice-common/common/lines.c	59;"	d	file:
__GIO_COROUTINE_H__	glib/gio-coroutine.h	22;"	d
__GNUC_STDC_INLINE__	ffmpeg/include/libavcodec/vda.h	38;"	d
__LZ_CONFIG_H	spice-common/common/lz_config.h	22;"	d
__LZ_H	spice-common/common/lz.h	7;"	d
__MACROS_H	spice-common/common/macros.h	20;"	d
__QUIC_CONFIG_H	spice-common/common/quic_config.h	20;"	d
__QUIC_H	spice-common/common/quic.h	20;"	d
__SMARTCARD_MANAGER_PRIV_H__	glib/smartcard-manager-priv.h	19;"	d
__SPICE_AUDIO_PRIVATE_H__	glib/spice-audio-priv.h	19;"	d
__SPICE_CLIENT_AUDIO_H__	glib/spice-audio.h	19;"	d
__SPICE_CLIENT_CHANNEL_H__	glib/spice-channel.h	19;"	d
__SPICE_CLIENT_CHANNEL_PRIV_H__	glib/spice-channel-priv.h	19;"	d
__SPICE_CLIENT_CLIENT_H__	glib/spice-client.h	19;"	d
__SPICE_CLIENT_CURSOR_CHANNEL_H__	glib/channel-cursor.h	19;"	d
__SPICE_CLIENT_DISPLAY_CHANNEL_H__	glib/channel-display.h	19;"	d
__SPICE_CLIENT_GSTAUDIO_H__	glib/spice-gstaudio.h	19;"	d
__SPICE_CLIENT_GTK_SESSION_H__	win32/spice-gtk-session.h	19;"	d
__SPICE_CLIENT_INPUTS_CHANNEL_H__	glib/channel-inputs.h	19;"	d
__SPICE_CLIENT_MAIN_CHANNEL_H__	glib/channel-main.h	19;"	d
__SPICE_CLIENT_PLAYBACK_CHANNEL_H__	glib/channel-playback.h	19;"	d
__SPICE_CLIENT_PLAYBACK_CHANNEL_PRIV_H__	glib/channel-playback-priv.h	19;"	d
__SPICE_CLIENT_PORT_CHANNEL_H__	glib/channel-port.h	19;"	d
__SPICE_CLIENT_PULSE_H__	glib/spice-pulse.h	19;"	d
__SPICE_CLIENT_RECORD_CHANNEL_H__	glib/channel-record.h	19;"	d
__SPICE_CLIENT_SESSION_H__	glib/spice-session.h	19;"	d
__SPICE_CLIENT_SESSION_PRIV_H__	glib/spice-session-priv.h	19;"	d
__SPICE_CLIENT_SMARTCARD_CHANNEL_H__	glib/channel-smartcard.h	19;"	d
__SPICE_CLIENT_SW_CANVAS_H__	glib/client_sw_canvas.h	19;"	d
__SPICE_CLIENT_TYPES_H__	glib/spice-types.h	19;"	d
__SPICE_CLIENT_USBREDIR_CHANNEL_H__	glib/channel-usbredir.h	22;"	d
__SPICE_CLIENT_USBREDIR_CHANNEL_PRIV_H__	glib/channel-usbredir-priv.h	22;"	d
__SPICE_CLIENT_WIDGET_H__	win32/win32-spice-widget.h	20;"	d
__SPICE_DESKTOP_INTEGRATION_H__	glib/desktop-integration.h	22;"	d
__SPICE_SMARTCARD_MANAGER_H__	glib/smartcard-manager.h	19;"	d
__SPICE_URI_H__	glib/spice-uri.h	19;"	d
__SPICE_URI_PRIV_H__	glib/spice-uri-priv.h	19;"	d
__SPICE_USBUTIL_H__	glib/usbutil.h	22;"	d
__SPICE_USB_DEVICE_MANAGER_H__	glib/usb-device-manager.h	22;"	d
__SPICE_USB_DEVICE_MANAGER_PRIV_H__	glib/usb-device-manager-priv.h	22;"	d
__SPICE_VERSION_H__	glib/spice-version.h	19;"	d
__SPICE_VMC_STREAM_H__	glib/vmcstream.h	19;"	d
__SPICE_WEBDAV_CHANNEL_H__	glib/channel-webdav.h	19;"	d
__SPICE_WIDGET_PRIV_H__	win32/win32-spice-widget-priv.h	20;"	d
__VIRT_VIEWER_FILE_H__	win32/virt-viewer-file.h	22;"	d
__WIN_USB_DEV_H__	glib/win-usb-dev.h	23;"	d
__add__	spice-common/python_modules/ptypes.py	/^    def __add__(self, other):$/;"	m	class:FixedSize	file:
__blend_image	spice-common/common/sw_canvas.c	/^static void __blend_image(SpiceCanvas *spice_canvas,$/;"	f	file:
__blend_scale_image	spice-common/common/sw_canvas.c	/^static void __blend_scale_image(SpiceCanvas *spice_canvas,$/;"	f	file:
__blit_image	spice-common/common/sw_canvas.c	/^static void __blit_image(SpiceCanvas *spice_canvas,$/;"	f	file:
__blit_image_rop	spice-common/common/sw_canvas.c	/^static void __blit_image_rop(SpiceCanvas *spice_canvas,$/;"	f	file:
__canvas_put_bits	spice-common/common/canvas_base.c	/^static inline void __canvas_put_bits(uint8_t *dest, int offset, uint8_t val, int n)$/;"	f	file:
__colorkey_image	spice-common/common/sw_canvas.c	/^static void __colorkey_image(SpiceCanvas *spice_canvas,$/;"	f	file:
__colorkey_scale_image	spice-common/common/sw_canvas.c	/^static void __colorkey_scale_image(SpiceCanvas *spice_canvas,$/;"	f	file:
__enter__	spice-common/python_modules/codegen.py	/^        def __enter__(self):$/;"	m	class:CodeWriter.Block	file:
__enter__	spice-common/python_modules/codegen.py	/^        def __enter__(self):$/;"	m	class:CodeWriter.Index	file:
__enter__	spice-common/python_modules/codegen.py	/^        def __enter__(self):$/;"	m	class:CodeWriter.NoBlock	file:
__enter__	spice-common/python_modules/codegen.py	/^        def __enter__(self):$/;"	m	class:CodeWriter.PartialBlock	file:
__exit__	spice-common/python_modules/codegen.py	/^        def __exit__(self, exc_type, exc_value, traceback):$/;"	m	class:CodeWriter.Block	file:
__exit__	spice-common/python_modules/codegen.py	/^        def __exit__(self, exc_type, exc_value, traceback):$/;"	m	class:CodeWriter.Index	file:
__exit__	spice-common/python_modules/codegen.py	/^        def __exit__(self, exc_type, exc_value, traceback):$/;"	m	class:CodeWriter.NoBlock	file:
__exit__	spice-common/python_modules/codegen.py	/^        def __exit__(self, exc_type, exc_value, traceback):$/;"	m	class:CodeWriter.PartialBlock	file:
__fill_mask	spice-common/common/glc.c	/^static void __fill_mask(InternaCtx *ctx, void *data)$/;"	f	file:
__fill_tiled_rects	spice-common/common/sw_canvas.c	/^static void __fill_tiled_rects(SpiceCanvas *spice_canvas,$/;"	f	file:
__fill_tiled_rects_rop	spice-common/common/sw_canvas.c	/^static void __fill_tiled_rects_rop(SpiceCanvas *spice_canvas,$/;"	f	file:
__g_cclosure_user_marshal_MARSHAL_H__	glib/spice-marshal.h	3;"	d
__init__	spice-common/python_modules/codegen.py	/^        def __init__(self, scope):$/;"	m	class:CodeWriter.NoBlock
__init__	spice-common/python_modules/codegen.py	/^        def __init__(self, writer, scope, semicolon, newline):$/;"	m	class:CodeWriter.PartialBlock
__init__	spice-common/python_modules/codegen.py	/^        def __init__(self, writer, semicolon, newline):$/;"	m	class:CodeWriter.Block
__init__	spice-common/python_modules/codegen.py	/^        def __init__(self, writer, val):$/;"	m	class:CodeWriter.Index
__init__	spice-common/python_modules/codegen.py	/^    def __init__(self):$/;"	m	class:CodeWriter
__init__	spice-common/python_modules/demarshal.py	/^    def __init__(self):$/;"	m	class:DemarshallingDestination
__init__	spice-common/python_modules/demarshal.py	/^    def __init__(self, member, mprefix, container, start):$/;"	m	class:MemberItemInfo
__init__	spice-common/python_modules/demarshal.py	/^    def __init__(self, parent_dest, c_type, sizeof, pointer = None):$/;"	m	class:RootDemarshallingDestination
__init__	spice-common/python_modules/demarshal.py	/^    def __init__(self, parent_dest, member):$/;"	m	class:SubDemarshallingDestination
__init__	spice-common/python_modules/demarshal.py	/^    def __init__(self, type, prefix, position):$/;"	m	class:ItemInfo
__init__	spice-common/python_modules/marshal.py	/^    def __init__(self):$/;"	m	class:MarshallingSource
__init__	spice-common/python_modules/marshal.py	/^    def __init__(self, parent_src, c_type, sizeof, pointer = None):$/;"	m	class:RootMarshallingSource
__init__	spice-common/python_modules/marshal.py	/^    def __init__(self, parent_src, containee):$/;"	m	class:SubMarshallingSource
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self):$/;"	m	class:Containee
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self):$/;"	m	class:Type
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, bits, name, enums, attribute_list):$/;"	m	class:EnumType
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, bits, name, flags, attribute_list):$/;"	m	class:FlagsType
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, bits, signed):$/;"	m	class:IntegerType
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, element_type, size):$/;"	m	class:ArrayType
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, name):$/;"	m	class:TypeRef
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, name, base, members, attribute_list):$/;"	m	class:ChannelType
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, name, channel_type, value):$/;"	m	class:ProtocolMember
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, name, channels):$/;"	m	class:ProtocolType
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, name, member_type, attribute_list):$/;"	m	class:Member
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, name, members, attribute_list):$/;"	m	class:MessageType
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, name, members, attribute_list):$/;"	m	class:StructType
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, name, message_type, value):$/;"	m	class:ChannelMember
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, name, the_type, attribute_list):$/;"	m	class:TypeAlias
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, target_type):$/;"	m	class:PointerType
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, val = 0, minor = 0):$/;"	m	class:FixedSize
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, values, member):$/;"	m	class:SwitchCase
__init__	spice-common/python_modules/ptypes.py	/^    def __init__(self, variable, cases, name, attribute_list):$/;"	m	class:Switch
__lz_free_image_seg	spice-common/common/lz.c	/^static inline void __lz_free_image_seg(Encoder *encoder, LzImageSegment *seg)$/;"	f	file:
__radd__	spice-common/python_modules/ptypes.py	/^    def __radd__(self, other):$/;"	m	class:FixedSize	file:
__read_io_word	spice-common/common/quic.c	/^static void __read_io_word(Encoder *encoder)$/;"	f	file:
__read_io_word_ptr	spice-common/common/quic.c	/^static void (*__read_io_word_ptr)(Encoder *encoder) = __read_io_word;$/;"	v	file:
__repr__	spice-common/python_modules/ptypes.py	/^    def __repr__(self):$/;"	m	class:ChannelMember	file:
__repr__	spice-common/python_modules/ptypes.py	/^    def __repr__(self):$/;"	m	class:Member	file:
__repr__	spice-common/python_modules/ptypes.py	/^    def __repr__(self):$/;"	m	class:ProtocolMember	file:
__repr__	spice-common/python_modules/ptypes.py	/^    def __repr__(self):$/;"	m	class:Switch	file:
__repr__	spice-common/python_modules/ptypes.py	/^    def __repr__(self):$/;"	m	class:Type	file:
__ring_remove	spice-common/common/ring.h	/^static inline void __ring_remove(RingItem *item)$/;"	f
__scale_image	spice-common/common/sw_canvas.c	/^static void __scale_image(SpiceCanvas *spice_canvas,$/;"	f	file:
__scale_image_rop	spice-common/common/sw_canvas.c	/^static void __scale_image_rop(SpiceCanvas *spice_canvas,$/;"	f	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:ArrayType	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:ChannelType	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:EnumType	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:FixedSize	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:FlagsType	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:MessageType	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:PointerType	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:ProtocolType	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:StructType	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:Type	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:TypeAlias	file:
__str__	spice-common/python_modules/ptypes.py	/^    def __str__(self):$/;"	m	class:TypeRef	file:
__surface_create_stride	spice-common/common/canvas_utils.c	/^static inline pixman_image_t *__surface_create_stride(pixman_format_code_t format, int width, int height,$/;"	f	file:
__write_io_word	spice-common/common/quic.c	/^static void __write_io_word(Encoder *encoder)$/;"	f	file:
__write_io_word_ptr	spice-common/common/quic.c	/^static void (*__write_io_word_ptr)(Encoder *encoder) = __write_io_word;$/;"	v	file:
_buckets_ptrs	spice-common/common/quic.c	/^    s_bucket **_buckets_ptrs;$/;"	m	struct:Channel	file:
_cb	win32/win32_spice_interface_types.h	/^   void* (*_cb)(void* ctx,void * ud); $/;"	m	struct:LCXCALLBACK
_channel_new	glib/channel-main.c	/^static gboolean _channel_new(channel_new_t *c)$/;"	f	file:
_cinfo	glib/decode-jpeg.c	/^    struct jpeg_decompress_struct _cinfo;$/;"	m	struct:GlibJpegDecoder	typeref:struct:GlibJpegDecoder::jpeg_decompress_struct	file:
_coroutine_release	glib/coroutine_ucontext.c	/^static int _coroutine_release(struct continuation *cc)$/;"	f	file:
_ctx	win32/win32_spice_interface_types.h	/^   void* _ctx;$/;"	m	struct:LCXCALLBACK
_data	glib/decode-jpeg.c	/^    uint8_t* _data;$/;"	m	struct:GlibJpegDecoder	file:
_data_size	glib/decode-jpeg.c	/^    int      _data_size;$/;"	m	struct:GlibJpegDecoder	file:
_demux	glib/channel-webdav.c	/^    struct _demux {$/;"	s	struct:_SpiceWebdavChannelPrivate	file:
_gl_verify_error_if_negative	spice-common/common/verify.h	/^    unsigned int _gl_verify_error_if_negative: w;$/;"	m	struct:_gl_verify_type
_gl_verify_type	spice-common/common/verify.h	/^  struct _gl_verify_type {$/;"	s
_glc_fill_mask	spice-common/common/glc.c	/^void _glc_fill_mask(GLCCtx glc, int x_dest, int y_dest, int width, int height, int stride,$/;"	f
_gnutls_hostname_compare	spice-common/common/ssl_verify.c	/^static int _gnutls_hostname_compare(const char *certname,$/;"	f	file:
_height	glib/decode-jpeg.c	/^    int      _height;$/;"	m	struct:GlibJpegDecoder	file:
_jerr	glib/decode-jpeg.c	/^    struct jpeg_error_mgr         _jerr;$/;"	m	struct:GlibJpegDecoder	typeref:struct:GlibJpegDecoder::jpeg_error_mgr	file:
_jsrc	glib/decode-jpeg.c	/^    struct jpeg_source_mgr        _jsrc;$/;"	m	struct:GlibJpegDecoder	typeref:struct:GlibJpegDecoder::jpeg_source_mgr	file:
_msg_in_unref_func	glib/channel-display.c	/^static void _msg_in_unref_func(gpointer data, gpointer user_data)$/;"	f	file:
_mux	glib/channel-webdav.c	/^    struct _mux {$/;"	s	struct:Client	file:
_rop3_brush	spice-common/common/gdi_canvas.c	54;"	d	file:
_rop3_dest	spice-common/common/gdi_canvas.c	56;"	d	file:
_rop3_src	spice-common/common/gdi_canvas.c	55;"	d	file:
_spice_channel_event_values	glib/spice-glib-enums.c	/^static const GEnumValue _spice_channel_event_values[] = {$/;"	v	file:
_spice_display_key_event_values	win32/spice-widget-enums.c	/^static const GEnumValue _spice_display_key_event_values[] = {$/;"	v	file:
_spice_inputs_lock_values	glib/spice-glib-enums.c	/^static const GFlagsValue _spice_inputs_lock_values[] = {$/;"	v	file:
_spice_reserved	glib/smartcard-manager.h	/^    gchar _spice_reserved[SPICE_RESERVED_PADDING];$/;"	m	struct:_SpiceSmartcardManagerClass
_spice_reserved	glib/spice-audio.h	/^    gchar _spice_reserved[SPICE_RESERVED_PADDING];$/;"	m	struct:_SpiceAudioClass
_spice_reserved	glib/spice-channel.h	/^    gchar _spice_reserved[SPICE_RESERVED_PADDING - 2 * sizeof(void *)];$/;"	m	struct:_SpiceChannelClass
_spice_reserved	glib/spice-session.h	/^    gchar _spice_reserved[SPICE_RESERVED_PADDING];$/;"	m	struct:_SpiceSessionClass
_spice_reserved	glib/usb-device-manager.h	/^    gchar _spice_reserved[SPICE_RESERVED_PADDING];$/;"	m	struct:_SpiceUsbDeviceManagerClass
_spice_reserved	win32/spice-gtk-session.h	/^    gchar _spice_reserved[SPICE_RESERVED_PADDING];$/;"	m	struct:_SpiceGtkSessionClass
_spice_reserved	win32/win32-spice-widget.h	/^    gchar _spice_reserved[SPICE_RESERVED_PADDING];$/;"	m	struct:_SpiceDisplayClass
_spice_session_migration_values	glib/spice-glib-enums.c	/^static const GEnumValue _spice_session_migration_values[] = {$/;"	v	file:
_spice_session_verify_values	glib/spice-glib-enums.c	/^static const GFlagsValue _spice_session_verify_values[] = {$/;"	v	file:
_spice_usb_device_manager_connect_device_async	glib/usb-device-manager.c	/^_spice_usb_device_manager_connect_device_async(SpiceUsbDeviceManager *self,$/;"	f	file:
_types	spice-common/python_modules/ptypes.py	/^_types = []$/;"	v
_types_by_name	spice-common/python_modules/ptypes.py	/^_types_by_name = {}$/;"	v
_ud	win32/win32_spice_interface_types.h	/^   void* _ud;$/;"	m	struct:LCXCALLBACK
_usb_product_info	glib/usbutil.c	/^typedef struct _usb_product_info {$/;"	s	file:
_usb_vendor_info	glib/usbutil.c	/^typedef struct _usb_vendor_info {$/;"	s	file:
_width	glib/decode-jpeg.c	/^    int      _width;$/;"	m	struct:GlibJpegDecoder	file:
_z_strm	glib/decode-zlib.c	/^    z_stream                 _z_strm;$/;"	m	struct:GlibZlibDecoder	file:
a	glib/decode-glz.c	/^    uint8_t a;$/;"	m	struct:one_byte_pixel_t	file:
a	spice-common/common/lz.c	/^    uint8_t a;$/;"	m	struct:one_byte_pixel_t	file:
a	spice-common/common/quic.c	/^    BYTE a;$/;"	m	struct:four_bytes_pixel_t	file:
a	spice-common/common/quic.c	/^    BYTE a;$/;"	m	struct:one_byte_pixel_t	file:
a	spice-common/common/quic.c	/^    BYTE a;$/;"	m	struct:three_bytes_pixel_t	file:
abort_level	spice-common/common/log.c	/^static int abort_level = -1;$/;"	v	file:
access_timestamp	ffmpeg/include/libavformat/avio.h	/^    int64_t access_timestamp;             \/**< Time of last access in microseconds since unix epoch,$/;"	m	struct:AVIODirEntry
acl_helper	glib/channel-usbredir.c	/^    SpiceUsbAclHelper *acl_helper;$/;"	m	struct:_SpiceUsbredirChannelPrivate	file:
action	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t action; \/\/FOREIGN_MENU_EVENT_?$/;"	m	struct:FrgMenuEvent
active_thread_type	ffmpeg/include/libavcodec/avcodec.h	/^    int active_thread_type;$/;"	m	struct:AVCodecContext
activeseq	win32/win32-spice-widget-priv.h	/^    gboolean                *activeseq; \/* the currently pressed keys *\/$/;"	m	struct:_SpiceDisplayPrivate
add	spice-common/common/messages.h	/^        VSCMsgReaderAdd add;$/;"	m	union:SpiceMsgcSmartcard::__anon152
add_function_variable	spice-common/python_modules/codegen.py	/^    def add_function_variable(self, ctype, name):$/;"	m	class:CodeWriter
add_segment_common	spice-common/common/glc.c	/^static void add_segment_common(InternalPath *internal, int type, int num_points)$/;"	f	file:
add_stencil_client	spice-common/common/glc.c	/^static inline void add_stencil_client(InternaCtx *ctx)$/;"	f	file:
addr	glib/win-usb-dev.c	/^    guint16 addr;$/;"	m	struct:_GUdevDeviceInfo	file:
addr_to_string	glib/spice-channel.c	/^static gchar *addr_to_string(GSocketAddress *addr)$/;"	f	file:
after_main_init	glib/spice-session-priv.h	/^    guint             after_main_init;$/;"	m	struct:_SpiceSessionPrivate
after_main_init	glib/spice-session.c	/^static gboolean after_main_init(gpointer data)$/;"	f	file:
age_index	ffmpeg/include/libavfilter/avfilter.h	/^    int age_index;$/;"	m	struct:AVFilterLink
agent_announce_caps	glib/channel-main.c	/^static void agent_announce_caps(SpiceMainChannel *channel)$/;"	f	file:
agent_caps	glib/channel-main.c	/^    uint32_t                    agent_caps[VD_AGENT_CAPS_SIZE];$/;"	m	struct:_SpiceMainChannelPrivate	file:
agent_caps	glib/channel-main.c	/^static const char *agent_caps[] = {$/;"	v	file:
agent_caps_received	glib/channel-main.c	/^    bool                        agent_caps_received;$/;"	m	struct:_SpiceMainChannelPrivate	file:
agent_clipboard_grab	glib/channel-main.c	/^static void agent_clipboard_grab(SpiceMainChannel *channel, guint selection,$/;"	f	file:
agent_clipboard_notify	glib/channel-main.c	/^static void agent_clipboard_notify(SpiceMainChannel *self, guint selection,$/;"	f	file:
agent_clipboard_release	glib/channel-main.c	/^static void agent_clipboard_release(SpiceMainChannel *channel, guint selection)$/;"	f	file:
agent_clipboard_request	glib/channel-main.c	/^static void agent_clipboard_request(SpiceMainChannel *channel, guint selection, guint32 type)$/;"	f	file:
agent_connected	glib/channel-main.c	/^    bool                        agent_connected;$/;"	m	struct:_SpiceMainChannelPrivate	file:
agent_connected	spice-common/common/messages.h	/^    uint32_t agent_connected;$/;"	m	struct:SpiceMsgMainInit
agent_connected	win32/win32-spicy.h	/^    gboolean         agent_connected;$/;"	m	struct:spice_connection
agent_display_config	glib/channel-main.c	/^static void agent_display_config(SpiceMainChannel *channel)$/;"	f	file:
agent_display_config_sent	glib/channel-main.c	/^    gboolean                    agent_display_config_sent;$/;"	m	struct:_SpiceMainChannelPrivate	file:
agent_free_msg_queue	glib/channel-main.c	/^static void agent_free_msg_queue(SpiceMainChannel *channel)$/;"	f	file:
agent_max_clipboard	glib/channel-main.c	/^static void agent_max_clipboard(SpiceMainChannel *self)$/;"	f	file:
agent_msg	glib/channel-main.c	/^    VDAgentMessage              agent_msg; \/* partial msg reconstruction *\/$/;"	m	struct:_SpiceMainChannelPrivate	file:
agent_msg_data	glib/channel-main.c	/^    guint8                      *agent_msg_data;$/;"	m	struct:_SpiceMainChannelPrivate	file:
agent_msg_pos	glib/channel-main.c	/^    guint                       agent_msg_pos;$/;"	m	struct:_SpiceMainChannelPrivate	file:
agent_msg_queue	glib/channel-main.c	/^    GQueue                      *agent_msg_queue;$/;"	m	struct:_SpiceMainChannelPrivate	file:
agent_msg_queue	glib/channel-main.c	1018;"	d	file:
agent_msg_queue_many	glib/channel-main.c	/^static void agent_msg_queue_many(SpiceMainChannel *channel, int type, const void *data, ...)$/;"	f	file:
agent_msg_size	glib/channel-main.c	/^    uint8_t                     agent_msg_size;$/;"	m	struct:_SpiceMainChannelPrivate	file:
agent_msg_types	glib/channel-main.c	/^static const char *agent_msg_types[] = {$/;"	v	file:
agent_send_msg_queue	glib/channel-main.c	/^static void agent_send_msg_queue(SpiceMainChannel *channel)$/;"	f	file:
agent_start	glib/channel-main.c	/^static void agent_start(SpiceMainChannel *channel)$/;"	f	file:
agent_state	win32/win32-spicy.h	/^    const char       *agent_state;$/;"	m	struct:spice_connection
agent_stopped	glib/channel-main.c	/^static void agent_stopped(SpiceMainChannel *channel)$/;"	f	file:
agent_tokens	glib/channel-main.c	/^    int                         agent_tokens;$/;"	m	struct:_SpiceMainChannelPrivate	file:
agent_tokens	spice-common/common/messages.h	/^    uint32_t agent_tokens;$/;"	m	struct:SpiceMsgMainInit
agent_update	glib/channel-main.h	/^    void (*agent_update)(SpiceChannel *channel);$/;"	m	struct:_SpiceMainChannelClass
album_gain	ffmpeg/include/libavutil/replaygain.h	/^    int32_t album_gain;$/;"	m	struct:AVReplayGain
album_peak	ffmpeg/include/libavutil/replaygain.h	/^    uint32_t album_peak;$/;"	m	struct:AVReplayGain
alias	ffmpeg/include/libavutil/pixdesc.h	/^    const char *alias;$/;"	m	struct:AVPixFmtDescriptor
all	glib/vmcstream.c	/^    gboolean all;$/;"	m	struct:_SpiceVmcInputStream	file:
all_channel_counts	ffmpeg/include/libavfilter/buffersink.h	/^    int all_channel_counts;                 \/\/\/< if not 0, accept any channel count or layout$/;"	m	struct:__anon31
all_preverify_ok	spice-common/common/ssl_verify.h	/^    int                 all_preverify_ok;$/;"	m	struct:__anon131
alloc_frame	ffmpeg/include/libavcodec/avcodec.h	/^    int (*alloc_frame)(AVCodecContext *avctx, AVFrame *frame);$/;"	m	struct:AVHWAccel
alloc_lz_image_surface	spice-common/common/canvas_utils.c	/^pixman_image_t *alloc_lz_image_surface(LzDecodeUsrData *canvas_data,$/;"	f
alloc_tess_vertex	spice-common/common/glc.c	/^static TassVertex *alloc_tess_vertex(InternaCtx *ctx)$/;"	f	file:
allocated_data_blocks	ffmpeg/include/libavcodec/xvmc.h	/^    int             allocated_data_blocks;$/;"	m	struct:xvmc_pix_fmt
allocated_mv_blocks	ffmpeg/include/libavcodec/xvmc.h	/^    int             allocated_mv_blocks;$/;"	m	struct:xvmc_pix_fmt
allow_scaling	win32/win32-spice-widget-priv.h	/^    gboolean                allow_scaling;$/;"	m	struct:_SpiceDisplayPrivate
alpha	spice-common/common/draw.h	/^    uint8_t alpha;$/;"	m	struct:SpiceAlphaBlend
alpha	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t alpha;$/;"	m	struct:QXLAlphaBlend
alpha	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t alpha;$/;"	m	struct:QXLCompatAlphaBlend
alpha_blend	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLAlphaBlend alpha_blend;$/;"	m	union:QXLDrawable::__anon76
alpha_blend	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLCompatAlphaBlend alpha_blend;$/;"	m	union:QXLCompatDrawable::__anon75
alpha_flags	spice-common/common/draw.h	/^    uint16_t alpha_flags;$/;"	m	struct:SpiceAlphaBlend
alpha_flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t alpha_flags;$/;"	m	struct:QXLAlphaBlend
alu	spice-common/common/lines.h	/^    unsigned char alu;$/;"	m	struct:lineGC
area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect area;$/;"	m	struct:QXLCompatUpdateCmd
area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect area;$/;"	m	struct:QXLUpdateCmd
aresample_swr_opts	ffmpeg/include/libavfilter/avfilter.h	/^    char *aresample_swr_opts; \/\/\/< swr options to use for the auto-inserted aresample filters, Access ONLY through AVOptions$/;"	m	struct:AVFilterGraph
arrive_late_time	glib/channel-display-priv.h	/^    uint64_t             arrive_late_time;$/;"	m	struct:display_stream
ass	ffmpeg/include/libavcodec/avcodec.h	/^    char *ass;$/;"	m	struct:AVSubtitleRect
assign	spice-common/python_modules/codegen.py	/^    def assign(self, var, val):$/;"	m	class:CodeWriter
atr_data	spice-common/common/messages.h	/^        VSCMsgATR atr_data;$/;"	m	union:SpiceMsgcSmartcard::__anon152
attached_pic	ffmpeg/include/libavformat/avformat.h	/^    AVPacket attached_pic;$/;"	m	struct:AVStream
attr	spice-common/common/draw.h	/^    SpiceLineAttr attr;$/;"	m	struct:SpiceStroke
attr	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLLineAttr attr;$/;"	m	struct:QXLStroke
attribute_deprecated	ffmpeg/include/libavutil/attributes.h	86;"	d
attribute_deprecated	ffmpeg/include/libavutil/attributes.h	88;"	d
attribute_deprecated	ffmpeg/include/libavutil/attributes.h	90;"	d
audio	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterBufferRefAudioProps *audio; \/\/\/< audio buffer specific properties$/;"	m	struct:AVFilterBufferRef
audio	glib/spice-session-priv.h	/^    gboolean          audio;$/;"	m	struct:_SpiceSessionPrivate
audio	win32/win32-spicy.h	/^    SpiceAudio       *audio;$/;"	m	struct:spice_connection
audio_codec	ffmpeg/include/libavformat/avformat.h	/^    AVCodec *audio_codec;$/;"	m	struct:AVFormatContext
audio_codec	ffmpeg/include/libavformat/avformat.h	/^    enum AVCodecID audio_codec;    \/**< default audio codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
audio_codec_id	ffmpeg/include/libavformat/avformat.h	/^    enum AVCodecID audio_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
audio_delay	spice-common/common/messages.h	/^    uint32_t audio_delay;$/;"	m	struct:SpiceMsgcDisplayStreamReport
audio_manager	glib/spice-session-priv.h	/^    SpiceAudio        *audio_manager;$/;"	m	struct:_SpiceSessionPrivate
audio_min_samples	ffmpeg/include/libavcodec/dv_profile.h	/^    int              audio_min_samples[3];  \/* min amount of audio samples *\/$/;"	m	struct:AVDVProfile
audio_preload	ffmpeg/include/libavformat/avformat.h	/^    int audio_preload;$/;"	m	struct:AVFormatContext
audio_samples_dist	ffmpeg/include/libavcodec/dv_profile.h	/^    int              audio_samples_dist[5]; \/* how many samples are supposed to be *\/$/;"	m	struct:AVDVProfile
audio_service_type	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVAudioServiceType audio_service_type;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVAudioServiceType
audio_shuffle	ffmpeg/include/libavcodec/dv_profile.h	/^    const uint8_t  (*audio_shuffle)[9];     \/* PCM shuffling table *\/$/;"	m	struct:AVDVProfile
audio_stride	ffmpeg/include/libavcodec/dv_profile.h	/^    int              audio_stride;          \/* size of audio_shuffle table *\/$/;"	m	struct:AVDVProfile
auth_mechanism	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t auth_mechanism;$/;"	m	struct:SpiceLinkAuthMechanism
auth_needs_username_and_password	glib/spice-channel-priv.h	/^    gboolean                    auth_needs_username_and_password;$/;"	m	struct:_SpiceChannelPrivate
auto_conn_filter_rules	glib/usb-device-manager.c	/^    struct usbredirfilter_rule *auto_conn_filter_rules;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	typeref:struct:_SpiceUsbDeviceManagerPrivate::usbredirfilter_rule	file:
auto_conn_filter_rules_count	glib/usb-device-manager.c	/^    int auto_conn_filter_rules_count;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
auto_connect	glib/usb-device-manager.c	/^    gboolean auto_connect;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
auto_connect_failed	glib/usb-device-manager.h	/^    void (*auto_connect_failed) (SpiceUsbDeviceManager *manager,$/;"	m	struct:_SpiceUsbDeviceManagerClass
auto_connect_filter	glib/usb-device-manager.c	/^    gchar *auto_connect_filter;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
av_alias	ffmpeg/include/libavutil/attributes.h	135;"	d
av_alias	ffmpeg/include/libavutil/attributes.h	137;"	d
av_alias	ffmpeg/include/libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_16
av_alias	ffmpeg/include/libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_32
av_alias	ffmpeg/include/libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_64
av_alias16	ffmpeg/include/libavutil/intreadwrite.h	/^} av_alias av_alias16;$/;"	t	typeref:union:__anon44
av_alias32	ffmpeg/include/libavutil/intreadwrite.h	/^} av_alias av_alias32;$/;"	t	typeref:union:__anon43
av_alias64	ffmpeg/include/libavutil/intreadwrite.h	/^} av_alias av_alias64;$/;"	t	typeref:union:__anon42
av_alloc_size	ffmpeg/include/libavutil/mem.h	70;"	d
av_alloc_size	ffmpeg/include/libavutil/mem.h	72;"	d
av_always_inline	ffmpeg/include/libavutil/attributes.h	37;"	d
av_always_inline	ffmpeg/include/libavutil/attributes.h	39;"	d
av_always_inline	ffmpeg/include/libavutil/attributes.h	41;"	d
av_assert0	ffmpeg/include/libavutil/avassert.h	37;"	d
av_assert1	ffmpeg/include/libavutil/avassert.h	51;"	d
av_assert1	ffmpeg/include/libavutil/avassert.h	53;"	d
av_assert2	ffmpeg/include/libavutil/avassert.h	61;"	d
av_assert2	ffmpeg/include/libavutil/avassert.h	63;"	d
av_be2ne16	ffmpeg/include/libavutil/bswap.h	83;"	d
av_be2ne16	ffmpeg/include/libavutil/bswap.h	92;"	d
av_be2ne32	ffmpeg/include/libavutil/bswap.h	84;"	d
av_be2ne32	ffmpeg/include/libavutil/bswap.h	93;"	d
av_be2ne64	ffmpeg/include/libavutil/bswap.h	85;"	d
av_be2ne64	ffmpeg/include/libavutil/bswap.h	94;"	d
av_bprint_is_complete	ffmpeg/include/libavutil/bprint.h	/^static inline int av_bprint_is_complete(const AVBPrint *buf)$/;"	f
av_bswap16	ffmpeg/include/libavutil/bswap.h	/^static av_always_inline av_const uint16_t av_bswap16(uint16_t x)$/;"	f
av_bswap32	ffmpeg/include/libavutil/bswap.h	/^static av_always_inline av_const uint32_t av_bswap32(uint32_t x)$/;"	f
av_bswap64	ffmpeg/include/libavutil/bswap.h	/^static inline uint64_t av_const av_bswap64(uint64_t x)$/;"	f
av_builtin_constant_p	ffmpeg/include/libavutil/attributes.h	147;"	d
av_builtin_constant_p	ffmpeg/include/libavutil/attributes.h	150;"	d
av_ceil_log2	ffmpeg/include/libavutil/common.h	451;"	d
av_ceil_log2_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const int av_ceil_log2_c(int x)$/;"	f
av_class	ffmpeg/include/libavcodec/avcodec.h	/^    const AVClass *av_class;$/;"	m	struct:AVCodecContext
av_class	ffmpeg/include/libavdevice/avdevice.h	/^    const AVClass *av_class;$/;"	m	struct:AVDeviceCapabilitiesQuery
av_class	ffmpeg/include/libavfilter/avfilter.h	/^    const AVClass *av_class;        \/\/\/< needed for av_log() and filters common options$/;"	m	struct:AVFilterContext
av_class	ffmpeg/include/libavfilter/avfilter.h	/^    const AVClass *av_class;$/;"	m	struct:AVFilterGraph
av_class	ffmpeg/include/libavformat/avformat.h	/^    const AVClass *av_class;$/;"	m	struct:AVFormatContext
av_class	ffmpeg/include/libavformat/avio.h	/^    const AVClass *av_class;$/;"	m	struct:AVIOContext
av_clip	ffmpeg/include/libavutil/common.h	454;"	d
av_clip64	ffmpeg/include/libavutil/common.h	457;"	d
av_clip64_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const int64_t av_clip64_c(int64_t a, int64_t amin, int64_t amax)$/;"	f
av_clip_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const int av_clip_c(int a, int amin, int amax)$/;"	f
av_clip_int16	ffmpeg/include/libavutil/common.h	469;"	d
av_clip_int16_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const int16_t av_clip_int16_c(int a)$/;"	f
av_clip_int8	ffmpeg/include/libavutil/common.h	463;"	d
av_clip_int8_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const int8_t av_clip_int8_c(int a)$/;"	f
av_clip_intp2	ffmpeg/include/libavutil/common.h	475;"	d
av_clip_intp2_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const int av_clip_intp2_c(int a, int p)$/;"	f
av_clip_uint16	ffmpeg/include/libavutil/common.h	466;"	d
av_clip_uint16_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const uint16_t av_clip_uint16_c(int a)$/;"	f
av_clip_uint8	ffmpeg/include/libavutil/common.h	460;"	d
av_clip_uint8_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const uint8_t av_clip_uint8_c(int a)$/;"	f
av_clip_uintp2	ffmpeg/include/libavutil/common.h	478;"	d
av_clip_uintp2_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const unsigned av_clip_uintp2_c(int a, int p)$/;"	f
av_clipd	ffmpeg/include/libavutil/common.h	493;"	d
av_clipd_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const double av_clipd_c(double a, double amin, double amax)$/;"	f
av_clipf	ffmpeg/include/libavutil/common.h	490;"	d
av_clipf_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const float av_clipf_c(float a, float amin, float amax)$/;"	f
av_clipl_int32	ffmpeg/include/libavutil/common.h	472;"	d
av_clipl_int32_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const int32_t av_clipl_int32_c(int64_t a)$/;"	f
av_cmp_q	ffmpeg/include/libavutil/rational.h	/^static inline int av_cmp_q(AVRational a, AVRational b){$/;"	f
av_cold	ffmpeg/include/libavutil/attributes.h	74;"	d
av_cold	ffmpeg/include/libavutil/attributes.h	76;"	d
av_const	ffmpeg/include/libavutil/attributes.h	68;"	d
av_const	ffmpeg/include/libavutil/attributes.h	70;"	d
av_dlog	ffmpeg/include/libavutil/log.h	328;"	d
av_dlog	ffmpeg/include/libavutil/log.h	330;"	d
av_double2int	ffmpeg/include/libavutil/intfloat.h	/^static av_always_inline uint64_t av_double2int(double f)$/;"	f
av_err2str	ffmpeg/include/libavutil/error.h	119;"	d
av_extern_inline	ffmpeg/include/libavutil/attributes.h	47;"	d
av_extern_inline	ffmpeg/include/libavutil/attributes.h	49;"	d
av_fifo_peek2	ffmpeg/include/libavutil/fifo.h	/^static inline uint8_t *av_fifo_peek2(const AVFifoBuffer *f, int offs)$/;"	f
av_flatten	ffmpeg/include/libavutil/attributes.h	80;"	d
av_flatten	ffmpeg/include/libavutil/attributes.h	82;"	d
av_float2int	ffmpeg/include/libavutil/intfloat.h	/^static av_always_inline uint32_t av_float2int(float f)$/;"	f
av_format_control_message	ffmpeg/include/libavformat/avformat.h	/^typedef int (*av_format_control_message)(struct AVFormatContext *s, int type,$/;"	t
av_int2double	ffmpeg/include/libavutil/intfloat.h	/^static av_always_inline double av_int2double(uint64_t i)$/;"	f
av_int2float	ffmpeg/include/libavutil/intfloat.h	/^static av_always_inline float av_int2float(uint32_t i)$/;"	f
av_int_list_length	ffmpeg/include/libavutil/avutil.h	331;"	d
av_intfloat32	ffmpeg/include/libavutil/intfloat.h	/^union av_intfloat32 {$/;"	u
av_intfloat64	ffmpeg/include/libavutil/intfloat.h	/^union av_intfloat64 {$/;"	u
av_inv_q	ffmpeg/include/libavutil/rational.h	/^static av_always_inline AVRational av_inv_q(AVRational q)$/;"	f
av_le2ne16	ffmpeg/include/libavutil/bswap.h	86;"	d
av_le2ne16	ffmpeg/include/libavutil/bswap.h	95;"	d
av_le2ne32	ffmpeg/include/libavutil/bswap.h	87;"	d
av_le2ne32	ffmpeg/include/libavutil/bswap.h	96;"	d
av_le2ne64	ffmpeg/include/libavutil/bswap.h	88;"	d
av_le2ne64	ffmpeg/include/libavutil/bswap.h	97;"	d
av_lfg_get	ffmpeg/include/libavutil/lfg.h	/^static inline unsigned int av_lfg_get(AVLFG *c){$/;"	f
av_make_error_string	ffmpeg/include/libavutil/error.h	/^static inline char *av_make_error_string(char *errbuf, size_t errbuf_size, int errnum)$/;"	f
av_make_q	ffmpeg/include/libavutil/rational.h	/^static inline AVRational av_make_q(int num, int den)$/;"	f
av_malloc_array	ffmpeg/include/libavutil/mem.h	/^av_alloc_size(1, 2) static inline void *av_malloc_array(size_t nmemb, size_t size)$/;"	f
av_malloc_attrib	ffmpeg/include/libavutil/mem.h	64;"	d
av_malloc_attrib	ffmpeg/include/libavutil/mem.h	66;"	d
av_mallocz_array	ffmpeg/include/libavutil/mem.h	/^av_alloc_size(1, 2) static inline void *av_mallocz_array(size_t nmemb, size_t size)$/;"	f
av_mlfg_get	ffmpeg/include/libavutil/lfg.h	/^static inline unsigned int av_mlfg_get(AVLFG *c){$/;"	f
av_mod_uintp2	ffmpeg/include/libavutil/common.h	481;"	d
av_mod_uintp2_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const unsigned av_mod_uintp2_c(unsigned a, unsigned p)$/;"	f
av_noinline	ffmpeg/include/libavutil/attributes.h	54;"	d
av_noinline	ffmpeg/include/libavutil/attributes.h	56;"	d
av_noinline	ffmpeg/include/libavutil/attributes.h	58;"	d
av_noreturn	ffmpeg/include/libavutil/attributes.h	155;"	d
av_noreturn	ffmpeg/include/libavutil/attributes.h	157;"	d
av_opt_set_int_list	ffmpeg/include/libavutil/opt.h	747;"	d
av_parse_ratio_quiet	ffmpeg/include/libavutil/parseutils.h	52;"	d
av_pixelutils_sad_fn	ffmpeg/include/libavutil/pixelutils.h	/^typedef int (*av_pixelutils_sad_fn)(const uint8_t *src1, ptrdiff_t stride1,$/;"	t
av_popcount	ffmpeg/include/libavutil/common.h	496;"	d
av_popcount64	ffmpeg/include/libavutil/common.h	499;"	d
av_popcount64_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const int av_popcount64_c(uint64_t x)$/;"	f
av_popcount_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline av_const int av_popcount_c(uint32_t x)$/;"	f
av_printf_format	ffmpeg/include/libavutil/attributes.h	148;"	d
av_printf_format	ffmpeg/include/libavutil/attributes.h	151;"	d
av_pure	ffmpeg/include/libavutil/attributes.h	62;"	d
av_pure	ffmpeg/include/libavutil/attributes.h	64;"	d
av_q2d	ffmpeg/include/libavutil/rational.h	/^static inline double av_q2d(AVRational a){$/;"	f
av_sat_add32	ffmpeg/include/libavutil/common.h	484;"	d
av_sat_add32_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline int av_sat_add32_c(int a, int b)$/;"	f
av_sat_dadd32	ffmpeg/include/libavutil/common.h	487;"	d
av_sat_dadd32_c	ffmpeg/include/libavutil/common.h	/^static av_always_inline int av_sat_dadd32_c(int a, int b)$/;"	f
av_size_mult	ffmpeg/include/libavutil/mem.h	/^static inline int av_size_mult(size_t a, size_t b, size_t *r)$/;"	f
av_strnlen	ffmpeg/include/libavutil/avstring.h	/^static inline size_t av_strnlen(const char *s, size_t len)$/;"	f
av_tolower	ffmpeg/include/libavutil/avstring.h	/^static inline av_const int av_tolower(int c)$/;"	f
av_toupper	ffmpeg/include/libavutil/avstring.h	/^static inline av_const int av_toupper(int c)$/;"	f
av_ts2str	ffmpeg/include/libavutil/timestamp.h	54;"	d
av_ts2timestr	ffmpeg/include/libavutil/timestamp.h	76;"	d
av_ts_make_string	ffmpeg/include/libavutil/timestamp.h	/^static inline char *av_ts_make_string(char *buf, int64_t ts)$/;"	f
av_ts_make_time_string	ffmpeg/include/libavutil/timestamp.h	/^static inline char *av_ts_make_time_string(char *buf, int64_t ts, AVRational *tb)$/;"	f
av_uninit	ffmpeg/include/libavutil/attributes.h	141;"	d
av_uninit	ffmpeg/include/libavutil/attributes.h	143;"	d
av_unused	ffmpeg/include/libavutil/attributes.h	118;"	d
av_unused	ffmpeg/include/libavutil/attributes.h	120;"	d
av_used	ffmpeg/include/libavutil/attributes.h	129;"	d
av_used	ffmpeg/include/libavutil/attributes.h	131;"	d
av_x_if_null	ffmpeg/include/libavutil/avutil.h	/^static inline void *av_x_if_null(const void *p, const void *x)$/;"	f
avfilter_action_func	ffmpeg/include/libavfilter/avfilter.h	/^typedef int (avfilter_action_func)(AVFilterContext *ctx, void *arg, int jobnr, int nb_jobs);$/;"	t
avfilter_execute_func	ffmpeg/include/libavfilter/avfilter.h	/^typedef int (avfilter_execute_func)(AVFilterContext *ctx, avfilter_action_func *func,$/;"	t
avg_frame_rate	ffmpeg/include/libavformat/avformat.h	/^    AVRational avg_frame_rate;$/;"	m	struct:AVStream
avio_flags	ffmpeg/include/libavformat/avformat.h	/^    int avio_flags;$/;"	m	struct:AVFormatContext
avio_tell	ffmpeg/include/libavformat/avio.h	/^static av_always_inline int64_t avio_tell(AVIOContext *s)$/;"	f
avoid_negative_ts	ffmpeg/include/libavformat/avformat.h	/^    int avoid_negative_ts;$/;"	m	struct:AVFormatContext
b	glib/decode-glz.c	/^    uint8_t b;$/;"	m	struct:rgb24_pixel_t	file:
b	glib/decode-glz.c	/^    uint8_t b;$/;"	m	struct:rgb32_pixel_t	file:
b	spice-common/common/lz.c	/^    uint8_t b;$/;"	m	struct:rgb24_pixel_t	file:
b	spice-common/common/lz.c	/^    uint8_t b;$/;"	m	struct:rgb32_pixel_t	file:
b	spice-common/common/quic.c	/^    BYTE b;$/;"	m	struct:four_bytes_pixel_t	file:
b	spice-common/common/quic.c	/^    BYTE b;$/;"	m	struct:rgb24_pixel_t	file:
b	spice-common/common/quic.c	/^    BYTE b;$/;"	m	struct:rgb32_pixel_t	file:
b	spice-common/common/quic.c	/^    BYTE b;$/;"	m	struct:three_bytes_pixel_t	file:
b	win32/create_bmp.h	/^   BYTE b;    $/;"	m	struct:__anon52
b_frame_strategy	ffmpeg/include/libavcodec/avcodec.h	/^    int b_frame_strategy;$/;"	m	struct:AVCodecContext
b_quant_factor	ffmpeg/include/libavcodec/avcodec.h	/^    float b_quant_factor;$/;"	m	struct:AVCodecContext
b_quant_offset	ffmpeg/include/libavcodec/avcodec.h	/^    float b_quant_offset;$/;"	m	struct:AVCodecContext
b_sensitivity	ffmpeg/include/libavcodec/avcodec.h	/^    int b_sensitivity;$/;"	m	struct:AVCodecContext
back_area	spice-common/common/draw.h	/^    SpiceRect back_area;$/;"	m	struct:SpiceText
back_area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect back_area;$/;"	m	struct:QXLText
back_brush	spice-common/common/draw.h	/^    SpiceBrush back_brush;$/;"	m	struct:SpiceText
back_brush	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLBrush back_brush;$/;"	m	struct:QXLText
back_mode	spice-common/common/draw.h	/^    uint16_t back_mode;$/;"	m	struct:SpiceStroke
back_mode	spice-common/common/draw.h	/^    uint16_t back_mode;$/;"	m	struct:SpiceText
back_mode	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t back_mode;$/;"	m	struct:QXLStroke
back_mode	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t back_mode;$/;"	m	struct:QXLText
back_rop	spice-common/common/canvas_base.c	/^    SpiceROP back_rop;$/;"	m	struct:__anon121	file:
base	ffmpeg/include/libavutil/frame.h	/^    uint8_t *base[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
base	glib/decode-glz.c	/^    SpiceGlzDecoder         base;$/;"	m	struct:GlibGlzDecoder	file:
base	glib/decode-jpeg.c	/^    SpiceJpegDecoder              base;$/;"	m	struct:GlibJpegDecoder	file:
base	glib/decode-zlib.c	/^    SpiceZlibDecoder         base;$/;"	m	struct:GlibZlibDecoder	file:
base	spice-common/common/canvas_base.c	/^    lineGC base;$/;"	m	struct:__anon121	file:
base	spice-common/common/gdi_canvas.c	/^    CanvasBase base;$/;"	m	struct:GdiCanvas	file:
base	spice-common/common/gl_canvas.c	/^    CanvasBase base;$/;"	m	struct:GLCanvas	file:
base	spice-common/common/marshaller.c	/^    size_t base;$/;"	m	struct:SpiceMarshallerData	file:
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayCopyBits
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawAlphaBlend
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawBlackness
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawComposite
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawCopy
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawFill
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawInvers
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawOpaque
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawRop3
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawStroke
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawText
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawTransparent
base	spice-common/common/messages.h	/^    SpiceMsgDisplayBase base;$/;"	m	struct:SpiceMsgDisplayDrawWhiteness
base	spice-common/common/messages.h	/^    SpiceStreamDataHeader base;$/;"	m	struct:SpiceMsgDisplayStreamData
base	spice-common/common/messages.h	/^    SpiceStreamDataHeader base;$/;"	m	struct:SpiceMsgDisplayStreamDataSized
base	spice-common/common/ogl_ctx.c	/^    OGLCtx base;$/;"	m	struct:OGLPixmapCtx	file:
base	spice-common/common/sw_canvas.c	/^    CanvasBase base;$/;"	m	struct:SwCanvas	file:
base	spice-common/spice-protocol/spice/controller_prot.h	/^    ControllerInitHeader base;$/;"	m	struct:ControllerInit
base	spice-common/spice-protocol/spice/controller_prot.h	/^    ControllerMsg base;$/;"	m	struct:ControllerData
base	spice-common/spice-protocol/spice/controller_prot.h	/^    ControllerMsg base;$/;"	m	struct:ControllerValue
base	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FrgMenuInitHeader base;$/;"	m	struct:FrgMenuInit
base	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FrgMenuMsg base;$/;"	m	struct:FrgMenuAddItem
base	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FrgMenuMsg base;$/;"	m	struct:FrgMenuEvent
base	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FrgMenuMsg base;$/;"	m	struct:FrgMenuRmItem
base	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    FrgMenuMsg base;$/;"	m	struct:FrgMenuSetTitle
bbox	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect bbox;$/;"	m	struct:QXLCompatDrawable
bbox	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect bbox;$/;"	m	struct:QXLDrawable
begin_block	spice-common/python_modules/codegen.py	/^    def begin_block(self, prefix= "", comment = ""):$/;"	m	class:CodeWriter
begin_decode	glib/decode-jpeg.c	/^static void begin_decode(SpiceJpegDecoder *decoder,$/;"	f	file:
begin_decode	spice-common/common/canvas_base.h	/^    void (*begin_decode)(SpiceJpegDecoder *decoder,$/;"	m	struct:SpiceJpegDecoderOps
best_effort_timestamp	ffmpeg/include/libavutil/frame.h	/^    int64_t best_effort_timestamp;$/;"	m	struct:AVFrame
bestcode	spice-common/common/quic.c	/^    unsigned int bestcode;  \/* best code so far *\/$/;"	m	struct:s_bucket	file:
besttrigtab	spice-common/common/quic.c	/^static const unsigned short besttrigtab[3][11] = { \/* array of wm_trigger for waitmask and evol,$/;"	v	file:
bezier_flattener	spice-common/common/glc.c	/^static TassVertex *bezier_flattener(InternaCtx *ctx, PathPoint *points)$/;"	f	file:
bfOffBits	win32/create_bmp.h	/^   DWORD   bfOffBits;\/\/4$/;"	m	struct:__anon50
bfReserved1	win32/create_bmp.h	/^   WORD    bfReserved1;\/\/2 $/;"	m	struct:__anon50
bfReserved2	win32/create_bmp.h	/^   WORD    bfReserved2;\/\/2 $/;"	m	struct:__anon50
bfSize	win32/create_bmp.h	/^   DWORD   bfSize;\/\/4    $/;"	m	struct:__anon50
bfType	win32/create_bmp.h	/^   WORD    bfType;\/\/2$/;"	m	struct:__anon50
bgGroup	spice-common/common/lines.c	/^    SpanGroup fgGroup, bgGroup;$/;"	m	struct:_SpanData	file:
biBitCount	win32/create_bmp.h	/^   WORD       biBitCount;\/\/2 $/;"	m	struct:__anon51
biClrImportant	win32/create_bmp.h	/^   DWORD      biClrImportant;\/\/4$/;"	m	struct:__anon51
biClrUsed	win32/create_bmp.h	/^   DWORD      biClrUsed;\/\/4 $/;"	m	struct:__anon51
biCompress	win32/create_bmp.h	/^   DWORD      biCompress;\/\/4 $/;"	m	struct:__anon51
biHeight	win32/create_bmp.h	/^   LONG       biHeight;\/\/4 $/;"	m	struct:__anon51
biPlanes	win32/create_bmp.h	/^   WORD       biPlanes;\/\/2  $/;"	m	struct:__anon51
biSize	win32/create_bmp.h	/^   DWORD      biSize;\/\/4 $/;"	m	struct:__anon51
biSizeImage	win32/create_bmp.h	/^   DWORD      biSizeImage;\/\/4  $/;"	m	struct:__anon51
biWidth	win32/create_bmp.h	/^   LONG       biWidth;\/\/4  $/;"	m	struct:__anon51
biXPelsPerMeter	win32/create_bmp.h	/^   LONG       biXPelsPerMeter;\/\/4  $/;"	m	struct:__anon51
biYPelsPerMeter	win32/create_bmp.h	/^   LONG       biYPelsPerMeter;\/\/4  $/;"	m	struct:__anon51
bidir_refine	ffmpeg/include/libavcodec/avcodec.h	/^    int bidir_refine;$/;"	m	struct:AVCodecContext
bio_gio_destroy	glib/bio-gio.c	/^static int bio_gio_destroy(BIO *bio)$/;"	f	file:
bio_gio_puts	glib/bio-gio.c	/^static int bio_gio_puts(BIO *bio, const char *str)$/;"	f	file:
bio_gio_read	glib/bio-gio.c	/^static int bio_gio_read(BIO *bio, char *out, int outl)$/;"	f	file:
bio_gio_write	glib/bio-gio.c	/^static int bio_gio_write(BIO *bio, const char *in, int inl)$/;"	f	file:
bio_gsocket_method	glib/bio-gio.c	/^typedef struct bio_gsocket_method {$/;"	s	file:
bio_gsocket_method	glib/bio-gio.c	/^} bio_gsocket_method;$/;"	t	typeref:struct:bio_gsocket_method	file:
bio_new_giostream	glib/bio-gio.c	/^BIO* bio_new_giostream(GIOStream *stream)$/;"	f
bit_rate	ffmpeg/include/libavcodec/avcodec.h	/^    int bit_rate;$/;"	m	struct:AVCodecContext
bit_rate	ffmpeg/include/libavformat/avformat.h	/^    int bit_rate;$/;"	m	struct:AVFormatContext
bit_rate	glib/h264_type.h	/^    int bit_rate;$/;"	m	struct:_H264StreamInfo
bit_rate_tolerance	ffmpeg/include/libavcodec/avcodec.h	/^    int bit_rate_tolerance;$/;"	m	struct:AVCodecContext
bitat	spice-common/common/quic.c	/^static const unsigned int bitat[32] = {$/;"	v	file:
bitmap	spice-common/common/canvas_utils.h	/^    HBITMAP bitmap;$/;"	m	struct:PixmanData
bitmap	spice-common/common/draw.h	/^        SpiceBitmap         bitmap;$/;"	m	union:SpiceImage::__anon153
bitmap	spice-common/common/draw.h	/^    SpiceImage *bitmap;$/;"	m	struct:SpiceQMask
bitmap	spice-common/common/glc.c	/^    const uint8_t *bitmap;$/;"	m	struct:FillMaskInfo	file:
bitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLBitmap bitmap;$/;"	m	union:QXLImage::__anon81
bitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL bitmap;$/;"	m	struct:QXLQMask
bitmap	win32/win32_spice_interface_types.h	/^   unsigned char * bitmap;$/;"	m	struct:SPICE_Invalidate
bitmap_16_to_16_555	spice-common/common/pixman_utils.c	/^static void bitmap_16_to_16_555(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_16_to_32	spice-common/common/pixman_utils.c	/^static void bitmap_16_to_32(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_1be_16_to_16_555	spice-common/common/pixman_utils.c	/^static void bitmap_1be_16_to_16_555(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_1be_32_to_32	spice-common/common/pixman_utils.c	/^static void bitmap_1be_32_to_32(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_24_to_16_555	spice-common/common/pixman_utils.c	/^static void bitmap_24_to_16_555(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_24_to_32	spice-common/common/pixman_utils.c	/^static void bitmap_24_to_32(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_32_to_16_555	spice-common/common/pixman_utils.c	/^static void bitmap_32_to_16_555(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_32_to_32	spice-common/common/pixman_utils.c	/^static void bitmap_32_to_32(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_4be_16_to_16_555	spice-common/common/pixman_utils.c	/^static void bitmap_4be_16_to_16_555(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_4be_32_to_32	spice-common/common/pixman_utils.c	/^static void bitmap_4be_32_to_32(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_8_16_to_16_555	spice-common/common/pixman_utils.c	/^static void bitmap_8_16_to_16_555(uint8_t *dest, int dest_stride,$/;"	f	file:
bitmap_8_32_to_32	spice-common/common/pixman_utils.c	/^static void bitmap_8_32_to_32(uint8_t *dest, int dest_stride,$/;"	f	file:
bitmap_8_to_8	spice-common/common/pixman_utils.c	/^static void bitmap_8_to_8(uint8_t* dest, int dest_stride,$/;"	f	file:
bitmap_area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect bitmap_area;$/;"	m	struct:QXLCompatDrawable
bitmap_offset	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t bitmap_offset;$/;"	m	struct:QXLCompatDrawable
bitplane_buf_id	ffmpeg/include/libavcodec/vaapi.h	/^    uint32_t bitplane_buf_id;$/;"	m	struct:vaapi_context
bits	spice-common/common/messages.h	/^    uint32_t bits;$/;"	m	struct:SpiceMsgDisplayMode
bits	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t bits;$/;"	m	struct:QXLMode
bits_cache	spice-common/common/canvas_base.c	/^    SpiceImageCache *bits_cache;$/;"	m	struct:CanvasBase	file:
bits_per_coded_sample	ffmpeg/include/libavcodec/avcodec.h	/^     int bits_per_coded_sample;$/;"	m	struct:AVCodecContext
bits_per_raw_sample	ffmpeg/include/libavcodec/avcodec.h	/^    int bits_per_raw_sample;$/;"	m	struct:AVCodecContext
bitstream_buffers	ffmpeg/include/libavcodec/vdpau.h	/^    VdpBitstreamBuffer *bitstream_buffers;$/;"	m	struct:AVVDPAUContext
bitstream_buffers	ffmpeg/include/libavcodec/vdpau.h	/^    VdpBitstreamBuffer *bitstream_buffers;$/;"	m	struct:vdpau_render_state
bitstream_buffers_allocated	ffmpeg/include/libavcodec/vdpau.h	/^    int bitstream_buffers_allocated;$/;"	m	struct:AVVDPAUContext
bitstream_buffers_allocated	ffmpeg/include/libavcodec/vdpau.h	/^    int bitstream_buffers_allocated;$/;"	m	struct:vdpau_render_state
bitstream_buffers_used	ffmpeg/include/libavcodec/vdpau.h	/^    int bitstream_buffers_used;$/;"	m	struct:AVVDPAUContext
bitstream_buffers_used	ffmpeg/include/libavcodec/vdpau.h	/^    int bitstream_buffers_used;$/;"	m	struct:vdpau_render_state
blackness	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLBlackness blackness;$/;"	m	union:QXLCompatDrawable::__anon75
blackness	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLBlackness blackness;$/;"	m	union:QXLDrawable::__anon76
blend	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLBlend blend;$/;"	m	union:QXLCompatDrawable::__anon75
blend	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLBlend blend;$/;"	m	union:QXLDrawable::__anon76
blend_image	spice-common/common/canvas_base.h	/^    void (*blend_image)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
blend_image	spice-common/common/sw_canvas.c	/^static void blend_image(SpiceCanvas *spice_canvas,$/;"	f	file:
blend_image_from_surface	spice-common/common/canvas_base.h	/^    void (*blend_image_from_surface)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
blend_image_from_surface	spice-common/common/sw_canvas.c	/^static void blend_image_from_surface(SpiceCanvas *spice_canvas,$/;"	f	file:
blend_scale_image	spice-common/common/canvas_base.h	/^    void (*blend_scale_image)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
blend_scale_image	spice-common/common/sw_canvas.c	/^static void blend_scale_image(SpiceCanvas *spice_canvas,$/;"	f	file:
blend_scale_image_from_surface	spice-common/common/canvas_base.h	/^    void (*blend_scale_image_from_surface)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
blend_scale_image_from_surface	spice-common/common/sw_canvas.c	/^static void blend_scale_image_from_surface(SpiceCanvas *spice_canvas,$/;"	f	file:
blit_image	spice-common/common/canvas_base.h	/^    void (*blit_image)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
blit_image	spice-common/common/sw_canvas.c	/^static void blit_image(SpiceCanvas *spice_canvas,$/;"	f	file:
blit_image_from_surface	spice-common/common/canvas_base.h	/^    void (*blit_image_from_surface)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
blit_image_from_surface	spice-common/common/sw_canvas.c	/^static void blit_image_from_surface(SpiceCanvas *spice_canvas,$/;"	f	file:
blit_image_rop	spice-common/common/canvas_base.h	/^    void (*blit_image_rop)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
blit_image_rop	spice-common/common/sw_canvas.c	/^static void blit_image_rop(SpiceCanvas *spice_canvas,$/;"	f	file:
blit_image_rop_from_surface	spice-common/common/canvas_base.h	/^    void (*blit_image_rop_from_surface)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
blit_image_rop_from_surface	spice-common/common/sw_canvas.c	/^static void blit_image_rop_from_surface(SpiceCanvas *spice_canvas,$/;"	f	file:
block	spice-common/python_modules/codegen.py	/^    def block(self, prefix= "", comment = "", semicolon=False, newline=True):$/;"	m	class:CodeWriter
block_align	ffmpeg/include/libavcodec/avcodec.h	/^    int block_align;$/;"	m	struct:AVCodecContext
block_sizes	ffmpeg/include/libavcodec/dv_profile.h	/^    const uint8_t   *block_sizes;           \/* AC block sizes, in bits *\/$/;"	m	struct:AVDVProfile
bmp_generator	win32/create_bmp.c	/^int bmp_generator(char * filename,int width,int height,unsigned char *data)$/;"	f
bnf	spice-common/python_modules/spice_parser.py	/^bnf = None$/;"	v
border_masking	ffmpeg/include/libavcodec/avcodec.h	/^    float border_masking;$/;"	m	struct:AVCodecContext
bottom	spice-common/common/draw.h	/^    int32_t bottom;$/;"	m	struct:SpiceRect
bottom	spice-common/spice-protocol/spice/qxl_dev.h	/^    int32_t bottom;$/;"	m	struct:QXLRect
bottom	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t bottom;$/;"	m	struct:QXLURect
box	spice-common/common/messages.h	/^    SpiceRect box;$/;"	m	struct:SpiceMsgDisplayBase
bpm	ffmpeg/include/libavcodec/dv_profile.h	/^    int              bpm;                   \/* blocks per macroblock *\/$/;"	m	struct:AVDVProfile
bpp	spice-common/spice-protocol/spice/qxl_windows.h	/^    uint32_t bpp;$/;"	m	struct:QXLEscapeSetCustomDisplay
bpp	win32/win32_spice_interface_types.h	/^   int bpp;$/;"	m	struct:SPICE_SettringChange
bppmask	spice-common/common/quic.c	/^static const unsigned long int bppmask[33] = {$/;"	v	file:
brd_scale	ffmpeg/include/libavcodec/avcodec.h	/^    int brd_scale;$/;"	m	struct:AVCodecContext
brush	spice-common/common/draw.h	/^    SpiceBrush brush;$/;"	m	struct:SpiceFill
brush	spice-common/common/draw.h	/^    SpiceBrush brush;$/;"	m	struct:SpiceOpaque
brush	spice-common/common/draw.h	/^    SpiceBrush brush;$/;"	m	struct:SpiceRop3
brush	spice-common/common/draw.h	/^    SpiceBrush brush;$/;"	m	struct:SpiceStroke
brush	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLBrush brush;$/;"	m	struct:QXLFill
brush	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLBrush brush;$/;"	m	struct:QXLOpaque
brush	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLBrush brush;$/;"	m	struct:QXLRop3
brush	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLBrush brush;$/;"	m	struct:QXLStroke
bs	glib/channel-inputs.c	/^    int                         bs;$/;"	m	struct:_SpiceInputsChannelPrivate	file:
buckets_buf	spice-common/common/quic.c	/^    s_bucket *buckets_buf;$/;"	m	struct:FamilyStat	file:
buckets_ptrs	spice-common/common/quic.c	/^    s_bucket **buckets_ptrs;$/;"	m	struct:FamilyStat	file:
buf	ffmpeg/include/libavcodec/avcodec.h	/^    AVBufferRef *buf;$/;"	m	struct:AVPacket
buf	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterBuffer *buf;        \/\/\/< the buffer that this is a reference to$/;"	m	struct:AVFilterBufferRef
buf	ffmpeg/include/libavformat/avformat.h	/^    unsigned char *buf; \/**< Buffer must have AVPROBE_PADDING_SIZE of extra allocated bytes filled with zero. *\/$/;"	m	struct:AVProbeData
buf	ffmpeg/include/libavutil/frame.h	/^    AVBufferRef *buf;$/;"	m	struct:AVFrameSideData
buf	ffmpeg/include/libavutil/frame.h	/^    AVBufferRef *buf[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
buf	glib/channel-webdav.c	/^        guint8 *buf;$/;"	m	struct:Client::_mux	file:
buf	glib/channel-webdav.c	/^        guint8 *buf;$/;"	m	struct:_SpiceWebdavChannelPrivate::_demux	file:
buf	glib/channel-webdav.c	/^    const guint8 *buf;$/;"	m	struct:_OutputQueueElem	file:
buf_end	ffmpeg/include/libavformat/avio.h	/^    unsigned char *buf_end; \/**< End of the data, may be less than$/;"	m	struct:AVIOContext
buf_is_ones	glib/spice-util.c	/^static bool buf_is_ones(unsigned size, const guint8 *data)$/;"	f	file:
buf_ptr	ffmpeg/include/libavformat/avio.h	/^    unsigned char *buf_ptr; \/**< Current position in the buffer *\/$/;"	m	struct:AVIOContext
buf_size	ffmpeg/include/libavformat/avformat.h	/^    int buf_size;       \/**< Size of buf except extra allocated bytes *\/$/;"	m	struct:AVProbeData
buffer	ffmpeg/include/libavformat/avio.h	/^    unsigned char *buffer;  \/**< Start of the buffer. *\/$/;"	m	struct:AVIOContext
buffer	ffmpeg/include/libavutil/buffer.h	/^    AVBuffer *buffer;$/;"	m	struct:AVBufferRef
buffer	ffmpeg/include/libavutil/fifo.h	/^    uint8_t *buffer;$/;"	m	struct:AVFifoBuffer
buffer	glib/channel-main.c	/^    char                           buffer[FILE_XFER_CHUNK_SIZE];$/;"	m	struct:SpiceFileXferTask	file:
buffer	glib/vmcstream.c	/^    guint8 *buffer;$/;"	m	struct:_SpiceVmcInputStream	file:
buffer	glib/wocky-http-proxy.c	/^  gchar *buffer;$/;"	m	struct:__anon7	file:
buffer	spice-common/common/mem.h	/^    uint8_t *buffer;$/;"	m	struct:SpiceBuffer
buffer_hints	ffmpeg/include/libavutil/frame.h	/^    int buffer_hints;$/;"	m	struct:AVFrame
buffer_size	ffmpeg/include/libavformat/avio.h	/^    int buffer_size;        \/**< Maximum buffer size *\/$/;"	m	struct:AVIOContext
buffers	spice-common/common/marshaller.c	/^    MarshallerBuffer *buffers;$/;"	m	struct:SpiceMarshallerData	file:
bus	glib/win-usb-dev.c	/^    guint16 bus;$/;"	m	struct:_GUdevDeviceInfo	file:
busnum	glib/usb-device-manager.c	/^    guint8  busnum;$/;"	m	struct:_SpiceUsbDeviceInfo	file:
button	spice-common/common/messages.h	/^    int32_t button;$/;"	m	struct:SpiceMsgcMousePress
button	spice-common/common/messages.h	/^    int32_t button;$/;"	m	struct:SpiceMsgcMouseRelease
button_update_mask	win32/win32_io.c	/^int button_update_mask (int button, gboolean down) {                                                                                                                  $/;"	f
buttons	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t buttons;$/;"	m	struct:VDAgentMouseState
buttons_state	spice-common/common/messages.h	/^    int32_t buttons_state;$/;"	m	struct:SpiceMsgcMousePress
buttons_state	spice-common/common/messages.h	/^    int32_t buttons_state;$/;"	m	struct:SpiceMsgcMouseRelease
buttons_state	spice-common/common/messages.h	/^    uint32_t buttons_state;$/;"	m	struct:SpiceMsgcMouseMotion
buttons_state	spice-common/common/messages.h	/^    uint32_t buttons_state;$/;"	m	struct:SpiceMsgcMousePosition
bytes_read	ffmpeg/include/libavformat/avio.h	/^    int64_t bytes_read;$/;"	m	struct:AVIOContext
c	spice-common/common/quic.c	/^    BYTE c;$/;"	m	struct:four_bytes_pixel_t	file:
c	spice-common/common/quic.c	/^    BYTE c;$/;"	m	struct:three_bytes_pixel_t	file:
c_define	spice-common/python_modules/ptypes.py	/^    def c_define(self, writer):$/;"	m	class:EnumType
c_define	spice-common/python_modules/ptypes.py	/^    def c_define(self, writer):$/;"	m	class:FlagsType
c_describe	spice-common/python_modules/ptypes.py	/^    def c_describe(self, writer):$/;"	m	class:EnumBaseType
c_enumname	spice-common/python_modules/ptypes.py	/^    def c_enumname(self, value):$/;"	m	class:EnumBaseType
c_enumname_by_name	spice-common/python_modules/ptypes.py	/^    def c_enumname_by_name(self, name):$/;"	m	class:EnumBaseType
c_name	spice-common/python_modules/ptypes.py	/^    def c_name(self):$/;"	m	class:EnumBaseType
c_name	spice-common/python_modules/ptypes.py	/^    def c_name(self):$/;"	m	class:MessageType
c_type	spice-common/python_modules/ptypes.py	/^    def c_type(self):$/;"	m	class:ArrayType
c_type	spice-common/python_modules/ptypes.py	/^    def c_type(self):$/;"	m	class:EnumBaseType
c_type	spice-common/python_modules/ptypes.py	/^    def c_type(self):$/;"	m	class:IntegerType
c_type	spice-common/python_modules/ptypes.py	/^    def c_type(self):$/;"	m	class:MessageType
c_type	spice-common/python_modules/ptypes.py	/^    def c_type(self):$/;"	m	class:PointerType
c_type	spice-common/python_modules/ptypes.py	/^    def c_type(self):$/;"	m	class:StructType
c_type	spice-common/python_modules/ptypes.py	/^    def c_type(self):$/;"	m	class:TypeAlias
ca	glib/spice-session-priv.h	/^    GByteArray        *ca;$/;"	m	struct:_SpiceSessionPrivate
ca_file	glib/spice-option.c	/^static char *ca_file = NULL;$/;"	v	file:
ca_file	glib/spice-session-priv.h	/^    char              *ca_file;$/;"	m	struct:_SpiceSessionPrivate
cache	glib/channel-display.c	/^    SpiceImageCache *cache;$/;"	m	struct:_WaitImageData	file:
cache	spice-common/common/gdi_canvas.c	/^    int cache;$/;"	m	struct:BitmapData	file:
cache_add	glib/spice-channel-cache.h	/^static inline void cache_add(display_cache *cache, uint64_t id, gpointer value)$/;"	f
cache_add_lossy	glib/spice-channel-cache.h	/^static inline void cache_add_lossy(display_cache *cache, uint64_t id,$/;"	f
cache_clear	glib/spice-channel-cache.h	/^static inline void cache_clear(display_cache *cache)$/;"	f
cache_clear_all	glib/spice-session.c	/^static void cache_clear_all(SpiceSession *self)$/;"	f	file:
cache_find	glib/spice-channel-cache.h	/^static inline gpointer cache_find(display_cache *cache, uint64_t id)$/;"	f
cache_find_lossy	glib/spice-channel-cache.h	/^static inline gpointer cache_find_lossy(display_cache *cache, uint64_t id, gboolean *lossy)$/;"	f
cache_item_free	glib/spice-channel-cache.h	/^static inline void cache_item_free(display_cache_item *self)$/;"	f
cache_item_new	glib/spice-channel-cache.h	/^static inline display_cache_item* cache_item_new(guint64 id, gboolean lossy)$/;"	f
cache_new	glib/spice-channel-cache.h	/^static inline display_cache* cache_new(GDestroyNotify value_destroy)$/;"	f
cache_remove	glib/spice-channel-cache.h	/^static inline gboolean cache_remove(display_cache *cache, uint64_t id)$/;"	f
cache_size	glib/spice-option.c	/^static gint cache_size = 0;$/;"	v	file:
cache_size	spice-common/common/messages.h	/^    uint64_t cache_size;$/;"	m	struct:SpiceMsgcClientInfo
cache_unref	glib/spice-channel-cache.h	/^static inline void cache_unref(display_cache *cache)$/;"	f
calc_rop3	spice-common/common/gdi_canvas.c	/^uint8_t calc_rop3(uint16_t rop3_bits, int brush)$/;"	f
calc_rop3_src_brush	spice-common/common/gdi_canvas.c	/^uint8_t calc_rop3_src_brush(uint16_t rop3_bits)$/;"	f
callback	ffmpeg/include/libavformat/avio.h	/^    int (*callback)(void*);$/;"	m	struct:AVIOInterruptCB
callback	glib/channel-main.c	/^    GAsyncReadyCallback            callback;$/;"	m	struct:SpiceFileXferTask	file:
callback	glib/usb-device-manager.c	/^    GAsyncReadyCallback   callback;$/;"	m	struct:_UsbInstallCbInfo	file:
callback	win32/win32-spicy.h	/^    SpiceCallBacks *callback;$/;"	m	struct:spice_connection
callbacks	win32/win32_spice_interface_priv.h	/^   SpiceCallBacks callbacks[CB_NULL];$/;"	m	struct:priv_spice_connection
caller	glib/channel-usbredir.c	/^    struct coroutine *caller;$/;"	m	struct:device_error_data	typeref:struct:device_error_data::coroutine	file:
caller	glib/coroutine.h	/^	struct coroutine *caller;$/;"	m	struct:coroutine	typeref:struct:coroutine::coroutine
caller	glib/coroutine_winfibers.c	/^static struct coroutine *caller = NULL;$/;"	v	typeref:struct:coroutine	file:
caller	glib/gio-coroutine.c	/^    struct coroutine *caller;$/;"	m	struct:signal_data	typeref:struct:signal_data::coroutine	file:
camel_to_underscores	spice-common/python_modules/codegen.py	/^def camel_to_underscores(s, upper = False):$/;"	f
cancel_id	glib/vmcstream.c	/^    gulong cancel_id;$/;"	m	struct:_SpiceVmcInputStream	file:
cancellable	glib/channel-main.c	/^    GCancellable                   *cancellable;$/;"	m	struct:SpiceFileXferTask	file:
cancellable	glib/channel-webdav.c	/^    GCancellable *cancellable;$/;"	m	struct:Client	file:
cancellable	glib/channel-webdav.c	/^    GCancellable *cancellable;$/;"	m	struct:_SpiceWebdavChannelPrivate	file:
cancellable	glib/smartcard-manager.c	/^    GCancellable *cancellable;$/;"	m	struct:__anon22	file:
cancellable	glib/spice-session.c	/^    GCancellable *cancellable;$/;"	m	struct:spice_open_host	file:
cancellable	glib/usb-device-manager.c	/^    GCancellable          *cancellable;$/;"	m	struct:_UsbInstallCbInfo	file:
cancellable	glib/vmcstream.c	/^    GCancellable *cancellable;$/;"	m	struct:_SpiceVmcInputStream	file:
cancellable	glib/win-usb-driver-install.c	/^    GCancellable          *cancellable;$/;"	m	struct:_SpiceWinUsbDriverPrivate	file:
cancellable	glib/wocky-http-proxy.c	/^  GCancellable *cancellable;$/;"	m	struct:__anon7	file:
canvas	glib/channel-display-priv.h	/^    SpiceCanvas                 *canvas;$/;"	m	struct:display_surface
canvas	spice-common/common/canvas_base.c	/^    SpiceCanvas *canvas;$/;"	m	struct:__anon121	file:
canvas_16bpp_to_32bpp	spice-common/common/canvas_base.c	/^static inline uint32_t canvas_16bpp_to_32bpp(uint32_t color)$/;"	f	file:
canvas_A1_invers	spice-common/common/canvas_base.c	/^static inline pixman_image_t *canvas_A1_invers(pixman_image_t *src_surf)$/;"	f	file:
canvas_base_destroy	spice-common/common/canvas_base.c	/^static void canvas_base_destroy(CanvasBase *canvas)$/;"	f	file:
canvas_base_group_end	spice-common/common/canvas_base.c	/^static void canvas_base_group_end(SpiceCanvas *spice_canvas)$/;"	f	file:
canvas_base_group_start	spice-common/common/canvas_base.c	/^static void canvas_base_group_start(SpiceCanvas *spice_canvas, QRegion *region)$/;"	f	file:
canvas_base_init	spice-common/common/canvas_base.c	/^static int canvas_base_init(CanvasBase *canvas, SpiceCanvasOps *ops,$/;"	f	file:
canvas_base_init_ops	spice-common/common/canvas_base.c	/^inline static void canvas_base_init_ops(SpiceCanvasOps *ops)$/;"	f	file:
canvas_bitmap_to_surface	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_bitmap_to_surface(CanvasBase *canvas, SpiceBitmap* bitmap,$/;"	f	file:
canvas_clear	spice-common/common/sw_canvas.c	/^static void canvas_clear(SpiceCanvas *spice_canvas)$/;"	f	file:
canvas_clip_pixman	spice-common/common/canvas_base.c	/^static void canvas_clip_pixman(CanvasBase *canvas,$/;"	f	file:
canvas_copy_bits	spice-common/common/canvas_base.c	/^static void canvas_copy_bits(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpicePoint *src_pos)$/;"	f	file:
canvas_create	spice-common/common/sw_canvas.c	/^SpiceCanvas *canvas_create(int width, int height, uint32_t format$/;"	f
canvas_create_common	spice-common/common/sw_canvas.c	/^static SpiceCanvas *canvas_create_common(pixman_image_t *image,$/;"	f	file:
canvas_create_for_data	spice-common/common/sw_canvas.c	/^SpiceCanvas *canvas_create_for_data(int width, int height, uint32_t format,$/;"	f
canvas_destroy	spice-common/common/sw_canvas.c	/^static void canvas_destroy(SpiceCanvas *spice_canvas)$/;"	f	file:
canvas_draw_alpha_blend	spice-common/common/canvas_base.c	/^static void canvas_draw_alpha_blend(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceAlphaBlend* alpha_blend)$/;"	f	file:
canvas_draw_blackness	spice-common/common/canvas_base.c	/^static void canvas_draw_blackness(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceBlackness *blackness)$/;"	f	file:
canvas_draw_blend	spice-common/common/canvas_base.c	/^static void canvas_draw_blend(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceBlend *blend)$/;"	f	file:
canvas_draw_composite	spice-common/common/canvas_base.c	/^static void canvas_draw_composite(SpiceCanvas *spice_canvas, SpiceRect *bbox,$/;"	f	file:
canvas_draw_copy	spice-common/common/canvas_base.c	/^static void canvas_draw_copy(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceCopy *copy)$/;"	f	file:
canvas_draw_fill	spice-common/common/canvas_base.c	/^static void canvas_draw_fill(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceFill *fill)$/;"	f	file:
canvas_draw_invers	spice-common/common/canvas_base.c	/^static void canvas_draw_invers(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceInvers *invers)$/;"	f	file:
canvas_draw_opaque	spice-common/common/canvas_base.c	/^static void canvas_draw_opaque(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceOpaque *opaque)$/;"	f	file:
canvas_draw_rop3	spice-common/common/canvas_base.c	/^static void canvas_draw_rop3(SpiceCanvas *spice_canvas, SpiceRect *bbox,$/;"	f	file:
canvas_draw_stroke	spice-common/common/canvas_base.c	/^static void canvas_draw_stroke(SpiceCanvas *spice_canvas, SpiceRect *bbox,$/;"	f	file:
canvas_draw_text	spice-common/common/sw_canvas.c	/^static void canvas_draw_text(SpiceCanvas *spice_canvas, SpiceRect *bbox,$/;"	f	file:
canvas_draw_transparent	spice-common/common/canvas_base.c	/^static void canvas_draw_transparent(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceTransparent* transparent)$/;"	f	file:
canvas_draw_whiteness	spice-common/common/canvas_base.c	/^static void canvas_draw_whiteness(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceWhiteness *whiteness)$/;"	f	file:
canvas_get_as_surface	spice-common/common/sw_canvas.c	/^static pixman_image_t *canvas_get_as_surface(SwCanvas *canvas,$/;"	f	file:
canvas_get_bitmap_mask	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_bitmap_mask(CanvasBase *canvas, SpiceBitmap* bitmap, int invers)$/;"	f	file:
canvas_get_bits	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_bits(CanvasBase *canvas, SpiceBitmap *bitmap,$/;"	f	file:
canvas_get_glz	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_glz(CanvasBase *canvas, SpiceImage *image,$/;"	f	file:
canvas_get_glz_rgb_common	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_glz_rgb_common(CanvasBase *canvas, uint8_t *data,$/;"	f	file:
canvas_get_image	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_image(CanvasBase *canvas, SpiceImage *image,$/;"	f	file:
canvas_get_image_from_self	spice-common/common/canvas_base.c	/^static pixman_image_t* canvas_get_image_from_self(SpiceCanvas *canvas,$/;"	f	file:
canvas_get_image_internal	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_image_internal(CanvasBase *canvas, SpiceImage *image,$/;"	f	file:
canvas_get_jpeg	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_jpeg(CanvasBase *canvas, SpiceImage *image, int invers)$/;"	f	file:
canvas_get_jpeg_alpha	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_jpeg_alpha(CanvasBase *canvas,$/;"	f	file:
canvas_get_localized_palette	spice-common/common/canvas_base.c	/^static inline SpicePalette *canvas_get_localized_palette(CanvasBase *canvas, SpicePalette *base_palette, uint64_t palette_id, uint8_t flags, int *free_palette)$/;"	f	file:
canvas_get_lz	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_lz(CanvasBase *canvas, SpiceImage *image, int invers,$/;"	f	file:
canvas_get_mask	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_mask(CanvasBase *canvas, SpiceQMask *mask, int *needs_invert_out)$/;"	f	file:
canvas_get_palette	spice-common/common/canvas_base.c	/^static inline SpicePalette *canvas_get_palette(CanvasBase *canvas, SpicePalette *base_palette, uint64_t palette_id, uint8_t flags)$/;"	f	file:
canvas_get_pixman_brush	spice-common/common/sw_canvas.c	/^static pixman_image_t *canvas_get_pixman_brush(SwCanvas *canvas,$/;"	f	file:
canvas_get_quic	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_quic(CanvasBase *canvas, SpiceImage *image,$/;"	f	file:
canvas_get_str_mask	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_str_mask(CanvasBase *canvas, SpiceString *str, int bpp, SpicePoint *pos)$/;"	f	file:
canvas_get_surface	spice-common/common/canvas_base.c	/^static SpiceCanvas *canvas_get_surface(CanvasBase *canvas, SpiceImage *image)$/;"	f	file:
canvas_get_surface_internal	spice-common/common/canvas_base.c	/^static SpiceCanvas *canvas_get_surface_internal(CanvasBase *canvas, SpiceImage *image)$/;"	f	file:
canvas_get_surface_mask	spice-common/common/canvas_base.c	/^static SpiceCanvas *canvas_get_surface_mask(CanvasBase *canvas, SpiceImage *image)$/;"	f	file:
canvas_get_surface_mask_internal	spice-common/common/canvas_base.c	/^static SpiceCanvas *canvas_get_surface_mask_internal(CanvasBase *canvas, SpiceImage *image)$/;"	f	file:
canvas_get_target_format	spice-common/common/canvas_base.c	/^static pixman_format_code_t canvas_get_target_format(CanvasBase *canvas,$/;"	f	file:
canvas_get_zlib_glz_rgb	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_get_zlib_glz_rgb(CanvasBase *canvas, SpiceImage *image,$/;"	f	file:
canvas_mask_pixman	spice-common/common/canvas_base.c	/^static void canvas_mask_pixman(CanvasBase *canvas,$/;"	f	file:
canvas_put_bits	spice-common/common/canvas_base.c	/^static inline void canvas_put_bits(uint8_t *dest, int dest_offset, uint8_t *src, int n)$/;"	f	file:
canvas_put_glyph_bits	spice-common/common/canvas_base.c	/^static void canvas_put_glyph_bits(SpiceRasterGlyph *glyph, int bpp, uint8_t *dest, int dest_stride,$/;"	f	file:
canvas_put_image	spice-common/common/sw_canvas.c	/^static void canvas_put_image(SpiceCanvas *spice_canvas,$/;"	f	file:
canvas_raster_glyph_box	spice-common/common/canvas_base.c	/^static inline void canvas_raster_glyph_box(const SpiceRasterGlyph *glyph, SpiceRect *r)$/;"	f	file:
canvas_read_bits	spice-common/common/sw_canvas.c	/^static void canvas_read_bits(SpiceCanvas *spice_canvas, uint8_t *dest,$/;"	f	file:
canvas_region	spice-common/common/canvas_base.c	/^    pixman_region32_t canvas_region;$/;"	m	struct:CanvasBase	file:
canvas_scale_surface	spice-common/common/canvas_base.c	/^static pixman_image_t *canvas_scale_surface(pixman_image_t *src, const SpiceRect *src_area, int width,$/;"	f	file:
canvas_surf_to_trans_surf	spice-common/common/gl_canvas.c	/^static pixman_image_t *canvas_surf_to_trans_surf(GLCImage *image,$/;"	f	file:
canvas_touch_image	spice-common/common/canvas_base.c	/^static void canvas_touch_image(CanvasBase *canvas, SpiceImage *image)$/;"	f	file:
capStyle	spice-common/common/lines.h	/^    unsigned int capStyle:2;$/;"	m	struct:lineGC
capabilities	ffmpeg/include/libavcodec/avcodec.h	/^    int capabilities;$/;"	m	struct:AVCodec
capabilities	ffmpeg/include/libavcodec/avcodec.h	/^    int capabilities;$/;"	m	struct:AVHWAccel
capacity	spice-common/common/mem.h	/^    size_t capacity;$/;"	m	struct:SpiceBuffer
caps	glib/spice-channel-priv.h	/^    GArray                      *caps;$/;"	m	struct:_SpiceChannelPrivate
caps	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t caps[0];$/;"	m	struct:VDAgentAnnounceCapabilities
caps_internal	ffmpeg/include/libavcodec/avcodec.h	/^    int caps_internal;$/;"	m	struct:AVCodec
caps_offset	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t caps_offset;$/;"	m	struct:SpiceLinkMess
caps_offset	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t caps_offset;$/;"	m	struct:SpiceLinkReply
card_inserted	glib/smartcard-manager.h	/^    void (*card_inserted)(SpiceSmartcardManager *manager, SpiceSmartcardReader *reader);$/;"	m	struct:_SpiceSmartcardManagerClass
card_inserted_cb	glib/channel-smartcard.c	/^static void card_inserted_cb(SpiceSmartcardManager *manager, VReader *reader,$/;"	f	file:
card_removed	glib/smartcard-manager.h	/^    void (*card_removed)(SpiceSmartcardManager *manager, SpiceSmartcardReader *reader );$/;"	m	struct:_SpiceSmartcardManagerClass
card_removed_cb	glib/channel-smartcard.c	/^static void card_removed_cb(SpiceSmartcardManager *manager, VReader *reader,$/;"	f	file:
catch_error	glib/channel-usbredir.c	/^    GError **catch_error;$/;"	m	struct:_SpiceUsbredirChannelPrivate	file:
category	ffmpeg/include/libavutil/log.h	/^    AVClassCategory category;$/;"	m	struct:AVClass
cc	glib/coroutine.h	/^	struct continuation cc;$/;"	m	struct:coroutine	typeref:struct:coroutine::continuation
cc_arg	glib/continuation.c	/^union cc_arg {$/;"	u	file:
cc_init	glib/continuation.c	/^void cc_init(struct continuation *cc)$/;"	f
cc_release	glib/continuation.c	/^int cc_release(struct continuation *cc)$/;"	f
cc_swap	glib/continuation.c	/^int cc_swap(struct continuation *from, struct continuation *to)$/;"	f
ceil_log_2	spice-common/common/quic.c	/^static int ceil_log_2(int val) \/* ceil(log_2(val)) *\/$/;"	f	file:
celt_decoder	spice-common/common/snd_codec.c	/^    CELTDecoder *celt_decoder;$/;"	m	struct:__anon134	file:
celt_encoder	spice-common/common/snd_codec.c	/^    CELTEncoder *celt_encoder;$/;"	m	struct:__anon134	file:
celt_mode	spice-common/common/snd_codec.c	/^    CELTMode *celt_mode;$/;"	m	struct:__anon134	file:
center_mix_level	ffmpeg/include/libavutil/downmix_info.h	/^    double center_mix_level;$/;"	m	struct:AVDownmixInfo
center_mix_level_ltrt	ffmpeg/include/libavutil/downmix_info.h	/^    double center_mix_level_ltrt;$/;"	m	struct:AVDownmixInfo
cert_subject	glib/spice-session-priv.h	/^    char              *cert_subject;$/;"	m	struct:_SpiceSessionPrivate
cert_subject_data	spice-common/common/messages.h	/^    uint8_t *cert_subject_data;$/;"	m	struct:SpiceMigrationDstInfo
cert_subject_data	spice-common/common/messages.h	/^    uint8_t *cert_subject_data;$/;"	m	struct:SpiceMsgMainMigrationSwitchHost
cert_subject_size	spice-common/common/messages.h	/^    uint32_t cert_subject_size;$/;"	m	struct:SpiceMigrationDstInfo
cert_subject_size	spice-common/common/messages.h	/^    uint32_t cert_subject_size;$/;"	m	struct:SpiceMsgMainMigrationSwitchHost
cf	win32/win32_spice_interface.c	/^    gchar cf[1024 * 2];$/;"	m	struct:SpiceConnectARGS	file:
cfg	ffmpeg/include/libavcodec/d3d11va.h	/^    D3D11_VIDEO_DECODER_CONFIG *cfg;$/;"	m	struct:AVD3D11VAContext
cfg	ffmpeg/include/libavcodec/dxva2.h	/^    const DXVA2_ConfigPictureDecode *cfg;$/;"	m	struct:dxva_context
channel	glib/channel-base.c	/^    SpiceChannel *channel;$/;"	m	struct:WaitForChannelData	file:
channel	glib/channel-display-priv.h	/^    SpiceChannel                *channel;$/;"	m	struct:display_stream
channel	glib/channel-main.c	/^    SpiceMainChannel               *channel;$/;"	m	struct:SpiceFileXferTask	file:
channel	glib/channel-usbredir.c	/^    SpiceUsbredirChannel *channel;$/;"	m	struct:device_error_data	file:
channel	glib/spice-channel-priv.h	/^    SpiceChannel          *channel;$/;"	m	struct:_SpiceMsgIn
channel	glib/spice-channel-priv.h	/^    SpiceChannel          *channel;$/;"	m	struct:_SpiceMsgOut
channel	glib/spice-session.c	/^    SpiceChannel      *channel;$/;"	m	struct:channel	file:
channel	glib/spice-session.c	/^    SpiceChannel *channel;$/;"	m	struct:spice_open_host	file:
channel	glib/spice-session.c	/^struct channel {$/;"	s	file:
channel	glib/vmcstream.c	/^    SpiceChannel *channel; \/* weak *\/$/;"	m	struct:_SpiceVmcOutputStream	file:
channel	glib/vmcstream.c	/^    SpiceChannel *channel; \/* weak *\/$/;"	m	struct:_SpiceVmcStream	file:
channel	glib/vmcstream.c	/^    SpiceChannel *channel;$/;"	m	struct:_SpiceVmcInputStream	file:
channel_connect	glib/spice-channel.c	/^static gboolean channel_connect(SpiceChannel *channel)$/;"	f	file:
channel_counts	ffmpeg/include/libavfilter/buffersink.h	/^    const int *channel_counts;              \/\/\/< list of allowed channel counts, terminated by -1$/;"	m	struct:__anon31
channel_destroy	glib/spice-session.h	/^    void (*channel_destroy)(SpiceSession *session, SpiceChannel *channel);$/;"	m	struct:_SpiceSessionClass
channel_destroy	glib/usb-device-manager.c	/^static void channel_destroy(SpiceSession *session, SpiceChannel *channel,$/;"	f	file:
channel_destroy	win32/win32-spice-widget.c	/^static void channel_destroy(SpiceSession *s, SpiceChannel *channel, gpointer data)$/;"	f	file:
channel_destroy	win32/win32-spicy.c	/^static void channel_destroy(SpiceSession *s, SpiceChannel *channel, gpointer data)$/;"	f	file:
channel_disconnect	glib/spice-channel.c	/^static void channel_disconnect(SpiceChannel *channel)$/;"	f	file:
channel_disconnect	glib/spice-channel.h	/^    void (*channel_disconnect)(SpiceChannel *channel);$/;"	m	struct:_SpiceChannelClass
channel_event	glib/spice-channel.h	/^    void (*channel_event)(SpiceChannel *channel, SpiceChannelEvent event);$/;"	m	struct:_SpiceChannelClass
channel_event	glib/spice-gstaudio.c	/^static void channel_event(SpiceChannel *channel, SpiceChannelEvent event,$/;"	f	file:
channel_event	glib/spice-pulse.c	/^static void channel_event(SpiceChannel *channel, SpiceChannelEvent event,$/;"	f	file:
channel_id	glib/spice-channel-priv.h	/^    int                         channel_id;$/;"	m	struct:_SpiceChannelPrivate
channel_id	spice-common/common/messages.h	/^    uint8_t channel_id;$/;"	m	struct:SpiceWaitForChannel
channel_id	spice-common/spice-protocol/spice/protocol.h	/^    uint8_t channel_id;$/;"	m	struct:SpiceLinkMess
channel_id	win32/win32-spice-widget-priv.h	/^    gint                    channel_id;$/;"	m	struct:_SpiceDisplayPrivate
channel_layout	ffmpeg/include/libavcodec/avcodec.h	/^    uint64_t channel_layout;$/;"	m	struct:AVCodecContext
channel_layout	ffmpeg/include/libavdevice/avdevice.h	/^    int64_t channel_layout;$/;"	m	struct:AVDeviceCapabilitiesQuery
channel_layout	ffmpeg/include/libavfilter/avfilter.h	/^    uint64_t channel_layout;    \/\/\/< channel layout of audio buffer$/;"	m	struct:AVFilterBufferRefAudioProps
channel_layout	ffmpeg/include/libavfilter/avfilter.h	/^    uint64_t channel_layout;    \/\/\/< channel layout of current buffer (see libavutil\/channel_layout.h)$/;"	m	struct:AVFilterLink
channel_layout	ffmpeg/include/libavutil/frame.h	/^    uint64_t channel_layout;$/;"	m	struct:AVFrame
channel_layouts	ffmpeg/include/libavcodec/avcodec.h	/^    const uint64_t *channel_layouts;         \/\/\/< array of support channel layouts, or NULL if unknown. array is terminated by 0$/;"	m	struct:AVCodec
channel_layouts	ffmpeg/include/libavfilter/buffersink.h	/^    const int64_t *channel_layouts;         \/\/\/< list of allowed channel layouts, terminated by -1$/;"	m	struct:__anon31
channel_new	glib/channel-main.c	/^typedef struct channel_new {$/;"	s	file:
channel_new	glib/spice-audio.c	/^static void channel_new(SpiceSession *session, SpiceChannel *channel, SpiceAudio *self)$/;"	f	file:
channel_new	glib/spice-session.h	/^    void (*channel_new)(SpiceSession *session, SpiceChannel *channel);$/;"	m	struct:_SpiceSessionClass
channel_new	glib/usb-device-manager.c	/^static void channel_new(SpiceSession *session, SpiceChannel *channel,$/;"	f	file:
channel_new	win32/win32-spice-widget.c	/^static void channel_new(SpiceSession *s, SpiceChannel *channel, gpointer data)$/;"	f	file:
channel_new	win32/win32-spicy.c	/^static void channel_new(SpiceSession *s, SpiceChannel *channel, gpointer data)$/;"	f	file:
channel_new_t	glib/channel-main.c	/^} channel_new_t;$/;"	t	typeref:struct:channel_new	file:
channel_reset	glib/channel-record.c	/^static void channel_reset(SpiceChannel *channel, gboolean migrating)$/;"	f	file:
channel_reset	glib/spice-channel.c	/^static void channel_reset(SpiceChannel *channel, gboolean migrating)$/;"	f	file:
channel_reset	glib/spice-channel.h	/^    void (*channel_reset)(SpiceChannel *channel, gboolean migrating);$/;"	m	struct:_SpiceChannelClass
channel_reset_capabilities	glib/spice-channel.h	/^    void (*channel_reset_capabilities)(SpiceChannel *channel);$/;"	m	struct:_SpiceChannelClass
channel_send_migration_handshake	glib/spice-channel.h	/^    void (*channel_send_migration_handshake)(SpiceChannel *channel);$/;"	m	struct:_SpiceChannelClass
channel_set_handlers	glib/channel-cursor.c	/^static void channel_set_handlers(SpiceChannelClass *klass)$/;"	f	file:
channel_set_handlers	glib/channel-display.c	/^static void channel_set_handlers(SpiceChannelClass *klass)$/;"	f	file:
channel_set_handlers	glib/channel-inputs.c	/^static void channel_set_handlers(SpiceChannelClass *klass)$/;"	f	file:
channel_set_handlers	glib/channel-main.c	/^static void channel_set_handlers(SpiceChannelClass *klass)$/;"	f	file:
channel_set_handlers	glib/channel-playback.c	/^static void channel_set_handlers(SpiceChannelClass *klass)$/;"	f	file:
channel_set_handlers	glib/channel-port.c	/^static void channel_set_handlers(SpiceChannelClass *klass)$/;"	f	file:
channel_set_handlers	glib/channel-record.c	/^static void channel_set_handlers(SpiceChannelClass *klass)$/;"	f	file:
channel_set_handlers	glib/channel-smartcard.c	/^static void channel_set_handlers(SpiceChannelClass *klass)$/;"	f	file:
channel_set_handlers	glib/channel-usbredir.c	/^static void channel_set_handlers(SpiceChannelClass *klass)$/;"	f	file:
channel_type	glib/spice-channel-priv.h	/^    int                         channel_type;$/;"	m	struct:_SpiceChannelPrivate
channel_type	spice-common/common/messages.h	/^    uint8_t channel_type;$/;"	m	struct:SpiceWaitForChannel
channel_type	spice-common/spice-protocol/spice/protocol.h	/^    uint8_t channel_type;$/;"	m	struct:SpiceLinkMess
channel_up	glib/spice-channel.h	/^    void (*channel_up)(SpiceChannel *channel);$/;"	m	struct:_SpiceChannelClass
channel_watch	glib/spice-channel-priv.h	/^    guint                       channel_watch;$/;"	m	struct:_SpiceChannelPrivate
channels	ffmpeg/include/libavcodec/avcodec.h	/^    int channels;    \/\/\/< number of audio channels$/;"	m	struct:AVCodecContext
channels	ffmpeg/include/libavdevice/avdevice.h	/^    int channels;$/;"	m	struct:AVDeviceCapabilitiesQuery
channels	ffmpeg/include/libavfilter/avfilter.h	/^    int channels;               \/\/\/< number of channels (do not access directly)$/;"	m	struct:AVFilterBufferRefAudioProps
channels	ffmpeg/include/libavfilter/avfilter.h	/^    int channels;$/;"	m	struct:AVFilterLink
channels	ffmpeg/include/libavutil/frame.h	/^    int channels;$/;"	m	struct:AVFrame
channels	glib/spice-session-priv.h	/^    Ring              channels;$/;"	m	struct:_SpiceSessionPrivate
channels	glib/usb-device-manager.c	/^    GPtrArray *channels;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
channels	spice-common/common/messages.h	/^    SpiceChannelId channels[0];$/;"	m	struct:SpiceMsgChannels
channels	spice-common/common/messages.h	/^    uint32_t channels;$/;"	m	struct:SpiceMsgPlaybackStart
channels	spice-common/common/messages.h	/^    uint32_t channels;$/;"	m	struct:SpiceMsgRecordStart
channels	spice-common/common/quic.c	/^    Channel channels[MAX_CHANNELS];$/;"	m	struct:Encoder	file:
channels	win32/win32-spicy.h	/^    int              channels;$/;"	m	struct:spice_connection
chapters	ffmpeg/include/libavformat/avformat.h	/^    AVChapter **chapters;$/;"	m	struct:AVFormatContext
check_reply	glib/wocky-http-proxy.c	/^check_reply (const gchar *buffer, gboolean has_cred, GError **error)$/;"	f	file:
checksum	ffmpeg/include/libavformat/avio.h	/^    unsigned long checksum;$/;"	m	struct:AVIOContext
checksum_ptr	ffmpeg/include/libavformat/avio.h	/^    unsigned char *checksum_ptr;$/;"	m	struct:AVIOContext
child_at_end	spice-common/python_modules/demarshal.py	/^    def child_at_end(self, writer, t):$/;"	m	class:DemarshallingDestination
child_at_end	spice-common/python_modules/marshal.py	/^    def child_at_end(self, t):$/;"	m	class:MarshallingSource
child_class_next	ffmpeg/include/libavutil/log.h	/^    const struct AVClass* (*child_class_next)(const struct AVClass *prev);$/;"	m	struct:AVClass	typeref:struct:AVClass::child_class_next
child_next	ffmpeg/include/libavutil/log.h	/^    void* (*child_next)(void *obj, void *prev);$/;"	m	struct:AVClass
child_sub	spice-common/python_modules/demarshal.py	/^    def child_sub(self, member):$/;"	m	class:DemarshallingDestination
child_sub	spice-common/python_modules/marshal.py	/^    def child_sub(self, containee):$/;"	m	class:MarshallingSource
chrH	ffmpeg/include/libswscale/swscale.h	/^    SwsVector *chrH;$/;"	m	struct:SwsFilter
chrV	ffmpeg/include/libswscale/swscale.h	/^    SwsVector *chrV;$/;"	m	struct:SwsFilter
chroma_intra_matrix	ffmpeg/include/libavcodec/avcodec.h	/^    uint16_t *chroma_intra_matrix;$/;"	m	struct:AVCodecContext
chroma_location	ffmpeg/include/libavutil/frame.h	/^    enum AVChromaLocation chroma_location;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVChromaLocation
chroma_sample_location	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVChromaLocation chroma_sample_location;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVChromaLocation
chromaoffset	ffmpeg/include/libavcodec/avcodec.h	/^    int chromaoffset;$/;"	m	struct:AVCodecContext
chunk	spice-common/common/mem.h	/^    SpiceChunk   chunk[0];$/;"	m	struct:SpiceChunks
chunk	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLDataChunk chunk;$/;"	m	struct:QXLClipRects
chunk	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLDataChunk chunk;$/;"	m	struct:QXLCursor
chunk	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLDataChunk chunk;$/;"	m	struct:QXLPath
chunk	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLDataChunk chunk;$/;"	m	struct:QXLString
chunks	spice-common/common/canvas_base.c	/^    SpiceChunks *chunks;$/;"	m	struct:QuicData	file:
ciphers	glib/spice-session-priv.h	/^    char              *ciphers;$/;"	m	struct:_SpiceSessionPrivate
class	glib/win-usb-dev.c	/^    guint16 class;$/;"	m	struct:_GUdevDeviceInfo	file:
class_name	ffmpeg/include/libavutil/log.h	/^    const char* class_name;$/;"	m	struct:AVClass
clear	spice-common/common/canvas_base.h	/^    void (*clear)(SpiceCanvas *canvas);$/;"	m	struct:__anon145
clear_dest_alpha	spice-common/common/sw_canvas.c	/^static void clear_dest_alpha(pixman_image_t *dest,$/;"	f	file:
clear_row	spice-common/common/quic.c	/^static void clear_row(four_bytes_t *row, int width)$/;"	f	file:
clear_streams	glib/channel-display.c	/^static void clear_streams(SpiceChannel *channel)$/;"	f	file:
clear_surfaces	glib/channel-display.c	/^static void clear_surfaces(SpiceChannel *channel, gboolean keep_primary)$/;"	f	file:
client	glib/channel-webdav.c	/^        gint64 client;$/;"	m	struct:_SpiceWebdavChannelPrivate::_demux	file:
client	glib/spice-session.c	/^    GSocketClient *client;$/;"	m	struct:spice_open_host	file:
client_capabilities	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t client_capabilities[58];$/;"	m	struct:QXLRom
client_connected	glib/channel-webdav.c	/^static void client_connected(GObject *source_object,$/;"	f	file:
client_monitors_config	spice-common/spice-protocol/spice/qxl_dev.h	/^    } client_monitors_config;$/;"	m	struct:QXLRom	typeref:struct:QXLRom::__anon68
client_monitors_config_crc	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t client_monitors_config_crc;$/;"	m	struct:QXLRom
client_present	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t client_present;$/;"	m	struct:QXLRom
client_provided_sockets	glib/spice-session-priv.h	/^    gboolean          client_provided_sockets;$/;"	m	struct:_SpiceSessionPrivate
client_read_cb	glib/channel-webdav.c	/^static void client_read_cb(GObject *source_object,$/;"	f	file:
client_ref	glib/channel-webdav.c	/^client_ref(Client *client)$/;"	f	file:
client_remove_unref	glib/channel-webdav.c	/^static void client_remove_unref(gpointer data)$/;"	f	file:
client_start_read	glib/channel-webdav.c	/^static void client_start_read(SpiceWebdavChannel *self, Client *client)$/;"	f	file:
client_unref	glib/channel-webdav.c	/^client_unref(Client *client)$/;"	f	file:
clients	glib/channel-webdav.c	/^    GHashTable *clients;$/;"	m	struct:_SpiceWebdavChannelPrivate	file:
clip	glib/channel-display-priv.h	/^    SpiceClip                   *clip;$/;"	m	struct:display_stream
clip	spice-common/common/messages.h	/^    SpiceClip clip;$/;"	m	struct:SpiceMsgDisplayBase
clip	spice-common/common/messages.h	/^    SpiceClip clip;$/;"	m	struct:SpiceMsgDisplayStreamClip
clip	spice-common/common/messages.h	/^    SpiceClip clip;$/;"	m	struct:SpiceMsgDisplayStreamCreate
clip	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLClip clip;$/;"	m	struct:QXLCompatDrawable
clip	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLClip clip;$/;"	m	struct:QXLDrawable
clip_common	spice-common/common/glc.c	/^static void clip_common(InternaCtx *ctx, GLCClipOp op, void (*fill_func)(InternaCtx *, void *),$/;"	f	file:
close	ffmpeg/include/libavcodec/avcodec.h	/^    int (*close)(AVCodecContext *);$/;"	m	struct:AVCodec
close	ffmpeg/include/libavcodec/avcodec.h	/^    void (*close)(AVBitStreamFilterContext *bsfc);$/;"	m	struct:AVBitStreamFilter
closed	ffmpeg/include/libavfilter/avfilter.h	/^    int closed;$/;"	m	struct:AVFilterLink
closure	glib/spice-util.c	/^    GClosure *closure;$/;"	m	struct:__anon23	file:
closure	win32/virt-viewer-util.c	/^    GClosure *closure;$/;"	m	struct:__anon45	file:
closure_invalidated_cb	glib/spice-util.c	/^closure_invalidated_cb (gpointer ctx_,$/;"	f	file:
closure_invalidated_cb	win32/virt-viewer-util.c	/^closure_invalidated_cb(gpointer ctx_,$/;"	f	file:
cm_codec_type	ffmpeg/include/libavcodec/videotoolbox.h	/^    int cm_codec_type;$/;"	m	struct:AVVideotoolboxContext
cm_fmt_desc	ffmpeg/include/libavcodec/videotoolbox.h	/^    CMVideoFormatDescriptionRef cm_fmt_desc;$/;"	m	struct:AVVideotoolboxContext
cmain	glib/spice-session-priv.h	/^    SpiceChannel      *cmain; \/* weak reference *\/$/;"	m	struct:_SpiceSessionPrivate
cmd	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLCommand cmd;$/;"	m	struct:QXLCommandExt
cmd_ring	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLCommandRing cmd_ring;$/;"	m	struct:QXLRam
cnt_l_zeroes	spice-common/common/quic.c	/^static unsigned int cnt_l_zeroes(const unsigned int bits)$/;"	f	file:
code	spice-common/common/messages.h	/^    uint32_t code;$/;"	m	struct:SpiceMsgcKeyDown
code	spice-common/common/messages.h	/^    uint32_t code;$/;"	m	struct:SpiceMsgcKeyUp
codec	ffmpeg/include/libavcodec/avcodec.h	/^    const struct AVCodec  *codec;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVCodec
codec	ffmpeg/include/libavdevice/avdevice.h	/^    enum AVCodecID codec;$/;"	m	struct:AVDeviceCapabilitiesQuery	typeref:enum:AVDeviceCapabilitiesQuery::AVCodecID
codec	ffmpeg/include/libavformat/avformat.h	/^    AVCodecContext *codec;$/;"	m	struct:AVStream
codec	glib/channel-display-priv.h	/^    int                         codec;$/;"	m	struct:display_stream
codec	glib/channel-playback.c	/^    SndCodec                    codec;$/;"	m	struct:_SpicePlaybackChannelPrivate	file:
codec	glib/channel-record.c	/^    SndCodec                    codec;$/;"	m	struct:_SpiceRecordChannelPrivate	file:
codec_context	glib/h264_decoder.h	/^   AVCodecContext *codec_context;$/;"	m	struct:_H264Decoder
codec_descriptor	ffmpeg/include/libavcodec/avcodec.h	/^    const AVCodecDescriptor *codec_descriptor;$/;"	m	struct:AVCodecContext
codec_id	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVCodecID     codec_id; \/* see AV_CODEC_ID_xxx *\/$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVCodecID
codec_ids	ffmpeg/include/libavcodec/avcodec.h	/^    int codec_ids[5]; \/* several codec IDs are permitted *\/$/;"	m	struct:AVCodecParser
codec_info_duration	ffmpeg/include/libavformat/avformat.h	/^        int64_t codec_info_duration;$/;"	m	struct:AVStream::__anon35
codec_info_duration_fields	ffmpeg/include/libavformat/avformat.h	/^        int64_t codec_info_duration_fields;$/;"	m	struct:AVStream::__anon35
codec_info_nb_frames	ffmpeg/include/libavformat/avformat.h	/^    int codec_info_nb_frames;$/;"	m	struct:AVStream
codec_name	ffmpeg/include/libavcodec/avcodec.h	/^    char             codec_name[32];$/;"	m	struct:AVCodecContext
codec_tag	ffmpeg/include/libavcodec/avcodec.h	/^    unsigned int codec_tag;$/;"	m	struct:AVCodecContext
codec_tag	ffmpeg/include/libavformat/avformat.h	/^    const struct AVCodecTag * const *codec_tag;$/;"	m	struct:AVInputFormat
codec_tag	ffmpeg/include/libavformat/avformat.h	/^    const struct AVCodecTag * const *codec_tag;$/;"	m	struct:AVOutputFormat
codec_type	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVMediaType codec_type; \/* see AVMEDIA_TYPE_xxx *\/$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVMediaType
codec_type	spice-common/common/messages.h	/^    uint32_t codec_type;$/;"	m	struct:SpiceMsgDisplayStreamCreate
codec_whitelist	ffmpeg/include/libavcodec/avcodec.h	/^    char *codec_whitelist;$/;"	m	struct:AVCodecContext
codec_whitelist	ffmpeg/include/libavformat/avformat.h	/^    char *codec_whitelist;$/;"	m	struct:AVFormatContext
coded_frame	ffmpeg/include/libavcodec/avcodec.h	/^    attribute_deprecated AVFrame *coded_frame;$/;"	m	struct:AVCodecContext
coded_height	ffmpeg/include/libavcodec/avcodec.h	/^    int coded_height;$/;"	m	struct:AVCodecParserContext
coded_height	ffmpeg/include/libavcodec/avcodec.h	/^    int coded_width, coded_height;$/;"	m	struct:AVCodecContext
coded_picture_number	ffmpeg/include/libavutil/frame.h	/^    int coded_picture_number;$/;"	m	struct:AVFrame
coded_width	ffmpeg/include/libavcodec/avcodec.h	/^    int coded_width, coded_height;$/;"	m	struct:AVCodecContext
coded_width	ffmpeg/include/libavcodec/avcodec.h	/^    int coded_width;$/;"	m	struct:AVCodecParserContext
coder_type	ffmpeg/include/libavcodec/avcodec.h	/^    int coder_type;$/;"	m	struct:AVCodecContext
coeff	ffmpeg/include/libswscale/swscale.h	/^    double *coeff;              \/\/\/< pointer to the list of coefficients$/;"	m	struct:SwsVector
coldplug_list	glib/usb-device-manager.c	/^    libusb_device **coldplug_list; \/* Avoid needless reprobing during init *\/$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
color	spice-common/common/canvas_base.c	/^    uint32_t color;$/;"	m	struct:__anon121	file:
color	spice-common/common/draw.h	/^        uint32_t color;$/;"	m	union:SpiceBrush::__anon154
color	spice-common/spice-protocol/spice/qxl_dev.h	/^        uint32_t color;$/;"	m	union:QXLBrush::__anon72
color_depth	glib/spice-option.c	/^static gint color_depth = 0;$/;"	v	file:
color_depth	glib/spice-session-priv.h	/^    gint              color_depth;$/;"	m	struct:_SpiceSessionPrivate
color_mask	spice-common/common/canvas_base.c	/^    uint32_t color_mask;$/;"	m	struct:CanvasBase	file:
color_primaries	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVColorPrimaries color_primaries;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorPrimaries
color_primaries	ffmpeg/include/libavutil/frame.h	/^    enum AVColorPrimaries color_primaries;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorPrimaries
color_range	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVColorRange color_range;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorRange
color_range	ffmpeg/include/libavutil/frame.h	/^    enum AVColorRange color_range;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorRange
color_shift	spice-common/common/canvas_base.c	/^    uint32_t color_shift;$/;"	m	struct:CanvasBase	file:
color_trc	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorTransferCharacteristic
color_trc	ffmpeg/include/libavutil/frame.h	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorTransferCharacteristic
colorkey_image	spice-common/common/canvas_base.h	/^    void (*colorkey_image)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
colorkey_image	spice-common/common/sw_canvas.c	/^static void colorkey_image(SpiceCanvas *spice_canvas,$/;"	f	file:
colorkey_image_from_surface	spice-common/common/canvas_base.h	/^    void (*colorkey_image_from_surface)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
colorkey_image_from_surface	spice-common/common/sw_canvas.c	/^static void colorkey_image_from_surface(SpiceCanvas *spice_canvas,$/;"	f	file:
colorkey_scale_image	spice-common/common/canvas_base.h	/^    void (*colorkey_scale_image)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
colorkey_scale_image	spice-common/common/sw_canvas.c	/^static void colorkey_scale_image(SpiceCanvas *spice_canvas,$/;"	f	file:
colorkey_scale_image_from_surface	spice-common/common/canvas_base.h	/^    void (*colorkey_scale_image_from_surface)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
colorkey_scale_image_from_surface	spice-common/common/sw_canvas.c	/^static void colorkey_scale_image_from_surface(SpiceCanvas *spice_canvas,$/;"	f	file:
colorspace	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVColorSpace colorspace;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorSpace
colorspace	ffmpeg/include/libavutil/frame.h	/^    enum AVColorSpace colorspace;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorSpace
command_queue	ffmpeg/include/libavfilter/avfilter.h	/^    struct AVFilterCommand *command_queue;$/;"	m	struct:AVFilterContext	typeref:struct:AVFilterContext::AVFilterCommand
comment	spice-common/python_modules/codegen.py	/^    def comment(self, str):$/;"	m	class:CodeWriter
common_caps	glib/spice-channel-priv.h	/^    GArray                      *common_caps;$/;"	m	struct:_SpiceChannelPrivate
comp	ffmpeg/include/libavutil/pixdesc.h	/^    AVComponentDescriptor comp[4];$/;"	m	struct:AVPixFmtDescriptor
complete_async_from_error	glib/wocky-http-proxy.c	/^complete_async_from_error (ConnectAsyncData *data, GError *error)$/;"	f	file:
component_max	ffmpeg/include/libavutil/opt.h	/^    double component_min, component_max;$/;"	m	struct:AVOptionRange
component_min	ffmpeg/include/libavutil/opt.h	/^    double component_min, component_max;$/;"	m	struct:AVOptionRange
composite	spice-common/spice-protocol/spice/qxl_dev.h	/^	QXLComposite composite;$/;"	m	union:QXLDrawable::__anon76
compress	spice-common/common/lz_compress_tmpl.c	/^static void FNAME(compress)(Encoder *encoder)$/;"	f	file:
compress_output_prev	spice-common/common/lz.c	/^static inline void compress_output_prev(Encoder *encoder)$/;"	f	file:
compress_row	spice-common/common/quic_rgb_tmpl.c	/^static void FNAME(compress_row)(Encoder *encoder,$/;"	f	file:
compress_row	spice-common/common/quic_tmpl.c	/^static void FNAME(compress_row)(Encoder *encoder, Channel *channel,$/;"	f	file:
compress_row0	spice-common/common/quic_rgb_tmpl.c	/^static void FNAME(compress_row0)(Encoder *encoder, const PIXEL *cur_row,$/;"	f	file:
compress_row0	spice-common/common/quic_tmpl.c	/^static void FNAME(compress_row0)(Encoder *encoder, Channel *channel, const PIXEL *cur_row,$/;"	f	file:
compress_row0_seg	spice-common/common/quic_rgb_tmpl.c	/^static void FNAME(compress_row0_seg)(Encoder *encoder, int i,$/;"	f	file:
compress_row0_seg	spice-common/common/quic_tmpl.c	/^static void FNAME(compress_row0_seg)(Encoder *encoder, Channel *channel, int i,$/;"	f	file:
compress_row_seg	spice-common/common/quic_rgb_tmpl.c	/^static void FNAME(compress_row_seg)(Encoder *encoder, int i,$/;"	f	file:
compress_row_seg	spice-common/common/quic_tmpl.c	/^static void FNAME(compress_row_seg)(Encoder *encoder, Channel *channel, int i,$/;"	f	file:
compress_seg	spice-common/common/lz_compress_tmpl.c	/^static void FNAME(compress_seg)(Encoder *encoder, LzImageSegment *seg, PIXEL *from, int copied)$/;"	f	file:
compression_level	ffmpeg/include/libavcodec/avcodec.h	/^    int compression_level;$/;"	m	struct:AVCodecContext
compression_level	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t compression_level;$/;"	m	struct:QXLRom
condition_id	glib/gio-coroutine.h	/^    guint condition_id;$/;"	m	struct:_GCoroutine
config_id	ffmpeg/include/libavcodec/vaapi.h	/^    uint32_t config_id;$/;"	m	struct:vaapi_context
config_props	ffmpeg/include/libavfilter/avfilter.h	/^    int (*config_props)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
conn	glib/channel-webdav.c	/^    GSocketConnection *conn;$/;"	m	struct:Client	file:
conn	glib/spice-channel-priv.h	/^    GSocketConnection           *conn;$/;"	m	struct:_SpiceChannelPrivate
conn	win32/win32-spicy.h	/^    spice_connection *conn;$/;"	m	struct:_SpiceWindow
conn	win32/win32_spice_interface_priv.h	/^   struct spice_connection* conn;$/;"	m	struct:priv_spice_connection	typeref:struct:priv_spice_connection::spice_connection
connectSession	win32/win32_service.c	/^int connectSession (spice_connection *conn)$/;"	f
connect_channel	glib/spice-audio.c	/^static void connect_channel(SpiceAudio *self, SpiceChannel *channel)$/;"	f	file:
connect_channel	glib/spice-audio.h	/^    gboolean (*connect_channel)(SpiceAudio *audio, SpiceChannel *channel);$/;"	m	struct:_SpiceAudioClass
connect_channel	glib/spice-gstaudio.c	/^static gboolean connect_channel(SpiceAudio *audio, SpiceChannel *channel)$/;"	f	file:
connect_channel	glib/spice-pulse.c	/^static gboolean connect_channel(SpiceAudio *audio, SpiceChannel *channel)$/;"	f	file:
connect_delayed	glib/spice-channel.c	/^static gboolean connect_delayed(gpointer data)$/;"	f	file:
connect_delayed_id	glib/spice-channel-priv.h	/^    guint                       connect_delayed_id;$/;"	m	struct:_SpiceChannelPrivate
connect_timeout	glib/spice-session.c	/^static gboolean connect_timeout(gpointer data)$/;"	f	file:
connection	glib/spice-session.c	/^    GSocketConnection *connection;$/;"	m	struct:spice_open_host	file:
connection_connect	win32/win32-spicy.c	/^void connection_connect(spice_connection *conn)$/;"	f
connection_destroy	win32/win32-spicy.c	/^static void connection_destroy(spice_connection *conn)$/;"	f	file:
connection_disconnect	win32/win32-spicy.c	/^void connection_disconnect(spice_connection *conn)$/;"	f
connection_id	glib/spice-session-priv.h	/^    int               connection_id;$/;"	m	struct:_SpiceSessionPrivate
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgTunnelSocketClose
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgTunnelSocketClosedAck
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgTunnelSocketData
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgTunnelSocketFin
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgTunnelSocketOpen
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgTunnelSocketTokens
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgcTunnelSocketClosed
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgcTunnelSocketClosedAck
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgcTunnelSocketData
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgcTunnelSocketFin
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgcTunnelSocketOpenAck
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgcTunnelSocketOpenNack
connection_id	spice-common/common/messages.h	/^    uint16_t connection_id;$/;"	m	struct:SpiceMsgcTunnelSocketTokens
connection_id	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t connection_id;$/;"	m	struct:SpiceLinkMess
connection_new	win32/win32-spicy.c	/^spice_connection *connection_new(void)$/;"	f
connections	win32/win32_spice_interface_priv.h	/^   int connections;$/;"	m	struct:Win32SpiceGloabInfo
consume_int16	spice-common/common/generated_client_demarshallers.c	/^static int16_t SPICE_GNUC_UNUSED consume_int16(uint8_t **ptr)$/;"	f	file:
consume_int16	spice-common/common/generated_client_demarshallers1.c	/^static int16_t SPICE_GNUC_UNUSED consume_int16(uint8_t **ptr)$/;"	f	file:
consume_int16	spice-common/common/generated_server_demarshallers.c	/^static int16_t SPICE_GNUC_UNUSED consume_int16(uint8_t **ptr)$/;"	f	file:
consume_int32	spice-common/common/generated_client_demarshallers.c	/^static int32_t SPICE_GNUC_UNUSED consume_int32(uint8_t **ptr)$/;"	f	file:
consume_int32	spice-common/common/generated_client_demarshallers1.c	/^static int32_t SPICE_GNUC_UNUSED consume_int32(uint8_t **ptr)$/;"	f	file:
consume_int32	spice-common/common/generated_server_demarshallers.c	/^static int32_t SPICE_GNUC_UNUSED consume_int32(uint8_t **ptr)$/;"	f	file:
consume_int64	spice-common/common/generated_client_demarshallers.c	/^static int64_t SPICE_GNUC_UNUSED consume_int64(uint8_t **ptr)$/;"	f	file:
consume_int64	spice-common/common/generated_client_demarshallers1.c	/^static int64_t SPICE_GNUC_UNUSED consume_int64(uint8_t **ptr)$/;"	f	file:
consume_int64	spice-common/common/generated_server_demarshallers.c	/^static int64_t SPICE_GNUC_UNUSED consume_int64(uint8_t **ptr)$/;"	f	file:
consume_int8	spice-common/common/generated_client_demarshallers.c	/^static int8_t SPICE_GNUC_UNUSED consume_int8(uint8_t **ptr)$/;"	f	file:
consume_int8	spice-common/common/generated_client_demarshallers1.c	/^static int8_t SPICE_GNUC_UNUSED consume_int8(uint8_t **ptr)$/;"	f	file:
consume_int8	spice-common/common/generated_server_demarshallers.c	/^static int8_t SPICE_GNUC_UNUSED consume_int8(uint8_t **ptr)$/;"	f	file:
consume_uint16	spice-common/common/generated_client_demarshallers.c	/^static uint16_t SPICE_GNUC_UNUSED consume_uint16(uint8_t **ptr)$/;"	f	file:
consume_uint16	spice-common/common/generated_client_demarshallers1.c	/^static uint16_t SPICE_GNUC_UNUSED consume_uint16(uint8_t **ptr)$/;"	f	file:
consume_uint16	spice-common/common/generated_server_demarshallers.c	/^static uint16_t SPICE_GNUC_UNUSED consume_uint16(uint8_t **ptr)$/;"	f	file:
consume_uint32	spice-common/common/generated_client_demarshallers.c	/^static uint32_t SPICE_GNUC_UNUSED consume_uint32(uint8_t **ptr)$/;"	f	file:
consume_uint32	spice-common/common/generated_client_demarshallers1.c	/^static uint32_t SPICE_GNUC_UNUSED consume_uint32(uint8_t **ptr)$/;"	f	file:
consume_uint32	spice-common/common/generated_server_demarshallers.c	/^static uint32_t SPICE_GNUC_UNUSED consume_uint32(uint8_t **ptr)$/;"	f	file:
consume_uint64	spice-common/common/generated_client_demarshallers.c	/^static uint64_t SPICE_GNUC_UNUSED consume_uint64(uint8_t **ptr)$/;"	f	file:
consume_uint64	spice-common/common/generated_client_demarshallers1.c	/^static uint64_t SPICE_GNUC_UNUSED consume_uint64(uint8_t **ptr)$/;"	f	file:
consume_uint64	spice-common/common/generated_server_demarshallers.c	/^static uint64_t SPICE_GNUC_UNUSED consume_uint64(uint8_t **ptr)$/;"	f	file:
consume_uint8	spice-common/common/generated_client_demarshallers.c	/^static uint8_t SPICE_GNUC_UNUSED consume_uint8(uint8_t **ptr)$/;"	f	file:
consume_uint8	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t SPICE_GNUC_UNUSED consume_uint8(uint8_t **ptr)$/;"	f	file:
consume_uint8	spice-common/common/generated_server_demarshallers.c	/^static uint8_t SPICE_GNUC_UNUSED consume_uint8(uint8_t **ptr)$/;"	f	file:
container_of	glib/continuation.h	51;"	d
contains_extra_size	spice-common/python_modules/ptypes.py	/^    def contains_extra_size(self):$/;"	m	class:ArrayType
contains_extra_size	spice-common/python_modules/ptypes.py	/^    def contains_extra_size(self):$/;"	m	class:ContainerType
contains_extra_size	spice-common/python_modules/ptypes.py	/^    def contains_extra_size(self):$/;"	m	class:Member
contains_extra_size	spice-common/python_modules/ptypes.py	/^    def contains_extra_size(self):$/;"	m	class:PointerType
contains_extra_size	spice-common/python_modules/ptypes.py	/^    def contains_extra_size(self):$/;"	m	class:Switch
contains_extra_size	spice-common/python_modules/ptypes.py	/^    def contains_extra_size(self):$/;"	m	class:Type
contains_member	spice-common/python_modules/ptypes.py	/^    def contains_member(self, member):$/;"	m	class:ContainerType
contains_member	spice-common/python_modules/ptypes.py	/^    def contains_member(self, member):$/;"	m	class:Member
contains_member	spice-common/python_modules/ptypes.py	/^    def contains_member(self, member):$/;"	m	class:Switch
contains_member	spice-common/python_modules/ptypes.py	/^    def contains_member(self, member):$/;"	m	class:Type
content	spice-common/spice_codegen.py	/^    content = writer.getvalue()$/;"	v
content	spice-common/spice_codegen.py	/^    content = writer.header.getvalue()$/;"	v
context	glib/channel-usbredir.c	/^    libusb_context *context;$/;"	m	struct:_SpiceUsbredirChannelPrivate	file:
context	glib/spice-pulse.c	/^    pa_context              *context;$/;"	m	struct:_SpicePulsePrivate	file:
context	glib/usb-device-manager.c	/^    libusb_context *context;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
context	win32/win32_spice_interface_priv.h	/^   GMainContext *context;$/;"	m	struct:main_loop_context
context_id	ffmpeg/include/libavcodec/vaapi.h	/^    uint32_t context_id;$/;"	m	struct:vaapi_context
context_model	ffmpeg/include/libavcodec/avcodec.h	/^    int context_model;$/;"	m	struct:AVCodecContext
context_state_callback	glib/spice-pulse.c	/^static void context_state_callback(pa_context *c, void *userdata)$/;"	f	file:
context_state_names	glib/spice-pulse.c	/^static const char *context_state_names[] = {$/;"	v	file:
continuation	glib/continuation.h	/^struct continuation$/;"	s
continuation_trampoline	glib/continuation.c	/^static void continuation_trampoline(int i0, int i1)$/;"	f	file:
control_message	ffmpeg/include/libavformat/avformat.h	/^    int (*control_message)(struct AVFormatContext *s, int type,$/;"	m	struct:AVOutputFormat
control_message_cb	ffmpeg/include/libavformat/avformat.h	/^    av_format_control_message control_message_cb;$/;"	m	struct:AVFormatContext
convergence_duration	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t convergence_duration;$/;"	m	struct:AVCodecParserContext
convergence_duration	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t convergence_duration;$/;"	m	struct:AVPacket
convert	win32/win32-spice-widget-priv.h	/^    bool                    convert;$/;"	m	struct:_SpiceDisplayPrivate
convert_rgb_to_bgr	glib/decode-jpeg.c	/^static void convert_rgb_to_bgr(uint8_t* src, uint8_t* dest, int width)$/;"	f	file:
convert_rgb_to_bgrx	glib/decode-jpeg.c	/^static void convert_rgb_to_bgrx(uint8_t* src, uint8_t* dest, int width)$/;"	f	file:
converter_rgb_t	glib/decode-jpeg.c	/^typedef void (*converter_rgb_t)(uint8_t* src, uint8_t* dest, int width);$/;"	t	file:
copy	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLCopy copy;$/;"	m	union:QXLCompatDrawable::__anon75
copy	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLCopy copy;$/;"	m	union:QXLDrawable::__anon76
copy_bitmap	spice-common/common/gdi_canvas.c	/^static void copy_bitmap(const uint8_t *src_image, int height, int src_stride,$/;"	f	file:
copy_bitmap_alpha	spice-common/common/gdi_canvas.c	/^static void copy_bitmap_alpha(const uint8_t *src_alpha, int height, int width, int src_stride,$/;"	f	file:
copy_bits	spice-common/common/canvas_base.h	/^    void (*copy_bits)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpicePoint *src_pos);$/;"	m	struct:__anon145
copy_bits	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLCopyBits copy_bits;$/;"	m	union:QXLCompatDrawable::__anon75
copy_bits	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLCopyBits copy_bits;$/;"	m	union:QXLDrawable::__anon76
copy_bits_down	spice-common/common/pixman_utils.c	/^static void copy_bits_down(uint8_t *data, const int stride, int bpp,$/;"	f	file:
copy_bits_same_line	spice-common/common/pixman_utils.c	/^static void copy_bits_same_line(uint8_t *data, const int stride, int bpp,$/;"	f	file:
copy_bits_up	spice-common/common/pixman_utils.c	/^static void copy_bits_up(uint8_t *data, const int stride, int bpp,$/;"	f	file:
copy_opposite_image	spice-common/common/gl_canvas.c	/^static inline uint8_t *copy_opposite_image(GLCanvas *canvas, void *data, int stride, int height)$/;"	f	file:
copy_region	spice-common/common/canvas_base.h	/^    void (*copy_region)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
copy_region	spice-common/common/sw_canvas.c	/^static void copy_region(SpiceCanvas *spice_canvas,$/;"	f	file:
copy_rop_16_func_t	spice-common/common/pixman_utils.c	/^typedef void (*copy_rop_16_func_t)(uint16_t *ptr, uint16_t *src, int len);$/;"	t	file:
copy_rop_32_func_t	spice-common/common/pixman_utils.c	/^typedef void (*copy_rop_32_func_t)(uint32_t *ptr, uint32_t *src, int len);$/;"	t	file:
copy_rop_8_func_t	spice-common/common/pixman_utils.c	/^typedef void (*copy_rop_8_func_t)(uint8_t *ptr, uint8_t *src, int len);$/;"	t	file:
corelate	spice-common/common/quic_tmpl.c	/^static inline void FNAME(corelate)(const PIXEL *prev, PIXEL *curr, const BYTE corelate,$/;"	f	file:
corelate_0	spice-common/common/quic_tmpl.c	/^static inline void FNAME(corelate_0)(PIXEL *curr, const BYTE corelate,$/;"	f	file:
corelate_init	spice-common/common/quic.c	/^static void corelate_init(QuicFamily *family, int bpc)$/;"	f	file:
cork_op	glib/spice-pulse.c	/^    pa_operation            *cork_op;$/;"	m	struct:stream	file:
coroutine	glib/coroutine.h	/^struct coroutine$/;"	s
coroutine	glib/gio-coroutine.h	/^    struct coroutine coroutine;$/;"	m	struct:_GCoroutine	typeref:struct:_GCoroutine::coroutine
coroutine	glib/spice-channel-priv.h	/^    GCoroutine                  coroutine;$/;"	m	struct:_SpiceChannelPrivate
coroutine	glib/vmcstream.c	/^    struct coroutine *coroutine;$/;"	m	struct:_SpiceVmcInputStream	typeref:struct:_SpiceVmcInputStream::coroutine	file:
coroutine_init	glib/coroutine_ucontext.c	/^void coroutine_init(struct coroutine *co)$/;"	f
coroutine_init	glib/coroutine_winfibers.c	/^void coroutine_init(struct coroutine *co)$/;"	f
coroutine_is_main	glib/coroutine_ucontext.c	/^gboolean coroutine_is_main(struct coroutine *co)$/;"	f
coroutine_is_main	glib/coroutine_winfibers.c	/^gboolean coroutine_is_main(struct coroutine *co)$/;"	f
coroutine_release	glib/coroutine_ucontext.c	/^int coroutine_release(struct coroutine *co)$/;"	f
coroutine_release	glib/coroutine_winfibers.c	/^int coroutine_release(struct coroutine *co)$/;"	f
coroutine_self	glib/coroutine_ucontext.c	/^struct coroutine *coroutine_self(void)$/;"	f
coroutine_self	glib/coroutine_winfibers.c	/^struct coroutine *coroutine_self(void)$/;"	f
coroutine_self_is_main	glib/coroutine.h	/^static inline gboolean coroutine_self_is_main(void) {$/;"	f
coroutine_swap	glib/coroutine_ucontext.c	/^void *coroutine_swap(struct coroutine *from, struct coroutine *to, void *arg)$/;"	f
coroutine_swap	glib/coroutine_winfibers.c	/^void *coroutine_swap(struct coroutine *from, struct coroutine *to, void *arg)$/;"	f
coroutine_trampoline	glib/coroutine_ucontext.c	/^static void coroutine_trampoline(struct continuation *cc)$/;"	f	file:
coroutine_trampoline	glib/coroutine_winfibers.c	/^static void WINAPI coroutine_trampoline(LPVOID lpParameter)$/;"	f	file:
coroutine_yield	glib/coroutine_ucontext.c	/^void *coroutine_yield(void *arg)$/;"	f
coroutine_yield	glib/coroutine_winfibers.c	/^void *coroutine_yield(void *arg)$/;"	f
coroutine_yieldto	glib/coroutine_ucontext.c	/^void *coroutine_yieldto(struct coroutine *to, void *arg)$/;"	f
coroutine_yieldto	glib/coroutine_winfibers.c	/^void *coroutine_yieldto(struct coroutine *to, void *arg)$/;"	f
correct_ts_overflow	ffmpeg/include/libavformat/avformat.h	/^    unsigned int correct_ts_overflow;$/;"	m	struct:AVFormatContext
correlate_row	spice-common/common/quic.c	/^    BYTE *correlate_row;$/;"	m	struct:Channel	file:
correlate_row_width	spice-common/common/quic.c	/^    int correlate_row_width;$/;"	m	struct:Channel	file:
count	glib/vmcstream.c	/^    gsize count;$/;"	m	struct:_SpiceVmcInputStream	file:
count	spice-common/common/draw.h	/^    uint32_t count;$/;"	m	struct:SpicePathSeg
count	spice-common/common/glc.c	/^    int count;$/;"	m	struct:PathSegment	file:
count	spice-common/common/lines.c	/^    int count;                  \/* Number of *Spans actually in group   *\/$/;"	m	struct:__anon148	file:
count	spice-common/common/lines.c	/^    int count;                  \/* number of spans                  *\/$/;"	m	struct:__anon147	file:
count	spice-common/common/messages.h	/^    uint16_t count;$/;"	m	struct:SpiceMsgDisplayMonitorsConfig
count	spice-common/common/messages.h	/^    uint16_t count;$/;"	m	struct:SpiceResourceList
count	spice-common/spice-protocol/spice/qxl_dev.h	/^        uint16_t count;$/;"	m	struct:QXLRom::__anon68
count	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t count;$/;"	m	struct:QXLMonitorsConfig
count	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t count;$/;"	m	struct:QXLPathSeg
counters	spice-common/common/quic.c	/^    COUNTER *counters;$/;"	m	struct:FamilyStat	file:
create_bitmap	spice-common/common/gdi_canvas.c	/^static uint8_t *create_bitmap(HBITMAP *bitmap, HBITMAP *prev_bitmap, HDC *dc,$/;"	f	file:
create_bitmap_from_pixman	spice-common/common/gdi_canvas.c	/^static uint8_t *create_bitmap_from_pixman(HBITMAP *bitmap, HBITMAP *prev_bitmap, HDC *dc,$/;"	f	file:
create_bmp_h	win32/create_bmp.h	2;"	d
create_canvas	glib/channel-display.c	/^static int create_canvas(SpiceChannel *channel, display_surface *surface)$/;"	f	file:
create_compatible_dc	glib/channel-display.c	/^static HDC create_compatible_dc(void)$/;"	f	file:
create_compatible_dc	spice-common/common/canvas_base.c	/^static HDC create_compatible_dc()$/;"	f	file:
create_device_capabilities	ffmpeg/include/libavformat/avformat.h	/^    int (*create_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVInputFormat
create_device_capabilities	ffmpeg/include/libavformat/avformat.h	/^    int (*create_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVOutputFormat
create_playback	glib/spice-pulse.c	/^static void create_playback(SpicePulse *pulse)$/;"	f	file:
create_record	glib/spice-pulse.c	/^static void create_record(SpicePulse *pulse)$/;"	f	file:
create_request	glib/wocky-http-proxy.c	/^create_request (GProxyAddress *proxy_address, gboolean *has_cred)$/;"	f	file:
create_spice_window	win32/win32-spicy.c	/^static SpiceWindow *create_spice_window(spice_connection *conn, SpiceChannel *channel, int id)$/;"	f	file:
create_surface	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLSurfaceCreate create_surface;$/;"	m	struct:QXLRam
credentials	spice-common/spice-protocol/spice/controller_prot.h	/^    uint64_t credentials;$/;"	m	struct:ControllerInit
credentials	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint64_t credentials;$/;"	m	struct:FrgMenuInit
cs	win32/win32_spice_interface.c	/^    gchar cs[1024 * 2];$/;"	m	struct:SpiceConnectARGS	file:
ctrl_key_to_gtk_key	win32/virt-viewer-util.c	/^ctrl_key_to_gtk_key(const gchar *key)$/;"	f	file:
ctx	glib/spice-channel-priv.h	/^    SSL_CTX                     *ctx;$/;"	m	struct:_SpiceChannelPrivate
ctx	glib/win-usb-dev.c	/^    libusb_context *ctx;$/;"	m	struct:_GUdevClientPrivate	file:
ctx_flags	ffmpeg/include/libavformat/avformat.h	/^    int ctx_flags;$/;"	m	struct:AVFormatContext
cur_buf_copy	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterBufferRef *cur_buf_copy;$/;"	m	struct:AVFilterLink
cur_dash	spice-common/common/glc.c	/^    int cur_dash;$/;"	m	struct:LineDash	file:
cur_drops_seq_stats	glib/channel-display-priv.h	/^    drops_sequence_stats cur_drops_seq_stats;$/;"	m	struct:display_stream
cur_dts	ffmpeg/include/libavformat/avformat.h	/^    int64_t cur_dts;$/;"	m	struct:AVStream
cur_frame_dts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t cur_frame_dts[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_end	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t cur_frame_end[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_offset	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t cur_frame_offset[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_pos	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t cur_frame_pos[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_pts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t cur_frame_pts[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_start_index	ffmpeg/include/libavcodec/avcodec.h	/^    int cur_frame_start_index;$/;"	m	struct:AVCodecParserContext
cur_offset	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t cur_offset; \/* current offset$/;"	m	struct:AVCodecParserContext
current	glib/coroutine_ucontext.c	/^static struct coroutine *current;$/;"	v	typeref:struct:coroutine	file:
current	glib/coroutine_winfibers.c	/^static struct coroutine *current = NULL;$/;"	v	typeref:struct:coroutine	file:
current_buffer	spice-common/common/marshaller.c	/^    MarshallerBuffer *current_buffer;$/;"	m	struct:SpiceMarshallerData	file:
current_buffer_item	spice-common/common/marshaller.c	/^    MarshallerItem *current_buffer_item;$/;"	m	struct:SpiceMarshallerData	file:
current_buffer_position	spice-common/common/marshaller.c	/^    size_t current_buffer_position;$/;"	m	struct:SpiceMarshallerData	file:
current_chunk	spice-common/common/canvas_base.c	/^    uint32_t current_chunk;$/;"	m	struct:QuicData	file:
current_mode	spice-common/common/messages.h	/^    uint32_t current_mode;$/;"	m	struct:SpiceMsgMainMouseMode
current_mouse_mode	spice-common/common/messages.h	/^    uint32_t current_mouse_mode;$/;"	m	struct:SpiceMsgMainInit
current_path	spice-common/common/glc.c	/^    Path *current_path;$/;"	m	struct:InternalPath	file:
current_pts	ffmpeg/include/libavfilter/avfilter.h	/^    int64_t current_pts;$/;"	m	struct:AVFilterLink
current_segment	spice-common/common/glc.c	/^    PathSegment *current_segment;$/;"	m	struct:InternalPath	file:
cursor	spice-common/common/messages.h	/^    SpiceCursor cursor;$/;"	m	struct:SpiceMsgCursorInit
cursor	spice-common/common/messages.h	/^    SpiceCursor cursor;$/;"	m	struct:SpiceMsgCursorSet
cursor	win32/win32-spice-widget-priv.h	/^    SpiceCursorChannel      *cursor;$/;"	m	struct:_SpiceDisplayPrivate
cursor_handle_hide	glib/channel-cursor.c	/^static void cursor_handle_hide(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
cursor_handle_init	glib/channel-cursor.c	/^static void cursor_handle_init(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
cursor_handle_inval_all	glib/channel-cursor.c	/^static void cursor_handle_inval_all(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
cursor_handle_inval_one	glib/channel-cursor.c	/^static void cursor_handle_inval_one(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
cursor_handle_move	glib/channel-cursor.c	/^static void cursor_handle_move(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
cursor_handle_reset	glib/channel-cursor.c	/^static void cursor_handle_reset(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
cursor_handle_set	glib/channel-cursor.c	/^static void cursor_handle_set(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
cursor_handle_trail	glib/channel-cursor.c	/^static void cursor_handle_trail(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
cursor_hide	glib/channel-cursor.h	/^    void (*cursor_hide)(SpiceCursorChannel *channel);$/;"	m	struct:_SpiceCursorChannelClass
cursor_hide	win32/win32-spice-widget.c	/^static void cursor_hide(SpiceCursorChannel *channel, gpointer data) $/;"	f	file:
cursor_move	glib/channel-cursor.h	/^    void (*cursor_move)(SpiceCursorChannel *channel, gint x, gint y);$/;"	m	struct:_SpiceCursorChannelClass
cursor_move	win32/win32-spice-widget.c	/^static void cursor_move(SpiceCursorChannel *channel, gint x, gint y, gpointer data) $/;"	f	file:
cursor_reset	glib/channel-cursor.h	/^    void (*cursor_reset)(SpiceCursorChannel *channel);$/;"	m	struct:_SpiceCursorChannelClass
cursor_reset	win32/win32-spice-widget.c	/^static void cursor_reset(SpiceCursorChannel *channel, gpointer data)$/;"	f	file:
cursor_ring	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLCursorRing cursor_ring;$/;"	m	struct:QXLRam
cursor_set	glib/channel-cursor.h	/^    void (*cursor_set)(SpiceCursorChannel *channel, gint width, gint height,$/;"	m	struct:_SpiceCursorChannelClass
cursor_set	win32/win32-spice-widget.c	/^static void cursor_set(SpiceCursorChannel *channel,                                                                                                                   $/;"	f	file:
cursor_type_to_string	glib/channel-cursor.c	/^static const char *cursor_type_to_string(int type)$/;"	f	file:
cursors	glib/channel-cursor.c	/^    display_cache               *cursors;$/;"	m	struct:_SpiceCursorChannelPrivate	file:
cutoff	ffmpeg/include/libavcodec/avcodec.h	/^    int cutoff;$/;"	m	struct:AVCodecContext
cv_buffer	ffmpeg/include/libavcodec/vda.h	/^    CVPixelBufferRef    cv_buffer;$/;"	m	struct:vda_context
cv_pix_fmt_type	ffmpeg/include/libavcodec/vda.h	/^    OSType              cv_pix_fmt_type;$/;"	m	struct:vda_context
cv_pix_fmt_type	ffmpeg/include/libavcodec/vda.h	/^    OSType cv_pix_fmt_type;$/;"	m	struct:AVVDAContext
cv_pix_fmt_type	ffmpeg/include/libavcodec/videotoolbox.h	/^    OSType cv_pix_fmt_type;$/;"	m	struct:AVVideotoolboxContext
cvtInt	spice-common/python_modules/spice_parser.py	/^cvtInt = lambda toks: int(toks[0])$/;"	v
d	spice-common/common/quic.c	/^    BYTE d;$/;"	m	struct:four_bytes_pixel_t	file:
dark_masking	ffmpeg/include/libavcodec/avcodec.h	/^    float dark_masking;$/;"	m	struct:AVCodecContext
dash	spice-common/common/lines.h	/^    unsigned char *dash;$/;"	m	struct:lineGC
dashOffset	spice-common/common/lines.h	/^    unsigned short dashOffset;$/;"	m	struct:lineGC
dash_pos	spice-common/common/glc.c	/^    double dash_pos;$/;"	m	struct:LineDash	file:
dashes	spice-common/common/glc.c	/^    double *dashes;$/;"	m	struct:LineDash	file:
data	ffmpeg/include/libavcodec/avcodec.h	/^    uint8_t *data;$/;"	m	struct:AVPacket
data	ffmpeg/include/libavcodec/avcodec.h	/^    uint8_t *data;$/;"	m	struct:AVPacketSideData
data	ffmpeg/include/libavcodec/avcodec.h	/^    uint8_t *data[AV_NUM_DATA_POINTERS];    \/\/\/< pointers to the image data planes$/;"	m	struct:AVPicture
data	ffmpeg/include/libavfilter/avfilter.h	/^    uint8_t *data[8];           \/\/\/< buffer data for each plane\/channel$/;"	m	struct:AVFilterBuffer
data	ffmpeg/include/libavfilter/avfilter.h	/^    uint8_t *data[8];           \/\/\/< picture\/audio data for each plane$/;"	m	struct:AVFilterBufferRef
data	ffmpeg/include/libavutil/buffer.h	/^    uint8_t *data;$/;"	m	struct:AVBufferRef
data	ffmpeg/include/libavutil/frame.h	/^    uint8_t *data;$/;"	m	struct:AVFrameSideData
data	ffmpeg/include/libavutil/frame.h	/^    uint8_t *data[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
data	glib/channel-cursor.c	/^    guint32                     data[];$/;"	m	struct:display_cursor	file:
data	glib/channel-display-priv.h	/^    uint8_t                     *data;$/;"	m	struct:display_surface
data	glib/channel-display.h	/^    guint8 *data;$/;"	m	struct:_SpiceDisplayPrimary
data	glib/coroutine.h	/^	void *data;$/;"	m	struct:coroutine
data	glib/decode-glz.c	/^    uint8_t                 *data;$/;"	m	struct:glz_image	file:
data	glib/gio-coroutine.c	/^    gpointer data;$/;"	m	struct:_GConditionWaitSource	file:
data	glib/spice-channel-priv.h	/^    uint8_t               *data;$/;"	m	struct:_SpiceMsgIn
data	spice-common/common/canvas_utils.h	/^    uint8_t *data;$/;"	m	struct:PixmanData
data	spice-common/common/draw.h	/^    SpiceChunks *data;$/;"	m	struct:SpiceBitmap
data	spice-common/common/draw.h	/^    SpiceChunks *data;$/;"	m	struct:SpiceJPEGAlphaData
data	spice-common/common/draw.h	/^    SpiceChunks *data;$/;"	m	struct:SpiceLZPLTData
data	spice-common/common/draw.h	/^    SpiceChunks *data;$/;"	m	struct:SpiceQUICData
data	spice-common/common/draw.h	/^    SpiceChunks *data;$/;"	m	struct:SpiceZlibGlzRGBData
data	spice-common/common/draw.h	/^    uint8_t data[0];$/;"	m	struct:SpiceRasterGlyph
data	spice-common/common/marshaller.c	/^    SpiceMarshallerData *data;$/;"	m	struct:SpiceMarshaller	file:
data	spice-common/common/marshaller.c	/^    uint8_t *data;$/;"	m	struct:__anon135	file:
data	spice-common/common/marshaller.c	/^    uint8_t data[MARSHALLER_BUFFER_SIZE];$/;"	m	struct:MarshallerBuffer	file:
data	spice-common/common/mem.h	/^    uint8_t *data;$/;"	m	struct:SpiceChunk
data	spice-common/common/messages.h	/^    SpiceAlphaBlend data;$/;"	m	struct:SpiceMsgDisplayDrawAlphaBlend
data	spice-common/common/messages.h	/^    SpiceBlackness data;$/;"	m	struct:SpiceMsgDisplayDrawBlackness
data	spice-common/common/messages.h	/^    SpiceComposite data;$/;"	m	struct:SpiceMsgDisplayDrawComposite
data	spice-common/common/messages.h	/^    SpiceCopy data;$/;"	m	struct:SpiceMsgDisplayDrawCopy
data	spice-common/common/messages.h	/^    SpiceFill data;$/;"	m	struct:SpiceMsgDisplayDrawFill
data	spice-common/common/messages.h	/^    SpiceInvers data;$/;"	m	struct:SpiceMsgDisplayDrawInvers
data	spice-common/common/messages.h	/^    SpiceOpaque data;$/;"	m	struct:SpiceMsgDisplayDrawOpaque
data	spice-common/common/messages.h	/^    SpiceRop3 data;$/;"	m	struct:SpiceMsgDisplayDrawRop3
data	spice-common/common/messages.h	/^    SpiceStroke data;$/;"	m	struct:SpiceMsgDisplayDrawStroke
data	spice-common/common/messages.h	/^    SpiceText data;$/;"	m	struct:SpiceMsgDisplayDrawText
data	spice-common/common/messages.h	/^    SpiceTransparent data;$/;"	m	struct:SpiceMsgDisplayDrawTransparent
data	spice-common/common/messages.h	/^    SpiceWhiteness data;$/;"	m	struct:SpiceMsgDisplayDrawWhiteness
data	spice-common/common/messages.h	/^    uint8_t *data;$/;"	m	struct:SpiceCursor
data	spice-common/common/messages.h	/^    uint8_t *data;$/;"	m	struct:SpiceMsgPlaybackMode
data	spice-common/common/messages.h	/^    uint8_t *data;$/;"	m	struct:SpiceMsgPlaybackPacket
data	spice-common/common/messages.h	/^    uint8_t data[0];$/;"	m	struct:SpiceMsgData
data	spice-common/common/messages.h	/^    uint8_t data[0];$/;"	m	struct:SpiceMsgDisplayStreamData
data	spice-common/common/messages.h	/^    uint8_t data[0];$/;"	m	struct:SpiceMsgDisplayStreamDataSized
data	spice-common/common/messages.h	/^    uint8_t data[0];$/;"	m	struct:SpiceMsgSmartcard
data	spice-common/common/messages.h	/^    uint8_t data[0];$/;"	m	struct:SpiceMsgTunnelIpInfo
data	spice-common/common/messages.h	/^    uint8_t data[0];$/;"	m	struct:SpiceMsgTunnelSocketData
data	spice-common/common/messages.h	/^    uint8_t data[0];$/;"	m	struct:SpiceMsgcTunnelSocketData
data	spice-common/common/messages.h	/^    void *data;$/;"	m	struct:SpiceMsgPing
data	spice-common/spice-protocol/spice/controller_prot.h	/^    uint8_t data[0];$/;"	m	struct:ControllerData
data	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL data; \/\/data[0] ?$/;"	m	struct:QXLBitmap
data	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL data;$/;"	m	struct:QXLClip
data	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL data;$/;"	m	struct:QXLCommand
data	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL data;$/;"	m	struct:QXLSurface
data	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t data[0];$/;"	m	struct:QXLDataChunk
data	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t data[0];$/;"	m	struct:QXLMessage
data	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t data[0];$/;"	m	struct:QXLQUICData
data	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t data[0];$/;"	m	struct:QXLRasterGlyph
data	spice-common/spice-protocol/spice/vd_agent.h	/^    uint8_t data[0];$/;"	m	struct:VDAgentClipboard
data	spice-common/spice-protocol/spice/vd_agent.h	/^    uint8_t data[0];$/;"	m	struct:VDAgentMessage
data	spice-common/spice-protocol/spice/vd_agent.h	/^   uint8_t data[0];$/;"	m	struct:VDAgentFileXferDataMessage
data	spice-common/spice-protocol/spice/vd_agent.h	/^   uint8_t data[0];$/;"	m	struct:VDAgentFileXferStartMessage
data	spice-common/spice-protocol/spice/vdi_dev.h	/^    uint8_t data[512 - 2 * sizeof(uint32_t)];$/;"	m	struct:VDIPortPacket
data	win32/win32-spice-widget-priv.h	/^    gpointer                data; \/* converted if necessary to 32 bits *\/$/;"	m	struct:_SpiceDisplayPrivate
data	win32/win32_spice_interface_types.h	/^   unsigned char *data;$/;"	m	struct:SByteArray
data	win32/win32_spice_interface_types.h	/^   unsigned char *data;$/;"	m	struct:SPICE_CursorSet
data_blocks	ffmpeg/include/libavcodec/xvmc.h	/^    short*          data_blocks;$/;"	m	struct:xvmc_pix_fmt
data_codec	ffmpeg/include/libavformat/avformat.h	/^    AVCodec *data_codec;$/;"	m	struct:AVFormatContext
data_codec	ffmpeg/include/libavformat/avformat.h	/^    enum AVCodecID data_codec; \/**< default data codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
data_codec_id	ffmpeg/include/libavformat/avformat.h	/^    enum AVCodecID data_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
data_in	glib/wocky-http-proxy.c	/^  GDataInputStream *data_in;$/;"	m	struct:__anon7	file:
data_len	spice-common/common/messages.h	/^    uint32_t data_len;$/;"	m	struct:SpiceMsgPing
data_origin	win32/win32-spice-widget-priv.h	/^    gpointer                data_origin; \/* the original display image data *\/$/;"	m	struct:_SpiceDisplayPrivate
data_read_cb	glib/channel-webdav.c	/^static void data_read_cb(GObject *source_object,$/;"	f	file:
data_size	spice-common/common/draw.h	/^    uint32_t data_size;$/;"	m	struct:SpiceJPEGAlphaData
data_size	spice-common/common/draw.h	/^    uint32_t data_size;$/;"	m	struct:SpiceLZPLTData
data_size	spice-common/common/draw.h	/^    uint32_t data_size;$/;"	m	struct:SpiceQUICData
data_size	spice-common/common/draw.h	/^    uint32_t data_size;$/;"	m	struct:SpiceZlibGlzRGBData
data_size	spice-common/common/mem.h	/^    uint32_t     data_size;$/;"	m	struct:SpiceChunks
data_size	spice-common/common/messages.h	/^    uint32_t data_size;$/;"	m	struct:SpiceCursor
data_size	spice-common/common/messages.h	/^    uint32_t data_size;$/;"	m	struct:SpiceMsgData
data_size	spice-common/common/messages.h	/^    uint32_t data_size;$/;"	m	struct:SpiceMsgDisplayStreamData
data_size	spice-common/common/messages.h	/^    uint32_t data_size;$/;"	m	struct:SpiceMsgDisplayStreamDataSized
data_size	spice-common/common/messages.h	/^    uint32_t data_size;$/;"	m	struct:SpiceMsgPlaybackMode
data_size	spice-common/common/messages.h	/^    uint32_t data_size;$/;"	m	struct:SpiceMsgPlaybackPacket
data_size	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t data_size;$/;"	m	struct:QXLCursor
data_size	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t data_size;$/;"	m	struct:QXLDataChunk
data_size	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t data_size;$/;"	m	struct:QXLPath
data_size	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t data_size;$/;"	m	struct:QXLQUICData
data_size	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t data_size;$/;"	m	struct:QXLString
dbl	ffmpeg/include/libavutil/opt.h	/^        double dbl;$/;"	m	union:AVOption::__anon38
dc	glib/channel-display.c	/^    HDC dc;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
dc	spice-common/common/canvas_base.c	/^    HDC dc;$/;"	m	struct:CanvasBase	file:
dc	spice-common/common/canvas_utils.h	/^    HDC dc;$/;"	m	struct:LzDecodeUsrData
dc	spice-common/common/gdi_canvas.c	/^    HDC dc;$/;"	m	struct:BitmapData	file:
dc	spice-common/common/gdi_canvas.c	/^    HDC dc;$/;"	m	struct:GdiCanvas	file:
dct_algo	ffmpeg/include/libavcodec/avcodec.h	/^    int dct_algo;$/;"	m	struct:AVCodecContext
dct_coeff	ffmpeg/include/libavutil/frame.h	/^    short *dct_coeff;$/;"	m	struct:AVFrame
debug	ffmpeg/include/libavcodec/avcodec.h	/^    int debug;$/;"	m	struct:AVCodecContext
debug	ffmpeg/include/libavformat/avformat.h	/^    int debug;$/;"	m	struct:AVFormatContext
debug_level	spice-common/common/log.c	/^static int debug_level = -1;$/;"	v	file:
debug_mv	ffmpeg/include/libavcodec/avcodec.h	/^    int debug_mv;$/;"	m	struct:AVCodecContext
debug_once	glib/spice-util.c	/^static GOnce debug_once = G_ONCE_INIT;$/;"	v	file:
declare	spice-common/python_modules/demarshal.py	/^    def declare(self, writer):$/;"	m	class:DemarshallingDestination
declare	spice-common/python_modules/demarshal.py	/^    def declare(self, writer):$/;"	m	class:RootDemarshallingDestination
declare	spice-common/python_modules/marshal.py	/^    def declare(self, writer):$/;"	m	class:MarshallingSource
declare	spice-common/python_modules/marshal.py	/^    def declare(self, writer):$/;"	m	class:RootMarshallingSource
decode	ffmpeg/include/libavcodec/avcodec.h	/^    int (*decode)(AVCodecContext *, void *outdata, int *outdata_size, AVPacket *avpkt);$/;"	m	struct:AVCodec
decode	glib/decode-glz-tmpl.c	/^static size_t FNAME(decode)(SpiceGlzDecoderWindow *window,$/;"	f	file:
decode	glib/decode-glz.c	/^static void decode(SpiceGlzDecoder *decoder,$/;"	f	file:
decode	glib/decode-jpeg.c	/^static void decode(SpiceJpegDecoder *decoder,$/;"	f	file:
decode	glib/decode-zlib.c	/^static void decode(SpiceZlibDecoder *decoder,$/;"	f	file:
decode	spice-common/common/canvas_base.h	/^    void (*decode)(SpiceGlzDecoder *decoder,$/;"	m	struct:__anon143
decode	spice-common/common/canvas_base.h	/^    void (*decode)(SpiceJpegDecoder *decoder,$/;"	m	struct:SpiceJpegDecoderOps
decode	spice-common/common/canvas_base.h	/^    void (*decode)(SpiceZlibDecoder *decoder,$/;"	m	struct:__anon144
decode	spice-common/common/lz.c	/^static inline uint8_t decode(Encoder *encoder)$/;"	f	file:
decode_32	glib/decode-glz.c	/^static uint32_t decode_32(GlibGlzDecoder *d)$/;"	f	file:
decode_32	spice-common/common/lz.c	/^static inline uint32_t decode_32(Encoder *encoder)$/;"	f	file:
decode_64	glib/decode-glz.c	/^static uint64_t decode_64(GlibGlzDecoder *d)$/;"	f	file:
decode_channel_run	spice-common/common/quic.c	/^static int decode_channel_run(Encoder *encoder, Channel *channel)$/;"	f	file:
decode_data	spice-common/common/canvas_base.c	/^    LzDecodeUsrData decode_data;$/;"	m	struct:GlzData	file:
decode_data	spice-common/common/canvas_base.c	/^    LzDecodeUsrData decode_data;$/;"	m	struct:LzData	file:
decode_eat32bits	spice-common/common/quic.c	/^static inline void decode_eat32bits(Encoder *encoder)$/;"	f	file:
decode_eatbits	spice-common/common/quic.c	/^static inline void decode_eatbits(Encoder *encoder, int len)$/;"	f	file:
decode_error_flags	ffmpeg/include/libavutil/frame.h	/^    int decode_error_flags;$/;"	m	struct:AVFrame
decode_function	glib/decode-glz.c	/^typedef size_t (*decode_function)(SpiceGlzDecoderWindow *window,$/;"	t	file:
decode_header	glib/decode-glz.c	/^static void decode_header(GlibGlzDecoder *d)$/;"	f	file:
decode_mb	ffmpeg/include/libavcodec/avcodec.h	/^    void (*decode_mb)(struct MpegEncContext *s);$/;"	m	struct:AVHWAccel
decode_run	spice-common/common/quic.c	/^static inline unsigned int decode_run(Encoder *encoder)$/;"	f	file:
decode_run	spice-common/common/quic.c	/^static int decode_run(Encoder *encoder)$/;"	f	file:
decode_slice	ffmpeg/include/libavcodec/avcodec.h	/^    int (*decode_slice)(AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size);$/;"	m	struct:AVHWAccel
decoder	ffmpeg/include/libavcodec/d3d11va.h	/^    ID3D11VideoDecoder *decoder;$/;"	m	struct:AVD3D11VAContext
decoder	ffmpeg/include/libavcodec/dxva2.h	/^    IDirectXVideoDecoder *decoder;$/;"	m	struct:dxva_context
decoder	ffmpeg/include/libavcodec/vda.h	/^    VDADecoder          decoder;$/;"	m	struct:vda_context
decoder	ffmpeg/include/libavcodec/vda.h	/^    VDADecoder decoder;$/;"	m	struct:AVVDAContext
decoder	ffmpeg/include/libavcodec/vdpau.h	/^    VdpDecoder decoder;$/;"	m	struct:AVVDPAUContext
decoder	spice-common/common/canvas_base.c	/^    SpiceGlzDecoder *decoder;$/;"	m	struct:GlzData	file:
decompress	spice-common/common/lz_decompress_tmpl.c	/^static size_t FNAME(decompress)(Encoder *encoder, OUT_PIXEL *out_buf, int size)$/;"	f	file:
decorelate	spice-common/common/quic_tmpl.c	/^static inline BYTE FNAME(decorelate)(const PIXEL *const prev, const PIXEL * const curr,$/;"	f	file:
decorelate_0	spice-common/common/quic_tmpl.c	/^static inline BYTE FNAME(decorelate_0)(const PIXEL * const curr, const unsigned int bpc_mask)$/;"	f	file:
decorelate_init	spice-common/common/quic.c	/^static void decorelate_init(QuicFamily *family, int bpc)$/;"	f	file:
default_cursor	glib/channel-cursor.c	/^    gboolean                    default_cursor;$/;"	m	struct:display_cursor	file:
default_device	ffmpeg/include/libavdevice/avdevice.h	/^    int default_device;                  \/**< index of default device or -1 if no default *\/$/;"	m	struct:AVDeviceInfoList
default_pointer_size	spice-common/python_modules/ptypes.py	/^default_pointer_size = 4$/;"	v
default_rop3_test_handler	spice-common/common/rop3.c	/^static void default_rop3_test_handler(void)$/;"	f	file:
default_rop3_with_pattern_handler	spice-common/common/rop3.c	/^static void default_rop3_with_pattern_handler(SPICE_GNUC_UNUSED pixman_image_t *d,$/;"	f	file:
default_rop3_withe_color_handler	spice-common/common/rop3.c	/^static void default_rop3_withe_color_handler(SPICE_GNUC_UNUSED pixman_image_t *d,$/;"	f	file:
default_usb_connect	win32/win32_spice_interface_priv.h	/^   char default_usb_connect[1024];$/;"	m	struct:priv_spice_connection
default_usb_enable	win32/win32_spice_interface_priv.h	/^   int default_usb_enable;$/;"	m	struct:priv_spice_connection
default_usb_on_connect	win32/win32_spice_interface_priv.h	/^   char default_usb_on_connect[1024];$/;"	m	struct:priv_spice_connection
default_val	ffmpeg/include/libavutil/opt.h	/^    } default_val;$/;"	m	struct:AVOption	typeref:union:AVOption::__anon38
defaults	ffmpeg/include/libavcodec/avcodec.h	/^    const AVCodecDefault *defaults;$/;"	m	struct:AVCodec
delay	ffmpeg/include/libavcodec/avcodec.h	/^    int delay;$/;"	m	struct:AVCodecContext
demux	glib/channel-webdav.c	/^    } demux;$/;"	m	struct:_SpiceWebdavChannelPrivate	typeref:struct:_SpiceWebdavChannelPrivate::_demux	file:
demux_to_client	glib/channel-webdav.c	/^static void demux_to_client(SpiceWebdavChannel *self,$/;"	f	file:
demuxing	glib/channel-webdav.c	/^    gboolean demuxing;$/;"	m	struct:_SpiceWebdavChannelPrivate	file:
den	ffmpeg/include/libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
den	ffmpeg/include/libavutil/rational.h	/^    int den; \/\/\/< denominator$/;"	m	struct:AVRational
depth	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t depth;$/;"	m	struct:VDAgentDisplayConfig
depth	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t depth;$/;"	m	struct:VDAgentMonConfig
depth_minus1	ffmpeg/include/libavutil/pixdesc.h	/^    uint16_t depth_minus1 : 4;$/;"	m	struct:AVComponentDescriptor
desc	win32/win32_spice_interface_types.h	/^    char desc[1024];$/;"	m	struct:SPICE_USBAddDev
description	ffmpeg/include/libavfilter/avfilter.h	/^    const char *description;$/;"	m	struct:AVFilter
description	spice-common/common/messages.h	/^    uint64_t description;$/;"	m	struct:SpiceMsgcTunnelAddGenericService
descriptor	spice-common/common/draw.h	/^    SpiceImageDescriptor descriptor;$/;"	m	struct:SpiceImage
descriptor	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLImageDescriptor descriptor;$/;"	m	struct:QXLImage
desktop_integration	glib/spice-session-priv.h	/^    SpiceDesktopIntegration *desktop_integration;$/;"	m	struct:_SpiceSessionPrivate
dest	spice-common/common/generated_client_demarshallers.c	/^    void * *dest;$/;"	m	struct:PointerInfo	file:
dest	spice-common/common/generated_client_demarshallers1.c	/^    void * *dest;$/;"	m	struct:PointerInfo	file:
dest	spice-common/common/generated_server_demarshallers.c	/^    void * *dest;$/;"	m	struct:PointerInfo	file:
dest	spice-common/common/messages.h	/^    SpiceRect dest;$/;"	m	struct:SpiceMsgDisplayStreamCreate
dest	spice-common/common/messages.h	/^    SpiceRect dest;$/;"	m	struct:SpiceMsgDisplayStreamDataSized
dest	spice-common/common/rop3.c	/^ROP3_HANDLERS(DPSDPaoxx, ((*pat & *dest) | *src) ^ *pat ^ *dest, 0xb6);$/;"	v
dest	spice-common/common/rop3.c	/^ROP3_HANDLERS(DPSDPoaxx, ((*pat | *dest) & *src) ^ *pat ^ *dest, 0x92);$/;"	v
dest	spice-common/common/rop3.c	/^ROP3_HANDLERS(DSPDSaoxx, ((*src & *dest) | *pat) ^ *src ^ *dest, 0x9e);$/;"	v
dest	spice-common/common/rop3.c	/^ROP3_HANDLERS(DSPDSoaxx, ((*src | *dest) & *pat) ^ *src ^ *dest, 0x86);$/;"	v
dest_file	spice-common/spice_codegen.py	/^dest_file = args[1]$/;"	v
dest_region	spice-common/common/canvas_base.c	/^    pixman_region32_t dest_region;$/;"	m	struct:__anon121	file:
destroy	spice-common/common/canvas_base.h	/^    void (*destroy)(SpiceCanvas *canvas);$/;"	m	struct:__anon145
destroy_canvas	glib/channel-display.c	/^static void destroy_canvas(display_surface *surface)$/;"	f	file:
destroy_channel	spice-common/common/quic.c	/^static void destroy_channel(Channel *channel)$/;"	f	file:
destroy_spice_window	win32/win32-spicy.c	/^static void destroy_spice_window(spice_connection *conn,SpiceWindow *win)$/;"	f	file:
destroy_stream	glib/channel-display.c	/^static void destroy_stream(SpiceChannel *channel, int id)$/;"	f	file:
destroy_surface	glib/channel-display.c	/^static void destroy_surface(gpointer data)$/;"	f	file:
destruct	ffmpeg/include/libavcodec/avcodec.h	/^    void  (*destruct)(struct AVPacket *);$/;"	m	struct:AVPacket
detail	glib/gio-coroutine.c	/^    GQuark detail;$/;"	m	struct:signal_data	file:
devaddr	glib/usb-device-manager.c	/^    guint8  devaddr;$/;"	m	struct:_SpiceUsbDeviceInfo	file:
device	glib/channel-usbredir.c	/^    libusb_device *device;$/;"	m	struct:_SpiceUsbredirChannelPrivate	file:
device	glib/usb-device-manager.c	/^    SpiceUsbDevice        *device;$/;"	m	struct:_UsbInstallCbInfo	file:
device	glib/usb-device-manager.c	/^    libusb_device *device;$/;"	m	struct:hotplug_idle_cb_args	file:
device	glib/win-usb-driver-install.c	/^    SpiceUsbDevice        *device;$/;"	m	struct:_SpiceWinUsbDriverPrivate	file:
device	win32/win32_spice_interface_types.h	/^    void * device;$/;"	m	struct:SPICE_USBAddDev
device	win32/win32_spice_interface_types.h	/^    void * device;$/;"	m	struct:SPICE_USBRemove
device_added	glib/usb-device-manager.h	/^    void (*device_added) (SpiceUsbDeviceManager *manager,$/;"	m	struct:_SpiceUsbDeviceManagerClass
device_added_cb	win32/win32-spicy.c	/^static void device_added_cb(SpiceUsbDeviceManager *manager, $/;"	f	file:
device_context	ffmpeg/include/libavdevice/avdevice.h	/^    AVFormatContext *device_context;$/;"	m	struct:AVDeviceCapabilitiesQuery
device_data	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t device_data[QXL_CURSUR_DEVICE_DATA_SIZE]; \/\/todo: dynamic size from rom$/;"	m	struct:QXLCursorCmd
device_description	ffmpeg/include/libavdevice/avdevice.h	/^    char *device_description;            \/**< human friendly name *\/$/;"	m	struct:AVDeviceInfo
device_error	glib/channel-usbredir.c	/^static gboolean device_error(gpointer user_data)$/;"	f	file:
device_error	glib/usb-device-manager.h	/^    void (*device_error) (SpiceUsbDeviceManager *manager,$/;"	m	struct:_SpiceUsbDeviceManagerClass
device_error_data	glib/channel-usbredir.c	/^typedef struct device_error_data {$/;"	s	file:
device_error_data	glib/channel-usbredir.c	/^} device_error_data;$/;"	t	typeref:struct:device_error_data	file:
device_name	ffmpeg/include/libavdevice/avdevice.h	/^    char *device_name;                   \/**< device name, format depends on device *\/$/;"	m	struct:AVDeviceInfo
device_removed	glib/usb-device-manager.h	/^    void (*device_removed) (SpiceUsbDeviceManager *manager,$/;"	m	struct:_SpiceUsbDeviceManagerClass
device_removed_cb	win32/win32-spicy.c	/^static void device_removed_cb(SpiceUsbDeviceManager *manager,$/;"	f	file:
devices	ffmpeg/include/libavdevice/avdevice.h	/^    AVDeviceInfo **devices;              \/**< list of autodetected devices *\/$/;"	m	struct:AVDeviceInfoList
devices	glib/usb-device-manager.c	/^    GPtrArray *devices;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
dia_size	ffmpeg/include/libavcodec/avcodec.h	/^    int dia_size;$/;"	m	struct:AVCodecContext
difseg_size	ffmpeg/include/libavcodec/dv_profile.h	/^    int              difseg_size;           \/* number of DIF segments per DIF channel *\/$/;"	m	struct:AVDVProfile
direct	ffmpeg/include/libavformat/avio.h	/^    int direct;$/;"	m	struct:AVIOContext
disable_audio	glib/spice-option.c	/^static gboolean disable_audio = FALSE;$/;"	v	file:
disable_auto_convert	ffmpeg/include/libavfilter/avfilter.h	/^    unsigned disable_auto_convert;$/;"	m	struct:AVFilterGraph
disable_channel_msg	glib/spice-channel-priv.h	/^    gboolean                    disable_channel_msg;$/;"	m	struct:_SpiceChannelPrivate
disable_display_align	glib/channel-main.c	/^    gboolean                    disable_display_align:1;$/;"	m	struct:_SpiceMainChannelPrivate	file:
disable_display_position	glib/channel-main.c	/^    gboolean                    disable_display_position:1;$/;"	m	struct:_SpiceMainChannelPrivate	file:
disable_effects	glib/spice-option.c	/^static GStrv disable_effects = NULL;$/;"	v	file:
disable_effects	glib/spice-session-priv.h	/^    GStrv             disable_effects;$/;"	m	struct:_SpiceSessionPrivate
disable_inputs	win32/win32-spice-widget-priv.h	/^    gboolean                disable_inputs;$/;"	m	struct:_SpiceDisplayPrivate
disable_secondary_displays	win32/win32-spice-widget.c	/^static void disable_secondary_displays(SpiceMainChannel *channel, gpointer data) {$/;"	f	file:
disable_usbredir	glib/spice-option.c	/^static gboolean disable_usbredir = FALSE;$/;"	v	file:
discard	ffmpeg/include/libavformat/avformat.h	/^    enum AVDiscard discard;        \/\/\/< selects which program to discard and which to feed to the caller$/;"	m	struct:AVProgram	typeref:enum:AVProgram::AVDiscard
discard	ffmpeg/include/libavformat/avformat.h	/^    enum AVDiscard discard; \/\/\/< Selects which packets can be discarded at will and do not need to be demuxed.$/;"	m	struct:AVStream	typeref:enum:AVStream::AVDiscard
disconnect	win32/win32_spice_interface.c	/^static gboolean disconnect(gpointer user_data) {                                                                                                                     $/;"	f	file:
disconnect_display	win32/win32-spice-widget.c	/^static void disconnect_display(SpiceDisplay *display)$/;"	f	file:
disconnect_main	win32/win32-spice-widget.c	/^static void disconnect_main(SpiceDisplay *display)$/;"	f	file:
disconnecting	glib/spice-session-priv.h	/^    gboolean          disconnecting;$/;"	m	struct:_SpiceSessionPrivate
disconnecting	win32/win32-spicy.h	/^    int              disconnecting;$/;"	m	struct:spice_connection
display	ffmpeg/include/libavcodec/vaapi.h	/^    void *display;$/;"	m	struct:vaapi_context
display	glib/channel-main.c	/^    } display[MAX_DISPLAY];$/;"	m	struct:_SpiceMainChannelPrivate	typeref:struct:_SpiceMainChannelPrivate::__anon16	file:
display	win32/win32-spice-widget-priv.h	/^    SpiceChannel            *display;$/;"	m	struct:_SpiceDisplayPrivate
display2conn	win32/win32-spice-widget.c	/^bool display2conn(spice_connection** tmp_conn,SpiceDisplay *display)$/;"	f
display_aspect_ratio	ffmpeg/include/libavformat/avformat.h	/^    AVRational display_aspect_ratio;$/;"	m	struct:AVStream
display_cache	glib/spice-channel-cache.h	/^typedef GHashTable display_cache;$/;"	t
display_cache_item	glib/spice-channel-cache.h	/^typedef struct display_cache_item {$/;"	s
display_cache_item	glib/spice-channel-cache.h	/^} display_cache_item;$/;"	t	typeref:struct:display_cache_item
display_channel	win32/win32-spicy.h	/^    SpiceChannel     *display_channel;$/;"	m	struct:_SpiceWindow
display_channels_count	glib/spice-session-priv.h	/^    uint32_t          display_channels_count;$/;"	m	struct:_SpiceSessionPrivate
display_channels_hint	spice-common/common/messages.h	/^    uint32_t display_channels_hint;$/;"	m	struct:SpiceMsgMainInit
display_color_depth	glib/channel-main.c	/^    guint8                      display_color_depth;$/;"	m	struct:_SpiceMainChannelPrivate	file:
display_cursor	glib/channel-cursor.c	/^struct display_cursor {$/;"	s	file:
display_cursor	glib/channel-cursor.c	/^typedef struct display_cursor display_cursor;$/;"	t	typeref:struct:display_cursor	file:
display_cursor_ref	glib/channel-cursor.c	/^static display_cursor * display_cursor_ref(display_cursor *cursor)$/;"	f	file:
display_cursor_unref	glib/channel-cursor.c	/^static void display_cursor_unref(display_cursor *cursor)$/;"	f	file:
display_disable_animation	glib/channel-main.c	/^    gboolean                    display_disable_animation:1;$/;"	m	struct:_SpiceMainChannelPrivate	file:
display_disable_font_smooth	glib/channel-main.c	/^    gboolean                    display_disable_font_smooth:1;$/;"	m	struct:_SpiceMainChannelPrivate	file:
display_disable_wallpaper	glib/channel-main.c	/^    gboolean                    display_disable_wallpaper:1;$/;"	m	struct:_SpiceMainChannelPrivate	file:
display_handle_copy_bits	glib/channel-display.c	/^static void display_handle_copy_bits(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_alpha_blend	glib/channel-display.c	/^static void display_handle_draw_alpha_blend(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_blackness	glib/channel-display.c	/^static void display_handle_draw_blackness(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_blend	glib/channel-display.c	/^static void display_handle_draw_blend(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_composite	glib/channel-display.c	/^static void display_handle_draw_composite(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_copy	glib/channel-display.c	/^static void display_handle_draw_copy(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_fill	glib/channel-display.c	/^static void display_handle_draw_fill(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_invers	glib/channel-display.c	/^static void display_handle_draw_invers(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_opaque	glib/channel-display.c	/^static void display_handle_draw_opaque(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_rop3	glib/channel-display.c	/^static void display_handle_draw_rop3(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_stroke	glib/channel-display.c	/^static void display_handle_draw_stroke(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_text	glib/channel-display.c	/^static void display_handle_draw_text(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_transparent	glib/channel-display.c	/^static void display_handle_draw_transparent(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_draw_whiteness	glib/channel-display.c	/^static void display_handle_draw_whiteness(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_inv_list	glib/channel-display.c	/^static void display_handle_inv_list(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_inv_palette	glib/channel-display.c	/^static void display_handle_inv_palette(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_inv_palette_all	glib/channel-display.c	/^static void display_handle_inv_palette_all(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_inv_pixmap_all	glib/channel-display.c	/^static void display_handle_inv_pixmap_all(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_mark	glib/channel-display.c	/^static void display_handle_mark(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_mode	glib/channel-display.c	/^static void display_handle_mode(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_monitors_config	glib/channel-display.c	/^static void display_handle_monitors_config(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_reset	glib/channel-display.c	/^static void display_handle_reset(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_stream_activate_report	glib/channel-display.c	/^static void display_handle_stream_activate_report(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_stream_clip	glib/channel-display.c	/^static void display_handle_stream_clip(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_stream_create	glib/channel-display.c	/^static void display_handle_stream_create(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_stream_data	glib/channel-display.c	/^static void display_handle_stream_data(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_stream_destroy	glib/channel-display.c	/^static void display_handle_stream_destroy(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_stream_destroy_all	glib/channel-display.c	/^static void display_handle_stream_destroy_all(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_surface_create	glib/channel-display.c	/^static void display_handle_surface_create(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_handle_surface_destroy	glib/channel-display.c	/^static void display_handle_surface_destroy(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
display_id	spice-common/common/messages.h	/^    uint8_t display_id;$/;"	m	struct:SpiceMsgcMousePosition
display_id	spice-common/spice-protocol/spice/vd_agent.h	/^    uint8_t display_id;$/;"	m	struct:VDAgentMouseState
display_invalidate	glib/channel-display.h	/^    void (*display_invalidate)(SpiceChannel *channel,$/;"	m	struct:_SpiceDisplayChannelClass
display_mark	glib/channel-display.h	/^    void (*display_mark)(SpiceChannel *channel,$/;"	m	struct:_SpiceDisplayChannelClass
display_mark_false	glib/channel-display.c	/^static gboolean display_mark_false(gpointer data)$/;"	f	file:
display_picture_number	ffmpeg/include/libavutil/frame.h	/^    int display_picture_number;$/;"	m	struct:AVFrame
display_primary_create	glib/channel-display.h	/^    void (*display_primary_create)(SpiceChannel *channel, gint format,$/;"	m	struct:_SpiceDisplayChannelClass
display_primary_destroy	glib/channel-display.h	/^    void (*display_primary_destroy)(SpiceChannel *channel);$/;"	m	struct:_SpiceDisplayChannelClass
display_session_mm_time_reset_cb	glib/channel-display.c	/^static void display_session_mm_time_reset_cb(SpiceSession *session, gpointer data)$/;"	f	file:
display_stream	glib/channel-display-priv.h	/^typedef struct display_stream {$/;"	s
display_stream	glib/channel-display-priv.h	/^} display_stream;$/;"	t	typeref:struct:display_stream
display_stream_render	glib/channel-display.c	/^static gboolean display_stream_render(display_stream *st)$/;"	f	file:
display_stream_render_ex	glib/channel-display.c	/^static gboolean display_stream_render_ex(display_stream *st)$/;"	f	file:
display_stream_reset_rendering_timer	glib/channel-display.c	/^static void display_stream_reset_rendering_timer(display_stream *st)$/;"	f	file:
display_stream_schedule	glib/channel-display.c	/^static gboolean display_stream_schedule(display_stream *st)$/;"	f	file:
display_stream_test_frames_mm_time_reset	glib/channel-display.c	/^static void display_stream_test_frames_mm_time_reset(display_stream *st,$/;"	f	file:
display_surface	glib/channel-display-priv.h	/^typedef struct display_surface {$/;"	s
display_surface	glib/channel-display-priv.h	/^} display_surface;$/;"	t	typeref:struct:display_surface
display_update_stream_region	glib/channel-display.c	/^static void display_update_stream_region(display_stream *st)$/;"	f	file:
display_update_stream_report	glib/channel-display.c	/^static void display_update_stream_report(SpiceDisplayChannel *channel, uint32_t stream_id,$/;"	f	file:
disposition	ffmpeg/include/libavformat/avformat.h	/^    int disposition; \/**< AV_DISPOSITION_* bit field *\/$/;"	m	struct:AVStream
do_color_convert	win32/win32-spice-widget.c	/^static gboolean do_color_convert(SpiceDisplay *display,$/;"	f	file:
do_rop3_with_color	spice-common/common/rop3.c	/^void do_rop3_with_color(uint8_t rop3, pixman_image_t *d, pixman_image_t *s, SpicePoint *src_pos,$/;"	f
do_rop3_with_pattern	spice-common/common/rop3.c	/^void do_rop3_with_pattern(uint8_t rop3, pixman_image_t *d, pixman_image_t *s, SpicePoint *src_pos,$/;"	f
do_seamless	glib/channel-main.c	/^    bool do_seamless; \/* used as input and output for the seamless migration handshake.$/;"	m	struct:spice_migrate	file:
do_write	glib/wocky-http-proxy.c	/^do_write (GAsyncReadyCallback callback, ConnectAsyncData *data)$/;"	f	file:
dot	spice-common/common/canvas_base.c	/^static inline int64_t dot(SPICE_FIXED28_4 x1,$/;"	f	file:
dot2	spice-common/common/canvas_base.c	/^static inline int64_t dot2(SPICE_FIXED28_4 x,$/;"	f	file:
dpos	glib/spice-channel-priv.h	/^    int                   dpos;$/;"	m	struct:_SpiceMsgIn
dpy	glib/channel-inputs.c	/^    unsigned int                x, y, dpy;$/;"	m	struct:_SpiceInputsChannelPrivate	file:
dpy	win32/win32-spice-widget-priv.h	/^    Display                 *dpy;$/;"	m	struct:_SpiceDisplayPrivate
draw_alpha_blend	spice-common/common/canvas_base.h	/^    void (*draw_alpha_blend)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceAlphaBlend* alpha_blend);$/;"	m	struct:__anon145
draw_area_offset	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t draw_area_offset;        \/* qxl-1 *\/$/;"	m	struct:QXLRom
draw_blackness	spice-common/common/canvas_base.h	/^    void (*draw_blackness)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceBlackness *blackness);$/;"	m	struct:__anon145
draw_blend	spice-common/common/canvas_base.h	/^    void (*draw_blend)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceBlend *blend);$/;"	m	struct:__anon145
draw_brush	spice-common/common/canvas_base.c	/^static void draw_brush(SpiceCanvas *canvas,$/;"	f	file:
draw_composite	spice-common/common/canvas_base.h	/^    void (*draw_composite)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceComposite *composite);$/;"	m	struct:__anon145
draw_copy	spice-common/common/canvas_base.h	/^    void (*draw_copy)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceCopy *copy);$/;"	m	struct:__anon145
draw_fill	spice-common/common/canvas_base.h	/^    void (*draw_fill)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceFill *fill);$/;"	m	struct:__anon145
draw_horiz_band	ffmpeg/include/libavcodec/avcodec.h	/^    void (*draw_horiz_band)(struct AVCodecContext *s,$/;"	m	struct:AVCodecContext
draw_invers	spice-common/common/canvas_base.h	/^    void (*draw_invers)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceInvers *invers);$/;"	m	struct:__anon145
draw_mode	spice-common/common/glc.c	/^    int draw_mode;$/;"	m	struct:InternaCtx	file:
draw_opaque	spice-common/common/canvas_base.h	/^    void (*draw_opaque)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceOpaque *opaque);$/;"	m	struct:__anon145
draw_rop3	spice-common/common/canvas_base.h	/^    void (*draw_rop3)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceRop3 *rop3);$/;"	m	struct:__anon145
draw_slice	ffmpeg/include/libavfilter/avfilter.h	/^    int (*draw_slice)(AVFilterLink *link, int y, int height, int slice_dir);$/;"	m	struct:AVFilterPad
draw_str_mask_bitmap	spice-common/common/gdi_canvas.c	/^static void draw_str_mask_bitmap(struct GdiCanvas *canvas,$/;"	f	file:
draw_stroke	spice-common/common/canvas_base.h	/^    void (*draw_stroke)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceStroke *stroke);$/;"	m	struct:__anon145
draw_text	spice-common/common/canvas_base.h	/^    void (*draw_text)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceText *text);$/;"	m	struct:__anon145
draw_transparent	spice-common/common/canvas_base.h	/^    void (*draw_transparent)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceTransparent* transparent);$/;"	m	struct:__anon145
draw_whiteness	spice-common/common/canvas_base.h	/^    void (*draw_whiteness)(SpiceCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceWhiteness *whiteness);$/;"	m	struct:__anon145
drawable	spice-common/common/ogl_ctx.c	/^    GLXDrawable drawable;$/;"	m	struct:OGLCtx	file:
drops_seqs_stats_arr	glib/channel-display-priv.h	/^    GArray               *drops_seqs_stats_arr;$/;"	m	struct:display_stream
drops_sequence_stats	glib/channel-display-priv.h	/^typedef struct drops_sequence_stats {$/;"	s
drops_sequence_stats	glib/channel-display-priv.h	/^} drops_sequence_stats;$/;"	t	typeref:struct:drops_sequence_stats
dsf	ffmpeg/include/libavcodec/dv_profile.h	/^    int              dsf;                   \/* value of the dsf in the DV header *\/$/;"	m	struct:AVDVProfile
dst	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterContext *dst;       \/\/\/< dest filter$/;"	m	struct:AVFilterLink
dst_channel	glib/channel-main.c	/^    SpiceChannel *dst_channel;$/;"	m	struct:spice_migrate	file:
dst_info	spice-common/common/messages.h	/^    SpiceMigrationDstInfo dst_info;$/;"	m	struct:SpiceMsgMainMigrateBeginSeamless
dst_info	spice-common/common/messages.h	/^    SpiceMigrationDstInfo dst_info;$/;"	m	struct:SpiceMsgMainMigrationBegin
dst_x	ffmpeg/include/libavutil/motion_vector.h	/^    int16_t dst_x, dst_y;$/;"	m	struct:AVMotionVector
dst_y	ffmpeg/include/libavutil/motion_vector.h	/^    int16_t dst_x, dst_y;$/;"	m	struct:AVMotionVector
dstpad	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterPad *dstpad;        \/\/\/< input pad on the dest filter$/;"	m	struct:AVFilterLink
dtg_active_format	ffmpeg/include/libavcodec/avcodec.h	/^    attribute_deprecated int dtg_active_format;$/;"	m	struct:AVCodecContext
dts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t dts;     \/* dts of the current frame *\/$/;"	m	struct:AVCodecParserContext
dts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t dts;$/;"	m	struct:AVPacket
dts_misordered	ffmpeg/include/libavformat/avformat.h	/^    uint8_t dts_misordered;$/;"	m	struct:AVStream
dts_ordered	ffmpeg/include/libavformat/avformat.h	/^    uint8_t dts_ordered;$/;"	m	struct:AVStream
dts_ref_dts_delta	ffmpeg/include/libavcodec/avcodec.h	/^    int dts_ref_dts_delta;$/;"	m	struct:AVCodecParserContext
dts_sync_point	ffmpeg/include/libavcodec/avcodec.h	/^    int dts_sync_point;$/;"	m	struct:AVCodecParserContext
dump_bitmap	spice-common/common/canvas_base.c	/^static void dump_bitmap(SpiceBitmap *bitmap, SpicePalette *palette)$/;"	f	file:
dump_jpeg	spice-common/common/canvas_base.c	/^static void dump_jpeg(uint8_t* data, int data_size)$/;"	f	file:
dump_separator	ffmpeg/include/libavcodec/avcodec.h	/^    uint8_t *dump_separator;$/;"	m	struct:AVCodecContext
dump_separator	ffmpeg/include/libavformat/avformat.h	/^    uint8_t *dump_separator;$/;"	m	struct:AVFormatContext
dump_surface	spice-common/common/canvas_base.c	/^static void dump_surface(pixman_image_t *surface, int cache)$/;"	f	file:
duration	ffmpeg/include/libavcodec/avcodec.h	/^    int   duration;$/;"	m	struct:AVPacket
duration	ffmpeg/include/libavcodec/avcodec.h	/^    int duration;$/;"	m	struct:AVCodecParserContext
duration	ffmpeg/include/libavformat/avformat.h	/^    int64_t duration;$/;"	m	struct:AVFormatContext
duration	ffmpeg/include/libavformat/avformat.h	/^    int64_t duration;$/;"	m	struct:AVStream
duration	glib/channel-display-priv.h	/^    uint32_t duration;$/;"	m	struct:drops_sequence_stats
duration_count	ffmpeg/include/libavformat/avformat.h	/^        int duration_count;$/;"	m	struct:AVStream::__anon35
duration_error	ffmpeg/include/libavformat/avformat.h	/^        double (*duration_error)[2][MAX_STD_TIMEBASES];$/;"	m	struct:AVStream::__anon35
duration_estimation_method	ffmpeg/include/libavformat/avformat.h	/^    enum AVDurationEstimationMethod duration_estimation_method;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVDurationEstimationMethod
duration_gcd	ffmpeg/include/libavformat/avformat.h	/^        int64_t duration_gcd;$/;"	m	struct:AVStream::__anon35
dx	glib/channel-inputs.c	/^    int                         dx, dy;$/;"	m	struct:_SpiceInputsChannelPrivate	file:
dx	spice-common/common/lines.c	/^    int dx, dy;$/;"	m	struct:_LineFace	file:
dx	spice-common/common/lines.c	/^    int dx, dy;$/;"	m	struct:_PolySlope	file:
dx	spice-common/common/lines.c	/^    int dx;$/;"	m	struct:_PolyEdge	file:
dx	spice-common/common/messages.h	/^    int32_t dx;$/;"	m	struct:SpiceMsgcMouseMotion
dxva_context	ffmpeg/include/libavcodec/dxva2.h	/^struct dxva_context {$/;"	s
dy	glib/channel-inputs.c	/^    int                         dx, dy;$/;"	m	struct:_SpiceInputsChannelPrivate	file:
dy	spice-common/common/lines.c	/^    int dx, dy;$/;"	m	struct:_LineFace	file:
dy	spice-common/common/lines.c	/^    int dx, dy;$/;"	m	struct:_PolySlope	file:
dy	spice-common/common/lines.c	/^    int dy;$/;"	m	struct:_PolyEdge	file:
dy	spice-common/common/messages.h	/^    int32_t dy;$/;"	m	struct:SpiceMsgcMouseMotion
e	spice-common/common/lines.c	/^    int e;                      \/* initial error term *\/$/;"	m	struct:_PolyEdge	file:
effect	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t effect;$/;"	m	struct:QXLCompatDrawable
effect	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t effect;$/;"	m	struct:QXLDrawable
emit_cursor_set	glib/channel-cursor.c	/^static void emit_cursor_set(SpiceChannel *channel, display_cursor *cursor)$/;"	f	file:
emit_invalidate	glib/channel-display.c	/^static void emit_invalidate(SpiceChannel *channel, SpiceRect *bbox)$/;"	f	file:
emit_main_context	glib/gio-coroutine.c	/^static gboolean emit_main_context(gpointer opaque)$/;"	f	file:
enable	ffmpeg/include/libavfilter/avfilter.h	/^    void *enable;                   \/\/\/< parsed expression (AVExpr*)$/;"	m	struct:AVFilterContext
enable_accels_save	win32/win32-spicy.h	/^    bool             enable_accels_save;$/;"	m	struct:_SpiceWindow
enable_adaptive_streaming	glib/channel-display.c	/^    gboolean                    enable_adaptive_streaming;	$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
enable_mnemonics_save	win32/win32-spicy.h	/^    bool             enable_mnemonics_save;$/;"	m	struct:_SpiceWindow
enable_str	ffmpeg/include/libavfilter/avfilter.h	/^    char *enable_str;               \/\/\/< enable expression string$/;"	m	struct:AVFilterContext
enabled	glib/channel-main.c	/^        gboolean                enabled;$/;"	m	struct:_SpiceMainChannelPrivate::__anon16	file:
enabled_set	glib/channel-main.c	/^        gboolean                enabled_set;$/;"	m	struct:_SpiceMainChannelPrivate::__anon16	file:
encode	spice-common/common/lz.c	/^static inline void encode(Encoder *encoder, uint8_t byte)$/;"	f	file:
encode	spice-common/common/quic.c	/^static inline void encode(Encoder *encoder, unsigned int word, unsigned int len)$/;"	f	file:
encode2	ffmpeg/include/libavcodec/avcodec.h	/^    int (*encode2)(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,$/;"	m	struct:AVCodec
encode_32	spice-common/common/lz.c	/^static inline void encode_32(Encoder *encoder, unsigned int word)$/;"	f	file:
encode_32	spice-common/common/quic.c	/^static inline void encode_32(Encoder *encoder, unsigned int word)$/;"	f	file:
encode_channel_run	spice-common/common/quic.c	/^static void encode_channel_run(Encoder *encoder, Channel *channel, unsigned int runlen)$/;"	f	file:
encode_copy_count	spice-common/common/lz.c	/^static inline void encode_copy_count(Encoder *encoder, uint8_t copy_count)$/;"	f	file:
encode_level	spice-common/common/lz.c	/^static inline void encode_level(Encoder *encoder, uint8_t level_code)$/;"	f	file:
encode_ones	spice-common/common/quic.c	/^static inline void encode_ones(Encoder *encoder, unsigned int n)$/;"	f	file:
encode_run	spice-common/common/quic.c	/^static inline void encode_run(Encoder *encoder, unsigned int len)$/;"	f	file:
encode_run	spice-common/common/quic.c	/^static void encode_run(Encoder *encoder, unsigned int runlen) \/\/todo: try use end of line$/;"	f	file:
encode_sub	ffmpeg/include/libavcodec/avcodec.h	/^    int (*encode_sub)(AVCodecContext *, uint8_t *buf, int buf_size,$/;"	m	struct:AVCodec
encoder	spice-common/common/quic.c	/^    Encoder *encoder;$/;"	m	struct:Channel	file:
encoder	spice-common/common/quic.c	/^    Encoder *encoder;$/;"	m	struct:CommonState	file:
encoder_init_rle	spice-common/common/quic.c	/^static void encoder_init_rle(CommonState *state)$/;"	f	file:
encoder_reset	spice-common/common/lz.c	/^static int encoder_reset(Encoder *encoder, uint8_t *io_ptr, uint8_t *io_ptr_end)$/;"	f	file:
encoder_reste	spice-common/common/quic.c	/^static int encoder_reste(Encoder *encoder, uint32_t *io_ptr, uint32_t *io_ptr_end)$/;"	f	file:
encoder_reste_channels	spice-common/common/quic.c	/^static int encoder_reste_channels(Encoder *encoder, int channels, int width, int bpc)$/;"	f	file:
encrypted_data	spice-common/spice-protocol/spice/protocol.h	/^    uint8_t encrypted_data[SPICE_TICKET_KEY_PAIR_LENGTH \/ 8];$/;"	m	struct:SpiceLinkEncryptedTicket
end	ffmpeg/include/libavformat/avformat.h	/^    int64_t start, end;     \/\/\/< chapter start\/end time in time_base units$/;"	m	struct:AVChapter
end	ffmpeg/include/libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
end_block	spice-common/python_modules/codegen.py	/^    def end_block(self, semicolon=False, newline=True):$/;"	m	class:CodeWriter
end_display_time	ffmpeg/include/libavcodec/avcodec.h	/^    uint32_t end_display_time; \/* relative to packet pts, in ms *\/$/;"	m	struct:AVSubtitle
end_frame	ffmpeg/include/libavcodec/avcodec.h	/^    int (*end_frame)(AVCodecContext *avctx);$/;"	m	struct:AVHWAccel
end_frame	ffmpeg/include/libavcodec/avcodec.h	/^    int end_frame;$/;"	m	struct:RcOverride
end_frame	ffmpeg/include/libavfilter/avfilter.h	/^    int (*end_frame)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
end_frame_mm_time	spice-common/common/messages.h	/^    uint32_t end_frame_mm_time;$/;"	m	struct:SpiceMsgcDisplayStreamReport
end_style	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t end_style;$/;"	m	struct:QXLLineAttr
end_time	ffmpeg/include/libavformat/avformat.h	/^    int64_t end_time;$/;"	m	struct:AVProgram
endif	spice-common/python_modules/codegen.py	/^    def endif(self, name):$/;"	m	class:CodeWriter
entry	glib/continuation.h	/^	void (*entry)(struct continuation *cc);$/;"	m	struct:continuation
entry	glib/coroutine.h	/^	void *(*entry)(void *);$/;"	m	struct:coroutine
ents	spice-common/common/draw.h	/^    uint32_t ents[0];$/;"	m	struct:SpicePalette
ents	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t ents[0];$/;"	m	struct:QXLPalette
eof_reached	ffmpeg/include/libavformat/avio.h	/^    int eof_reached;        \/**< true if eof reached *\/$/;"	m	struct:AVIOContext
err	glib/smartcard-manager.c	/^    GError *err;$/;"	m	struct:__anon22	file:
err_message	win32/win32_spice_interface_types.h	/^    char err_message[1024]; $/;"	m	struct:SPICE_USBConnectFaild
err_message	win32/win32_spice_interface_types.h	/^    char err_message[1024];$/;"	m	struct:SPICE_USBDeviceErr
err_recognition	ffmpeg/include/libavcodec/avcodec.h	/^    int err_recognition;$/;"	m	struct:AVCodecContext
error	ffmpeg/include/libavcodec/avcodec.h	/^    uint64_t error[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVCodecContext
error	ffmpeg/include/libavformat/avio.h	/^    int error;              \/**< contains the error code or 0 if no error happened *\/$/;"	m	struct:AVIOContext
error	ffmpeg/include/libavutil/frame.h	/^    uint64_t error[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
error	glib/channel-main.c	/^    GError                         *error;$/;"	m	struct:SpiceFileXferTask	file:
error	glib/channel-usbredir.c	/^    GError *error;$/;"	m	struct:device_error_data	file:
error	glib/spice-channel-priv.h	/^    GError                      *error;$/;"	m	struct:_SpiceChannelPrivate
error	glib/spice-session.c	/^    GError *error;$/;"	m	struct:spice_open_host	file:
error	spice-common/common/lz.h	/^    SPICE_ATTR_PRINTF(2, 3) void (*error)(LzUsrContext *usr, const char *fmt, ...);$/;"	m	struct:LzUsrContext
error	spice-common/common/messages.h	/^        VSCMsgError error;$/;"	m	union:SpiceMsgcSmartcard::__anon152
error	spice-common/common/quic.h	/^    SPICE_ATTR_PRINTF(2, 3) void (*error)(QuicUsrContext *usr, const char *fmt, ...);$/;"	m	struct:QuicUsrContext
error	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t error;$/;"	m	struct:SpiceLinkReply
error	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t error;$/;"	m	struct:VDAgentReply
error_check	spice-common/python_modules/codegen.py	/^    def error_check(self, check, label = "error"):$/;"	m	class:CodeWriter
error_code	spice-common/common/messages.h	/^    uint32_t error_code; \/\/ SPICE_ERR_?$/;"	m	struct:SpiceMsgMainAgentDisconnect
error_concealment	ffmpeg/include/libavcodec/avcodec.h	/^    int error_concealment;$/;"	m	struct:AVCodecContext
error_rate	ffmpeg/include/libavcodec/avcodec.h	/^    int error_rate;$/;"	m	struct:AVCodecContext
error_recognition	ffmpeg/include/libavformat/avformat.h	/^    int error_recognition;$/;"	m	struct:AVFormatContext
et	win32/win32_spice_interface_types.h	/^   LcxSpiceChannelEvent et;$/;"	m	struct:SPICE_MainChannelEvent
event	glib/usb-device-manager.c	/^    libusb_hotplug_event event;$/;"	m	struct:hotplug_idle_cb_args	file:
event	spice-common/common/messages.h	/^    uint8_t event;$/;"	m	struct:SpiceMsgPortEvent
event	spice-common/common/messages.h	/^    uint8_t event;$/;"	m	struct:SpiceMsgcPortEvent
event_flags	ffmpeg/include/libavformat/avformat.h	/^    int event_flags;$/;"	m	struct:AVFormatContext
event_flags	ffmpeg/include/libavformat/avformat.h	/^    int event_flags;$/;"	m	struct:AVStream
event_listeners	glib/usb-device-manager.c	/^    int event_listeners;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
event_thread	glib/usb-device-manager.c	/^    GThread *event_thread;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
event_thread_run	glib/usb-device-manager.c	/^    gboolean event_thread_run;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
evol	spice-common/common/quic.c	/^static int evol = DEFevol;$/;"	v	file:
execute	ffmpeg/include/libavcodec/avcodec.h	/^    int (*execute)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg), void *arg2, int *ret, int count, int size);$/;"	m	struct:AVCodecContext
execute	ffmpeg/include/libavfilter/avfilter.h	/^    avfilter_execute_func *execute;$/;"	m	struct:AVFilterGraph
execute2	ffmpeg/include/libavcodec/avcodec.h	/^    int (*execute2)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg, int jobnr, int threadnr), void *arg2, int *ret, int count);$/;"	m	struct:AVCodecContext
exited	glib/continuation.h	/^	int exited;$/;"	m	struct:continuation
exited	glib/coroutine.h	/^	int exited;$/;"	m	struct:coroutine
ext_buffers	ffmpeg/include/libavcodec/qsv.h	/^    mfxExtBuffer **ext_buffers;$/;"	m	struct:AVQSVContext
extended_buf	ffmpeg/include/libavutil/frame.h	/^    AVBufferRef **extended_buf;$/;"	m	struct:AVFrame
extended_data	ffmpeg/include/libavfilter/avfilter.h	/^    uint8_t **extended_data;$/;"	m	struct:AVFilterBuffer
extended_data	ffmpeg/include/libavfilter/avfilter.h	/^    uint8_t **extended_data;$/;"	m	struct:AVFilterBufferRef
extended_data	ffmpeg/include/libavutil/frame.h	/^    uint8_t **extended_data;$/;"	m	struct:AVFrame
extensions	ffmpeg/include/libavformat/avformat.h	/^    const char *extensions; \/**< comma-separated filename extensions *\/$/;"	m	struct:AVOutputFormat
extensions	ffmpeg/include/libavformat/avformat.h	/^    const char *extensions;$/;"	m	struct:AVInputFormat
extra_size	spice-common/python_modules/demarshal.py	/^    def extra_size(self):$/;"	m	class:ItemInfo
extradata	ffmpeg/include/libavcodec/avcodec.h	/^    uint8_t *extradata;$/;"	m	struct:AVCodecContext
extradata_size	ffmpeg/include/libavcodec/avcodec.h	/^    int extradata_size;$/;"	m	struct:AVCodecContext
f	ffmpeg/include/libavutil/intfloat.h	/^    double   f;$/;"	m	union:av_intfloat64
f	ffmpeg/include/libavutil/intfloat.h	/^    float    f;$/;"	m	union:av_intfloat32
f	spice-common/spice_codegen.py	/^        f = open(dest_file, 'rb')$/;"	v
f	spice-common/spice_codegen.py	/^f = open(dest_file, 'wb')$/;"	v
f32	ffmpeg/include/libavutil/intreadwrite.h	/^    float    f32;$/;"	m	union:__anon43
f32	ffmpeg/include/libavutil/intreadwrite.h	/^    float    f32[2];$/;"	m	union:__anon42
f64	ffmpeg/include/libavutil/intreadwrite.h	/^    double   f64;$/;"	m	union:__anon42
family	spice-common/common/quic_rgb_tmpl.c	30;"	d	file:
family	spice-common/common/quic_rgb_tmpl.c	51;"	d	file:
family	spice-common/common/quic_rgb_tmpl.c	72;"	d	file:
family	spice-common/common/quic_rgb_tmpl.c	755;"	d	file:
family	spice-common/common/quic_rgb_tmpl.c	93;"	d	file:
family	spice-common/common/quic_tmpl.c	44;"	d	file:
family	spice-common/common/quic_tmpl.c	633;"	d	file:
family_5bpc	spice-common/common/quic.c	/^static QuicFamily family_5bpc;$/;"	v	file:
family_8bpc	spice-common/common/quic.c	/^static QuicFamily family_8bpc;$/;"	v	file:
family_init	spice-common/common/quic.c	/^static void family_init(QuicFamily *family, int bpc, int limit)$/;"	f	file:
family_stat_5bpc	spice-common/common/quic.c	/^    FamilyStat family_stat_5bpc;$/;"	m	struct:Channel	file:
family_stat_8bpc	spice-common/common/quic.c	/^    FamilyStat family_stat_8bpc;$/;"	m	struct:Channel	file:
fd	glib/spice-channel-priv.h	/^    int                         fd;$/;"	m	struct:_SpiceChannelPrivate
fetch_timestamp	ffmpeg/include/libavcodec/avcodec.h	/^    int fetch_timestamp;$/;"	m	struct:AVCodecParserContext
fgGroup	spice-common/common/lines.c	/^    SpanGroup fgGroup, bgGroup;$/;"	m	struct:_SpanData	file:
fiber	glib/coroutine.h	/^        LPVOID fiber;$/;"	m	struct:coroutine
field_order	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVFieldOrder field_order;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVFieldOrder
field_order	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVFieldOrder field_order;$/;"	m	struct:AVCodecParserContext	typeref:enum:AVCodecParserContext::AVFieldOrder
file	glib/channel-main.c	/^    GFile                          *file;$/;"	m	struct:SpiceFileXferTask	file:
file_index	glib/channel-display-h264.c	/^static int file_index = 1;$/;"	v	file:
file_index	glib/channel-display-mjpeg.c	/^static int  file_index = 1;$/;"	v	file:
file_size	glib/channel-main.c	/^    uint64_t                       file_size;$/;"	m	struct:SpiceFileXferTask	file:
file_stream	glib/channel-main.c	/^    GFileInputStream               *file_stream;$/;"	m	struct:SpiceFileXferTask	file:
file_xfer_close_cb	glib/channel-main.c	/^static void file_xfer_close_cb(GObject      *object,$/;"	f	file:
file_xfer_completed	glib/channel-main.c	/^static void file_xfer_completed(SpiceFileXferTask *task, GError *error)$/;"	f	file:
file_xfer_continue_read	glib/channel-main.c	/^static void file_xfer_continue_read(SpiceFileXferTask *task)$/;"	f	file:
file_xfer_data_flushed_cb	glib/channel-main.c	/^static void file_xfer_data_flushed_cb(GObject *source_object,$/;"	f	file:
file_xfer_flush_async	glib/channel-main.c	/^static void file_xfer_flush_async(SpiceMainChannel *channel, GCancellable *cancellable,$/;"	f	file:
file_xfer_flush_finish	glib/channel-main.c	/^static gboolean file_xfer_flush_finish(SpiceMainChannel *channel, GAsyncResult *result,$/;"	f	file:
file_xfer_flushed	glib/channel-main.c	/^static void file_xfer_flushed(SpiceMainChannel *channel, gboolean success)$/;"	f	file:
file_xfer_handle_status	glib/channel-main.c	/^static void file_xfer_handle_status(SpiceMainChannel *channel,$/;"	f	file:
file_xfer_info_async_cb	glib/channel-main.c	/^static void file_xfer_info_async_cb(GObject *obj, GAsyncResult *res, gpointer data)$/;"	f	file:
file_xfer_queue	glib/channel-main.c	/^static void file_xfer_queue(SpiceFileXferTask *task, int data_size)$/;"	f	file:
file_xfer_read_async_cb	glib/channel-main.c	/^static void file_xfer_read_async_cb(GObject *obj, GAsyncResult *res, gpointer data)$/;"	f	file:
file_xfer_read_cb	glib/channel-main.c	/^static void file_xfer_read_cb(GObject *source_object,$/;"	f	file:
file_xfer_send_start_msg_async	glib/channel-main.c	/^static void file_xfer_send_start_msg_async(SpiceMainChannel *channel,$/;"	f	file:
file_xfer_task_free	glib/channel-main.c	/^static void file_xfer_task_free(SpiceFileXferTask *task)$/;"	f	file:
file_xfer_tasks	glib/channel-main.c	/^    GHashTable                  *file_xfer_tasks;$/;"	m	struct:_SpiceMainChannelPrivate	file:
filemode	ffmpeg/include/libavformat/avio.h	/^    int64_t filemode;                     \/**< Unix file mode, -1 if unknown. *\/$/;"	m	struct:AVIODirEntry
filename	ffmpeg/include/libavformat/avformat.h	/^    char filename[1024];$/;"	m	struct:AVFormatContext
filename	ffmpeg/include/libavformat/avformat.h	/^    const char *filename;$/;"	m	struct:AVProbeData
fill	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLFill fill;$/;"	m	union:QXLCompatDrawable::__anon75
fill	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLFill fill;$/;"	m	union:QXLDrawable::__anon76
fill_common	spice-common/common/gl_canvas.c	/^static inline void fill_common(GLCanvas *canvas, SpiceRect *bbox, SpiceClip *clip, SpiceQMask * mask, GLCOp op)$/;"	f	file:
fill_mask	spice-common/common/glc.c	/^static void fill_mask(InternaCtx *ctx, int x_dest, int y_dest, int width, int height,$/;"	f	file:
fill_model_structures	spice-common/common/quic.c	/^static void fill_model_structures(SPICE_GNUC_UNUSED Encoder *encoder, FamilyStat *family_stat,$/;"	f	file:
fill_path	spice-common/common/glc.c	/^static void fill_path(InternaCtx *ctx, void *p)$/;"	f	file:
fill_rect	spice-common/common/glc.c	/^static void fill_rect(InternaCtx *ctx, void *r)$/;"	f	file:
fill_solid_rects	spice-common/common/canvas_base.h	/^    void (*fill_solid_rects)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
fill_solid_rects	spice-common/common/sw_canvas.c	/^static void fill_solid_rects(SpiceCanvas *spice_canvas,$/;"	f	file:
fill_solid_rects_rop	spice-common/common/canvas_base.h	/^    void (*fill_solid_rects_rop)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
fill_solid_rects_rop	spice-common/common/sw_canvas.c	/^static void fill_solid_rects_rop(SpiceCanvas *spice_canvas,$/;"	f	file:
fill_solid_spans	spice-common/common/canvas_base.h	/^    void (*fill_solid_spans)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
fill_solid_spans	spice-common/common/sw_canvas.c	/^static void fill_solid_spans(SpiceCanvas *spice_canvas,$/;"	f	file:
fill_tiled_rects	spice-common/common/canvas_base.h	/^    void (*fill_tiled_rects)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
fill_tiled_rects	spice-common/common/sw_canvas.c	/^static void fill_tiled_rects(SpiceCanvas *spice_canvas,$/;"	f	file:
fill_tiled_rects_from_surface	spice-common/common/canvas_base.h	/^    void (*fill_tiled_rects_from_surface)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
fill_tiled_rects_from_surface	spice-common/common/sw_canvas.c	/^static void fill_tiled_rects_from_surface(SpiceCanvas *spice_canvas,$/;"	f	file:
fill_tiled_rects_rop	spice-common/common/canvas_base.h	/^    void (*fill_tiled_rects_rop)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
fill_tiled_rects_rop	spice-common/common/sw_canvas.c	/^static void fill_tiled_rects_rop(SpiceCanvas *spice_canvas,$/;"	f	file:
fill_tiled_rects_rop_from_surface	spice-common/common/canvas_base.h	/^    void (*fill_tiled_rects_rop_from_surface)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
fill_tiled_rects_rop_from_surface	spice-common/common/sw_canvas.c	/^static void fill_tiled_rects_rop_from_surface(SpiceCanvas *spice_canvas,$/;"	f	file:
filled_mv_blocks_num	ffmpeg/include/libavcodec/xvmc.h	/^    int             filled_mv_blocks_num;$/;"	m	struct:xvmc_pix_fmt
filter	ffmpeg/include/libavcodec/avcodec.h	/^    int (*filter)(AVBitStreamFilterContext *bsfc,$/;"	m	struct:AVBitStreamFilter
filter	ffmpeg/include/libavcodec/avcodec.h	/^    struct AVBitStreamFilter *filter;$/;"	m	struct:AVBitStreamFilterContext	typeref:struct:AVBitStreamFilterContext::AVBitStreamFilter
filter	ffmpeg/include/libavfilter/avfilter.h	/^    const AVFilter *filter;         \/\/\/< the AVFilter of which this is an instance$/;"	m	struct:AVFilterContext
filter_count_unused	ffmpeg/include/libavfilter/avfilter.h	/^    unsigned filter_count_unused;$/;"	m	struct:AVFilterGraph
filter_ctx	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterContext *filter_ctx;$/;"	m	struct:AVFilterInOut
filter_frame	ffmpeg/include/libavfilter/avfilter.h	/^    int (*filter_frame)(AVFilterLink *link, AVFrame *frame);$/;"	m	struct:AVFilterPad
filters	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterContext **filters;$/;"	m	struct:AVFilterGraph
find_bucket	spice-common/common/quic_family_tmpl.c	/^static s_bucket *FNAME(find_bucket)(Channel *channel, const unsigned int val)$/;"	f	file:
find_bucket	spice-common/common/quic_rgb_tmpl.c	29;"	d	file:
find_bucket	spice-common/common/quic_rgb_tmpl.c	50;"	d	file:
find_bucket	spice-common/common/quic_rgb_tmpl.c	71;"	d	file:
find_bucket	spice-common/common/quic_rgb_tmpl.c	754;"	d	file:
find_bucket	spice-common/common/quic_rgb_tmpl.c	92;"	d	file:
find_bucket	spice-common/common/quic_tmpl.c	43;"	d	file:
find_bucket	spice-common/common/quic_tmpl.c	632;"	d	file:
find_free_mainloop	win32/win32_spice_interface.c	/^static int find_free_mainloop(SPICE_HANDLE sh)$/;"	f	file:
find_free_spiceconn	win32/win32_spice_interface.c	/^static int find_free_spiceconn(SPICE_HANDLE sh)$/;"	f	file:
find_model_params	spice-common/common/quic.c	/^static void find_model_params(Encoder *encoder,$/;"	f	file:
find_msb	spice-common/common/gl_utils.h	55;"	d
find_surface	glib/channel-display.c	/^static display_surface *find_surface(SpiceDisplayChannelPrivate *c, guint32 surface_id)$/;"	f	file:
first_child_index	spice-common/spice-protocol/spice/stats.h	/^    uint32_t first_child_index;$/;"	m	struct:SpiceStatNode
first_discard_sample	ffmpeg/include/libavformat/avformat.h	/^    int64_t first_discard_sample;$/;"	m	struct:AVStream
first_dts	ffmpeg/include/libavformat/avformat.h	/^    int64_t first_dts;$/;"	m	struct:AVStream
first_frame_mm_time	glib/channel-display-priv.h	/^    uint32_t             first_frame_mm_time;$/;"	m	struct:display_stream
fix_to_double	spice-common/common/canvas_base.c	/^static inline double fix_to_double(SPICE_FIXED28_4 fixed)$/;"	f	file:
fix_to_int	spice-common/common/canvas_base.c	/^ static inline int fix_to_int(SPICE_FIXED28_4 fixed)$/;"	f	file:
flags	ffmpeg/include/libavcodec/avcodec.h	/^    int   flags;$/;"	m	struct:AVPacket
flags	ffmpeg/include/libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVCodecContext
flags	ffmpeg/include/libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVCodecParserContext
flags	ffmpeg/include/libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVSubtitleRect
flags	ffmpeg/include/libavcodec/xvmc.h	/^    unsigned int    flags;$/;"	m	struct:xvmc_pix_fmt
flags	ffmpeg/include/libavfilter/avfilter.h	/^    int flags;$/;"	m	struct:AVFilter
flags	ffmpeg/include/libavfilter/avfilter.h	/^    unsigned flags;$/;"	m	struct:AVFilterLink
flags	ffmpeg/include/libavformat/avformat.h	/^    int            flags;$/;"	m	struct:AVProgram
flags	ffmpeg/include/libavformat/avformat.h	/^    int flags:2;$/;"	m	struct:AVIndexEntry
flags	ffmpeg/include/libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVFormatContext
flags	ffmpeg/include/libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVInputFormat
flags	ffmpeg/include/libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVOutputFormat
flags	ffmpeg/include/libavutil/frame.h	/^    int flags;$/;"	m	struct:AVFrame
flags	ffmpeg/include/libavutil/motion_vector.h	/^    uint64_t flags;$/;"	m	struct:AVMotionVector
flags	ffmpeg/include/libavutil/opt.h	/^    int flags;$/;"	m	struct:AVOption
flags	ffmpeg/include/libavutil/pixdesc.h	/^    uint8_t flags;$/;"	m	struct:AVPixFmtDescriptor
flags	ffmpeg/include/libavutil/stereo3d.h	/^    int flags;$/;"	m	struct:AVStereo3D
flags	ffmpeg/include/libavutil/timecode.h	/^    uint32_t flags;     \/\/\/< flags such as drop frame, +24 hours support, ...$/;"	m	struct:__anon37
flags	glib/channel-main.c	/^    GFileCopyFlags                 flags;$/;"	m	struct:SpiceFileXferTask	file:
flags	spice-common/common/draw.h	/^    uint16_t flags;$/;"	m	struct:SpiceString
flags	spice-common/common/draw.h	/^    uint32_t flags;$/;"	m	struct:SpiceComposite
flags	spice-common/common/draw.h	/^    uint32_t flags;$/;"	m	struct:SpicePathSeg
flags	spice-common/common/draw.h	/^    uint8_t flags;$/;"	m	struct:SpiceBitmap
flags	spice-common/common/draw.h	/^    uint8_t flags;$/;"	m	struct:SpiceImageDescriptor
flags	spice-common/common/draw.h	/^    uint8_t flags;$/;"	m	struct:SpiceJPEGAlphaData
flags	spice-common/common/draw.h	/^    uint8_t flags;$/;"	m	struct:SpiceLZPLTData
flags	spice-common/common/draw.h	/^    uint8_t flags;$/;"	m	struct:SpiceLineAttr
flags	spice-common/common/draw.h	/^    uint8_t flags;$/;"	m	struct:SpiceQMask
flags	spice-common/common/gdi_canvas.c	/^    uint8_t flags;$/;"	m	struct:BitmapData	file:
flags	spice-common/common/mem.h	/^    uint32_t     flags;$/;"	m	struct:SpiceChunks
flags	spice-common/common/messages.h	/^    uint32_t flags;$/;"	m	struct:SpiceCursor
flags	spice-common/common/messages.h	/^    uint32_t flags;$/;"	m	struct:SpiceMsgDisplayHead
flags	spice-common/common/messages.h	/^    uint32_t flags;$/;"	m	struct:SpiceMsgDisplayStreamCreate
flags	spice-common/common/messages.h	/^    uint32_t flags;$/;"	m	struct:SpiceMsgMigrate
flags	spice-common/common/messages.h	/^    uint32_t flags;$/;"	m	struct:SpiceMsgSurfaceCreate
flags	spice-common/spice-protocol/spice/controller_prot.h	/^    uint32_t flags;$/;"	m	struct:ControllerInit
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t flags;$/;"	m	struct:QXLString
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t		flags;$/;"	m	struct:QXLComposite
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t flags;$/;"	m	struct:QXLCommandExt
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t flags;$/;"	m	struct:QXLHead
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t flags;$/;"	m	struct:QXLPathSeg
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t flags;$/;"	m	struct:QXLSurfaceCmd
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t flags;$/;"	m	struct:QXLSurfaceCreate
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint64_t flags;$/;"	m	struct:QXLRam
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint64_t flags;$/;"	m	struct:QXLRom
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t flags;$/;"	m	struct:QXLBitmap
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t flags;$/;"	m	struct:QXLImageDescriptor
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t flags;$/;"	m	struct:QXLLineAttr
flags	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t flags;$/;"	m	struct:QXLQMask
flags	spice-common/spice-protocol/spice/stats.h	/^    uint32_t flags;$/;"	m	struct:SpiceStatNode
flags	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t flags;$/;"	m	struct:VDAgentDisplayConfig
flags	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t flags;$/;"	m	struct:VDAgentMonitorsConfig
flags2	ffmpeg/include/libavcodec/avcodec.h	/^    int flags2;$/;"	m	struct:AVCodecContext
flush	ffmpeg/include/libavcodec/avcodec.h	/^    void (*flush)(AVCodecContext *);$/;"	m	struct:AVCodec
flush	spice-common/common/quic.c	/^static inline void flush(Encoder *encoder)$/;"	f	file:
flush_packets	ffmpeg/include/libavformat/avformat.h	/^    int flush_packets;$/;"	m	struct:AVFormatContext
flushing	glib/channel-main.c	/^    GSList                      *flushing;$/;"	m	struct:_SpiceMainChannelPrivate	file:
flushing	glib/channel-webdav.c	/^    gboolean flushing;$/;"	m	struct:_OutputQueue	file:
flushing	glib/spice-channel-priv.h	/^    GSList                      *flushing;$/;"	m	struct:_SpiceChannelPrivate
for_loop	spice-common/python_modules/codegen.py	/^    def for_loop(self, index, limit):$/;"	m	class:CodeWriter
fore_brush	spice-common/common/draw.h	/^    SpiceBrush fore_brush;$/;"	m	struct:SpiceText
fore_brush	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLBrush fore_brush;$/;"	m	struct:QXLText
fore_mode	spice-common/common/draw.h	/^    uint16_t fore_mode;$/;"	m	struct:SpiceStroke
fore_mode	spice-common/common/draw.h	/^    uint16_t fore_mode;$/;"	m	struct:SpiceText
fore_mode	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t fore_mode;$/;"	m	struct:QXLStroke
fore_mode	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t fore_mode;$/;"	m	struct:QXLText
fore_rop	spice-common/common/canvas_base.c	/^    SpiceROP fore_rop;$/;"	m	struct:__anon121	file:
format	ffmpeg/include/libavcodec/avcodec.h	/^    int format;$/;"	m	struct:AVCodecParserContext
format	ffmpeg/include/libavcodec/avcodec.h	/^    uint16_t format; \/* 0 = graphics *\/$/;"	m	struct:AVSubtitle
format	ffmpeg/include/libavcodec/vda.h	/^    int                 format;$/;"	m	struct:vda_context
format	ffmpeg/include/libavfilter/avfilter.h	/^    int format;                 \/\/\/< agreed upon media format$/;"	m	struct:AVFilterLink
format	ffmpeg/include/libavfilter/avfilter.h	/^    int format;                 \/\/\/< media format$/;"	m	struct:AVFilterBuffer
format	ffmpeg/include/libavfilter/avfilter.h	/^    int format;                 \/\/\/< media format$/;"	m	struct:AVFilterBufferRef
format	ffmpeg/include/libavutil/frame.h	/^    int format;$/;"	m	struct:AVFrame
format	glib/channel-display-priv.h	/^    enum SpiceSurfaceFmt        format;$/;"	m	struct:display_surface	typeref:enum:display_surface::SpiceSurfaceFmt
format	glib/channel-display.h	/^    enum SpiceSurfaceFmt format;$/;"	m	struct:_SpiceDisplayPrimary	typeref:enum:_SpiceDisplayPrimary::SpiceSurfaceFmt
format	spice-common/common/canvas_base.c	/^    uint32_t format;$/;"	m	struct:CanvasBase	file:
format	spice-common/common/canvas_utils.h	/^    pixman_format_code_t format;$/;"	m	struct:PixmanData
format	spice-common/common/draw.h	/^    uint8_t format;$/;"	m	struct:SpiceBitmap
format	spice-common/common/glc.h	/^    GLCImageFormat format;$/;"	m	struct:GLCPImage
format	spice-common/common/messages.h	/^    uint32_t format; \/\/SPICE_AUDIO_FMT_?$/;"	m	struct:SpiceMsgPlaybackStart
format	spice-common/common/messages.h	/^    uint32_t format; \/\/SPICE_AUDIO_FMT_?$/;"	m	struct:SpiceMsgRecordStart
format	spice-common/common/messages.h	/^    uint32_t format;$/;"	m	struct:SpiceMsgSurfaceCreate
format	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t format;$/;"	m	struct:QXLSurface
format	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t format;$/;"	m	struct:QXLSurfaceCreate
format	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t format;$/;"	m	struct:QXLBitmap
format	win32/win32-spice-widget-priv.h	/^    enum SpiceSurfaceFmt    format;$/;"	m	struct:_SpiceDisplayPrivate	typeref:enum:_SpiceDisplayPrivate::SpiceSurfaceFmt
format_probesize	ffmpeg/include/libavformat/avformat.h	/^    int format_probesize;$/;"	m	struct:AVFormatContext
format_whitelist	ffmpeg/include/libavformat/avformat.h	/^    char *format_whitelist;$/;"	m	struct:AVFormatContext
found_decoder	ffmpeg/include/libavformat/avformat.h	/^        int found_decoder;$/;"	m	struct:AVStream::__anon35
four_bytes_pixel_t	spice-common/common/quic.c	/^typedef struct ATTR_PACKED four_bytes_pixel_t {$/;"	s	file:
four_bytes_t	spice-common/common/quic.c	/^} four_bytes_t;$/;"	t	typeref:struct:four_bytes_pixel_t	file:
fps	ffmpeg/include/libavdevice/avdevice.h	/^    AVRational fps;$/;"	m	struct:AVDeviceCapabilitiesQuery
fps	ffmpeg/include/libavutil/timecode.h	/^    unsigned fps;       \/\/\/< frame per second; must be consistent with the rate field$/;"	m	struct:__anon37
fps_first_dts	ffmpeg/include/libavformat/avformat.h	/^        int64_t fps_first_dts;$/;"	m	struct:AVStream::__anon35
fps_first_dts_idx	ffmpeg/include/libavformat/avformat.h	/^        int     fps_first_dts_idx;$/;"	m	struct:AVStream::__anon35
fps_last_dts	ffmpeg/include/libavformat/avformat.h	/^        int64_t fps_last_dts;$/;"	m	struct:AVStream::__anon35
fps_last_dts_idx	ffmpeg/include/libavformat/avformat.h	/^        int     fps_last_dts_idx;$/;"	m	struct:AVStream::__anon35
fps_probe_size	ffmpeg/include/libavformat/avformat.h	/^    int fps_probe_size;$/;"	m	struct:AVFormatContext
frame_bits	ffmpeg/include/libavcodec/avcodec.h	/^    int frame_bits;$/;"	m	struct:AVCodecContext
frame_bytes	glib/channel-record.c	/^    gsize                       frame_bytes;$/;"	m	struct:_SpiceRecordChannelPrivate	file:
frame_count	ffmpeg/include/libavfilter/avfilter.h	/^    int64_t frame_count;$/;"	m	struct:AVFilterLink
frame_count	glib/channel-playback.c	/^    guint32                     frame_count;$/;"	m	struct:_SpicePlaybackChannelPrivate	file:
frame_height	ffmpeg/include/libavdevice/avdevice.h	/^    int frame_height;$/;"	m	struct:AVDeviceCapabilitiesQuery
frame_number	ffmpeg/include/libavcodec/avcodec.h	/^    int frame_number;$/;"	m	struct:AVCodecContext
frame_offset	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t frame_offset; \/* offset of the current frame *\/$/;"	m	struct:AVCodecParserContext
frame_priv_data_size	ffmpeg/include/libavcodec/avcodec.h	/^    int frame_priv_data_size;$/;"	m	struct:AVHWAccel
frame_rate	ffmpeg/include/libavfilter/avfilter.h	/^    AVRational frame_rate;$/;"	m	struct:AVFilterLink
frame_requested	ffmpeg/include/libavfilter/avfilter.h	/^    unsigned frame_requested;$/;"	m	struct:AVFilterLink
frame_size	ffmpeg/include/libavcodec/avcodec.h	/^    int frame_size;$/;"	m	struct:AVCodecContext
frame_size	ffmpeg/include/libavcodec/dv_profile.h	/^    int              frame_size;            \/* total size of one frame in bytes *\/$/;"	m	struct:AVDVProfile
frame_skip_cmp	ffmpeg/include/libavcodec/avcodec.h	/^    int frame_skip_cmp;$/;"	m	struct:AVCodecContext
frame_skip_exp	ffmpeg/include/libavcodec/avcodec.h	/^    int frame_skip_exp;$/;"	m	struct:AVCodecContext
frame_skip_factor	ffmpeg/include/libavcodec/avcodec.h	/^    int frame_skip_factor;$/;"	m	struct:AVCodecContext
frame_skip_threshold	ffmpeg/include/libavcodec/avcodec.h	/^    int frame_skip_threshold;$/;"	m	struct:AVCodecContext
frame_width	ffmpeg/include/libavdevice/avdevice.h	/^    int frame_width;$/;"	m	struct:AVDeviceCapabilitiesQuery
framerate	ffmpeg/include/libavcodec/avcodec.h	/^    AVRational framerate;$/;"	m	struct:AVCodecContext
free	ffmpeg/include/libavfilter/avfilter.h	/^    void (*free)(struct AVFilterBuffer *buf);$/;"	m	struct:AVFilterBuffer
free	spice-common/common/lz.h	/^    void (*free)(LzUsrContext *usr, void *ptr);$/;"	m	struct:LzUsrContext
free	spice-common/common/quic.h	/^    void (*free)(QuicUsrContext *usr, void *ptr);$/;"	m	struct:QuicUsrContext
free_bitmap	win32/win32_io.c	/^void free_bitmap(void* p)$/;"	f
free_bitmap	win32/win32_spice_interface_types.h	/^   void (*free_bitmap)(void* p);$/;"	m	struct:SPICE_Invalidate
free_connect_data	glib/wocky-http-proxy.c	/^free_connect_data (ConnectAsyncData *data)$/;"	f	file:
free_data	spice-common/common/marshaller.c	/^    spice_marshaller_item_free_func free_data;$/;"	m	struct:__anon135	file:
free_device_capabilities	ffmpeg/include/libavformat/avformat.h	/^    int (*free_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVInputFormat
free_device_capabilities	ffmpeg/include/libavformat/avformat.h	/^    int (*free_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVOutputFormat
free_family_stat	spice-common/common/quic.c	/^static void free_family_stat(QuicUsrContext *usr, FamilyStat *family_stat)$/;"	f	file:
free_image_segs	spice-common/common/lz.c	/^    LzImageSegment *free_image_segs;$/;"	m	struct:Encoder	file:
free_item_data	spice-common/common/marshaller.c	/^static void free_item_data(SpiceMarshaller *m)$/;"	f	file:
free_items	spice-common/common/marshaller.c	/^static void free_items(SpiceMarshaller *m)$/;"	f	file:
free_mask	spice-common/common/gdi_canvas.c	/^static void free_mask(struct BitmapData *bitmap)$/;"	f	file:
free_tass_vertex_bufs	spice-common/common/glc.c	/^static void free_tass_vertex_bufs(InternaCtx *ctx)$/;"	f	file:
free_tess_vertex	spice-common/common/glc.c	/^    TassVertex *free_tess_vertex;$/;"	m	struct:InternaCtx	file:
frequency	spice-common/common/messages.h	/^    uint16_t frequency;$/;"	m	struct:SpiceMsgCursorTrail
frequency	spice-common/common/messages.h	/^    uint32_t frequency;$/;"	m	struct:SpiceMsgPlaybackStart
frequency	spice-common/common/messages.h	/^    uint32_t frequency;$/;"	m	struct:SpiceMsgRecordStart
frequency	spice-common/common/snd_codec.c	/^    int frequency;$/;"	m	struct:__anon134	file:
frequency	spice-common/spice-protocol/spice/qxl_dev.h	/^            uint16_t frequency;$/;"	m	struct:QXLCursorCmd::__anon70::SPICE_ATTR_PACKED
from	glib/channel-main.c	/^    struct coroutine *from;$/;"	m	struct:spice_migrate	typeref:struct:spice_migrate::coroutine	file:
from	glib/spice-session.c	/^    struct coroutine *from;$/;"	m	struct:spice_open_host	typeref:struct:spice_open_host::coroutine	file:
from_surface	spice-common/common/gdi_canvas.c	/^    int from_surface;$/;"	m	struct:BitmapData	file:
full_migration	glib/spice-session-priv.h	/^    gboolean          full_migration; \/* seamless migration indicator *\/$/;"	m	struct:_SpiceSessionPrivate
fullscreen	win32/win32-spicy.h	/^    bool             fullscreen;$/;"	m	struct:_SpiceWindow
func	glib/gio-coroutine.c	/^    GConditionWaitFunc func;$/;"	m	struct:_GConditionWaitSource	file:
func_append	spice-common/build-aux/ltmain.sh	/^func_append ()$/;"	f
func_append_quoted	spice-common/build-aux/ltmain.sh	/^func_append_quoted ()$/;"	f
func_arith	spice-common/build-aux/ltmain.sh	/^func_arith ()$/;"	f
func_basename	spice-common/build-aux/ltmain.sh	/^func_basename ()$/;"	f
func_check_version_match	spice-common/build-aux/ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	spice-common/build-aux/ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	spice-common/build-aux/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	spice-common/build-aux/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	spice-common/build-aux/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	spice-common/build-aux/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	spice-common/build-aux/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	spice-common/build-aux/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	spice-common/build-aux/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	spice-common/build-aux/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	spice-common/build-aux/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	spice-common/build-aux/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	spice-common/build-aux/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	spice-common/build-aux/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	spice-common/build-aux/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	spice-common/build-aux/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	spice-common/build-aux/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	spice-common/build-aux/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	spice-common/build-aux/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	spice-common/build-aux/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	spice-common/build-aux/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	spice-common/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	spice-common/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	spice-common/build-aux/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	spice-common/build-aux/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	spice-common/build-aux/ltmain.sh	/^func_cygpath ()$/;"	f
func_dirname	spice-common/build-aux/ltmain.sh	/^func_dirname ()$/;"	f
func_dirname_and_basename	spice-common/build-aux/ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	spice-common/build-aux/ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	spice-common/build-aux/ltmain.sh	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	spice-common/build-aux/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	spice-common/build-aux/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	spice-common/build-aux/ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	spice-common/build-aux/ltmain.sh	/^func_error ()$/;"	f
func_exec_program	spice-common/build-aux/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	spice-common/build-aux/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_execute_cmds	spice-common/build-aux/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	spice-common/build-aux/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	spice-common/build-aux/ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	spice-common/build-aux/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	spice-common/build-aux/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	spice-common/build-aux/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	spice-common/build-aux/ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	spice-common/build-aux/ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	spice-common/build-aux/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	spice-common/build-aux/ltmain.sh	/^func_grep ()$/;"	f
func_help	spice-common/build-aux/ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	spice-common/build-aux/ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	spice-common/build-aux/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	spice-common/build-aux/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	spice-common/build-aux/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	spice-common/build-aux/ltmain.sh	/^func_len ()$/;"	f
func_lo2o	spice-common/build-aux/ltmain.sh	/^func_lo2o ()$/;"	f
func_lt_dump_args	spice-common/build-aux/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	spice-common/build-aux/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	spice-common/build-aux/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	spice-common/build-aux/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	spice-common/build-aux/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	spice-common/build-aux/ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	spice-common/build-aux/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	spice-common/build-aux/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	spice-common/build-aux/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	spice-common/build-aux/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	spice-common/build-aux/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	spice-common/build-aux/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	spice-common/build-aux/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	spice-common/build-aux/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	spice-common/build-aux/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	spice-common/build-aux/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	spice-common/build-aux/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	spice-common/build-aux/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	spice-common/build-aux/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	spice-common/build-aux/ltmain.sh	/^func_relative_path ()$/;"	f
func_replace_sysroot	spice-common/build-aux/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	spice-common/build-aux/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_show_eval	spice-common/build-aux/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	spice-common/build-aux/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	spice-common/build-aux/ltmain.sh	/^func_source ()$/;"	f
func_split_long_opt	spice-common/build-aux/ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_short_opt	spice-common/build-aux/ltmain.sh	/^func_split_short_opt ()$/;"	f
func_stripname	spice-common/build-aux/ltmain.sh	/^func_stripname ()$/;"	f
func_to_host_file	spice-common/build-aux/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	spice-common/build-aux/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	spice-common/build-aux/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	spice-common/build-aux/ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	spice-common/build-aux/ltmain.sh	/^func_usage ()$/;"	f
func_verbose	spice-common/build-aux/ltmain.sh	/^func_verbose ()$/;"	f
func_version	spice-common/build-aux/ltmain.sh	/^func_version ()$/;"	f
func_warning	spice-common/build-aux/ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	spice-common/build-aux/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	spice-common/build-aux/ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	spice-common/build-aux/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	spice-common/build-aux/ltmain.sh	/^func_xform ()$/;"	f
function	spice-common/python_modules/codegen.py	/^    def function(self, name, return_type, args, static = False):$/;"	m	class:CodeWriter
function_helper	spice-common/python_modules/codegen.py	/^    def function_helper(self):$/;"	m	class:CodeWriter
g	glib/decode-glz.c	/^    uint8_t g;$/;"	m	struct:rgb24_pixel_t	file:
g	glib/decode-glz.c	/^    uint8_t g;$/;"	m	struct:rgb32_pixel_t	file:
g	spice-common/common/lz.c	/^    uint8_t g;$/;"	m	struct:rgb24_pixel_t	file:
g	spice-common/common/lz.c	/^    uint8_t g;$/;"	m	struct:rgb32_pixel_t	file:
g	spice-common/common/quic.c	/^    BYTE g;$/;"	m	struct:rgb24_pixel_t	file:
g	spice-common/common/quic.c	/^    BYTE g;$/;"	m	struct:rgb32_pixel_t	file:
g	win32/create_bmp.h	/^   BYTE g;    $/;"	m	struct:__anon52
g_cclosure_user_marshal_BOOLEAN__POINTER_UINT	glib/spice-marshal.c	/^g_cclosure_user_marshal_BOOLEAN__POINTER_UINT (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_BOOLEAN__UINT	glib/spice-marshal.c	/^g_cclosure_user_marshal_BOOLEAN__UINT (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_BOOLEAN__UINT_POINTER_UINT	glib/spice-marshal.c	/^g_cclosure_user_marshal_BOOLEAN__UINT_POINTER_UINT (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_BOOLEAN__UINT_UINT	glib/spice-marshal.c	/^g_cclosure_user_marshal_BOOLEAN__UINT_UINT (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_VOID__BOXED_BOXED	glib/spice-marshal.c	/^g_cclosure_user_marshal_VOID__BOXED_BOXED (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_VOID__INT_INT	glib/spice-marshal.c	/^g_cclosure_user_marshal_VOID__INT_INT (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_VOID__INT_INT_INT	glib/spice-marshal.c	/^g_cclosure_user_marshal_VOID__INT_INT_INT (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_VOID__INT_INT_INT_INT	glib/spice-marshal.c	/^g_cclosure_user_marshal_VOID__INT_INT_INT_INT (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_VOID__INT_INT_INT_INT_INT_POINTER	glib/spice-marshal.c	/^g_cclosure_user_marshal_VOID__INT_INT_INT_INT_INT_POINTER (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_VOID__INT_INT_INT_INT_POINTER	glib/spice-marshal.c	/^g_cclosure_user_marshal_VOID__INT_INT_INT_INT_POINTER (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_VOID__OBJECT_OBJECT	glib/spice-marshal.c	/^g_cclosure_user_marshal_VOID__OBJECT_OBJECT (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_VOID__POINTER_INT	glib/spice-marshal.c	/^g_cclosure_user_marshal_VOID__POINTER_INT (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_VOID__UINT_POINTER_UINT	glib/spice-marshal.c	/^g_cclosure_user_marshal_VOID__UINT_POINTER_UINT (GClosure     *closure,$/;"	f
g_cclosure_user_marshal_VOID__UINT_UINT_POINTER_UINT	glib/spice-marshal.c	/^g_cclosure_user_marshal_VOID__UINT_UINT_POINTER_UINT (GClosure     *closure,$/;"	f
g_clear_object	glib/glib-compat.h	84;"	d
g_clear_pointer	glib/glib-compat.h	121;"	d
g_condition_wait_check	glib/gio-coroutine.c	/^static gboolean g_condition_wait_check(GSource *src)$/;"	f	file:
g_condition_wait_dispatch	glib/gio-coroutine.c	/^static gboolean g_condition_wait_dispatch(GSource *src G_GNUC_UNUSED,$/;"	f	file:
g_condition_wait_helper	glib/gio-coroutine.c	/^static gboolean g_condition_wait_helper(gpointer data)$/;"	f	file:
g_condition_wait_prepare	glib/gio-coroutine.c	/^static gboolean g_condition_wait_prepare(GSource *src,$/;"	f	file:
g_coroutine_condition_cancel	glib/gio-coroutine.c	/^void g_coroutine_condition_cancel(GCoroutine *coroutine)$/;"	f
g_coroutine_condition_wait	glib/gio-coroutine.c	/^gboolean g_coroutine_condition_wait(GCoroutine *self, GConditionWaitFunc func, gpointer data)$/;"	f
g_coroutine_object_notify	glib/gio-coroutine.c	/^void g_coroutine_object_notify(GObject *object,$/;"	f
g_coroutine_self	glib/gio-coroutine.c	/^GCoroutine* g_coroutine_self(void)$/;"	f
g_coroutine_signal_emit	glib/gio-coroutine.c	/^g_coroutine_signal_emit(gpointer instance, guint signal_id,$/;"	f
g_coroutine_socket_wait	glib/gio-coroutine.c	/^GIOCondition g_coroutine_socket_wait(GCoroutine *self,$/;"	f
g_coroutine_wakeup	glib/gio-coroutine.c	/^void g_coroutine_wakeup(GCoroutine *coroutine)$/;"	f
g_get_monotonic_time	glib/glib-compat.c	/^guint64 g_get_monotonic_time(void)$/;"	f
g_io_wait_helper	glib/gio-coroutine.c	/^static gboolean g_io_wait_helper(GSocket *sock G_GNUC_UNUSED,$/;"	f	file:
g_marshal_value_peek_boolean	glib/spice-marshal.c	31;"	d	file:
g_marshal_value_peek_boolean	glib/spice-marshal.c	7;"	d	file:
g_marshal_value_peek_boxed	glib/spice-marshal.c	22;"	d	file:
g_marshal_value_peek_boxed	glib/spice-marshal.c	46;"	d	file:
g_marshal_value_peek_char	glib/spice-marshal.c	32;"	d	file:
g_marshal_value_peek_char	glib/spice-marshal.c	8;"	d	file:
g_marshal_value_peek_double	glib/spice-marshal.c	19;"	d	file:
g_marshal_value_peek_double	glib/spice-marshal.c	43;"	d	file:
g_marshal_value_peek_enum	glib/spice-marshal.c	16;"	d	file:
g_marshal_value_peek_enum	glib/spice-marshal.c	40;"	d	file:
g_marshal_value_peek_flags	glib/spice-marshal.c	17;"	d	file:
g_marshal_value_peek_flags	glib/spice-marshal.c	41;"	d	file:
g_marshal_value_peek_float	glib/spice-marshal.c	18;"	d	file:
g_marshal_value_peek_float	glib/spice-marshal.c	42;"	d	file:
g_marshal_value_peek_int	glib/spice-marshal.c	10;"	d	file:
g_marshal_value_peek_int	glib/spice-marshal.c	34;"	d	file:
g_marshal_value_peek_int64	glib/spice-marshal.c	14;"	d	file:
g_marshal_value_peek_int64	glib/spice-marshal.c	38;"	d	file:
g_marshal_value_peek_long	glib/spice-marshal.c	12;"	d	file:
g_marshal_value_peek_long	glib/spice-marshal.c	36;"	d	file:
g_marshal_value_peek_object	glib/spice-marshal.c	24;"	d	file:
g_marshal_value_peek_object	glib/spice-marshal.c	48;"	d	file:
g_marshal_value_peek_param	glib/spice-marshal.c	21;"	d	file:
g_marshal_value_peek_param	glib/spice-marshal.c	45;"	d	file:
g_marshal_value_peek_pointer	glib/spice-marshal.c	23;"	d	file:
g_marshal_value_peek_pointer	glib/spice-marshal.c	47;"	d	file:
g_marshal_value_peek_string	glib/spice-marshal.c	20;"	d	file:
g_marshal_value_peek_string	glib/spice-marshal.c	44;"	d	file:
g_marshal_value_peek_uchar	glib/spice-marshal.c	33;"	d	file:
g_marshal_value_peek_uchar	glib/spice-marshal.c	9;"	d	file:
g_marshal_value_peek_uint	glib/spice-marshal.c	11;"	d	file:
g_marshal_value_peek_uint	glib/spice-marshal.c	35;"	d	file:
g_marshal_value_peek_uint64	glib/spice-marshal.c	15;"	d	file:
g_marshal_value_peek_uint64	glib/spice-marshal.c	39;"	d	file:
g_marshal_value_peek_ulong	glib/spice-marshal.c	13;"	d	file:
g_marshal_value_peek_ulong	glib/spice-marshal.c	37;"	d	file:
g_marshal_value_peek_variant	glib/spice-marshal.c	25;"	d	file:
g_marshal_value_peek_variant	glib/spice-marshal.c	49;"	d	file:
g_queue_cond	glib/channel-display-priv.h	/^    GCond			g_queue_cond;$/;"	m	struct:display_stream
g_queue_msg	glib/channel-display-priv.h	/^    GQueue 		*g_queue_msg;$/;"	m	struct:display_stream
g_queue_rec_mutex	glib/channel-display-priv.h	/^    GRecMutex 		g_queue_rec_mutex;$/;"	m	struct:display_stream
g_simple_async_result_take_error	glib/glib-compat.c	/^g_simple_async_result_take_error (GSimpleAsyncResult *simple,$/;"	f
g_slist_free_full	glib/glib-compat.c	/^g_slist_free_full (GSList         *list,$/;"	f
g_source_set_name	glib/glib-compat.h	70;"	d
g_thread_decoding	glib/channel-display-priv.h	/^    GThread		*g_thread_decoding;$/;"	m	struct:display_stream
g_thread_exit	glib/channel-display-priv.h	/^    gboolean                g_thread_exit;$/;"	m	struct:display_stream
g_udev_client_class_init	glib/win-usb-dev.c	/^static void g_udev_client_class_init(GUdevClientClass *klass)$/;"	f	file:
g_udev_client_error_quark	glib/win-usb-dev.c	/^GQuark g_udev_client_error_quark(void)$/;"	f
g_udev_client_finalize	glib/win-usb-dev.c	/^static void g_udev_client_finalize(GObject *gobject)$/;"	f	file:
g_udev_client_free_device_list	glib/win-usb-dev.c	/^static void g_udev_client_free_device_list(GList **devs)$/;"	f	file:
g_udev_client_init	glib/win-usb-dev.c	/^static void g_udev_client_init(GUdevClient *self)$/;"	f	file:
g_udev_client_initable_iface_init	glib/win-usb-dev.c	/^static void g_udev_client_initable_iface_init(GInitableIface *iface)$/;"	f	file:
g_udev_client_initable_init	glib/win-usb-dev.c	/^g_udev_client_initable_init(GInitable *initable, GCancellable *cancellable,$/;"	f	file:
g_udev_client_list_devices	glib/win-usb-dev.c	/^g_udev_client_list_devices(GUdevClient *self, GList **devs,$/;"	f	file:
g_udev_client_new	glib/win-usb-dev.c	/^GUdevClient *g_udev_client_new(const gchar* const *subsystems)$/;"	f
g_udev_client_query_by_subsystem	glib/win-usb-dev.c	/^GList *g_udev_client_query_by_subsystem(GUdevClient *self, const gchar *subsystem)$/;"	f
g_udev_device_class_init	glib/win-usb-dev.c	/^static void g_udev_device_class_init(GUdevDeviceClass *klass)$/;"	f	file:
g_udev_device_finalize	glib/win-usb-dev.c	/^static void g_udev_device_finalize(GObject *object)$/;"	f	file:
g_udev_device_get_property	glib/win-usb-dev.c	/^const gchar *g_udev_device_get_property(GUdevDevice *udev, const gchar *property)$/;"	f
g_udev_device_get_sysfs_attr	glib/win-usb-dev.c	/^const gchar *g_udev_device_get_sysfs_attr(GUdevDevice *udev, const gchar *attr)$/;"	f
g_udev_device_init	glib/win-usb-dev.c	/^static void g_udev_device_init(GUdevDevice *device)$/;"	f	file:
g_udev_device_new	glib/win-usb-dev.c	/^static GUdevDevice *g_udev_device_new(GUdevDeviceInfo *udevinfo)$/;"	f	file:
g_udev_device_print	glib/win-usb-dev.c	/^static void g_udev_device_print(GUdevDevice *udev, const gchar *msg)$/;"	f	file:
g_udev_device_print_list	glib/win-usb-dev.c	/^static void g_udev_device_print_list(GList *l, const gchar *msg) {}$/;"	f	file:
g_udev_device_print_list	glib/win-usb-dev.c	/^static void g_udev_device_print_list(GList *l, const gchar *msg)$/;"	f	file:
g_udev_skip_search	glib/win-usb-dev.c	/^static gboolean g_udev_skip_search(GUdevDevice *udev)$/;"	f	file:
gc	win32/win32-spice-widget-priv.h	/^    GC                      gc;$/;"	m	struct:_SpiceDisplayPrivate
gdi_canvas_clear	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_clear(SpiceCanvas *spice_canvas)$/;"	f	file:
gdi_canvas_copy_bits	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_copy_bits(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpicePoint *src_pos)$/;"	f	file:
gdi_canvas_create	spice-common/common/gdi_canvas.c	/^SpiceCanvas *gdi_canvas_create(int width, int height,$/;"	f
gdi_canvas_destroy	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_destroy(SpiceCanvas *spice_canvas)$/;"	f	file:
gdi_canvas_draw_alpha_blend	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_alpha_blend(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceAlphaBlend* alpha_blend)$/;"	f	file:
gdi_canvas_draw_blackness	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_blackness(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceBlackness *blackness)$/;"	f	file:
gdi_canvas_draw_blend	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_blend(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceBlend *blend)$/;"	f	file:
gdi_canvas_draw_copy	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_copy(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceCopy *copy)$/;"	f	file:
gdi_canvas_draw_fill	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_fill(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceFill *fill)$/;"	f	file:
gdi_canvas_draw_invers	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_invers(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceInvers *invers)$/;"	f	file:
gdi_canvas_draw_opaque	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_opaque(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceOpaque *opaque)$/;"	f	file:
gdi_canvas_draw_rop3	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_rop3(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceRop3 *rop3)$/;"	f	file:
gdi_canvas_draw_stroke	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_stroke(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceStroke *stroke)$/;"	f	file:
gdi_canvas_draw_text	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_text(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceText *text)$/;"	f	file:
gdi_canvas_draw_transparent	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_transparent(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip,$/;"	f	file:
gdi_canvas_draw_whiteness	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_draw_whiteness(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceWhiteness *whiteness)$/;"	f	file:
gdi_canvas_init	spice-common/common/gdi_canvas.c	/^void gdi_canvas_init(void) \/\/unsafe global function$/;"	f
gdi_canvas_ops	spice-common/common/gdi_canvas.c	/^static SpiceCanvasOps gdi_canvas_ops;$/;"	v	file:
gdi_canvas_put_image	spice-common/common/gdi_canvas.c	/^static void gdi_canvas_put_image(SpiceCanvas *spice_canvas, HDC dc, const SpiceRect *dest, const uint8_t *src_data,$/;"	f	file:
gdi_draw_bitmap	spice-common/common/gdi_canvas.c	/^static void gdi_draw_bitmap(HDC dest_dc, const SpiceRect *src, const SpiceRect *dest,$/;"	f	file:
gdi_draw_bitmap_alpha	spice-common/common/gdi_canvas.c	/^static void gdi_draw_bitmap_alpha(HDC dest_dc, const SpiceRect *src, const SpiceRect *dest,$/;"	f	file:
gdi_draw_bitmap_redrop	spice-common/common/gdi_canvas.c	/^static void gdi_draw_bitmap_redrop(HDC dest_dc, const SpiceRect *src, const SpiceRect *dest,$/;"	f	file:
gdi_draw_bitmap_transparent	spice-common/common/gdi_canvas.c	/^static void gdi_draw_bitmap_transparent(GdiCanvas *canvas, HDC dest_dc, const SpiceRect *src,$/;"	f	file:
gdi_draw_image	spice-common/common/gdi_canvas.c	/^static void gdi_draw_image(HDC dest_dc, const SpiceRect *src, const SpiceRect *dest,$/;"	f	file:
gdi_draw_image_alpha	spice-common/common/gdi_canvas.c	/^static void gdi_draw_image_alpha(HDC dest_dc, const SpiceRect *src, const SpiceRect *dest,$/;"	f	file:
gdi_draw_image_rop3	spice-common/common/gdi_canvas.c	/^static void gdi_draw_image_rop3(HDC dest_dc, const SpiceRect *src, const SpiceRect *dest,$/;"	f	file:
gdi_draw_image_transparent	spice-common/common/gdi_canvas.c	/^static void gdi_draw_image_transparent(GdiCanvas *canvas, HDC dest_dc, const SpiceRect *src,$/;"	f	file:
gdi_get_userstyle	spice-common/common/gdi_canvas.c	/^static uint32_t *gdi_get_userstyle(GdiCanvas *canvas, uint8_t nseg, SPICE_FIXED28_4* style, int start_is_gap)$/;"	f	file:
gdi_handlers	spice-common/common/canvas_utils.c	/^static int gdi_handlers = 0;$/;"	v	file:
gen	spice-common/spice-protocol/spice/vdi_dev.h	/^    uint32_t gen;$/;"	m	struct:VDIPortPacket
generation	spice-common/common/messages.h	/^    uint32_t generation;$/;"	m	struct:SpiceMsgSetAck
generation	spice-common/common/messages.h	/^  uint32_t generation;$/;"	m	struct:SpiceMsgcAckSync
generation	spice-common/spice-protocol/spice/stats.h	/^    uint32_t generation;$/;"	m	struct:SpiceStat
generation	spice-common/spice-protocol/spice/vdi_dev.h	/^    uint32_t generation;$/;"	m	struct:VDIPortRam
get	spice-common/common/canvas_base.h	/^    SpicePalette *(*get)(SpicePaletteCache *cache,$/;"	m	struct:__anon142
get	spice-common/common/canvas_base.h	/^    pixman_image_t *(*get)(SpiceImageCache *cache,$/;"	m	struct:__anon140
get	spice-common/common/canvas_base.h	/^ SpiceCanvas *(*get)(SpiceImageSurfaces *surfaces,$/;"	m	struct:__anon141
get_array_size	spice-common/python_modules/marshal.py	/^def get_array_size(array, container_src):$/;"	f
get_audio_buffer	ffmpeg/include/libavfilter/avfilter.h	/^    AVFrame *(*get_audio_buffer)(AVFilterLink *link, int nb_samples);$/;"	m	struct:AVFilterPad
get_brush	spice-common/common/gdi_canvas.c	/^static HBRUSH get_brush(GdiCanvas *canvas, SpiceBrush *brush, RecurciveMutex **brush_lock)$/;"	f	file:
get_buffer	ffmpeg/include/libavcodec/avcodec.h	/^    int (*get_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
get_buffer2	ffmpeg/include/libavcodec/avcodec.h	/^    int (*get_buffer2)(struct AVCodecContext *s, AVFrame *frame, int flags);$/;"	m	struct:AVCodecContext
get_category	ffmpeg/include/libavutil/log.h	/^    AVClassCategory (*get_category)(void* ctx);$/;"	m	struct:AVClass
get_check	spice-common/python_modules/ptypes.py	/^    def get_check(self, var_cname, var_type):$/;"	m	class:SwitchCase
get_client_message	spice-common/python_modules/ptypes.py	/^    def get_client_message(self, name):$/;"	m	class:ChannelType
get_color_ref	spice-common/common/gdi_canvas.c	/^static inline COLORREF get_color_ref(GdiCanvas *canvas, uint32_t color)$/;"	f	file:
get_converted_color	spice-common/common/gdi_canvas.c	/^static inline uint8_t get_converted_color(uint8_t color)$/;"	f	file:
get_device_list	ffmpeg/include/libavformat/avformat.h	/^    int (*get_device_list)(struct AVFormatContext *s, struct AVDeviceInfoList *device_list);$/;"	m	struct:AVInputFormat
get_device_list	ffmpeg/include/libavformat/avformat.h	/^    int (*get_device_list)(struct AVFormatContext *s, struct AVDeviceInfoList *device_list);$/;"	m	struct:AVOutputFormat
get_display_id	win32/win32-spice-widget.c	/^gint get_display_id(SpiceDisplay *display)$/;"	f
get_fixed_nw_offset	spice-common/python_modules/ptypes.py	/^    def get_fixed_nw_offset(self, member):$/;"	m	class:ContainerType
get_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def get_fixed_nw_size(self):$/;"	m	class:ArrayType
get_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def get_fixed_nw_size(self):$/;"	m	class:ContainerType
get_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def get_fixed_nw_size(self):$/;"	m	class:EnumBaseType
get_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def get_fixed_nw_size(self):$/;"	m	class:IntegerType
get_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def get_fixed_nw_size(self):$/;"	m	class:Member
get_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def get_fixed_nw_size(self):$/;"	m	class:PointerType
get_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def get_fixed_nw_size(self):$/;"	m	class:Switch
get_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def get_fixed_nw_size(self):$/;"	m	class:TypeAlias
get_format	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVPixelFormat (*get_format)(struct AVCodecContext *s, const enum AVPixelFormat * fmt);$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::get_format
get_image	spice-common/common/canvas_base.h	/^    pixman_image_t *(*get_image)(SpiceCanvas *canvas, int force_opaque);$/;"	m	struct:__anon145
get_image	spice-common/common/sw_canvas.c	/^static pixman_image_t *get_image(SpiceCanvas *canvas, int force_opaque)$/;"	f	file:
get_line	glib/spice-util.c	/^static gssize get_line(const gchar *str, gsize len,$/;"	f	file:
get_lossless	spice-common/common/canvas_base.h	/^    pixman_image_t *(*get_lossless)(SpiceImageCache *cache,$/;"	m	struct:__anon140
get_mask_bitmap	spice-common/common/gdi_canvas.c	/^static struct BitmapData get_mask_bitmap(struct GdiCanvas *canvas, struct SpiceQMask *mask)$/;"	f	file:
get_minor_attr	spice-common/python_modules/ptypes.py	/^    def get_minor_attr(self):$/;"	m	class:Containee
get_msg_handler	glib/channel-base.c	/^get_msg_handler(SpiceChannel *channel, SpiceMsgIn *in, gpointer data)$/;"	f	file:
get_named_types	spice-common/python_modules/ptypes.py	/^def get_named_types():$/;"	f
get_num_pointers	spice-common/python_modules/ptypes.py	/^    def get_num_pointers(self):$/;"	m	class:ArrayType
get_num_pointers	spice-common/python_modules/ptypes.py	/^    def get_num_pointers(self):$/;"	m	class:ContainerType
get_num_pointers	spice-common/python_modules/ptypes.py	/^    def get_num_pointers(self):$/;"	m	class:Member
get_num_pointers	spice-common/python_modules/ptypes.py	/^    def get_num_pointers(self):$/;"	m	class:PointerType
get_num_pointers	spice-common/python_modules/ptypes.py	/^    def get_num_pointers(self):$/;"	m	class:Switch
get_num_pointers	spice-common/python_modules/ptypes.py	/^    def get_num_pointers(self):$/;"	m	class:SwitchCase
get_num_pointers	spice-common/python_modules/ptypes.py	/^    def get_num_pointers(self):$/;"	m	class:Type
get_num_pointers	spice-common/python_modules/ptypes.py	/^    def get_num_pointers(self):$/;"	m	class:TypeAlias
get_nw_offset	spice-common/python_modules/ptypes.py	/^    def get_nw_offset(self, member, prefix = "", postfix = ""):$/;"	m	class:ContainerType
get_output_timestamp	ffmpeg/include/libavformat/avformat.h	/^    void (*get_output_timestamp)(struct AVFormatContext *s, int stream,$/;"	m	struct:AVOutputFormat
get_path	spice-common/common/gl_canvas.c	/^static GLCPath get_path(GLCanvas *canvas, SpicePath *s)$/;"	f	file:
get_pix_hack	glib/channel-cursor.c	/^static guint32 get_pix_hack(gint pix_index, gint width)$/;"	f	file:
get_pix_mask	glib/channel-cursor.c	/^static guint8 get_pix_mask(const guint8 *data, gint offset, gint pix_index)$/;"	f	file:
get_pointer_names	spice-common/python_modules/ptypes.py	/^    def get_pointer_names(self, marshalled):$/;"	m	class:ArrayType
get_pointer_names	spice-common/python_modules/ptypes.py	/^    def get_pointer_names(self, marshalled):$/;"	m	class:ContainerType
get_pointer_names	spice-common/python_modules/ptypes.py	/^    def get_pointer_names(self, marshalled):$/;"	m	class:Member
get_pointer_names	spice-common/python_modules/ptypes.py	/^    def get_pointer_names(self, marshalled):$/;"	m	class:Switch
get_pointer_names	spice-common/python_modules/ptypes.py	/^    def get_pointer_names(self, marshalled):$/;"	m	class:SwitchCase
get_pointer_names	spice-common/python_modules/ptypes.py	/^    def get_pointer_names(self, marshalled):$/;"	m	class:Type
get_pointer_names	spice-common/python_modules/ptypes.py	/^    def get_pointer_names(self, marshalled):$/;"	m	class:TypeAlias
get_position	spice-common/python_modules/demarshal.py	/^    def get_position(self):$/;"	m	class:ItemInfo
get_ref	spice-common/python_modules/demarshal.py	/^    def get_ref(self, member):$/;"	m	class:RootDemarshallingDestination
get_ref	spice-common/python_modules/demarshal.py	/^    def get_ref(self, member):$/;"	m	class:SubDemarshallingDestination
get_ref	spice-common/python_modules/marshal.py	/^    def get_ref(self, member):$/;"	m	class:RootMarshallingSource
get_ref	spice-common/python_modules/marshal.py	/^    def get_ref(self, member):$/;"	m	class:SubMarshallingSource
get_self_ref	spice-common/python_modules/marshal.py	/^    def get_self_ref(self):$/;"	m	class:RootMarshallingSource
get_self_ref	spice-common/python_modules/marshal.py	/^    def get_self_ref(self):$/;"	m	class:SubMarshallingSource
get_server_message	spice-common/python_modules/ptypes.py	/^    def get_server_message(self, name):$/;"	m	class:ChannelType
get_subwriter	spice-common/python_modules/codegen.py	/^    def get_subwriter(self):$/;"	m	class:CodeWriter
get_type	spice-common/python_modules/ptypes.py	/^    def get_type(self, recursive=False):$/;"	m	class:Type
get_type	spice-common/python_modules/ptypes.py	/^    def get_type(self, recursive=False):$/;"	m	class:TypeAlias
get_usb_dev_info	glib/win-usb-dev.c	/^static gboolean get_usb_dev_info(libusb_device *dev, GUdevDeviceInfo *udevinfo)$/;"	f	file:
get_video_buffer	ffmpeg/include/libavfilter/avfilter.h	/^    AVFrame *(*get_video_buffer)(AVFilterLink *link, int w, int h);$/;"	m	struct:AVFilterPad
getenv_debug	glib/spice-util.c	/^static gpointer getenv_debug(gpointer data)$/;"	f	file:
getvalue	spice-common/python_modules/codegen.py	/^    def getvalue(self):$/;"	m	class:CodeWriter
glBlendEquation	spice-common/common/glc.c	/^    PFNGLBLENDEQUATIONPROC glBlendEquation;$/;"	m	struct:InternaCtx	file:
gl_canvas_clear	spice-common/common/gl_canvas.c	/^static void gl_canvas_clear(SpiceCanvas *spice_canvas)$/;"	f	file:
gl_canvas_copy_bits	spice-common/common/gl_canvas.c	/^static void gl_canvas_copy_bits(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpicePoint *src_pos)$/;"	f	file:
gl_canvas_create	spice-common/common/gl_canvas.c	/^SpiceCanvas *gl_canvas_create(int width, int height, uint32_t format$/;"	f
gl_canvas_destroy	spice-common/common/gl_canvas.c	/^static void gl_canvas_destroy(SpiceCanvas *spice_canvas)$/;"	f	file:
gl_canvas_draw_alpha_blend	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_alpha_blend(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceAlphaBlend *alpha_blend)$/;"	f	file:
gl_canvas_draw_blackness	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_blackness(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceBlackness *blackness)$/;"	f	file:
gl_canvas_draw_blend	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_blend(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceBlend *blend)$/;"	f	file:
gl_canvas_draw_copy	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_copy(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceCopy *copy)$/;"	f	file:
gl_canvas_draw_fill	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_fill(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceFill *fill)$/;"	f	file:
gl_canvas_draw_invers	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_invers(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceInvers *invers)$/;"	f	file:
gl_canvas_draw_opaque	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_opaque(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceOpaque *opaque)$/;"	f	file:
gl_canvas_draw_rop3	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_rop3(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceRop3 *rop3)$/;"	f	file:
gl_canvas_draw_stroke	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_stroke(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceStroke *stroke)$/;"	f	file:
gl_canvas_draw_text	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_text(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceText *text)$/;"	f	file:
gl_canvas_draw_transparent	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_transparent(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceTransparent *transparent)$/;"	f	file:
gl_canvas_draw_whiteness	spice-common/common/gl_canvas.c	/^static void gl_canvas_draw_whiteness(SpiceCanvas *spice_canvas, SpiceRect *bbox, SpiceClip *clip, SpiceWhiteness *whiteness)$/;"	f	file:
gl_canvas_group_end	spice-common/common/gl_canvas.c	/^static void gl_canvas_group_end(SpiceCanvas *spice_canvas)$/;"	f	file:
gl_canvas_group_start	spice-common/common/gl_canvas.c	/^static void gl_canvas_group_start(SpiceCanvas *spice_canvas, QRegion *region)$/;"	f	file:
gl_canvas_init	spice-common/common/gl_canvas.c	/^void gl_canvas_init(void) \/\/unsafe global function$/;"	f
gl_canvas_ops	spice-common/common/gl_canvas.c	/^static SpiceCanvasOps gl_canvas_ops;$/;"	v	file:
gl_canvas_put_image	spice-common/common/gl_canvas.c	/^static void gl_canvas_put_image(SpiceCanvas *spice_canvas, const SpiceRect *dest, const uint8_t *src_data,$/;"	f	file:
gl_canvas_read_bits	spice-common/common/gl_canvas.c	/^static void gl_canvas_read_bits(SpiceCanvas *spice_canvas, uint8_t *dest, int dest_stride, const SpiceRect *area)$/;"	f	file:
gl_canvas_set_textures_lost	spice-common/common/gl_canvas.c	/^void gl_canvas_set_textures_lost(SpiceCanvas *spice_canvas,$/;"	f
gl_get_to_power_two	spice-common/common/gl_utils.h	56;"	d
glc	spice-common/common/gl_canvas.c	/^    GLCCtx glc;$/;"	m	struct:GLCanvas	file:
glc_begin_path	spice-common/common/glc.c	/^static void glc_begin_path(InternaCtx *ctx)$/;"	f	file:
glc_clear	spice-common/common/glc.c	/^void glc_clear(GLCCtx glc)$/;"	f
glc_clear_mask	spice-common/common/glc.c	/^void glc_clear_mask(GLCCtx glc, GLCMaskID id)$/;"	f
glc_clip_mask	spice-common/common/glc.c	/^void glc_clip_mask(GLCCtx glc, int x_dest, int y_dest, int width, int height,$/;"	f
glc_clip_path	spice-common/common/glc.c	/^void glc_clip_path(GLCCtx glc, GLCPath path, GLCClipOp op)$/;"	f
glc_clip_rect	spice-common/common/glc.c	/^void glc_clip_rect(GLCCtx glc, const GLCRect *rect, GLCClipOp op)$/;"	f
glc_clip_reset	spice-common/common/glc.c	/^void glc_clip_reset(GLCCtx glc)$/;"	f
glc_copy_pixels	spice-common/common/glc.c	/^void glc_copy_pixels(GLCCtx glc, int x_dest, int y_dest, int x_src, int y_src, int width,$/;"	f
glc_create	spice-common/common/glc.c	/^GLCCtx glc_create(int width, int height)$/;"	f
glc_destroy	spice-common/common/glc.c	/^void glc_destroy(GLCCtx glc, int textures_lost)$/;"	f
glc_draw_image	spice-common/common/glc.c	/^void glc_draw_image(GLCCtx glc, const GLCRecti *dest, const GLCRecti *src, const GLCImage *image,$/;"	f
glc_end_path	spice-common/common/glc.c	/^static void glc_end_path(InternaCtx *ctx)$/;"	f	file:
glc_fill_alpha	spice-common/common/glc.c	/^void glc_fill_alpha(GLCCtx glc, int x_dest, int y_dest, int width, int height, int stride,$/;"	f
glc_fill_path	spice-common/common/glc.c	/^void glc_fill_path(GLCCtx glc, GLCPath path_ref)$/;"	f
glc_fill_rect	spice-common/common/glc.c	/^void glc_fill_rect(GLCCtx glc, const GLCRect *rect)$/;"	f
glc_flush	spice-common/common/glc.c	/^void glc_flush(GLCCtx glc)$/;"	f
glc_mask_rects	spice-common/common/glc.c	/^void glc_mask_rects(GLCCtx glc, int num_rect, GLCRect *rects, GLCMaskID id)$/;"	f
glc_path_cleare	spice-common/common/glc.c	/^void glc_path_cleare(GLCPath path)$/;"	f
glc_path_close	spice-common/common/glc.c	/^void glc_path_close(GLCPath path)$/;"	f
glc_path_create	spice-common/common/glc.c	/^GLCPath glc_path_create(GLCCtx glc)$/;"	f
glc_path_curve_to	spice-common/common/glc.c	/^void glc_path_curve_to(GLCPath path, double p1_x, double p1_y, double p2_x, double p2_y,$/;"	f
glc_path_destroy	spice-common/common/glc.c	/^void glc_path_destroy(GLCPath path)$/;"	f
glc_path_line_to	spice-common/common/glc.c	/^void glc_path_line_to(GLCPath path, double x, double y)$/;"	f
glc_path_move_to	spice-common/common/glc.c	/^void glc_path_move_to(GLCPath path, double x, double y)$/;"	f
glc_pattern_create	spice-common/common/glc.c	/^GLCPattern glc_pattern_create(GLCCtx glc, int x_orign, int y_orign, const GLCImage *image)$/;"	f
glc_pattern_destroy	spice-common/common/glc.c	/^void glc_pattern_destroy(GLCPattern pat)$/;"	f
glc_pattern_set	spice-common/common/glc.c	/^void glc_pattern_set(GLCPattern pattern, int x_orign, int y_orign, const GLCImage *image)$/;"	f
glc_read_pixels	spice-common/common/glc.c	/^void glc_read_pixels(GLCCtx glc, int x, int y, GLCImage *image)$/;"	f
glc_set_fill_mode	spice-common/common/glc.c	/^void glc_set_fill_mode(GLCCtx glc, GLCFillMode fill_mode)$/;"	f
glc_set_line_dash	spice-common/common/glc.c	/^void glc_set_line_dash(GLCCtx glc, const double *dashes, int num_dashes, double offset)$/;"	f
glc_set_line_width	spice-common/common/glc.c	/^void glc_set_line_width(GLCCtx glc, double width)$/;"	f
glc_set_mask	spice-common/common/glc.c	/^void glc_set_mask(GLCCtx glc, int x_dest, int y_dest, int width, int height,$/;"	f
glc_set_op	spice-common/common/glc.c	/^void glc_set_op(GLCCtx glc, GLCOp op)$/;"	f
glc_set_pattern	spice-common/common/glc.c	/^void glc_set_pattern(GLCCtx glc, GLCPattern pattern)$/;"	f
glc_set_rgb	spice-common/common/glc.c	/^void glc_set_rgb(GLCCtx glc, double red, double green, double blue)$/;"	f
glc_stroke_line	spice-common/common/glc.c	/^static void glc_stroke_line(double x1, double y1, double x2, double y2, double width)$/;"	f	file:
glc_stroke_line_dash	spice-common/common/glc.c	/^static double glc_stroke_line_dash(double x1, double y1, double x2, double y2,$/;"	f	file:
glc_stroke_path	spice-common/common/glc.c	/^void glc_stroke_path(GLCCtx glc, GLCPath path_ref)$/;"	f
glc_stroke_rect	spice-common/common/glc.c	/^void glc_stroke_rect(GLCCtx glc, const GLCRect *rect)$/;"	f
glc_vertex2d	spice-common/common/glc.c	/^static void glc_vertex2d(InternaCtx *ctx, double x, double y)$/;"	f	file:
global_display	win32/win32-spicy.h	/^    SpiceDisplay     *global_display;$/;"	m	struct:spice_connection
global_quality	ffmpeg/include/libavcodec/avcodec.h	/^    int global_quality;$/;"	m	struct:AVCodecContext
global_wsgi	win32/win32_spice_interface.c	/^struct Win32SpiceGloabInfo * global_wsgi = NULL;$/;"	v	typeref:struct:Win32SpiceGloabInfo
glx_context	spice-common/common/ogl_ctx.c	/^    GLXContext glx_context;$/;"	m	struct:OGLCtx	file:
glyph_origin	spice-common/common/draw.h	/^    SpicePoint glyph_origin;$/;"	m	struct:SpiceRasterGlyph
glyph_origin	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPoint glyph_origin;$/;"	m	struct:QXLRasterGlyph
glyphs	spice-common/common/draw.h	/^    SpiceRasterGlyph *glyphs[0];$/;"	m	struct:SpiceString
glz_data	spice-common/common/canvas_base.c	/^    GlzData glz_data;$/;"	m	struct:CanvasBase	file:
glz_data_size	spice-common/common/draw.h	/^    uint32_t glz_data_size;$/;"	m	struct:SpiceZlibGlzRGBData
glz_decoder	glib/channel-display-priv.h	/^    SpiceGlzDecoder             *glz_decoder;$/;"	m	struct:display_surface
glz_decoder_destroy	glib/decode-glz.c	/^void glz_decoder_destroy(SpiceGlzDecoder *d)$/;"	f
glz_decoder_new	glib/decode-glz.c	/^SpiceGlzDecoder *glz_decoder_new(SpiceGlzDecoderWindow *w)$/;"	f
glz_decoder_ops	glib/decode-glz.c	/^static SpiceGlzDecoderOps glz_decoder_ops = {$/;"	v	file:
glz_decoder_window_add	glib/decode-glz.c	/^static void glz_decoder_window_add(SpiceGlzDecoderWindow *w,$/;"	f	file:
glz_decoder_window_bits	glib/decode-glz.c	/^static void *glz_decoder_window_bits(SpiceGlzDecoderWindow *w, uint64_t id,$/;"	f	file:
glz_decoder_window_clear	glib/decode-glz.c	/^void glz_decoder_window_clear(SpiceGlzDecoderWindow *w)$/;"	f
glz_decoder_window_destroy	glib/decode-glz.c	/^void glz_decoder_window_destroy(SpiceGlzDecoderWindow *w)$/;"	f
glz_decoder_window_new	glib/decode-glz.c	/^SpiceGlzDecoderWindow *glz_decoder_window_new(void)$/;"	f
glz_decoder_window_release	glib/decode-glz.c	/^static void glz_decoder_window_release(SpiceGlzDecoderWindow *w,$/;"	f	file:
glz_decoder_window_resize	glib/decode-glz.c	/^static void glz_decoder_window_resize(SpiceGlzDecoderWindow *w)$/;"	f	file:
glz_dictionary_id	spice-common/common/messages.h	/^    uint8_t glz_dictionary_id;$/;"	m	struct:SpiceMsgcDisplayInit
glz_dictionary_window_size	spice-common/common/messages.h	/^    int32_t glz_dictionary_window_size;       \/\/ in pixels$/;"	m	struct:SpiceMsgcDisplayInit
glz_image	glib/decode-glz.c	/^struct glz_image {$/;"	s	file:
glz_image_destroy	glib/decode-glz.c	/^static void glz_image_destroy(struct glz_image *img)$/;"	f	file:
glz_image_hdr	glib/decode-glz.c	/^struct glz_image_hdr {$/;"	s	file:
glz_image_new	glib/decode-glz.c	/^static struct glz_image *glz_image_new(struct glz_image_hdr *hdr,$/;"	f	file:
glz_window	glib/channel-display.c	/^    SpiceGlzDecoderWindow       *glz_window;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
glz_window	glib/spice-session-priv.h	/^    SpiceGlzDecoderWindow *glz_window;$/;"	m	struct:_SpiceSessionPrivate
glz_window_size	glib/spice-option.c	/^static gint glz_window_size = 0;$/;"	v	file:
glz_window_size	glib/spice-session-priv.h	/^    int               glz_window_size;$/;"	m	struct:_SpiceSessionPrivate
golomb_code	spice-common/common/quic.c	/^    unsigned int golomb_code[256][MAXNUMCODES];$/;"	m	struct:QuicFamily	file:
golomb_code	spice-common/common/quic_family_tmpl.c	/^static inline unsigned int FNAME(golomb_code)(const BYTE n, const unsigned int l)$/;"	f	file:
golomb_code_len	spice-common/common/quic.c	/^    unsigned int golomb_code_len[256][MAXNUMCODES];$/;"	m	struct:QuicFamily	file:
golomb_code_len	spice-common/common/quic_family_tmpl.c	/^static inline unsigned int FNAME(golomb_code_len)(const BYTE n, const unsigned int l)$/;"	f	file:
golomb_coding	spice-common/common/quic_family_tmpl.c	/^static void FNAME(golomb_coding)(const BYTE n, const unsigned int l, unsigned int * const codeword,$/;"	f	file:
golomb_coding	spice-common/common/quic_rgb_tmpl.c	26;"	d	file:
golomb_coding	spice-common/common/quic_rgb_tmpl.c	47;"	d	file:
golomb_coding	spice-common/common/quic_rgb_tmpl.c	68;"	d	file:
golomb_coding	spice-common/common/quic_rgb_tmpl.c	751;"	d	file:
golomb_coding	spice-common/common/quic_rgb_tmpl.c	89;"	d	file:
golomb_coding	spice-common/common/quic_tmpl.c	40;"	d	file:
golomb_coding	spice-common/common/quic_tmpl.c	629;"	d	file:
golomb_coding_slow	spice-common/common/quic.c	/^static void golomb_coding_slow(QuicFamily *family, const BYTE n, const unsigned int l,$/;"	f	file:
golomb_decoding	spice-common/common/quic_family_tmpl.c	/^static unsigned int FNAME(golomb_decoding)(const unsigned int l, const unsigned int bits,$/;"	f	file:
golomb_decoding	spice-common/common/quic_rgb_tmpl.c	27;"	d	file:
golomb_decoding	spice-common/common/quic_rgb_tmpl.c	48;"	d	file:
golomb_decoding	spice-common/common/quic_rgb_tmpl.c	69;"	d	file:
golomb_decoding	spice-common/common/quic_rgb_tmpl.c	752;"	d	file:
golomb_decoding	spice-common/common/quic_rgb_tmpl.c	90;"	d	file:
golomb_decoding	spice-common/common/quic_tmpl.c	41;"	d	file:
golomb_deoding	spice-common/common/quic_tmpl.c	630;"	d	file:
gop_size	ffmpeg/include/libavcodec/avcodec.h	/^    int gop_size;$/;"	m	struct:AVCodecContext
gop_size	glib/h264_type.h	/^    int gop_size;$/;"	m	struct:_H264StreamInfo
graph	ffmpeg/include/libavfilter/avfilter.h	/^    struct AVFilterGraph *graph;    \/\/\/< filtergraph this filter belongs to$/;"	m	struct:AVFilterContext	typeref:struct:AVFilterContext::AVFilterGraph
graph	ffmpeg/include/libavfilter/avfilter.h	/^    struct AVFilterGraph *graph;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterGraph
gross_pixels	glib/decode-glz.c	/^    uint32_t                gross_pixels;$/;"	m	struct:glz_image_hdr	file:
group	spice-common/common/lines.c	/^    Spans *group;               \/* List of Spans                        *\/$/;"	m	struct:__anon148	file:
group	spice-common/common/messages.h	/^    uint32_t group;$/;"	m	struct:SpiceMsgcTunnelAddGenericService
group	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t group;$/;"	m	struct:QXLImageID
group_end	spice-common/common/canvas_base.h	/^    void (*group_end)(SpiceCanvas *canvas);$/;"	m	struct:__anon145
group_id	ffmpeg/include/libavformat/avio.h	/^    int64_t group_id;                     \/**< Group ID of owner, -1 if unknown. *\/$/;"	m	struct:AVIODirEntry
group_id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t group_id;$/;"	m	struct:QXLCommandExt
group_id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t group_id;$/;"	m	struct:QXLReleaseInfoExt
group_start	spice-common/common/canvas_base.h	/^    void (*group_start)(SpiceCanvas *canvas, QRegion *region);$/;"	m	struct:__anon145
gsocket	glib/bio-gio.c	/^    GSocket *gsocket;$/;"	m	struct:bio_gsocket_method	file:
gthread_decoding_cb	glib/channel-display.c	/^static gpointer gthread_decoding_cb(gpointer arg)$/;"	f	file:
gudev_devices_are_equal	glib/win-usb-dev.c	/^static gboolean gudev_devices_are_equal(GUdevDevice *a, GUdevDevice *b)$/;"	f	file:
h	ffmpeg/include/libavcodec/avcodec.h	/^    int h;         \/\/\/< height           of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
h	ffmpeg/include/libavfilter/avfilter.h	/^    int h;                      \/\/\/< agreed upon image height$/;"	m	struct:AVFilterLink
h	ffmpeg/include/libavfilter/avfilter.h	/^    int h;                      \/\/\/< image height$/;"	m	struct:AVFilterBufferRefVideoProps
h	ffmpeg/include/libavfilter/avfilter.h	/^    int w, h;                   \/\/\/< width and height of the allocated buffer$/;"	m	struct:AVFilterBuffer
h	ffmpeg/include/libavutil/motion_vector.h	/^    uint8_t w, h;$/;"	m	struct:AVMotionVector
h	win32/win32_spice_interface_types.h	/^   int h;$/;"	m	struct:SPICE_Invalidate
h264	ffmpeg/include/libavcodec/vdpau.h	/^    VdpPictureInfoH264        h264;$/;"	m	union:AVVDPAUPictureInfo
h264_decode	glib/h264_decoder.c	/^int h264_decode(H264Decoder * decoder,char * rgb,int *rgb_len, char *slice ,int slice_len,int *width,int *height,int *hpp)$/;"	f
h264_decoder	glib/channel-display-priv.h	/^    H264Decoder                    *h264_decoder;$/;"	m	struct:display_stream
h264_decoder_env_init	glib/h264_decoder.c	/^void  h264_decoder_env_init()$/;"	f
h264_decoder_h	glib/h264_decoder.h	2;"	d
h264_decoder_init	glib/h264_decoder.c	/^int h264_decoder_init(H264Decoder * decoder, H264StreamInfo * info)$/;"	f
h264_decoder_new	glib/h264_decoder.c	/^H264Decoder* h264_decoder_new()$/;"	f
h264_decoder_release	glib/h264_decoder.c	/^void h264_decoder_release(H264Decoder * decoder)$/;"	f
h264_decoder_uninit	glib/h264_decoder.c	/^void h264_decoder_uninit(H264Decoder * decoder)$/;"	f
h264_info	glib/channel-display-priv.h	/^    H264StreamInfo                 *h264_info;$/;"	m	struct:display_stream
h264_type_h	glib/h264_type.h	2;"	d
handle	glib/win-usb-driver-install.c	/^    HANDLE                handle;$/;"	m	struct:_SpiceWinUsbDriverPrivate	file:
handle_dev_change	glib/win-usb-dev.c	/^static void handle_dev_change(GUdevClient *self)$/;"	f	file:
handle_msg	glib/spice-channel.h	/^    void (*handle_msg)(SpiceChannel *channel, SpiceMsgIn *msg);$/;"	m	struct:_SpiceChannelClass
handle_smartcard_msg	glib/channel-smartcard.c	/^static void handle_smartcard_msg(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
handler_id	glib/spice-util.c	/^    gulong handler_id;$/;"	m	struct:__anon23	file:
handler_id	win32/virt-viewer-util.c	/^    gulong handler_id;$/;"	m	struct:__anon45	file:
handler_msg_in	glib/spice-channel-priv.h	/^typedef void (*handler_msg_in)(SpiceChannel *channel, SpiceMsgIn *msg, gpointer data);$/;"	t
handlers	glib/spice-channel.h	/^    GArray                      *handlers;$/;"	m	struct:_SpiceChannelClass
handshake_completed	glib/wocky-http-proxy.c	/^handshake_completed (GObject *source_object,$/;"	f	file:
has_attr	spice-common/python_modules/ptypes.py	/^    def has_attr(self, name):$/;"	m	class:Containee
has_attr	spice-common/python_modules/ptypes.py	/^    def has_attr(self, name):$/;"	m	class:Type
has_b_frames	ffmpeg/include/libavcodec/avcodec.h	/^    int has_b_frames;$/;"	m	struct:AVCodecContext
has_cred	glib/wocky-http-proxy.c	/^  gboolean has_cred;$/;"	m	struct:__anon7	file:
has_end_attr	spice-common/python_modules/ptypes.py	/^    def has_end_attr(self):$/;"	m	class:Containee
has_error	glib/spice-channel-priv.h	/^    gboolean                    has_error;$/;"	m	struct:_SpiceChannelPrivate
has_minor_attr	spice-common/python_modules/ptypes.py	/^    def has_minor_attr(self):$/;"	m	class:Containee
has_name	spice-common/python_modules/ptypes.py	/^    def has_name(self):$/;"	m	class:Type
has_option	spice-common/python_modules/codegen.py	/^    def has_option(self, opt):$/;"	m	class:CodeWriter
has_switch_member	spice-common/python_modules/ptypes.py	/^    def has_switch_member(self, member):$/;"	m	class:Switch
have_mitshm	win32/win32-spice-widget-priv.h	/^    bool                    have_mitshm;$/;"	m	struct:_SpiceDisplayPrivate
have_region	glib/channel-display-priv.h	/^    int                         have_region;$/;"	m	struct:display_stream
hbitmap	spice-common/common/gdi_canvas.c	/^    HBITMAP hbitmap;$/;"	m	struct:BitmapData	file:
hdr	glib/channel-cursor.c	/^    SpiceCursorHeader           hdr;$/;"	m	struct:display_cursor	file:
hdr	glib/decode-glz.c	/^    struct glz_image_hdr    hdr;$/;"	m	struct:glz_image	typeref:struct:glz_image::glz_image_hdr	file:
hdr	glib/win-usb-clerk.h	/^    USBClerkHeader hdr;$/;"	m	struct:USBClerkDriverOp
hdr	glib/win-usb-clerk.h	/^    USBClerkHeader hdr;$/;"	m	struct:USBClerkReply
head_image_segs	spice-common/common/lz.c	/^    LzImageSegment *head_image_segs;$/;"	m	struct:Encoder	file:
header	glib/spice-channel-priv.h	/^    uint8_t               *header;$/;"	m	struct:_SpiceMsgOut
header	glib/spice-channel-priv.h	/^    uint8_t               header[MAX_SPICE_DATA_HEADER_SIZE];$/;"	m	struct:_SpiceMsgIn
header	spice-common/common/messages.h	/^    SpiceCursorHeader header;$/;"	m	struct:SpiceCursor
header	spice-common/common/messages.h	/^    VSCMsgHeader header;$/;"	m	struct:SpiceMsgcSmartcard
header	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLCursorHeader header;$/;"	m	struct:QXLCursor
header_bits	ffmpeg/include/libavcodec/avcodec.h	/^    int header_bits;$/;"	m	struct:AVCodecContext
heads	spice-common/common/messages.h	/^    SpiceHead heads[0];$/;"	m	struct:SpiceMsgDisplayMonitorsConfig
heads	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLURect heads[64];$/;"	m	struct:QXLRom::__anon68
heads	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLHead heads[0];$/;"	m	struct:QXLMonitorsConfig
height	examples/test_bmp.c	/^int height;$/;"	v
height	ffmpeg/include/libavcodec/avcodec.h	/^    int height;$/;"	m	struct:AVCodecParserContext
height	ffmpeg/include/libavcodec/avcodec.h	/^    int height;$/;"	m	struct:AVPanScan
height	ffmpeg/include/libavcodec/avcodec.h	/^    int width, height;$/;"	m	struct:AVCodecContext
height	ffmpeg/include/libavcodec/dv_profile.h	/^    int              height;                \/* picture height in pixels *\/$/;"	m	struct:AVDVProfile
height	ffmpeg/include/libavcodec/vda.h	/^    int                 height;$/;"	m	struct:vda_context
height	ffmpeg/include/libavdevice/avdevice.h	/^    int height; \/**< height *\/$/;"	m	struct:AVDeviceRect
height	ffmpeg/include/libavutil/frame.h	/^    int width, height;$/;"	m	struct:AVFrame
height	glib/channel-display-priv.h	/^    int                         width, height, stride, size;$/;"	m	struct:display_surface
height	glib/channel-display.h	/^    gint height;$/;"	m	struct:_SpiceDisplayPrimary
height	glib/channel-display.h	/^    guint height;$/;"	m	struct:_SpiceDisplayMonitorConfig
height	glib/channel-main.c	/^        int                     height;$/;"	m	struct:_SpiceMainChannelPrivate::__anon16	file:
height	glib/decode-glz.c	/^    uint32_t                height;$/;"	m	struct:glz_image_hdr	file:
height	glib/h264_type.h	/^    int height;$/;"	m	struct:_H264StreamInfo
height	spice-common/common/canvas_base.c	/^    int height;$/;"	m	struct:CanvasBase	file:
height	spice-common/common/draw.h	/^    uint16_t height;$/;"	m	struct:SpiceCursorHeader
height	spice-common/common/draw.h	/^    uint16_t height;$/;"	m	struct:SpiceRasterGlyph
height	spice-common/common/draw.h	/^    uint32_t height;$/;"	m	struct:SpiceImageDescriptor
height	spice-common/common/glc.c	/^    int height;$/;"	m	struct:FillMaskInfo	file:
height	spice-common/common/glc.c	/^    int height;$/;"	m	struct:InternaCtx	file:
height	spice-common/common/glc.c	/^    int height;$/;"	m	struct:InternalPat	file:
height	spice-common/common/glc.h	/^    double height;$/;"	m	struct:GLCRect
height	spice-common/common/glc.h	/^    int height;$/;"	m	struct:GLCPImage
height	spice-common/common/glc.h	/^    int height;$/;"	m	struct:GLCRecti
height	spice-common/common/lines.c	/^    int height;                 \/* number of scanlines to process *\/$/;"	m	struct:_PolyEdge	file:
height	spice-common/common/lines.h	/^    int height;$/;"	m	struct:lineGC
height	spice-common/common/lz.c	/^    int height;$/;"	m	struct:Encoder	file:
height	spice-common/common/messages.h	/^    uint32_t height;$/;"	m	struct:SpiceMsgDisplayHead
height	spice-common/common/messages.h	/^    uint32_t height;$/;"	m	struct:SpiceMsgDisplayStreamDataSized
height	spice-common/common/messages.h	/^    uint32_t height;$/;"	m	struct:SpiceMsgSurfaceCreate
height	spice-common/common/quic.c	/^    unsigned int height;$/;"	m	struct:Encoder	file:
height	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t height;$/;"	m	struct:QXLCursorHeader
height	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t height;$/;"	m	struct:QXLRasterGlyph
height	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t height;$/;"	m	struct:QXLHead
height	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t height;$/;"	m	struct:QXLImageDescriptor
height	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t height;$/;"	m	struct:QXLSurface
height	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t height;$/;"	m	struct:QXLSurfaceCreate
height	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t height;$/;"	m	struct:VDAgentMonConfig
height	win32/win32-spice-widget-priv.h	/^    gint                    width, height, stride;$/;"	m	struct:_SpiceDisplayPrivate
height	win32/win32_spice_interface_types.h	/^   int height;$/;"	m	struct:SPICE_CursorSet
height	win32/win32_spice_interface_types.h	/^   int height;$/;"	m	struct:SPICE_SettringChange
help	ffmpeg/include/libavutil/opt.h	/^    const char *help;$/;"	m	struct:AVOption
help	spice-common/spice_codegen.py	/^                  help="Assert on error")$/;"	v
help	spice-common/spice_codegen.py	/^                  help="Generate Wireshark dissector definitions")$/;"	v
help	spice-common/spice_codegen.py	/^                  help="Generate demarshallers")$/;"	v
help	spice-common/spice_codegen.py	/^                  help="Generate header")$/;"	v
help	spice-common/spice_codegen.py	/^                  help="Generate message marshallers")$/;"	v
help	spice-common/spice_codegen.py	/^                  help="Generate private message marshallers")$/;"	v
help	spice-common/spice_codegen.py	/^                  help="Generate struct marshallers")$/;"	v
help	spice-common/spice_codegen.py	/^                  help="Include FILE in generated code")$/;"	v
help	spice-common/spice_codegen.py	/^                  help="Print errors")$/;"	v
help	win32/keymap-gen-with-android.pl	/^sub help {$/;"	s
hexdump	glib/spice-channel.c	/^static void hexdump(const char *prefix, unsigned char *data, int len)$/;"	f	file:
hmain	win32/win32_spice_interface.c	/^    int hmain;$/;"	m	struct:smain_thread	file:
host	glib/channel-main.c	/^    char host[0];$/;"	m	struct:OldRedMigrationBegin	file:
host	glib/channel-usbredir.c	/^    struct usbredirhost *host;$/;"	m	struct:_SpiceUsbredirChannelPrivate	typeref:struct:_SpiceUsbredirChannelPrivate::usbredirhost	file:
host	glib/spice-session-priv.h	/^    char              *host;$/;"	m	struct:_SpiceSessionPrivate
host	win32/spice-cmdline.c	/^static char *host;$/;"	v	file:
host	win32/win32_spice_interface.c	/^    gchar  host[20];$/;"	m	struct:SpiceConnectARGS	file:
host_data	spice-common/common/messages.h	/^    uint8_t *host_data;$/;"	m	struct:SpiceMigrationDstInfo
host_data	spice-common/common/messages.h	/^    uint8_t *host_data;$/;"	m	struct:SpiceMsgMainMigrationSwitchHost
host_size	spice-common/common/messages.h	/^    uint32_t host_size;$/;"	m	struct:SpiceMigrationDstInfo
host_size	spice-common/common/messages.h	/^    uint32_t host_size;$/;"	m	struct:SpiceMsgMainMigrationSwitchHost
host_subject	glib/spice-option.c	/^static char *host_subject = NULL;$/;"	v	file:
hostname	glib/spice-uri.c	/^    gchar *hostname;$/;"	m	struct:_SpiceURI	file:
hostname	spice-common/common/ssl_verify.h	/^    char                *hostname;$/;"	m	struct:__anon131
hot_spot_x	spice-common/common/draw.h	/^    uint16_t hot_spot_x;$/;"	m	struct:SpiceCursorHeader
hot_spot_x	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t hot_spot_x;$/;"	m	struct:QXLCursorHeader
hot_spot_x	win32/win32_spice_interface_types.h	/^   int hot_spot_x;$/;"	m	struct:SPICE_CursorSet
hot_spot_y	spice-common/common/draw.h	/^    uint16_t hot_spot_y;$/;"	m	struct:SpiceCursorHeader
hot_spot_y	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t hot_spot_y;$/;"	m	struct:QXLCursorHeader
hot_spot_y	win32/win32_spice_interface_types.h	/^   int hot_spot_y;$/;"	m	struct:SPICE_CursorSet
hotplug_idle_cb_args	glib/usb-device-manager.c	/^struct hotplug_idle_cb_args {$/;"	s	file:
hp_handle	glib/usb-device-manager.c	/^    libusb_hotplug_callback_handle hp_handle;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
hspice	win32/win32_spice_interface.c	/^    gint hspice;$/;"	m	struct:SpiceConnectARGS	file:
htab	spice-common/common/lz.c	/^    HashEntry htab[HASH_SIZE];$/;"	m	struct:Encoder	file:
hwaccel	ffmpeg/include/libavcodec/avcodec.h	/^    struct AVHWAccel *hwaccel;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVHWAccel
hwaccel_context	ffmpeg/include/libavcodec/avcodec.h	/^    void *hwaccel_context;$/;"	m	struct:AVCodecContext
hwaccel_picture_private	ffmpeg/include/libavutil/frame.h	/^    attribute_deprecated void *hwaccel_picture_private;$/;"	m	struct:AVFrame
hwnd	glib/win-usb-dev.c	/^    HWND hwnd;$/;"	m	struct:_GUdevClientPrivate	file:
i	ffmpeg/include/libavutil/intfloat.h	/^    uint32_t i;$/;"	m	union:av_intfloat32
i	ffmpeg/include/libavutil/intfloat.h	/^    uint64_t i;$/;"	m	union:av_intfloat64
i	glib/continuation.c	/^	int i[2];$/;"	m	union:cc_arg	file:
i64	ffmpeg/include/libavutil/opt.h	/^        int64_t i64;$/;"	m	union:AVOption::__anon38
i_count	ffmpeg/include/libavcodec/avcodec.h	/^    int i_count;$/;"	m	struct:AVCodecContext
i_quant_factor	ffmpeg/include/libavcodec/avcodec.h	/^    float i_quant_factor;$/;"	m	struct:AVCodecContext
i_quant_offset	ffmpeg/include/libavcodec/avcodec.h	/^    float i_quant_offset;$/;"	m	struct:AVCodecContext
i_tex_bits	ffmpeg/include/libavcodec/avcodec.h	/^    int i_tex_bits;$/;"	m	struct:AVCodecContext
id	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVCodecID     id;$/;"	m	struct:AVCodecDescriptor	typeref:enum:AVCodecDescriptor::AVCodecID
id	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVCodecID id;$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVCodecID
id	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVCodecID id;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::AVCodecID
id	ffmpeg/include/libavcodec/avcodec.h	/^    int id;$/;"	m	struct:AVPanScan
id	ffmpeg/include/libavformat/avformat.h	/^    int            id;$/;"	m	struct:AVProgram
id	ffmpeg/include/libavformat/avformat.h	/^    int id;                 \/\/\/< unique ID to identify the chapter$/;"	m	struct:AVChapter
id	ffmpeg/include/libavformat/avformat.h	/^    int id;$/;"	m	struct:AVStream
id	glib/channel-display.c	/^    uint64_t id;$/;"	m	struct:_WaitImageData	file:
id	glib/channel-display.h	/^    guint id;$/;"	m	struct:_SpiceDisplayMonitorConfig
id	glib/channel-main.c	/^    int id;$/;"	m	struct:channel_new	file:
id	glib/channel-main.c	/^    uint32_t                       id;$/;"	m	struct:SpiceFileXferTask	file:
id	glib/channel-webdav.c	/^        gint64 id;$/;"	m	struct:Client::_mux	file:
id	glib/channel-webdav.c	/^    gint64 id;$/;"	m	struct:Client	file:
id	glib/decode-glz.c	/^    uint64_t                   id;$/;"	m	struct:wait_for_image_data	file:
id	glib/decode-glz.c	/^    uint64_t                id;$/;"	m	struct:glz_image_hdr	file:
id	glib/spice-channel-cache.h	/^    guint64                     id;$/;"	m	struct:display_cache_item
id	spice-common/common/draw.h	/^    uint64_t id;$/;"	m	struct:SpiceImageDescriptor
id	spice-common/common/messages.h	/^    uint32_t id;$/;"	m	struct:SpiceMsgDisplayHead
id	spice-common/common/messages.h	/^    uint32_t id;$/;"	m	struct:SpiceMsgDisplayStreamClip
id	spice-common/common/messages.h	/^    uint32_t id;$/;"	m	struct:SpiceMsgDisplayStreamCreate
id	spice-common/common/messages.h	/^    uint32_t id;$/;"	m	struct:SpiceMsgDisplayStreamDestroy
id	spice-common/common/messages.h	/^    uint32_t id;$/;"	m	struct:SpiceMsgPing
id	spice-common/common/messages.h	/^    uint32_t id;$/;"	m	struct:SpiceMsgcTunnelAddGenericService
id	spice-common/common/messages.h	/^    uint32_t id;$/;"	m	struct:SpiceMsgcTunnelRemoveService
id	spice-common/common/messages.h	/^    uint32_t id;$/;"	m	struct:SpiceStreamDataHeader
id	spice-common/common/messages.h	/^    uint64_t id;$/;"	m	struct:SpiceMsgDisplayInvalOne
id	spice-common/common/messages.h	/^    uint64_t id;$/;"	m	struct:SpiceResourceID
id	spice-common/common/messages.h	/^    uint8_t id;$/;"	m	struct:SpiceChannelId
id	spice-common/spice-protocol/spice/controller_prot.h	/^    uint32_t id;$/;"	m	struct:ControllerMsg
id	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t id;$/;"	m	struct:FrgMenuAddItem
id	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t id;$/;"	m	struct:FrgMenuEvent
id	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t id;$/;"	m	struct:FrgMenuMsg
id	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t id;$/;"	m	struct:FrgMenuRmItem
id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t id;$/;"	m	struct:QXLHead
id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t id;$/;"	m	struct:QXLMode
id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t id;$/;"	m	struct:QXLRom
id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint64_t id;      \/\/ in$/;"	m	union:QXLReleaseInfo
id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint64_t id;$/;"	m	struct:QXLImageDescriptor
id	spice-common/spice-protocol/spice/qxl_dev.h	/^  QXLImageID id;$/;"	m	union:__anon80
id	spice-common/spice-protocol/spice/vd_agent.h	/^   uint32_t id;$/;"	m	struct:VDAgentFileXferDataMessage
id	spice-common/spice-protocol/spice/vd_agent.h	/^   uint32_t id;$/;"	m	struct:VDAgentFileXferStartMessage
id	spice-common/spice-protocol/spice/vd_agent.h	/^   uint32_t id;$/;"	m	struct:VDAgentFileXferStatusMessage
id	win32/win32-spicy.h	/^    gint             id;$/;"	m	struct:_SpiceWindow
idct	ffmpeg/include/libavcodec/xvmc.h	/^    int             idct;$/;"	m	struct:xvmc_pix_fmt
idct_algo	ffmpeg/include/libavcodec/avcodec.h	/^    int idct_algo;$/;"	m	struct:AVCodecContext
idle_id	glib/channel-webdav.c	/^    guint idle_id;$/;"	m	struct:_OutputQueue	file:
if_block	spice-common/python_modules/codegen.py	/^    def if_block(self, check, elseif=False, newline=True):$/;"	m	class:CodeWriter
ifdef	spice-common/python_modules/codegen.py	/^    def ifdef(self, name):$/;"	m	class:CodeWriter
ifdef_else	spice-common/python_modules/codegen.py	/^    def ifdef_else(self, name):$/;"	m	class:CodeWriter
iformat	ffmpeg/include/libavformat/avformat.h	/^    struct AVInputFormat *iformat;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVInputFormat
ildct_cmp	ffmpeg/include/libavcodec/avcodec.h	/^    int ildct_cmp;$/;"	m	struct:AVCodecContext
im	ffmpeg/include/libavcodec/avfft.h	/^    FFTSample re, im;$/;"	m	struct:FFTComplex
image	glib/channel-display.c	/^    pixman_image_t *image;$/;"	m	struct:_WaitImageData	file:
image	glib/decode-glz.c	/^    struct glz_image_hdr    image;$/;"	m	struct:GlibGlzDecoder	typeref:struct:GlibGlzDecoder::glz_image_hdr	file:
image	spice-common/common/sw_canvas.c	/^    pixman_image_t *image;$/;"	m	struct:SwCanvas	file:
image_cache	glib/channel-display.c	/^    SpiceImageCache             image_cache;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
image_cache_ops	glib/channel-display.c	/^static SpiceImageCacheOps image_cache_ops = {$/;"	v	file:
image_get	glib/channel-display.c	/^static pixman_image_t *image_get(SpiceImageCache *cache, uint64_t id)$/;"	f	file:
image_get_lossless	glib/channel-display.c	/^static pixman_image_t* image_get_lossless(SpiceImageCache *cache, uint64_t id)$/;"	f	file:
image_has_palette_to_cache	spice-common/common/canvas_base.c	/^static int image_has_palette_to_cache(SpiceImage *image)$/;"	f	file:
image_put	glib/channel-display.c	/^static void image_put(SpiceImageCache *cache, uint64_t id, pixman_image_t *image)$/;"	f	file:
image_put_lossy	glib/channel-display.c	/^static void image_put_lossy(SpiceImageCache *cache, uint64_t id,$/;"	f	file:
image_replace_lossy	glib/channel-display.c	/^static void image_replace_lossy(SpiceImageCache *cache, uint64_t id,$/;"	f	file:
image_seg	spice-common/common/lz.c	/^    LzImageSegment    *image_seg;$/;"	m	struct:HashEntry	file:
image_surfaces	glib/channel-display.c	/^    SpiceImageSurfaces          image_surfaces;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
image_surfaces_ops	glib/channel-display.c	/^static SpiceImageSurfacesOps image_surfaces_ops = {$/;"	v	file:
images	glib/channel-display.c	/^    display_cache               *images;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
images	glib/decode-glz.c	/^    struct glz_image        **images;$/;"	m	struct:SpiceGlzDecoderWindow	typeref:struct:SpiceGlzDecoderWindow::glz_image	file:
images	glib/spice-session-priv.h	/^    display_cache     *images;$/;"	m	struct:_SpiceSessionPrivate
images_cache_size	glib/spice-session-priv.h	/^    int               images_cache_size;$/;"	m	struct:_SpiceSessionPrivate
in	glib/spice-channel-priv.h	/^    GInputStream                *in;$/;"	m	struct:_SpiceChannelPrivate
in	glib/vmcstream.c	/^    SpiceVmcInputStream *in;$/;"	m	struct:_SpiceVmcStream	file:
in_channel_layouts	ffmpeg/include/libavfilter/avfilter.h	/^    struct AVFilterChannelLayouts  *in_channel_layouts;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterChannelLayouts
in_flight_message	glib/channel-smartcard.c	/^    SpiceSmartcardChannelMessage *in_flight_message;$/;"	m	struct:_SpiceSmartcardChannelPrivate	file:
in_formats	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterFormats *in_formats;$/;"	m	struct:AVFilterLink
in_now	glib/decode-glz.c	/^    uint8_t                 *in_now;$/;"	m	struct:GlibGlzDecoder	file:
in_samplerates	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterFormats  *in_samplerates;$/;"	m	struct:AVFilterLink
in_serial	glib/spice-channel-priv.h	/^    uint64_t                    in_serial;$/;"	m	struct:_SpiceChannelPrivate
in_start	glib/decode-glz.c	/^    uint8_t                 *in_start;$/;"	m	struct:GlibGlzDecoder	file:
increment	spice-common/python_modules/codegen.py	/^    def increment(self, var, val):$/;"	m	class:CodeWriter
increment_identifier	spice-common/python_modules/codegen.py	/^def increment_identifier(idf):$/;"	f
indent	spice-common/python_modules/codegen.py	/^    def indent(self):$/;"	m	class:CodeWriter
index	ffmpeg/include/libavformat/avformat.h	/^    int index;    \/**< stream index in AVFormatContext *\/$/;"	m	struct:AVStream
index	ffmpeg/include/libavutil/lfg.h	/^    int index;$/;"	m	struct:AVLFG
index	spice-common/python_modules/codegen.py	/^    def index(self, no_block = False):$/;"	m	class:CodeWriter
index_entries	ffmpeg/include/libavformat/avformat.h	/^    AVIndexEntry *index_entries; \/**< Only used if the format does not$/;"	m	struct:AVStream
index_entries_allocated_size	ffmpeg/include/libavformat/avformat.h	/^    unsigned int index_entries_allocated_size;$/;"	m	struct:AVStream
inet_aton	spice-common/common/ssl_verify.c	/^static int inet_aton(const char* ip, struct in_addr* in_addr)$/;"	f	file:
info	ffmpeg/include/libavcodec/vdpau.h	/^    union AVVDPAUPictureInfo info;$/;"	m	struct:AVVDPAUContext	typeref:union:AVVDPAUContext::AVVDPAUPictureInfo
info	ffmpeg/include/libavcodec/vdpau.h	/^    union AVVDPAUPictureInfo info;$/;"	m	struct:vdpau_render_state	typeref:union:vdpau_render_state::AVVDPAUPictureInfo
info	ffmpeg/include/libavformat/avformat.h	/^    } *info;$/;"	m	struct:AVStream	typeref:struct:AVStream::__anon35
info	glib/channel-main.c	/^    SpiceMigrationDstInfo *info;$/;"	m	struct:spice_migrate	file:
info	spice-common/common/lz.h	/^    SPICE_ATTR_PRINTF(2, 3) void (*info)(LzUsrContext *usr, const char *fmt, ...);$/;"	m	struct:LzUsrContext
info	spice-common/common/quic.h	/^    SPICE_ATTR_PRINTF(2, 3) void (*info)(QuicUsrContext *usr, const char *fmt, ...);$/;"	m	struct:QuicUsrContext
info	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLReleaseInfo *info;$/;"	m	struct:QXLReleaseInfoExt
inhibit_keyboard_grab	glib/spice-session-priv.h	/^    gboolean          inhibit_keyboard_grab;$/;"	m	struct:_SpiceSessionPrivate
init	ffmpeg/include/libavcodec/avcodec.h	/^    int (*init)(AVCodecContext *);$/;"	m	struct:AVCodec
init	ffmpeg/include/libavcodec/avcodec.h	/^    int (*init)(AVCodecContext *avctx);$/;"	m	struct:AVHWAccel
init	ffmpeg/include/libavfilter/avfilter.h	/^    int (*init)(AVFilterContext *ctx);$/;"	m	struct:AVFilter
init	spice-common/common/glc.c	/^static int init(InternaCtx *ctx, int width, int height)$/;"	f	file:
init_channel	spice-common/common/quic.c	/^static int init_channel(Encoder *encoder, Channel *channel)$/;"	f	file:
init_decode_io	spice-common/common/quic.c	/^static inline void init_decode_io(Encoder *encoder)$/;"	f	file:
init_dict	ffmpeg/include/libavfilter/avfilter.h	/^    int (*init_dict)(AVFilterContext *ctx, AVDictionary **options);$/;"	m	struct:AVFilter
init_done	glib/channel-cursor.c	/^    gboolean                    init_done;$/;"	m	struct:_SpiceCursorChannelPrivate	file:
init_encoder	spice-common/common/lz.c	/^static int init_encoder(Encoder *encoder, LzUsrContext *usr)$/;"	f	file:
init_encoder	spice-common/common/quic.c	/^static int init_encoder(Encoder *encoder, QuicUsrContext *usr)$/;"	f	file:
init_flag	win32/win32_spice_interface.c	/^static bool init_flag = false;$/;"	v	file:
init_model_structures	spice-common/common/quic.c	/^static int init_model_structures(Encoder *encoder, FamilyStat *family_stat,$/;"	f	file:
init_opaque	ffmpeg/include/libavfilter/avfilter.h	/^    int (*init_opaque)(AVFilterContext *ctx, void *opaque);$/;"	m	struct:AVFilter
init_pattern	spice-common/common/glc.c	/^static inline void init_pattern(InternalPat *pat, int x_orign, int y_orign, const GLCImage *image)$/;"	f	file:
init_spiceconn_atgs	win32/win32_spice_interface.c	/^static void init_spiceconn_atgs(struct SpiceConnectARGS * args,SPICE_HANDLE sh,int hspice,const char * host,const char * port,$/;"	f	file:
init_state	ffmpeg/include/libavfilter/avfilter.h	/^    } init_state;$/;"	m	struct:AVFilterLink	typeref:enum:AVFilterLink::__anon33
init_static_data	ffmpeg/include/libavcodec/avcodec.h	/^    void (*init_static_data)(struct AVCodec *codec);$/;"	m	struct:AVCodec
init_thread_copy	ffmpeg/include/libavcodec/avcodec.h	/^    int (*init_thread_copy)(AVCodecContext *);$/;"	m	struct:AVCodec
init_zeroLUT	spice-common/common/quic.c	/^static void init_zeroLUT(void)$/;"	f	file:
initial_padding	ffmpeg/include/libavcodec/avcodec.h	/^    int initial_padding;$/;"	m	struct:AVCodecContext
inject_global_side_data	ffmpeg/include/libavformat/avformat.h	/^    int inject_global_side_data;$/;"	m	struct:AVStream
input	spice-common/spice-protocol/spice/vdi_dev.h	/^    VDIPortRing input;$/;"	m	struct:VDIPortRam
input_count	ffmpeg/include/libavfilter/avfilter.h	/^    attribute_deprecated unsigned input_count; \/\/\/< @deprecated use nb_inputs$/;"	m	struct:AVFilterContext
input_pads	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterPad   *input_pads;      \/\/\/< array of input pads$/;"	m	struct:AVFilterContext
inputs	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterLink **inputs;          \/\/\/< array of pointers to input links$/;"	m	struct:AVFilterContext
inputs	ffmpeg/include/libavfilter/avfilter.h	/^    const AVFilterPad *inputs;$/;"	m	struct:AVFilter
inputs	win32/win32-spice-widget-priv.h	/^    SpiceInputsChannel      *inputs;$/;"	m	struct:_SpiceDisplayPrivate
inputs_handle_ack	glib/channel-inputs.c	/^static void inputs_handle_ack(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
inputs_handle_init	glib/channel-inputs.c	/^static void inputs_handle_init(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
inputs_handle_modifiers	glib/channel-inputs.c	/^static void inputs_handle_modifiers(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
inputs_modifiers	glib/channel-inputs.h	/^    void (*inputs_modifiers)(SpiceChannel *channel);$/;"	m	struct:_SpiceInputsChannelClass
installer	glib/usb-device-manager.c	/^    SpiceWinUsbDriver     *installer;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
installer	glib/usb-device-manager.c	/^    SpiceWinUsbDriver     *installer;$/;"	m	struct:_UsbInstallCbInfo	file:
instance	glib/gio-coroutine.c	/^    gpointer instance;$/;"	m	struct:signal_data	file:
instance	glib/spice-util.c	/^    GObject *instance;$/;"	m	struct:__anon23	file:
instance	win32/virt-viewer-util.c	/^    GObject *instance;$/;"	m	struct:__anon45	file:
instance_destroyed_cb	glib/spice-util.c	/^instance_destroyed_cb (gpointer ctx_,$/;"	f	file:
instance_destroyed_cb	win32/virt-viewer-util.c	/^instance_destroyed_cb(gpointer ctx_,$/;"	f	file:
int16	spice-common/python_modules/ptypes.py	/^int16 = IntegerType(16, True)$/;"	v
int32	spice-common/python_modules/ptypes.py	/^int32 = IntegerType(32, True)$/;"	v
int64	spice-common/python_modules/ptypes.py	/^int64 = IntegerType(64, True)$/;"	v
int8	spice-common/python_modules/ptypes.py	/^int8 = IntegerType(8, True)$/;"	v
int_mask	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t int_mask;$/;"	m	struct:QXLRam
int_mask	spice-common/spice-protocol/spice/vdi_dev.h	/^    uint32_t int_mask;$/;"	m	struct:VDIPortRam
int_pending	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t int_pending;$/;"	m	struct:QXLRam
int_pending	spice-common/spice-protocol/spice/vdi_dev.h	/^    uint32_t int_pending;$/;"	m	struct:VDIPortRam
int_to_fix	spice-common/common/canvas_base.c	/^ static inline SPICE_FIXED28_4  int_to_fix(int v)$/;"	f	file:
inter_matrix	ffmpeg/include/libavcodec/avcodec.h	/^    uint16_t *inter_matrix;$/;"	m	struct:AVCodecContext
inter_quant_bias	ffmpeg/include/libavcodec/avcodec.h	/^    attribute_deprecated int inter_quant_bias;$/;"	m	struct:AVCodecContext
interlaced	ffmpeg/include/libavfilter/avfilter.h	/^    int interlaced;             \/\/\/< is frame interlaced$/;"	m	struct:AVFilterBufferRefVideoProps
interlaced_frame	ffmpeg/include/libavutil/frame.h	/^    int interlaced_frame;$/;"	m	struct:AVFrame
interleave_packet	ffmpeg/include/libavformat/avformat.h	/^    int (*interleave_packet)(struct AVFormatContext *, AVPacket *out,$/;"	m	struct:AVOutputFormat
interleaver_chunk_duration	ffmpeg/include/libavformat/avformat.h	/^    int64_t interleaver_chunk_duration;$/;"	m	struct:AVStream
interleaver_chunk_size	ffmpeg/include/libavformat/avformat.h	/^    int64_t interleaver_chunk_size;$/;"	m	struct:AVStream
internal	ffmpeg/include/libavcodec/avcodec.h	/^    struct AVCodecInternal *internal;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVCodecInternal
internal	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterGraphInternal *internal;$/;"	m	struct:AVFilterGraph
internal	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterInternal *internal;$/;"	m	struct:AVFilterContext
internal	ffmpeg/include/libavformat/avformat.h	/^    AVFormatInternal *internal;$/;"	m	struct:AVFormatContext
interrupt_callback	ffmpeg/include/libavformat/avformat.h	/^    AVIOInterruptCB interrupt_callback;$/;"	m	struct:AVFormatContext
intra_dc_precision	ffmpeg/include/libavcodec/avcodec.h	/^    int intra_dc_precision;$/;"	m	struct:AVCodecContext
intra_matrix	ffmpeg/include/libavcodec/avcodec.h	/^    uint16_t *intra_matrix;$/;"	m	struct:AVCodecContext
intra_quant_bias	ffmpeg/include/libavcodec/avcodec.h	/^    attribute_deprecated int intra_quant_bias;$/;"	m	struct:AVCodecContext
invalidate	win32/win32-spice-widget.c	/^static void invalidate(SpiceChannel *channel,$/;"	f	file:
invalidates	examples/test_bmp.c	/^void * invalidates(void * ctx,void *ud)$/;"	f
invers	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLInvers invers;$/;"	m	union:QXLCompatDrawable::__anon75
invers	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLInvers invers;$/;"	m	union:QXLDrawable::__anon76
io_available_bits	spice-common/common/quic.c	/^    unsigned int io_available_bits;$/;"	m	struct:Encoder	file:
io_bytes_count	spice-common/common/lz.c	/^    size_t io_bytes_count;$/;"	m	struct:Encoder	file:
io_end	spice-common/common/lz.c	/^    uint8_t            *io_end;$/;"	m	struct:Encoder	file:
io_end	spice-common/common/quic.c	/^    uint32_t *io_end;$/;"	m	struct:Encoder	file:
io_last_copy	spice-common/common/lz.c	/^    uint8_t            *io_last_copy;  \/\/ pointer to the last byte in which copy count was written$/;"	m	struct:Encoder	file:
io_next_word	spice-common/common/quic.c	/^    uint32_t io_next_word;$/;"	m	struct:Encoder	file:
io_now	spice-common/common/lz.c	/^    uint8_t            *io_now;$/;"	m	struct:Encoder	file:
io_now	spice-common/common/quic.c	/^    uint32_t *io_now;$/;"	m	struct:Encoder	file:
io_repositioned	ffmpeg/include/libavformat/avformat.h	/^    int io_repositioned;$/;"	m	struct:AVFormatContext
io_start	spice-common/common/lz.c	/^    uint8_t            *io_start;$/;"	m	struct:Encoder	file:
io_stream	glib/wocky-http-proxy.c	/^  GIOStream *io_stream;$/;"	m	struct:__anon7	file:
io_word	spice-common/common/quic.c	/^    uint32_t io_word;$/;"	m	struct:Encoder	file:
io_words_count	spice-common/common/quic.c	/^    uint32_t io_words_count;$/;"	m	struct:Encoder	file:
iopattern	ffmpeg/include/libavcodec/qsv.h	/^    int iopattern;$/;"	m	struct:AVQSVContext
ip	spice-common/common/messages.h	/^        SpiceMsgTunnelIpInfo ip;$/;"	m	union:SpiceMsgcTunnelAddGenericService::__anon151
ipv4	spice-common/common/messages.h	/^      SpiceTunnelIPv4 ipv4;$/;"	m	union:SpiceMsgTunnelIpInfo::__anon150
iq_matrix_buf_id	ffmpeg/include/libavcodec/vaapi.h	/^    uint32_t iq_matrix_buf_id;$/;"	m	struct:vaapi_context
is_64bit	spice-common/common/marshaller.c	/^    int is_64bit;$/;"	m	struct:__anon136	file:
is_active	glib/channel-playback.c	/^    gboolean                    is_active;$/;"	m	struct:_SpicePlaybackChannelPrivate	file:
is_array	spice-common/python_modules/ptypes.py	/^    def is_array(self):$/;"	m	class:Containee
is_array	spice-common/python_modules/ptypes.py	/^    def is_array(self):$/;"	m	class:Type
is_attached_to_server	glib/channel-smartcard.c	/^static gboolean is_attached_to_server(VReader *reader)$/;"	f	file:
is_bytes_length	spice-common/python_modules/ptypes.py	/^    def is_bytes_length(self):$/;"	m	class:ArrayType
is_connect	win32/win32_spice_interface_types.h	/^    int is_connect;$/;"	m	struct:SPICE_USBAddDev
is_constant_length	spice-common/python_modules/ptypes.py	/^    def is_constant_length(self):$/;"	m	class:ArrayType
is_cstring_length	spice-common/python_modules/ptypes.py	/^    def is_cstring_length(self):$/;"	m	class:ArrayType
is_disabled	ffmpeg/include/libavfilter/avfilter.h	/^    int is_disabled;                \/\/\/< the enabled state from the last expression evaluation$/;"	m	struct:AVFilterContext
is_edge	glib/spice-util.c	/^static bool is_edge(unsigned width, unsigned height, const guint8 *xor, int bpl, int x, int y)$/;"	f	file:
is_edge_helper	glib/spice-util.c	/^static bool is_edge_helper(const guint8 *xor, int bpl, int x, int y)$/;"	f	file:
is_enum	spice-common/python_modules/ptypes.py	/^    def is_enum(self):$/;"	m	class:EnumBaseType
is_extra_size	spice-common/python_modules/ptypes.py	/^    def is_extra_size(self):$/;"	m	class:ArrayType
is_extra_size	spice-common/python_modules/ptypes.py	/^    def is_extra_size(self):$/;"	m	class:Member
is_extra_size	spice-common/python_modules/ptypes.py	/^    def is_extra_size(self):$/;"	m	class:Switch
is_extra_size	spice-common/python_modules/ptypes.py	/^    def is_extra_size(self):$/;"	m	class:Type
is_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def is_fixed_nw_size(self):$/;"	m	class:ArrayType
is_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def is_fixed_nw_size(self):$/;"	m	class:ChannelType
is_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def is_fixed_nw_size(self):$/;"	m	class:ContainerType
is_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def is_fixed_nw_size(self):$/;"	m	class:Member
is_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def is_fixed_nw_size(self):$/;"	m	class:PointerType
is_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def is_fixed_nw_size(self):$/;"	m	class:ProtocolType
is_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def is_fixed_nw_size(self):$/;"	m	class:Switch
is_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def is_fixed_nw_size(self):$/;"	m	class:Type
is_fixed_nw_size	spice-common/python_modules/ptypes.py	/^    def is_fixed_nw_size(self):$/;"	m	class:TypeAlias
is_fixed_sizeof	spice-common/python_modules/ptypes.py	/^    def is_fixed_sizeof(self):$/;"	m	class:ArrayType
is_fixed_sizeof	spice-common/python_modules/ptypes.py	/^    def is_fixed_sizeof(self):$/;"	m	class:ContainerType
is_fixed_sizeof	spice-common/python_modules/ptypes.py	/^    def is_fixed_sizeof(self):$/;"	m	class:Member
is_fixed_sizeof	spice-common/python_modules/ptypes.py	/^    def is_fixed_sizeof(self):$/;"	m	class:Switch
is_fixed_sizeof	spice-common/python_modules/ptypes.py	/^    def is_fixed_sizeof(self):$/;"	m	class:Type
is_fixed_sizeof	spice-common/python_modules/ptypes.py	/^    def is_fixed_sizeof(self):$/;"	m	class:TypeAlias
is_generated	spice-common/python_modules/codegen.py	/^    def is_generated(self, kind, name):$/;"	m	class:CodeWriter
is_identifier_length	spice-common/python_modules/ptypes.py	/^    def is_identifier_length(self):$/;"	m	class:ArrayType
is_image_size_length	spice-common/python_modules/ptypes.py	/^    def is_image_size_length(self):$/;"	m	class:ArrayType
is_install	glib/usb-device-manager.c	/^    gboolean              is_install;$/;"	m	struct:_UsbInstallCbInfo	file:
is_io_to_decode_end	spice-common/common/lz.c	/^static inline int is_io_to_decode_end(Encoder *encoder)$/;"	f	file:
is_pointer	spice-common/python_modules/ptypes.py	/^    def is_pointer(self):$/;"	m	class:Containee
is_pointer	spice-common/python_modules/ptypes.py	/^    def is_pointer(self):$/;"	m	class:Type
is_primitive	spice-common/python_modules/ptypes.py	/^    def is_primitive(self):$/;"	m	class:Containee
is_primitive	spice-common/python_modules/ptypes.py	/^    def is_primitive(self):$/;"	m	class:EnumBaseType
is_primitive	spice-common/python_modules/ptypes.py	/^    def is_primitive(self):$/;"	m	class:IntegerType
is_primitive	spice-common/python_modules/ptypes.py	/^    def is_primitive(self):$/;"	m	class:Member
is_primitive	spice-common/python_modules/ptypes.py	/^    def is_primitive(self):$/;"	m	class:PointerType
is_primitive	spice-common/python_modules/ptypes.py	/^    def is_primitive(self):$/;"	m	class:Type
is_primitive	spice-common/python_modules/ptypes.py	/^    def is_primitive(self):$/;"	m	class:TypeAlias
is_range	ffmpeg/include/libavutil/opt.h	/^    int is_range;$/;"	m	struct:AVOptionRange
is_remaining_length	spice-common/python_modules/ptypes.py	/^    def is_remaining_length(self):$/;"	m	class:ArrayType
is_struct	spice-common/python_modules/ptypes.py	/^    def is_struct(self):$/;"	m	class:Containee
is_struct	spice-common/python_modules/ptypes.py	/^    def is_struct(self):$/;"	m	class:Type
is_switch	spice-common/python_modules/ptypes.py	/^    def is_switch(self):$/;"	m	class:Containee
is_switch	spice-common/python_modules/ptypes.py	/^    def is_switch(self):$/;"	m	class:Switch
is_toplevel	spice-common/python_modules/demarshal.py	/^    def is_toplevel(self):$/;"	m	class:DemarshallingDestination
is_toplevel	spice-common/python_modules/marshal.py	/^    def is_toplevel(self):$/;"	m	class:MarshallingSource
item_name	ffmpeg/include/libavutil/log.h	/^    const char* (*item_name)(void* ctx);$/;"	m	struct:AVClass
item_nr	spice-common/common/marshaller.c	/^    int item_nr;$/;"	m	struct:__anon136	file:
items	spice-common/common/marshaller.c	/^    MarshallerItem *items;$/;"	m	struct:SpiceMarshaller	file:
items_size	spice-common/common/marshaller.c	/^    int items_size; \/* number of items availible in items *\/$/;"	m	struct:SpiceMarshaller	file:
iterate_read	glib/spice-channel.h	/^    void (*iterate_read)(SpiceChannel *channel);$/;"	m	struct:_SpiceChannelClass
iterate_write	glib/spice-channel.h	/^    void (*iterate_write)(SpiceChannel *channel);$/;"	m	struct:_SpiceChannelClass
jmp	glib/continuation.h	/^	jmp_buf jmp;$/;"	m	struct:continuation
jmp_env	spice-common/common/canvas_base.c	/^    jmp_buf jmp_env;$/;"	m	struct:LzData	file:
jmp_env	spice-common/common/canvas_base.c	/^    jmp_buf jmp_env;$/;"	m	struct:QuicData	file:
joinStyle	spice-common/common/lines.h	/^    unsigned int joinStyle:2;$/;"	m	struct:lineGC
join_style	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t join_style;$/;"	m	struct:QXLLineAttr
jpeg	spice-common/common/canvas_base.c	/^    SpiceJpegDecoder* jpeg;$/;"	m	struct:CanvasBase	file:
jpeg	spice-common/common/draw.h	/^        SpiceJPEGData       jpeg;$/;"	m	union:SpiceImage::__anon153
jpeg_alpha	spice-common/common/draw.h	/^        SpiceJPEGAlphaData  jpeg_alpha;$/;"	m	union:SpiceImage::__anon153
jpeg_decoder	glib/channel-display-priv.h	/^    SpiceJpegDecoder            *jpeg_decoder;$/;"	m	struct:display_surface
jpeg_decoder_destroy	glib/decode-jpeg.c	/^void jpeg_decoder_destroy(SpiceJpegDecoder *decoder)$/;"	f
jpeg_decoder_fill_input_buffer	glib/decode-jpeg.c	/^static boolean jpeg_decoder_fill_input_buffer(j_decompress_ptr cinfo)$/;"	f	file:
jpeg_decoder_init_source	glib/decode-jpeg.c	/^static void jpeg_decoder_init_source(j_decompress_ptr cinfo)$/;"	f	file:
jpeg_decoder_new	glib/decode-jpeg.c	/^SpiceJpegDecoder *jpeg_decoder_new(void)$/;"	f
jpeg_decoder_ops	glib/decode-jpeg.c	/^static SpiceJpegDecoderOps jpeg_decoder_ops = {$/;"	v	file:
jpeg_decoder_skip_input_data	glib/decode-jpeg.c	/^static void jpeg_decoder_skip_input_data(j_decompress_ptr cinfo, long num_bytes)$/;"	f	file:
jpeg_decoder_term_source	glib/decode-jpeg.c	/^static void jpeg_decoder_term_source (j_decompress_ptr cinfo)$/;"	f	file:
jpeg_id	spice-common/common/canvas_base.c	/^static int jpeg_id = 0;$/;"	v	file:
jpeg_size	spice-common/common/draw.h	/^    uint32_t jpeg_size;$/;"	m	struct:SpiceJPEGAlphaData
k	spice-common/common/lines.c	/^    double k;                   \/* x0 * dy - y0 * dx *\/$/;"	m	struct:_PolySlope	file:
k	spice-common/common/lines.c	/^    double k;$/;"	m	struct:_LineFace	file:
kVDADecodeInfo_Asynchronous	ffmpeg/include/libavcodec/vda.h	/^    kVDADecodeInfo_Asynchronous = 1UL << 0,$/;"	e	enum:__anon36
kVDADecodeInfo_FrameDropped	ffmpeg/include/libavcodec/vda.h	/^    kVDADecodeInfo_FrameDropped = 1UL << 1$/;"	e	enum:__anon36
key	ffmpeg/include/libavformat/avformat.h	/^    const uint8_t *key;$/;"	m	struct:AVFormatContext
key	ffmpeg/include/libavutil/dict.h	/^    char *key;$/;"	m	struct:AVDictionaryEntry
key	ffmpeg/include/libavutil/xtea.h	/^    uint32_t key[16];$/;"	m	struct:AVXTEA
key_delayed_id	win32/win32-spice-widget-priv.h	/^    guint                   key_delayed_id;$/;"	m	struct:_SpiceDisplayPrivate
key_delayed_scancode	win32/win32-spice-widget-priv.h	/^    int                     key_delayed_scancode;$/;"	m	struct:_SpiceDisplayPrivate
key_frame	ffmpeg/include/libavcodec/avcodec.h	/^    int key_frame;$/;"	m	struct:AVCodecParserContext
key_frame	ffmpeg/include/libavfilter/avfilter.h	/^    int key_frame;              \/\/\/< 1 -> keyframe, 0-> not$/;"	m	struct:AVFilterBufferRefVideoProps
key_frame	ffmpeg/include/libavutil/frame.h	/^    int key_frame;$/;"	m	struct:AVFrame
key_state	win32/win32-spice-widget-priv.h	/^    uint32_t                key_state[512 \/ 32];$/;"	m	struct:_SpiceDisplayPrivate
keyboard_grab	win32/win32-spice-widget.h	/^    void (*keyboard_grab)(SpiceChannel *channel, gint grabbed);$/;"	m	struct:_SpiceDisplayClass
keyboard_grab_active	win32/win32-spice-widget-priv.h	/^    bool                    keyboard_grab_active;$/;"	m	struct:_SpiceDisplayPrivate
keyboard_grab_enable	win32/win32-spice-widget-priv.h	/^    bool                    keyboard_grab_enable;$/;"	m	struct:_SpiceDisplayPrivate
keyboard_grab_inhibit	win32/win32-spice-widget-priv.h	/^    gboolean                keyboard_grab_inhibit;$/;"	m	struct:_SpiceDisplayPrivate
keyboard_have_focus	win32/win32-spice-widget-priv.h	/^    bool                    keyboard_have_focus;$/;"	m	struct:_SpiceDisplayPrivate
keyboard_hook	win32/win32-spice-widget-priv.h	/^    HHOOK                   keyboard_hook;$/;"	m	struct:_SpiceDisplayPrivate
keyboard_modifiers	spice-common/common/messages.h	/^    uint32_t keyboard_modifiers;$/;"	m	struct:SpiceMsgInputsInit
keycode_map	win32/win32-spice-widget-priv.h	/^    const guint16 const     *keycode_map;$/;"	m	struct:_SpiceDisplayPrivate
keycode_maplen	win32/win32-spice-widget-priv.h	/^    size_t                  keycode_maplen;$/;"	m	struct:_SpiceDisplayPrivate
keyfile	win32/virt-viewer-file.c	/^    GKeyFile* keyfile;$/;"	m	struct:_VirtViewerFilePrivate	file:
keyint_min	ffmpeg/include/libavcodec/avcodec.h	/^    int keyint_min;$/;"	m	struct:AVCodecContext
keylen	ffmpeg/include/libavformat/avformat.h	/^    int keylen;$/;"	m	struct:AVFormatContext
keymap_linux2xtkbd	win32/linuxkeymap.h	/^static const guint16 keymap_linux2xtkbd[] = {$/;"	v
keymap_win322xtkbd	win32/vncdisplaykeymap_win322xtkbd.c	/^static const guint16 keymap_win322xtkbd[] = {$/;"	v	file:
keymap_win322xtkbd	win32/win32keymap.h	/^static const guint16 keymap_win322xtkbd[] = {$/;"	v
keymap_x112xtkbd	win32/x11keymap.h	/^static const guint16 keymap_x112xtkbd[] = {$/;"	v
keypress_delay	win32/win32-spice-widget-priv.h	/^    guint                   keypress_delay;$/;"	m	struct:_SpiceDisplayPrivate
keysyms	win32/spice-grabsequence.h	/^	guint *keysyms;$/;"	m	struct:_SpiceGrabSequence
l	ffmpeg/include/libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_16
l	ffmpeg/include/libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_32
l	ffmpeg/include/libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_64
label	spice-common/python_modules/codegen.py	/^    def label(self, s):$/;"	m	class:CodeWriter
last	glib/continuation.h	/^	ucontext_t last;$/;"	m	struct:continuation
last_IP_duration	ffmpeg/include/libavformat/avformat.h	/^    int last_IP_duration;$/;"	m	struct:AVStream
last_IP_pts	ffmpeg/include/libavformat/avformat.h	/^    int64_t last_IP_pts;$/;"	m	struct:AVStream
last_delay	glib/spice-pulse.c	/^    guint                   last_delay;$/;"	m	struct:_SpicePulsePrivate	file:
last_discard_sample	ffmpeg/include/libavformat/avformat.h	/^    int64_t last_discard_sample;$/;"	m	struct:AVStream
last_dts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t last_dts;$/;"	m	struct:AVCodecParserContext
last_dts	ffmpeg/include/libavformat/avformat.h	/^        int64_t last_dts;$/;"	m	struct:AVStream::__anon35
last_dts_for_order_check	ffmpeg/include/libavformat/avformat.h	/^    int64_t last_dts_for_order_check;$/;"	m	struct:AVStream
last_duration	ffmpeg/include/libavformat/avformat.h	/^        int64_t last_duration;$/;"	m	struct:AVStream::__anon35
last_frame	glib/channel-record.c	/^    guint8                      *last_frame;$/;"	m	struct:_SpiceRecordChannelPrivate	file:
last_frame_current	glib/channel-record.c	/^    gsize                       last_frame_current;$/;"	m	struct:_SpiceRecordChannelPrivate	file:
last_frame_delay	spice-common/common/messages.h	/^    int32_t last_frame_delay;$/;"	m	struct:SpiceMsgcDisplayStreamReport
last_in_packet_buffer	ffmpeg/include/libavformat/avformat.h	/^    struct AVPacketList *last_in_packet_buffer;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVPacketList
last_marshaller	spice-common/common/marshaller.c	/^    SpiceMarshaller *last_marshaller;$/;"	m	struct:SpiceMarshallerData	file:
last_message_serial	glib/spice-channel-priv.h	/^    uint64_t                    last_message_serial;$/;"	m	struct:_SpiceChannelPrivate
last_pos	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t last_pos;$/;"	m	struct:AVCodecParserContext
last_predictor_count	ffmpeg/include/libavcodec/avcodec.h	/^    int last_predictor_count;$/;"	m	struct:AVCodecContext
last_pts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t last_pts;$/;"	m	struct:AVCodecParserContext
last_time	glib/channel-playback.c	/^    guint32                     last_time;$/;"	m	struct:_SpicePlaybackChannelPrivate	file:
latency	glib/channel-playback.c	/^    guint32                     latency;$/;"	m	struct:_SpicePlaybackChannelPrivate	file:
latency_ms	spice-common/common/messages.h	/^    uint32_t latency_ms;$/;"	m	struct:SpiceMsgPlaybackLatency
lcb	win32/win32_spice_interface_types.h	/^   LCXCALLBACK lcb;$/;"	m	struct:SpiceCallBacks
leader	glib/coroutine_ucontext.c	/^static struct coroutine leader;$/;"	v	typeref:struct:coroutine	file:
leader	glib/coroutine_winfibers.c	/^static struct coroutine leader = { 0, };$/;"	v	typeref:struct:coroutine	file:
left	spice-common/common/draw.h	/^    int32_t left;$/;"	m	struct:SpiceRect
left	spice-common/spice-protocol/spice/qxl_dev.h	/^    int32_t left;$/;"	m	struct:QXLRect
left	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t left;$/;"	m	struct:QXLURect
len	glib/channel-display-priv.h	/^    uint32_t len;$/;"	m	struct:drops_sequence_stats
len	spice-common/common/marshaller.c	/^    size_t len;$/;"	m	struct:__anon135	file:
len	spice-common/common/mem.h	/^    uint32_t len;$/;"	m	struct:SpiceChunk
len	win32/win32_spice_interface_types.h	/^   unsigned int    len;$/;"	m	struct:SByteArray
length	ffmpeg/include/libswscale/swscale.h	/^    int length;                 \/\/\/< number of coefficients in the vector$/;"	m	struct:SwsVector
length	glib/wocky-http-proxy.c	/^  gssize length;$/;"	m	struct:__anon7	file:
length	spice-common/common/draw.h	/^    uint16_t length;$/;"	m	struct:SpiceString
length	spice-common/common/messages.h	/^    uint16_t length;$/;"	m	struct:SpiceMsgCursorTrail
length	spice-common/common/messages.h	/^    uint32_t length;$/;"	m	struct:SpiceMsgSmartcard
length	spice-common/spice-protocol/spice/qxl_dev.h	/^            uint16_t length;$/;"	m	struct:QXLCursorCmd::__anon70::SPICE_ATTR_PACKED
length	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t length;$/;"	m	struct:QXLString
level	ffmpeg/include/libavcodec/avcodec.h	/^     int level;$/;"	m	struct:AVCodecContext
lfe_mix_level	ffmpeg/include/libavutil/downmix_info.h	/^    double lfe_mix_level;$/;"	m	struct:AVDownmixInfo
libdev	glib/usb-device-manager.c	/^    libusb_device *libdev;$/;"	m	struct:_SpiceUsbDeviceInfo	file:
lineGC	spice-common/common/lines.h	/^struct lineGC {$/;"	s
lineGC	spice-common/common/lines.h	/^typedef struct lineGC lineGC;$/;"	t	typeref:struct:lineGC
lineGCOps	spice-common/common/lines.h	/^} lineGCOps;$/;"	t	typeref:struct:__anon139
lineStyle	spice-common/common/lines.h	/^    unsigned int lineStyle:2;$/;"	m	struct:lineGC
lineWidth	spice-common/common/lines.h	/^    unsigned short lineWidth;$/;"	m	struct:lineGC
line_dash	spice-common/common/glc.c	/^    LineDash line_dash;$/;"	m	struct:InternaCtx	file:
line_width	spice-common/common/glc.c	/^    GLfloat line_width;$/;"	m	struct:InternaCtx	file:
lines	spice-common/common/lz.c	/^    uint8_t            *lines;$/;"	m	struct:LzImageSegment	file:
lines_end	spice-common/common/lz.c	/^    uint8_t            *lines_end;$/;"	m	struct:LzImageSegment	file:
linesize	ffmpeg/include/libavcodec/avcodec.h	/^    int linesize[AV_NUM_DATA_POINTERS];     \/\/\/< number of bytes per line$/;"	m	struct:AVPicture
linesize	ffmpeg/include/libavfilter/avfilter.h	/^    int linesize[8];            \/\/\/< number of bytes per line$/;"	m	struct:AVFilterBuffer
linesize	ffmpeg/include/libavfilter/avfilter.h	/^    int linesize[8];            \/\/\/< number of bytes per line$/;"	m	struct:AVFilterBufferRef
linesize	ffmpeg/include/libavutil/frame.h	/^    int linesize[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
link	glib/spice-session.c	/^    RingItem          link;$/;"	m	struct:channel	file:
link_hdr	glib/spice-channel-priv.h	/^    SpiceLinkHeader             link_hdr;$/;"	m	struct:_SpiceChannelPrivate
link_msg	glib/spice-channel-priv.h	/^    SpiceLinkMess               link_msg;$/;"	m	struct:_SpiceChannelPrivate
list_link	spice-common/common/glc.c	/^    TassVertex *list_link;$/;"	m	struct:TassVertex	file:
lmax	ffmpeg/include/libavcodec/avcodec.h	/^    int lmax;$/;"	m	struct:AVCodecContext
lmin	ffmpeg/include/libavcodec/avcodec.h	/^    int lmin;$/;"	m	struct:AVCodecContext
lock	spice-common/common/gdi_canvas.c	/^    RecurciveMutex* lock;$/;"	m	struct:GdiCanvas	file:
locks	glib/channel-inputs.c	/^    guint32                     locks;$/;"	m	struct:_SpiceInputsChannelPrivate	file:
log2_chroma_h	ffmpeg/include/libavutil/pixdesc.h	/^    uint8_t log2_chroma_h;$/;"	m	struct:AVPixFmtDescriptor
log2_chroma_w	ffmpeg/include/libavutil/pixdesc.h	/^    uint8_t log2_chroma_w;  \/\/\/< chroma_width = -((-luma_width )>>log2_chroma_w)$/;"	m	struct:AVPixFmtDescriptor
log_buf	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t log_buf[QXL_LOG_BUF_SIZE];$/;"	m	struct:QXLRam
log_file	glib/channel-display-priv.h	/^    FILE                           *log_file;$/;"	m	struct:display_stream
log_level	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t log_level;$/;"	m	struct:QXLRom
log_level_offset	ffmpeg/include/libavcodec/avcodec.h	/^    int log_level_offset;$/;"	m	struct:AVCodecContext
log_level_offset_offset	ffmpeg/include/libavutil/log.h	/^    int log_level_offset_offset;$/;"	m	struct:AVClass
long_name	ffmpeg/include/libavcodec/avcodec.h	/^    const char *long_name;$/;"	m	struct:AVCodec
long_name	ffmpeg/include/libavcodec/avcodec.h	/^    const char *long_name;$/;"	m	struct:AVCodecDescriptor
long_name	ffmpeg/include/libavformat/avformat.h	/^    const char *long_name;$/;"	m	struct:AVInputFormat
long_name	ffmpeg/include/libavformat/avformat.h	/^    const char *long_name;$/;"	m	struct:AVOutputFormat
lookup_case_member	spice-common/python_modules/ptypes.py	/^    def lookup_case_member(self, name):$/;"	m	class:Switch
lookup_member	spice-common/python_modules/ptypes.py	/^    def lookup_member(self, name):$/;"	m	class:ContainerType
lookup_ref	spice-common/common/marshaller.c	/^static uint8_t *lookup_ref(MarshallerRef *ref)$/;"	f	file:
lookup_type	spice-common/python_modules/ptypes.py	/^def lookup_type(name):$/;"	f
lossy	glib/channel-display.c	/^    gboolean lossy;$/;"	m	struct:_WaitImageData	file:
lossy	glib/spice-channel-cache.h	/^    gboolean                    lossy;$/;"	m	struct:display_cache_item
lowres	ffmpeg/include/libavcodec/avcodec.h	/^     int lowres;$/;"	m	struct:AVCodecContext
ltc_divisor	ffmpeg/include/libavcodec/dv_profile.h	/^    int              ltc_divisor;           \/* FPS from the LTS standpoint *\/$/;"	m	struct:AVDVProfile
lumH	ffmpeg/include/libswscale/swscale.h	/^    SwsVector *lumH;$/;"	m	struct:SwsFilter
lumV	ffmpeg/include/libswscale/swscale.h	/^    SwsVector *lumV;$/;"	m	struct:SwsFilter
lumi_masking	ffmpeg/include/libavcodec/avcodec.h	/^    float lumi_masking;$/;"	m	struct:AVCodecContext
lz	spice-common/common/canvas_base.c	/^    LzContext *lz;$/;"	m	struct:LzData	file:
lz_alloc_image_seg	spice-common/common/lz.c	/^static inline LzImageSegment *lz_alloc_image_seg(Encoder *encoder)$/;"	f	file:
lz_create	spice-common/common/lz.c	/^LzContext *lz_create(LzUsrContext *usr)$/;"	f
lz_data	spice-common/common/canvas_base.c	/^    LzData lz_data;$/;"	m	struct:CanvasBase	file:
lz_dealloc_free_segments	spice-common/common/lz.c	/^static void lz_dealloc_free_segments(Encoder *encoder)$/;"	f	file:
lz_decode	spice-common/common/lz.c	/^void lz_decode(LzContext *lz, LzImageType to_type, uint8_t *buf)$/;"	f
lz_decode_begin	spice-common/common/lz.c	/^void lz_decode_begin(LzContext *lz, uint8_t *io_ptr, unsigned int num_io_bytes,$/;"	f
lz_destroy	spice-common/common/lz.c	/^void lz_destroy(LzContext *lz)$/;"	f
lz_encode	spice-common/common/lz.c	/^int lz_encode(LzContext *lz, LzImageType type, int width, int height, int top_down,$/;"	f
lz_plt	spice-common/common/draw.h	/^        SpiceLZPLTData      lz_plt;$/;"	m	union:SpiceImage::__anon153
lz_read_image_segments	spice-common/common/lz.c	/^static int lz_read_image_segments(Encoder *encoder, uint8_t *first_lines,$/;"	f	file:
lz_reset_image_seg	spice-common/common/lz.c	/^static void lz_reset_image_seg(Encoder *encoder)$/;"	f	file:
lz_rgb	spice-common/common/draw.h	/^        SpiceLZRGBData      lz_rgb;$/;"	m	union:SpiceImage::__anon153
lz_usr_error	spice-common/common/canvas_base.c	/^SPICE_ATTR_PRINTF(2, 3) static void lz_usr_error(LzUsrContext *usr, const char *fmt, ...)$/;"	f	file:
lz_usr_free	spice-common/common/canvas_base.c	/^static void lz_usr_free(LzUsrContext *usr, void *ptr)$/;"	f	file:
lz_usr_malloc	spice-common/common/canvas_base.c	/^static void *lz_usr_malloc(LzUsrContext *usr, int size)$/;"	f	file:
lz_usr_more_lines	spice-common/common/canvas_base.c	/^static int lz_usr_more_lines(LzUsrContext *usr, uint8_t **lines)$/;"	f	file:
lz_usr_more_space	spice-common/common/canvas_base.c	/^static int lz_usr_more_space(LzUsrContext *usr, uint8_t **io_ptr)$/;"	f	file:
lz_usr_warn	spice-common/common/canvas_base.c	/^SPICE_ATTR_PRINTF(2, 3) static void lz_usr_warn(LzUsrContext *usr, const char *fmt, ...)$/;"	f	file:
lzeroes	spice-common/common/quic.c	/^static const BYTE lzeroes[256] = {$/;"	v	file:
macro	spice-common/python_modules/codegen.py	/^    def macro(self, name, args, define):$/;"	m	class:CodeWriter
magic	glib/win-usb-clerk.h	/^    UINT16 magic;$/;"	m	struct:USBClerkHeader
magic	spice-common/spice-protocol/spice/controller_prot.h	/^    uint32_t magic;$/;"	m	struct:ControllerInitHeader
magic	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t magic;$/;"	m	struct:FrgMenuInitHeader
magic	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t magic;$/;"	m	struct:SpiceLinkHeader
magic	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t magic;$/;"	m	struct:QXLRam
magic	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t magic;$/;"	m	struct:QXLRom
magic	spice-common/spice-protocol/spice/stats.h	/^    uint32_t magic;$/;"	m	struct:SpiceStat
magic	spice-common/spice-protocol/spice/vdi_dev.h	/^    uint32_t magic;$/;"	m	struct:VDIPortRam
magic_written	glib/channel-webdav.c	/^static void magic_written(GObject *source_object,$/;"	f	file:
main	examples/test_bmp.c	/^int main(int argc,char **argv)$/;"	f
main	glib/usbutil.c	/^int main()$/;"	f
main	spice-common/common/region.c	/^int main(void)$/;"	f
main	win32/win32-spice-widget-priv.h	/^    SpiceMainChannel        *main;$/;"	m	struct:_SpiceDisplayPrivate
main	win32/win32-spicy.h	/^    SpiceMainChannel *main;$/;"	m	struct:spice_connection
main_agent_handle_msg	glib/channel-main.c	/^static void main_agent_handle_msg(SpiceChannel *channel,$/;"	f	file:
main_channel_event	win32/win32-spicy.c	/^static void main_channel_event(SpiceChannel *channel, SpiceChannelEvent event,$/;"	f	file:
main_context	glib/spice-audio-priv.h	/^    GMainContext            *main_context;$/;"	m	struct:_SpiceAudioPrivate
main_event	examples/test_bmp.c	/^void *main_event(void * ctx,void *ud)$/;"	f
main_handle_agent_connected	glib/channel-main.c	/^static void main_handle_agent_connected(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_agent_connected_tokens	glib/channel-main.c	/^static void main_handle_agent_connected_tokens(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_agent_data	glib/channel-main.c	/^static void main_handle_agent_data(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_agent_data_msg	glib/channel-main.c	/^static void main_handle_agent_data_msg(SpiceChannel* channel, int* msg_size, guchar** msg_pos)$/;"	f	file:
main_handle_agent_disconnected	glib/channel-main.c	/^static void main_handle_agent_disconnected(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_agent_token	glib/channel-main.c	/^static void main_handle_agent_token(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_channels_list	glib/channel-main.c	/^static void main_handle_channels_list(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_init	glib/channel-main.c	/^static void main_handle_init(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_migrate_begin	glib/channel-main.c	/^static void main_handle_migrate_begin(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_migrate_begin_seamless	glib/channel-main.c	/^static void main_handle_migrate_begin_seamless(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_migrate_cancel	glib/channel-main.c	/^static void main_handle_migrate_cancel(SpiceChannel *channel,$/;"	f	file:
main_handle_migrate_dst_seamless_ack	glib/channel-main.c	/^static void main_handle_migrate_dst_seamless_ack(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_migrate_dst_seamless_nack	glib/channel-main.c	/^static void main_handle_migrate_dst_seamless_nack(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_migrate_end	glib/channel-main.c	/^static void main_handle_migrate_end(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_migrate_switch_host	glib/channel-main.c	/^static void main_handle_migrate_switch_host(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_mm_time	glib/channel-main.c	/^static void main_handle_mm_time(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_mouse_mode	glib/channel-main.c	/^static void main_handle_mouse_mode(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_name	glib/channel-main.c	/^static void main_handle_name(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_handle_uuid	glib/channel-main.c	/^static void main_handle_uuid(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
main_loop_context	win32/win32_spice_interface_priv.h	/^typedef struct main_loop_context$/;"	s
main_loop_context	win32/win32_spice_interface_priv.h	/^}main_loop_context;$/;"	t	typeref:struct:main_loop_context
main_loop_run_thread	win32/win32_spice_interface.c	/^static gpointer  main_loop_run_thread(gpointer data)$/;"	f	file:
main_migrate_connect	glib/channel-main.c	/^static void main_migrate_connect(SpiceChannel *channel,$/;"	f	file:
main_migrate_handshake_done	glib/channel-main.c	/^static gboolean main_migrate_handshake_done(gpointer data)$/;"	f	file:
mainloop	glib/spice-pulse.c	/^    pa_glib_mainloop        *mainloop;$/;"	m	struct:_SpicePulsePrivate	file:
mainloop	win32/win32_spice_interface_priv.h	/^   GMainLoop* mainloop;$/;"	m	struct:main_loop_context
major_version	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t major_version;$/;"	m	struct:SpiceLinkHeader
malloc	spice-common/common/lz.h	/^    void    *(*malloc)(LzUsrContext *usr, int size);$/;"	m	struct:LzUsrContext
malloc	spice-common/common/quic.h	/^    void *(*malloc)(QuicUsrContext *usr, int size);$/;"	m	struct:QuicUsrContext
manager	glib/usb-device-manager.c	/^    SpiceUsbDeviceManager *manager;$/;"	m	struct:_UsbInstallCbInfo	file:
mark	glib/channel-display.c	/^    gboolean                    mark;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
mark	win32/win32-spice-widget-priv.h	/^    gint                    mark;$/;"	m	struct:_SpiceDisplayPrivate
mark	win32/win32-spice-widget.c	/^static void mark(SpiceChannel *channel, gint mark, gpointer data) {$/;"	f	file:
mark_false_event_id	glib/channel-display.c	/^    guint                       mark_false_event_id;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
marked	glib/channel-display.h	/^    gboolean marked;$/;"	m	struct:_SpiceDisplayPrimary
marshaller	glib/spice-channel-priv.h	/^    SpiceMarshaller       *marshaller;$/;"	m	struct:_SpiceMsgOut
marshaller	spice-common/common/marshaller.c	/^    SpiceMarshaller *marshaller;$/;"	m	struct:__anon136	file:
marshallers	glib/spice-channel-priv.h	/^    SpiceMessageMarshallers     *marshallers;$/;"	m	struct:_SpiceChannelPrivate
marshallers	glib/spice-channel-priv.h	/^    SpiceMessageMarshallers *marshallers;$/;"	m	struct:_SpiceMsgOut
marshallers	spice-common/common/marshaller.c	/^    SpiceMarshaller *marshallers;$/;"	m	struct:SpiceMarshallerData	file:
mask	spice-common/common/draw.h	/^    SpiceQMask mask;$/;"	m	struct:SpiceBlackness
mask	spice-common/common/draw.h	/^    SpiceQMask mask;$/;"	m	struct:SpiceCopy
mask	spice-common/common/draw.h	/^    SpiceQMask mask;$/;"	m	struct:SpiceFill
mask	spice-common/common/draw.h	/^    SpiceQMask mask;$/;"	m	struct:SpiceOpaque
mask	spice-common/common/draw.h	/^    SpiceQMask mask;$/;"	m	struct:SpiceRop3
mask	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL		mask;			\/* May be NULL *\/$/;"	m	struct:QXLComposite
mask	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLQMask mask;$/;"	m	struct:QXLBlackness
mask	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLQMask mask;$/;"	m	struct:QXLCopy
mask	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLQMask mask;$/;"	m	struct:QXLFill
mask	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLQMask mask;$/;"	m	struct:QXLOpaque
mask	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLQMask mask;$/;"	m	struct:QXLRop3
mask_bitmap	spice-common/common/draw.h	/^    SpiceImage *mask_bitmap;$/;"	m	struct:SpiceComposite
mask_origin	spice-common/common/draw.h	/^    SpicePoint16 mask_origin;$/;"	m	struct:SpiceComposite
mask_origin	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPoint16		mask_origin;$/;"	m	struct:QXLComposite
mask_transform	spice-common/common/draw.h	/^    SpiceTransform mask_transform;$/;"	m	struct:SpiceComposite
mask_transform	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL		mask_transform;		\/* May be NULL *\/$/;"	m	struct:QXLComposite
max	ffmpeg/include/libavutil/opt.h	/^    double max;                 \/\/\/< maximum valid value for the option$/;"	m	struct:AVOption
max	spice-common/spice-protocol/spice/vd_agent.h	/^    int32_t max;$/;"	m	struct:VDAgentMaxClipboard
max_allowed	spice-common/common/messages.h	/^    uint16_t max_allowed;$/;"	m	struct:SpiceMsgDisplayMonitorsConfig
max_allowed	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t max_allowed; \/* If it is 0 no fixed limit is given by the driver *\/$/;"	m	struct:QXLMonitorsConfig
max_analyze_duration	ffmpeg/include/libavformat/avformat.h	/^    int max_analyze_duration;$/;"	m	struct:AVFormatContext
max_analyze_duration2	ffmpeg/include/libavformat/avformat.h	/^    int64_t max_analyze_duration2;$/;"	m	struct:AVFormatContext
max_b_frames	ffmpeg/include/libavcodec/avcodec.h	/^    int max_b_frames;$/;"	m	struct:AVCodecContext
max_b_frames	glib/h264_type.h	/^    int max_b_frames;$/;"	m	struct:_H264StreamInfo
max_chunk_duration	ffmpeg/include/libavformat/avformat.h	/^    int max_chunk_duration;$/;"	m	struct:AVFormatContext
max_chunk_size	ffmpeg/include/libavformat/avformat.h	/^    int max_chunk_size;$/;"	m	struct:AVFormatContext
max_clipboard	glib/channel-main.c	/^    int                         max_clipboard;$/;"	m	struct:_SpiceMainChannelPrivate	file:
max_delay	ffmpeg/include/libavformat/avformat.h	/^    int max_delay;$/;"	m	struct:AVFormatContext
max_index_size	ffmpeg/include/libavformat/avformat.h	/^    unsigned int max_index_size;$/;"	m	struct:AVFormatContext
max_interleave_delta	ffmpeg/include/libavformat/avformat.h	/^    int64_t max_interleave_delta;$/;"	m	struct:AVFormatContext
max_lowres	ffmpeg/include/libavcodec/avcodec.h	/^    uint8_t max_lowres;                     \/\/\/< maximum value for lowres supported by the decoder, no direct access, use av_codec_get_max_lowres()$/;"	m	struct:AVCodec
max_num_of_sockets	spice-common/common/messages.h	/^    uint16_t max_num_of_sockets;$/;"	m	struct:SpiceMsgTunnelInit
max_packet_size	ffmpeg/include/libavformat/avio.h	/^    int max_packet_size;$/;"	m	struct:AVIOContext
max_picture_buffer	ffmpeg/include/libavformat/avformat.h	/^    unsigned int max_picture_buffer;$/;"	m	struct:AVFormatContext
max_prediction_order	ffmpeg/include/libavcodec/avcodec.h	/^    int max_prediction_order;$/;"	m	struct:AVCodecContext
max_qdiff	ffmpeg/include/libavcodec/avcodec.h	/^    int max_qdiff;$/;"	m	struct:AVCodecContext
max_samples	ffmpeg/include/libavfilter/avfilter.h	/^    int max_samples;$/;"	m	struct:AVFilterLink
max_socket_data_size	spice-common/common/messages.h	/^    uint32_t max_socket_data_size;$/;"	m	struct:SpiceMsgTunnelInit
max_texture_size	spice-common/common/glc.c	/^    int max_texture_size;$/;"	m	struct:InternaCtx	file:
max_ts_probe	ffmpeg/include/libavformat/avformat.h	/^    int max_ts_probe;$/;"	m	struct:AVFormatContext
max_window_size	spice-common/common/messages.h	/^    uint32_t max_window_size;$/;"	m	struct:SpiceMsgDisplayStreamActivateReport
maxsize	ffmpeg/include/libavformat/avio.h	/^    int64_t maxsize;$/;"	m	struct:AVIOContext
mb_cmp	ffmpeg/include/libavcodec/avcodec.h	/^    int mb_cmp;$/;"	m	struct:AVCodecContext
mb_decision	ffmpeg/include/libavcodec/avcodec.h	/^    int mb_decision;$/;"	m	struct:AVCodecContext
mb_lmax	ffmpeg/include/libavcodec/avcodec.h	/^    int mb_lmax;$/;"	m	struct:AVCodecContext
mb_lmin	ffmpeg/include/libavcodec/avcodec.h	/^    int mb_lmin;$/;"	m	struct:AVCodecContext
mb_threshold	ffmpeg/include/libavcodec/avcodec.h	/^    int mb_threshold;$/;"	m	struct:AVCodecContext
mb_type	ffmpeg/include/libavutil/frame.h	/^    uint32_t *mb_type;$/;"	m	struct:AVFrame
mbskip_table	ffmpeg/include/libavutil/frame.h	/^    uint8_t *mbskip_table;$/;"	m	struct:AVFrame
me_cmp	ffmpeg/include/libavcodec/avcodec.h	/^    int me_cmp;$/;"	m	struct:AVCodecContext
me_method	ffmpeg/include/libavcodec/avcodec.h	/^    attribute_deprecated int me_method;$/;"	m	struct:AVCodecContext
me_penalty_compensation	ffmpeg/include/libavcodec/avcodec.h	/^    int me_penalty_compensation;$/;"	m	struct:AVCodecContext
me_pre_cmp	ffmpeg/include/libavcodec/avcodec.h	/^    int me_pre_cmp;$/;"	m	struct:AVCodecContext
me_range	ffmpeg/include/libavcodec/avcodec.h	/^    int me_range;$/;"	m	struct:AVCodecContext
me_sub_cmp	ffmpeg/include/libavcodec/avcodec.h	/^    int me_sub_cmp;$/;"	m	struct:AVCodecContext
me_subpel_quality	ffmpeg/include/libavcodec/avcodec.h	/^    int me_subpel_quality;$/;"	m	struct:AVCodecContext
me_threshold	ffmpeg/include/libavcodec/avcodec.h	/^    int me_threshold;$/;"	m	struct:AVCodecContext
melclen	spice-common/common/quic.c	/^    int melclen;  \/* contents of the state array location$/;"	m	struct:CommonState	file:
melcorder	spice-common/common/quic.c	/^    unsigned long melcorder;  \/* 2^ melclen *\/$/;"	m	struct:CommonState	file:
melcstate	spice-common/common/quic.c	/^    int melcstate; \/* index to the state array *\/$/;"	m	struct:CommonState	file:
mem	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL mem;$/;"	m	struct:QXLSurfaceCreate
mem_end	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint64_t mem_end;$/;"	m	struct:QXLMemSlot
mem_size	spice-common/python_modules/demarshal.py	/^    def mem_size(self):$/;"	m	class:ItemInfo
mem_slot	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLMemSlot mem_slot;$/;"	m	struct:QXLRam
mem_start	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint64_t mem_start;$/;"	m	struct:QXLMemSlot
message	glib/channel-smartcard.c	/^    SpiceMsgOut *message;$/;"	m	struct:_SpiceSmartcardChannelMessage	file:
message	spice-common/common/messages.h	/^    uint8_t message[0];$/;"	m	struct:SpiceMsgNotify
message_ack_count	glib/spice-channel-priv.h	/^    int                         message_ack_count;$/;"	m	struct:_SpiceChannelPrivate
message_ack_window	glib/spice-channel-priv.h	/^    int                         message_ack_window;$/;"	m	struct:_SpiceChannelPrivate
message_buf	spice-common/common/canvas_base.c	/^    char message_buf[512];$/;"	m	struct:LzData	file:
message_buf	spice-common/common/canvas_base.c	/^    char message_buf[512];$/;"	m	struct:QuicData	file:
message_destructor_t	spice-common/common/client_demarshallers.h	/^typedef void (*message_destructor_t)(uint8_t *message);$/;"	t
message_destructor_t	spice-common/common/generated_client_demarshallers.c	/^typedef void (*message_destructor_t)(uint8_t *message);$/;"	t	file:
message_destructor_t	spice-common/common/generated_client_demarshallers1.c	/^typedef void (*message_destructor_t)(uint8_t *message);$/;"	t	file:
message_destructor_t	spice-common/common/generated_server_demarshallers.c	/^typedef void (*message_destructor_t)(uint8_t *message);$/;"	t	file:
message_len	spice-common/common/messages.h	/^    uint32_t message_len;$/;"	m	struct:SpiceMsgNotify
message_queue	glib/channel-smartcard.c	/^    GQueue *message_queue;$/;"	m	struct:_SpiceSmartcardChannelPrivate	file:
message_serial	spice-common/common/messages.h	/^    uint64_t message_serial;$/;"	m	struct:SpiceWaitForChannel
message_type	glib/channel-smartcard.c	/^    VSCMsgType message_type;$/;"	m	struct:_SpiceSmartcardChannelMessage	file:
metadata	ffmpeg/include/libavfilter/avfilter.h	/^    AVDictionary *metadata;     \/\/\/< dictionary containing metadata key=value tags$/;"	m	struct:AVFilterBufferRef
metadata	ffmpeg/include/libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVChapter
metadata	ffmpeg/include/libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVFormatContext
metadata	ffmpeg/include/libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVProgram
metadata	ffmpeg/include/libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVStream
metadata	ffmpeg/include/libavutil/frame.h	/^    AVDictionary *metadata;$/;"	m	struct:AVFrame
metadata	ffmpeg/include/libavutil/frame.h	/^    AVDictionary *metadata;$/;"	m	struct:AVFrameSideData
metadata_header_padding	ffmpeg/include/libavformat/avformat.h	/^    int metadata_header_padding;$/;"	m	struct:AVFormatContext
method	glib/bio-gio.c	/^    BIO_METHOD method;$/;"	m	struct:bio_gsocket_method	file:
miAppendSpans	spice-common/common/lines.c	/^miAppendSpans (SpanGroup * spanGroup, SpanGroup * otherGroup, Spans * spans)$/;"	f	file:
miCleanupSpanData	spice-common/common/lines.c	/^miCleanupSpanData (GCPtr pGC, SpanDataPtr spanData)$/;"	f	file:
miDisposeSpanGroup	spice-common/common/lines.c	/^miDisposeSpanGroup (SpanGroup * spanGroup)$/;"	f	file:
miFillPolyHelper	spice-common/common/lines.c	/^miFillPolyHelper (GCPtr pGC, Boolean foreground,$/;"	f	file:
miFillRectPolyHelper	spice-common/common/lines.c	/^miFillRectPolyHelper (GCPtr pGC, Boolean foreground, SpanDataPtr spanData, int x, int y, int w, int h)$/;"	f	file:
miFillUniqueSpanGroup	spice-common/common/lines.c	/^miFillUniqueSpanGroup (GCPtr pGC, SpanGroup * spanGroup, Boolean foreground)$/;"	f	file:
miFreeSpanGroup	spice-common/common/lines.c	/^miFreeSpanGroup (SpanGroup * spanGroup)$/;"	f	file:
miGetZeroLineBias	spice-common/common/lines.c	215;"	d	file:
miInitSpanGroup	spice-common/common/lines.c	/^miInitSpanGroup (SpanGroup * spanGroup)$/;"	f	file:
miLineArc	spice-common/common/lines.c	/^miLineArc (GCPtr pGC,$/;"	f	file:
miLineArcD	spice-common/common/lines.c	/^miLineArcD (GCPtr pGC,$/;"	f	file:
miLineArcI	spice-common/common/lines.c	/^miLineArcI (GCPtr pGC, int xorg, int yorg, DDXPointPtr points, int *widths)$/;"	f	file:
miLineJoin	spice-common/common/lines.c	/^miLineJoin (GCPtr pGC, Boolean foreground, SpanDataPtr spanData, LineFacePtr pLeft, LineFacePtr pRight)$/;"	f	file:
miLineOnePoint	spice-common/common/lines.c	/^miLineOnePoint (GCPtr pGC,$/;"	f	file:
miLineProjectingCap	spice-common/common/lines.c	/^miLineProjectingCap (GCPtr pGC,$/;"	f	file:
miPolyBuildEdge	spice-common/common/lines.c	/^miPolyBuildEdge (SPICE_GNUC_UNUSED double x0, double y0, double k, \/* x0 * dy - y0 * dx *\/$/;"	f	file:
miPolyBuildPoly	spice-common/common/lines.c	/^miPolyBuildPoly (PolyVertexPtr vertices,$/;"	f	file:
miRoundCapClip	spice-common/common/lines.c	/^miRoundCapClip (LineFacePtr face, Boolean isInt, PolyEdgePtr edge, Boolean * leftEdge)$/;"	f	file:
miRoundJoinClip	spice-common/common/lines.c	/^miRoundJoinClip (LineFacePtr pLeft, LineFacePtr pRight,$/;"	f	file:
miRoundJoinFace	spice-common/common/lines.c	/^miRoundJoinFace (LineFacePtr face, PolyEdgePtr edge, Boolean * leftEdge)$/;"	f	file:
miSetupSpanData	spice-common/common/lines.c	/^miSetupSpanData (GCPtr pGC, SpanDataPtr spanData, int npt)$/;"	f	file:
miSpansCarefulRop	spice-common/common/lines.c	127;"	d	file:
miSpansEasyRop	spice-common/common/lines.c	128;"	d	file:
miStepDash	spice-common/common/lines.c	/^miStepDash (int dist,           \/* distance to step *\/$/;"	f	file:
miSubtractSpans	spice-common/common/lines.c	/^miSubtractSpans (SpanGroup * spanGroup, Spans * sub)$/;"	f	file:
miWideDash	spice-common/common/lines.c	/^miWideDash (GCPtr pGC, int mode, int npt, DDXPointPtr pPts)$/;"	f
miWideDash	spice-common/common/lines.c	84;"	d	file:
miWideDashSegment	spice-common/common/lines.c	/^miWideDashSegment (GCPtr pGC,$/;"	f	file:
miWideLine	spice-common/common/lines.c	/^miWideLine (GCPtr pGC, int mode, int npt, DDXPointPtr pPts)$/;"	f
miWideLine	spice-common/common/lines.c	85;"	d	file:
miWideSegment	spice-common/common/lines.c	/^miWideSegment (GCPtr pGC,$/;"	f	file:
miZeroClipLine	spice-common/common/lines.c	/^miZeroClipLine (int xmin, int ymin, int xmax, int ymax,$/;"	f	file:
miZeroDashLine	spice-common/common/lines.c	/^miZeroDashLine (GCPtr pgc, int mode, int nptInit,       \/* number of points in polyline *\/$/;"	f
miZeroDashLine	spice-common/common/lines.c	83;"	d	file:
miZeroLine	spice-common/common/lines.c	/^miZeroLine (GCPtr pGC, int mode,        \/* Origin or Previous *\/$/;"	f
miZeroLine	spice-common/common/lines.c	82;"	d	file:
migrate_channel_connect	glib/channel-main.c	/^static SpiceChannel* migrate_channel_connect(spice_migrate *mig, int type, int id)$/;"	f	file:
migrate_channel_event_cb	glib/channel-main.c	/^static void migrate_channel_event_cb(SpiceChannel *channel, SpiceChannelEvent event,$/;"	f	file:
migrate_channel_new_cb	glib/channel-main.c	/^static void migrate_channel_new_cb(SpiceSession *s, SpiceChannel *channel, gpointer data)$/;"	f	file:
migrate_connect	glib/channel-main.c	/^static gboolean migrate_connect(gpointer data)$/;"	f	file:
migrate_data	glib/channel-main.c	/^    spice_migrate               *migrate_data;$/;"	m	struct:_SpiceMainChannelPrivate	file:
migrate_delayed	glib/channel-main.c	/^static gboolean migrate_delayed(gpointer data)$/;"	f	file:
migrate_delayed_id	glib/channel-main.c	/^    guint                       migrate_delayed_id;$/;"	m	struct:_SpiceMainChannelPrivate	file:
migrate_wait_init	glib/spice-session-priv.h	/^    gboolean          migrate_wait_init;$/;"	m	struct:_SpiceSessionPrivate
migration	glib/spice-session-priv.h	/^    SpiceSession      *migration;$/;"	m	struct:_SpiceSessionPrivate
migration_copy	glib/spice-session-priv.h	/^    gboolean          migration_copy;$/;"	m	struct:_SpiceSessionPrivate
migration_left	glib/spice-session-priv.h	/^    GList             *migration_left;$/;"	m	struct:_SpiceSessionPrivate
migration_state	glib/spice-session-priv.h	/^    SpiceSessionMigration migration_state;$/;"	m	struct:_SpiceSessionPrivate
migration_state	win32/win32-spicy.c	/^static void migration_state(GObject *session,$/;"	f	file:
mime_type	ffmpeg/include/libavformat/avformat.h	/^    const char *mime_type; \/**< mime_type, when known. *\/$/;"	m	struct:AVProbeData
mime_type	ffmpeg/include/libavformat/avformat.h	/^    const char *mime_type;$/;"	m	struct:AVInputFormat
mime_type	ffmpeg/include/libavformat/avformat.h	/^    const char *mime_type;$/;"	m	struct:AVOutputFormat
mime_types	ffmpeg/include/libavcodec/avcodec.h	/^    const char *const *mime_types;$/;"	m	struct:AVCodecDescriptor
min	ffmpeg/include/libavutil/opt.h	/^    double min;                 \/\/\/< minimum valid value for the option$/;"	m	struct:AVOption
min_distance	ffmpeg/include/libavformat/avformat.h	/^    int min_distance;         \/**< Minimum distance between this and the previous keyframe, used to avoid unneeded searching. *\/$/;"	m	struct:AVIndexEntry
min_latency	glib/channel-playback.c	/^    guint32                     min_latency;$/;"	m	struct:_SpicePlaybackChannelPrivate	file:
min_perms	ffmpeg/include/libavfilter/avfilter.h	/^    attribute_deprecated int min_perms;$/;"	m	struct:AVFilterPad
min_prediction_order	ffmpeg/include/libavcodec/avcodec.h	/^    int min_prediction_order;$/;"	m	struct:AVCodecContext
min_samples	ffmpeg/include/libavfilter/avfilter.h	/^    int min_samples;$/;"	m	struct:AVFilterLink
minor_version	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t minor_version;$/;"	m	struct:SpiceLinkHeader
misc_bits	ffmpeg/include/libavcodec/avcodec.h	/^    int misc_bits;$/;"	m	struct:AVCodecContext
miter_limit	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLFIXED miter_limit;$/;"	m	struct:QXLLineAttr
mjpeg_cinfo	glib/channel-display-priv.h	/^    struct jpeg_decompress_struct  mjpeg_cinfo;$/;"	m	struct:display_stream	typeref:struct:display_stream::jpeg_decompress_struct
mjpeg_jerr	glib/channel-display-priv.h	/^    struct jpeg_error_mgr          mjpeg_jerr;$/;"	m	struct:display_stream	typeref:struct:display_stream::jpeg_error_mgr
mjpeg_src	glib/channel-display-priv.h	/^    struct jpeg_source_mgr         mjpeg_src;$/;"	m	struct:display_stream	typeref:struct:display_stream::jpeg_source_mgr
mjpeg_src_fill	glib/channel-display-mjpeg.c	/^static boolean mjpeg_src_fill(struct jpeg_decompress_struct *cinfo)$/;"	f	file:
mjpeg_src_init	glib/channel-display-mjpeg.c	/^static void mjpeg_src_init(struct jpeg_decompress_struct *cinfo)$/;"	f	file:
mjpeg_src_skip	glib/channel-display-mjpeg.c	/^static void mjpeg_src_skip(struct jpeg_decompress_struct *cinfo,$/;"	f	file:
mjpeg_src_term	glib/channel-display-mjpeg.c	/^static void mjpeg_src_term(struct jpeg_decompress_struct *cinfo)$/;"	f	file:
mm_clock	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t mm_clock;$/;"	m	struct:QXLRom
mm_time	glib/spice-session-priv.h	/^    guint32           mm_time;$/;"	m	struct:_SpiceSessionPrivate
mm_time	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t mm_time;$/;"	m	struct:QXLCompatDrawable
mm_time	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t mm_time;$/;"	m	struct:QXLDrawable
mm_time_at_clock	glib/spice-session-priv.h	/^    guint64           mm_time_at_clock;$/;"	m	struct:_SpiceSessionPrivate
mmtime_id	glib/spice-gstaudio.c	/^    guint                   mmtime_id;$/;"	m	struct:_SpiceGstaudioPrivate	file:
mode	glib/channel-playback.c	/^    int                         mode;$/;"	m	struct:_SpicePlaybackChannelPrivate	file:
mode	glib/channel-record.c	/^    int                         mode;$/;"	m	struct:_SpiceRecordChannelPrivate	file:
mode	spice-common/common/messages.h	/^    uint32_t mode; \/\/SPICE_AUDIO_DATA_MODE_?$/;"	m	struct:SpiceMsgPlaybackMode
mode	spice-common/common/messages.h	/^    uint32_t mode;$/;"	m	struct:SpiceMsgcMainMouseModeRequest
mode	spice-common/common/snd_codec.c	/^    int mode;$/;"	m	struct:__anon134	file:
mode	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t mode;                    \/* qxl-1 *\/$/;"	m	struct:QXLRom
modes	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLMode modes[0];$/;"	m	struct:QXLModes
modes_offset	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t modes_offset;$/;"	m	struct:QXLRom
modification_timestamp	ffmpeg/include/libavformat/avio.h	/^    int64_t modification_timestamp;       \/**< Time of last modification in microseconds since unix$/;"	m	struct:AVIODirEntry
modifiers	glib/channel-inputs.c	/^    int                         modifiers;$/;"	m	struct:_SpiceInputsChannelPrivate	file:
modifiers	spice-common/common/messages.h	/^    uint32_t modifiers;$/;"	m	struct:SpiceMsgInputsKeyModifiers
modifiers	spice-common/common/messages.h	/^    uint32_t modifiers;$/;"	m	struct:SpiceMsgcKeyModifiers
monitor_id	glib/smartcard-manager.c	/^    guint monitor_id;$/;"	m	struct:_SpiceSmartcardManagerPrivate	file:
monitor_id	win32/win32-spice-widget-priv.h	/^    gint                    monitor_id;$/;"	m	struct:_SpiceDisplayPrivate
monitor_id	win32/win32-spicy.h	/^    gint             monitor_id;$/;"	m	struct:_SpiceWindow
monitor_ready	win32/win32-spice-widget-priv.h	/^    gboolean                monitor_ready;$/;"	m	struct:_SpiceDisplayPrivate
monitors	glib/channel-display.c	/^    GArray                      *monitors;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
monitors	spice-common/spice-protocol/spice/vd_agent.h	/^    VDAgentMonConfig monitors[0];$/;"	m	struct:VDAgentMonitorsConfig
monitors_align	glib/channel-main.c	/^static void monitors_align(VDAgentMonConfig *monitors, int nmonitors)$/;"	f	file:
monitors_cmp	glib/channel-main.c	/^static int monitors_cmp(const void *p1, const void *p2, gpointer user_data)$/;"	f	file:
monitors_config	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL monitors_config;$/;"	m	struct:QXLRam
monitors_max	glib/channel-display.c	/^    guint                       monitors_max;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
mono_cursor	glib/channel-cursor.c	/^static void mono_cursor(display_cursor *cursor, const guint8 *data)$/;"	f	file:
more_io_bytes	spice-common/common/lz.c	/^static inline int more_io_bytes(Encoder *encoder)$/;"	f	file:
more_io_words	spice-common/common/quic.c	/^static void more_io_words(Encoder *encoder)$/;"	f	file:
more_lines	spice-common/common/lz.h	/^    int (*more_lines)(LzUsrContext *usr, uint8_t **lines);      \/\/ get the next chunk of the$/;"	m	struct:LzUsrContext
more_lines	spice-common/common/quic.h	/^    int (*more_lines)(QuicUsrContext *usr, uint8_t **lines); \/\/ on return the last line of previous$/;"	m	struct:QuicUsrContext
more_paths	spice-common/common/glc.c	/^static void more_paths(InternalPath *path)$/;"	f	file:
more_points	spice-common/common/glc.c	/^static void more_points(InternalPath *path)$/;"	f	file:
more_segments	spice-common/common/glc.c	/^static void more_segments(InternalPath *path)$/;"	f	file:
more_space	spice-common/common/lz.h	/^    int (*more_space)(LzUsrContext *usr, uint8_t **io_ptr);     \/\/ get the next chunk of the$/;"	m	struct:LzUsrContext
more_space	spice-common/common/quic.h	/^    int (*more_space)(QuicUsrContext *usr, uint32_t **io_ptr, int rows_completed);$/;"	m	struct:QuicUsrContext
motion_count	glib/channel-inputs.c	/^    int                         motion_count;$/;"	m	struct:_SpiceInputsChannelPrivate	file:
motion_subsample_log2	ffmpeg/include/libavutil/frame.h	/^    uint8_t motion_subsample_log2;$/;"	m	struct:AVFrame
motion_val	ffmpeg/include/libavutil/frame.h	/^    int16_t (*motion_val[2])[2];$/;"	m	struct:AVFrame
mouse_grab	win32/win32-spice-widget.h	/^    void (*mouse_grab)(SpiceChannel *channel, gint grabbed);$/;"	m	struct:_SpiceDisplayClass
mouse_grab_active	win32/win32-spice-widget-priv.h	/^    int                     mouse_grab_active;$/;"	m	struct:_SpiceDisplayPrivate
mouse_grab_enable	win32/win32-spice-widget-priv.h	/^    bool                    mouse_grab_enable;$/;"	m	struct:_SpiceDisplayPrivate
mouse_grabbed	win32/win32-spicy.h	/^    bool             mouse_grabbed;$/;"	m	struct:_SpiceWindow
mouse_guest_x	win32/win32-spice-widget-priv.h	/^    int                     mouse_guest_x;$/;"	m	struct:_SpiceDisplayPrivate
mouse_guest_y	win32/win32-spice-widget-priv.h	/^    int                     mouse_guest_y;$/;"	m	struct:_SpiceDisplayPrivate
mouse_have_pointer	win32/win32-spice-widget-priv.h	/^    bool                    mouse_have_pointer;$/;"	m	struct:_SpiceDisplayPrivate
mouse_last_x	win32/win32-spice-widget-priv.h	/^    int                     mouse_last_x;$/;"	m	struct:_SpiceDisplayPrivate
mouse_last_y	win32/win32-spice-widget-priv.h	/^    int                     mouse_last_y;$/;"	m	struct:_SpiceDisplayPrivate
mouse_mode	glib/channel-main.c	/^    enum SpiceMouseMode         mouse_mode;$/;"	m	struct:_SpiceMainChannelPrivate	typeref:enum:_SpiceMainChannelPrivate::SpiceMouseMode	file:
mouse_mode	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t mouse_mode;$/;"	m	struct:QXLSurfaceCreate
mouse_mode	win32/win32-spice-widget-priv.h	/^    enum SpiceMouseMode     mouse_mode;$/;"	m	struct:_SpiceDisplayPrivate	typeref:enum:_SpiceDisplayPrivate::SpiceMouseMode
mouse_motion	glib/channel-inputs.c	/^static SpiceMsgOut* mouse_motion(SpiceInputsChannel *channel)$/;"	f	file:
mouse_position	glib/channel-inputs.c	/^static SpiceMsgOut* mouse_position(SpiceInputsChannel *channel)$/;"	f	file:
mouse_state	win32/win32-spicy.h	/^    const char       *mouse_state;$/;"	m	struct:spice_connection
mouse_update	glib/channel-main.h	/^    void (*mouse_update)(SpiceChannel *channel);$/;"	m	struct:_SpiceMainChannelClass
mpeg	ffmpeg/include/libavcodec/vdpau.h	/^    VdpPictureInfoMPEG1Or2    mpeg;$/;"	m	union:AVVDPAUPictureInfo
mpeg4	ffmpeg/include/libavcodec/vdpau.h	/^    VdpPictureInfoMPEG4Part2 mpeg4;$/;"	m	union:AVVDPAUPictureInfo
mpeg_quant	ffmpeg/include/libavcodec/avcodec.h	/^    int mpeg_quant;$/;"	m	struct:AVCodecContext
msg_SpiceMsgAudioMute	spice-common/common/client_marshallers.h	/^    void (*msg_SpiceMsgAudioMute)(SpiceMarshaller *m, SpiceMsgAudioMute *msg);$/;"	m	struct:__anon119
msg_SpiceMsgAudioVolume	spice-common/common/client_marshallers.h	/^    void (*msg_SpiceMsgAudioVolume)(SpiceMarshaller *m, SpiceMsgAudioVolume *msg);$/;"	m	struct:__anon119
msg_SpiceMsgData	spice-common/common/client_marshallers.h	/^    void (*msg_SpiceMsgData)(SpiceMarshaller *m, SpiceMsgData *msg);$/;"	m	struct:__anon119
msg_SpiceMsgEmpty	spice-common/common/client_marshallers.h	/^    void (*msg_SpiceMsgEmpty)(SpiceMarshaller *m, SpiceMsgEmpty *msg);$/;"	m	struct:__anon119
msg_check_read_only	glib/spice-channel.c	/^static gboolean msg_check_read_only (int channel_type, int msg_type)$/;"	f	file:
msg_clip	glib/channel-display-priv.h	/^    SpiceMsgIn                  *msg_clip;$/;"	m	struct:display_stream
msg_create	glib/channel-display-priv.h	/^    SpiceMsgIn                  *msg_create;$/;"	m	struct:display_stream
msg_data	glib/channel-display-priv.h	/^    SpiceMsgIn                  *msg_data;$/;"	m	struct:display_stream
msgc_ack_sync	spice-common/common/client_marshallers.h	/^    void (*msgc_ack_sync)(SpiceMarshaller *m, SpiceMsgcAckSync *msg);$/;"	m	struct:__anon119
msgc_disconnecting	spice-common/common/client_marshallers.h	/^    void (*msgc_disconnecting)(SpiceMarshaller *m, SpiceMsgDisconnect *msg);$/;"	m	struct:__anon119
msgc_display_init	spice-common/common/client_marshallers.h	/^    void (*msgc_display_init)(SpiceMarshaller *m, SpiceMsgcDisplayInit *msg);$/;"	m	struct:__anon119
msgc_display_stream_report	spice-common/common/client_marshallers.h	/^    void (*msgc_display_stream_report)(SpiceMarshaller *m, SpiceMsgcDisplayStreamReport *msg);$/;"	m	struct:__anon119
msgc_inputs_key_down	spice-common/common/client_marshallers.h	/^    void (*msgc_inputs_key_down)(SpiceMarshaller *m, SpiceMsgcKeyDown *msg);$/;"	m	struct:__anon119
msgc_inputs_key_modifiers	spice-common/common/client_marshallers.h	/^    void (*msgc_inputs_key_modifiers)(SpiceMarshaller *m, SpiceMsgcKeyModifiers *msg);$/;"	m	struct:__anon119
msgc_inputs_key_up	spice-common/common/client_marshallers.h	/^    void (*msgc_inputs_key_up)(SpiceMarshaller *m, SpiceMsgcKeyUp *msg);$/;"	m	struct:__anon119
msgc_inputs_mouse_motion	spice-common/common/client_marshallers.h	/^    void (*msgc_inputs_mouse_motion)(SpiceMarshaller *m, SpiceMsgcMouseMotion *msg);$/;"	m	struct:__anon119
msgc_inputs_mouse_position	spice-common/common/client_marshallers.h	/^    void (*msgc_inputs_mouse_position)(SpiceMarshaller *m, SpiceMsgcMousePosition *msg);$/;"	m	struct:__anon119
msgc_inputs_mouse_press	spice-common/common/client_marshallers.h	/^    void (*msgc_inputs_mouse_press)(SpiceMarshaller *m, SpiceMsgcMousePress *msg);$/;"	m	struct:__anon119
msgc_inputs_mouse_release	spice-common/common/client_marshallers.h	/^    void (*msgc_inputs_mouse_release)(SpiceMarshaller *m, SpiceMsgcMouseRelease *msg);$/;"	m	struct:__anon119
msgc_main_agent_start	spice-common/common/client_marshallers.h	/^    void (*msgc_main_agent_start)(SpiceMarshaller *m, SpiceMsgcMainAgentStart *msg);$/;"	m	struct:__anon119
msgc_main_agent_token	spice-common/common/client_marshallers.h	/^    void (*msgc_main_agent_token)(SpiceMarshaller *m, SpiceMsgcMainAgentTokens *msg);$/;"	m	struct:__anon119
msgc_main_client_info	spice-common/common/client_marshallers.h	/^    void (*msgc_main_client_info)(SpiceMarshaller *m, SpiceMsgcClientInfo *msg);$/;"	m	struct:__anon119
msgc_main_migrate_dst_do_seamless	spice-common/common/client_marshallers.h	/^    void (*msgc_main_migrate_dst_do_seamless)(SpiceMarshaller *m, SpiceMsgcMainMigrateDstDoSeamless *msg);$/;"	m	struct:__anon119
msgc_main_mouse_mode_request	spice-common/common/client_marshallers.h	/^    void (*msgc_main_mouse_mode_request)(SpiceMarshaller *m, SpiceMsgcMainMouseModeRequest *msg);$/;"	m	struct:__anon119
msgc_pong	spice-common/common/client_marshallers.h	/^    void (*msgc_pong)(SpiceMarshaller *m, SpiceMsgPing *msg);$/;"	m	struct:__anon119
msgc_port_event	spice-common/common/client_marshallers.h	/^    void (*msgc_port_event)(SpiceMarshaller *m, SpiceMsgcPortEvent *msg);$/;"	m	struct:__anon119
msgc_record_data	spice-common/common/client_marshallers.h	/^    void (*msgc_record_data)(SpiceMarshaller *m, SpiceMsgcRecordPacket *msg);$/;"	m	struct:__anon119
msgc_record_mode	spice-common/common/client_marshallers.h	/^    void (*msgc_record_mode)(SpiceMarshaller *m, SpiceMsgcRecordMode *msg);$/;"	m	struct:__anon119
msgc_record_start_mark	spice-common/common/client_marshallers.h	/^    void (*msgc_record_start_mark)(SpiceMarshaller *m, SpiceMsgcRecordStartMark *msg);$/;"	m	struct:__anon119
msgc_smartcard_atr	spice-common/common/client_marshallers.h	/^    void (*msgc_smartcard_atr)(SpiceMarshaller *m, VSCMsgATR *msg);$/;"	m	struct:__anon119
msgc_smartcard_data	spice-common/common/client_marshallers.h	/^    void (*msgc_smartcard_data)(SpiceMarshaller *m, SpiceMsgcSmartcard *msg, SpiceMarshaller **reader_name_out);$/;"	m	struct:__anon119
msgc_smartcard_error	spice-common/common/client_marshallers.h	/^    void (*msgc_smartcard_error)(SpiceMarshaller *m, VSCMsgError *msg);$/;"	m	struct:__anon119
msgc_smartcard_header	spice-common/common/client_marshallers.h	/^    void (*msgc_smartcard_header)(SpiceMarshaller *m, VSCMsgHeader *msg);$/;"	m	struct:__anon119
msgc_smartcard_reader_add	spice-common/common/client_marshallers.h	/^    void (*msgc_smartcard_reader_add)(SpiceMarshaller *m, VSCMsgReaderAdd *msg);$/;"	m	struct:__anon119
msgc_tunnel_service_add	spice-common/common/client_marshallers.h	/^    void (*msgc_tunnel_service_add)(SpiceMarshaller *m, SpiceMsgcTunnelAddGenericService *msg, SpiceMarshaller **name_out, SpiceMarshaller **description_out);$/;"	m	struct:__anon119
msgc_tunnel_service_remove	spice-common/common/client_marshallers.h	/^    void (*msgc_tunnel_service_remove)(SpiceMarshaller *m, SpiceMsgcTunnelRemoveService *msg);$/;"	m	struct:__anon119
msgc_tunnel_socket_closed	spice-common/common/client_marshallers.h	/^    void (*msgc_tunnel_socket_closed)(SpiceMarshaller *m, SpiceMsgcTunnelSocketClosed *msg);$/;"	m	struct:__anon119
msgc_tunnel_socket_closed_ack	spice-common/common/client_marshallers.h	/^    void (*msgc_tunnel_socket_closed_ack)(SpiceMarshaller *m, SpiceMsgcTunnelSocketClosedAck *msg);$/;"	m	struct:__anon119
msgc_tunnel_socket_data	spice-common/common/client_marshallers.h	/^    void (*msgc_tunnel_socket_data)(SpiceMarshaller *m, SpiceMsgcTunnelSocketData *msg);$/;"	m	struct:__anon119
msgc_tunnel_socket_fin	spice-common/common/client_marshallers.h	/^    void (*msgc_tunnel_socket_fin)(SpiceMarshaller *m, SpiceMsgcTunnelSocketFin *msg);$/;"	m	struct:__anon119
msgc_tunnel_socket_open_ack	spice-common/common/client_marshallers.h	/^    void (*msgc_tunnel_socket_open_ack)(SpiceMarshaller *m, SpiceMsgcTunnelSocketOpenAck *msg);$/;"	m	struct:__anon119
msgc_tunnel_socket_open_nack	spice-common/common/client_marshallers.h	/^    void (*msgc_tunnel_socket_open_nack)(SpiceMarshaller *m, SpiceMsgcTunnelSocketOpenNack *msg);$/;"	m	struct:__anon119
msgc_tunnel_socket_token	spice-common/common/client_marshallers.h	/^    void (*msgc_tunnel_socket_token)(SpiceMarshaller *m, SpiceMsgcTunnelSocketTokens *msg);$/;"	m	struct:__anon119
msgq	glib/channel-display-priv.h	/^    GQueue                      *msgq;$/;"	m	struct:display_stream
multi_media_time	spice-common/common/messages.h	/^    uint32_t multi_media_time;$/;"	m	struct:SpiceMsgMainInit
multi_media_time	spice-common/common/messages.h	/^    uint32_t multi_media_time;$/;"	m	struct:SpiceStreamDataHeader
must_flush	ffmpeg/include/libavformat/avio.h	/^    int must_flush;         \/**< true if the next seek should flush *\/$/;"	m	struct:AVIOContext
mute	glib/channel-playback.c	/^    guint8                      mute;$/;"	m	struct:_SpicePlaybackChannelPrivate	file:
mute	glib/channel-record.c	/^    guint8                      mute;$/;"	m	struct:_SpiceRecordChannelPrivate	file:
mute	spice-common/common/messages.h	/^    uint8_t mute;$/;"	m	struct:SpiceMsgAudioMute
mutex	spice-common/common/canvas_utils.h	/^    HANDLE mutex;$/;"	m	struct:PixmanData
mutex_t	spice-common/common/mutex.h	/^typedef CRITICAL_SECTION mutex_t;$/;"	t
mux	glib/channel-webdav.c	/^    } mux;$/;"	m	struct:Client	typeref:struct:Client::_mux	file:
mux_pushed_cb	glib/channel-webdav.c	/^static void mux_pushed_cb(OutputQueue *q, gpointer user_data)$/;"	f	file:
mux_ts_offset	ffmpeg/include/libavformat/avformat.h	/^    int64_t mux_ts_offset;$/;"	m	struct:AVStream
mv0_threshold	ffmpeg/include/libavcodec/avcodec.h	/^    int mv0_threshold;$/;"	m	struct:AVCodecContext
mv_bits	ffmpeg/include/libavcodec/avcodec.h	/^    int mv_bits;$/;"	m	struct:AVCodecContext
mv_blocks	ffmpeg/include/libavcodec/xvmc.h	/^    XvMCMacroBlock* mv_blocks;$/;"	m	struct:xvmc_pix_fmt
mx	win32/win32-spice-widget-priv.h	/^    gint                    ww, wh, mx, my;$/;"	m	struct:_SpiceDisplayPrivate
my	win32/win32-spice-widget-priv.h	/^    gint                    ww, wh, mx, my;$/;"	m	struct:_SpiceDisplayPrivate
nGRcodewords	spice-common/common/quic.c	/^    unsigned int nGRcodewords[MAXNUMCODES];      \/* indexed by code number, contains number of$/;"	m	struct:QuicFamily	file:
n_buckets_5bpc	spice-common/common/quic.c	/^    unsigned int n_buckets_5bpc;$/;"	m	struct:Encoder	file:
n_buckets_8bpc	spice-common/common/quic.c	/^    unsigned int n_buckets_8bpc;$/;"	m	struct:Encoder	file:
n_difchan	ffmpeg/include/libavcodec/dv_profile.h	/^    int              n_difchan;             \/* number of DIF channels per frame *\/$/;"	m	struct:AVDVProfile
n_items	spice-common/common/marshaller.c	/^    int n_items;$/;"	m	struct:SpiceMarshaller	file:
n_modes	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t n_modes;$/;"	m	struct:QXLModes
n_slice_buf_ids	ffmpeg/include/libavcodec/vaapi.h	/^    unsigned int n_slice_buf_ids;$/;"	m	struct:vaapi_context
n_surfaces	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t n_surfaces;$/;"	m	struct:QXLRom
name	ffmpeg/include/libavcodec/avcodec.h	/^    const char      *name;$/;"	m	struct:AVCodecDescriptor
name	ffmpeg/include/libavcodec/avcodec.h	/^    const char *name; \/\/\/< short name for the profile$/;"	m	struct:AVProfile
name	ffmpeg/include/libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVBitStreamFilter
name	ffmpeg/include/libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVCodec
name	ffmpeg/include/libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVHWAccel
name	ffmpeg/include/libavfilter/avfilter.h	/^    char *name;                     \/\/\/< name of this filter instance$/;"	m	struct:AVFilterContext
name	ffmpeg/include/libavfilter/avfilter.h	/^    char *name;$/;"	m	struct:AVFilterInOut
name	ffmpeg/include/libavfilter/avfilter.h	/^    const char *name;$/;"	m	struct:AVFilter
name	ffmpeg/include/libavfilter/avfilter.h	/^    const char *name;$/;"	m	struct:AVFilterPad
name	ffmpeg/include/libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVInputFormat
name	ffmpeg/include/libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVOutputFormat
name	ffmpeg/include/libavformat/avio.h	/^    char *name;                           \/**< Filename *\/$/;"	m	struct:AVIODirEntry
name	ffmpeg/include/libavutil/opt.h	/^    const char *name;$/;"	m	struct:AVOption
name	ffmpeg/include/libavutil/pixdesc.h	/^    const char *name;$/;"	m	struct:AVPixFmtDescriptor
name	glib/channel-port.c	/^    gchar *name;$/;"	m	struct:_SpicePortChannelPrivate	file:
name	glib/spice-channel-priv.h	/^    char                        name[16];$/;"	m	struct:_SpiceChannelPrivate
name	glib/spice-session-priv.h	/^    gchar             *name;$/;"	m	struct:_SpiceSessionPrivate
name	glib/usbutil.c	/^    char name[PRODUCT_NAME_LEN];$/;"	m	struct:_usb_product_info	file:
name	glib/usbutil.c	/^    char name[VENDOR_NAME_LEN];$/;"	m	struct:_usb_vendor_info	file:
name	spice-common/common/messages.h	/^    uint64_t name;$/;"	m	struct:SpiceMsgcTunnelAddGenericService
name	spice-common/common/messages.h	/^    uint8_t *name;$/;"	m	struct:SpiceMsgPortInit
name	spice-common/common/messages.h	/^    uint8_t name[0];$/;"	m	struct:SpiceMsgMainName
name	spice-common/spice-protocol/spice/stats.h	/^    char name[SPICE_STAT_NODE_NAME_MAX];$/;"	m	struct:SpiceStatNode
name_len	spice-common/common/messages.h	/^    uint32_t name_len;$/;"	m	struct:SpiceMsgMainName
name_size	spice-common/common/messages.h	/^    uint32_t name_size;$/;"	m	struct:SpiceMsgPortInit
nb_chapters	ffmpeg/include/libavformat/avformat.h	/^    unsigned int nb_chapters;$/;"	m	struct:AVFormatContext
nb_colors	ffmpeg/include/libavcodec/avcodec.h	/^    int nb_colors; \/\/\/< number of colors in pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
nb_components	ffmpeg/include/libavutil/opt.h	/^    int nb_components;$/;"	m	struct:AVOptionRanges
nb_components	ffmpeg/include/libavutil/pixdesc.h	/^    uint8_t nb_components;  \/\/\/< The number of components each pixel has, (1-4)$/;"	m	struct:AVPixFmtDescriptor
nb_decoded_frames	ffmpeg/include/libavformat/avformat.h	/^    int nb_decoded_frames;$/;"	m	struct:AVStream
nb_devices	ffmpeg/include/libavdevice/avdevice.h	/^    int nb_devices;                      \/**< number of autodetected devices *\/$/;"	m	struct:AVDeviceInfoList
nb_ext_buffers	ffmpeg/include/libavcodec/qsv.h	/^    int         nb_ext_buffers;$/;"	m	struct:AVQSVContext
nb_extended_buf	ffmpeg/include/libavutil/frame.h	/^    int        nb_extended_buf;$/;"	m	struct:AVFrame
nb_filters	ffmpeg/include/libavfilter/avfilter.h	/^    unsigned nb_filters;$/;"	m	struct:AVFilterGraph
nb_frames	ffmpeg/include/libavformat/avformat.h	/^    int64_t nb_frames;                 \/\/\/< number of frames in this stream if known or 0$/;"	m	struct:AVStream
nb_index_entries	ffmpeg/include/libavformat/avformat.h	/^    int nb_index_entries;$/;"	m	struct:AVStream
nb_inputs	ffmpeg/include/libavfilter/avfilter.h	/^    unsigned    nb_inputs;          \/\/\/< number of input pads$/;"	m	struct:AVFilterContext
nb_outputs	ffmpeg/include/libavfilter/avfilter.h	/^    unsigned    nb_outputs;         \/\/\/< number of output pads$/;"	m	struct:AVFilterContext
nb_programs	ffmpeg/include/libavformat/avformat.h	/^    unsigned int nb_programs;$/;"	m	struct:AVFormatContext
nb_ranges	ffmpeg/include/libavutil/opt.h	/^    int nb_ranges;$/;"	m	struct:AVOptionRanges
nb_samples	ffmpeg/include/libavfilter/avfilter.h	/^    int nb_samples;             \/\/\/< number of audio samples per channel$/;"	m	struct:AVFilterBufferRefAudioProps
nb_samples	ffmpeg/include/libavutil/frame.h	/^    int nb_samples;$/;"	m	struct:AVFrame
nb_side_data	ffmpeg/include/libavformat/avformat.h	/^    int            nb_side_data;$/;"	m	struct:AVStream
nb_side_data	ffmpeg/include/libavutil/frame.h	/^    int            nb_side_data;$/;"	m	struct:AVFrame
nb_stream_indexes	ffmpeg/include/libavformat/avformat.h	/^    unsigned int   nb_stream_indexes;$/;"	m	struct:AVProgram
nb_streams	ffmpeg/include/libavformat/avformat.h	/^    unsigned int nb_streams;$/;"	m	struct:AVFormatContext
nb_threads	ffmpeg/include/libavfilter/avfilter.h	/^    int nb_threads;$/;"	m	struct:AVFilterGraph
nchannels	glib/channel-main.c	/^    guint nchannels;$/;"	m	struct:spice_migrate	file:
nchannels	glib/channel-playback.c	/^    guint8                      nchannels;$/;"	m	struct:_SpicePlaybackChannelPrivate	file:
nchannels	glib/channel-record.c	/^    guint8                      nchannels;$/;"	m	struct:_SpiceRecordChannelPrivate	file:
nchannels	spice-common/common/messages.h	/^    uint8_t nchannels;$/;"	m	struct:SpiceMsgAudioVolume
need_init	spice-common/common/gdi_canvas.c	/^static int need_init = 1;$/;"	v	file:
need_init	spice-common/common/gl_canvas.c	/^static int need_init = 1;$/;"	v	file:
need_init	spice-common/common/quic.c	/^static int need_init = TRUE;$/;"	v	file:
need_init	spice-common/common/sw_canvas.c	/^static int need_init = 1;$/;"	v	file:
need_parsing	ffmpeg/include/libavformat/avformat.h	/^    enum AVStreamParseType need_parsing;$/;"	m	struct:AVStream	typeref:enum:AVStream::AVStreamParseType
needs_fifo	ffmpeg/include/libavfilter/avfilter.h	/^    int needs_fifo;$/;"	m	struct:AVFilterPad
needs_writable	ffmpeg/include/libavfilter/avfilter.h	/^    int needs_writable;$/;"	m	struct:AVFilterPad
nelements	spice-common/common/generated_client_demarshallers.c	/^    uint32_t nelements;$/;"	m	struct:PointerInfo	file:
nelements	spice-common/common/generated_client_demarshallers1.c	/^    uint32_t nelements;$/;"	m	struct:PointerInfo	file:
nelements	spice-common/common/generated_server_demarshallers.c	/^    uint32_t nelements;$/;"	m	struct:PointerInfo	file:
new_connection	glib/channel-webdav.c	/^static void new_connection(SoupSocket *sock,$/;"	f	file:
newline	spice-common/python_modules/codegen.py	/^    def newline(self):$/;"	m	class:CodeWriter
next	ffmpeg/include/libavcodec/avcodec.h	/^    struct AVBitStreamFilter *next;$/;"	m	struct:AVBitStreamFilter	typeref:struct:AVBitStreamFilter::AVBitStreamFilter
next	ffmpeg/include/libavcodec/avcodec.h	/^    struct AVBitStreamFilterContext *next;$/;"	m	struct:AVBitStreamFilterContext	typeref:struct:AVBitStreamFilterContext::AVBitStreamFilterContext
next	ffmpeg/include/libavcodec/avcodec.h	/^    struct AVCodec *next;$/;"	m	struct:AVCodec	typeref:struct:AVCodec::AVCodec
next	ffmpeg/include/libavcodec/avcodec.h	/^    struct AVCodecParser *next;$/;"	m	struct:AVCodecParser	typeref:struct:AVCodecParser::AVCodecParser
next	ffmpeg/include/libavcodec/avcodec.h	/^    struct AVHWAccel *next;$/;"	m	struct:AVHWAccel	typeref:struct:AVHWAccel::AVHWAccel
next	ffmpeg/include/libavfilter/avfilter.h	/^    struct AVFilter *next;$/;"	m	struct:AVFilter	typeref:struct:AVFilter::AVFilter
next	ffmpeg/include/libavfilter/avfilter.h	/^    struct AVFilterInOut *next;$/;"	m	struct:AVFilterInOut	typeref:struct:AVFilterInOut::AVFilterInOut
next	ffmpeg/include/libavformat/avformat.h	/^    struct AVInputFormat *next;$/;"	m	struct:AVInputFormat	typeref:struct:AVInputFormat::AVInputFormat
next	ffmpeg/include/libavformat/avformat.h	/^    struct AVOutputFormat *next;$/;"	m	struct:AVOutputFormat	typeref:struct:AVOutputFormat::AVOutputFormat
next	ffmpeg/include/libavformat/avformat.h	/^    struct AVPacketList *next;$/;"	m	struct:AVPacketList	typeref:struct:AVPacketList::AVPacketList
next	spice-common/common/glc.c	/^    TassVertex *next;$/;"	m	struct:TassVertex	file:
next	spice-common/common/glc.c	/^    TassVertexBuf *next;$/;"	m	struct:TassVertexBuf	file:
next	spice-common/common/lz.c	/^    LzImageSegment    *next;$/;"	m	struct:LzImageSegment	file:
next	spice-common/common/marshaller.c	/^    MarshallerBuffer *next;$/;"	m	struct:MarshallerBuffer	file:
next	spice-common/common/marshaller.c	/^    SpiceMarshaller *next;$/;"	m	struct:SpiceMarshaller	file:
next	spice-common/common/ring.h	/^    RingItem *next;$/;"	m	struct:Ring
next	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint64_t next;    \/\/ out$/;"	m	union:QXLReleaseInfo
next_chunk	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL next_chunk;$/;"	m	struct:QXLDataChunk
next_frame_offset	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t next_frame_offset; \/* offset of the next frame *\/$/;"	m	struct:AVCodecParserContext
next_free_data_block_num	ffmpeg/include/libavcodec/xvmc.h	/^    int             next_free_data_block_num;$/;"	m	struct:xvmc_pix_fmt
next_sibling_index	spice-common/spice-protocol/spice/stats.h	/^    uint32_t next_sibling_index;$/;"	m	struct:SpiceStatNode
nimages	glib/decode-glz.c	/^    uint32_t                nimages;$/;"	m	struct:SpiceGlzDecoderWindow	file:
nkeysyms	win32/spice-grabsequence.h	/^	guint nkeysyms;$/;"	m	struct:_SpiceGrabSequence
no_block	spice-common/python_modules/codegen.py	/^    def no_block(self, scope):$/;"	m	class:CodeWriter
nodes	spice-common/spice-protocol/spice/stats.h	/^    SpiceStatNode nodes[];$/;"	m	struct:SpiceStat
nofree	spice-common/common/generated_client_demarshallers.c	/^static void nofree(SPICE_GNUC_UNUSED uint8_t *data)$/;"	f	file:
nofree	spice-common/common/generated_client_demarshallers1.c	/^static void nofree(SPICE_GNUC_UNUSED uint8_t *data)$/;"	f	file:
nofree	spice-common/common/generated_server_demarshallers.c	/^static void nofree(SPICE_GNUC_UNUSED uint8_t *data)$/;"	f	file:
noise_reduction	ffmpeg/include/libavcodec/avcodec.h	/^    int noise_reduction;$/;"	m	struct:AVCodecContext
notGRcwlen	spice-common/common/quic.c	/^    unsigned int notGRcwlen[MAXNUMCODES];        \/* indexed by code number, contains codeword$/;"	m	struct:QuicFamily	file:
notGRprefixmask	spice-common/common/quic.c	/^    unsigned int notGRprefixmask[MAXNUMCODES];   \/* indexed by code number, contains mask to$/;"	m	struct:QuicFamily	file:
notGRsuffixlen	spice-common/common/quic.c	/^    unsigned int notGRsuffixlen[MAXNUMCODES];    \/* indexed by code number, contains suffix$/;"	m	struct:QuicFamily	file:
notified	glib/gio-coroutine.c	/^    gboolean notified;$/;"	m	struct:signal_data	file:
notify_main_context	glib/gio-coroutine.c	/^static gboolean notify_main_context(gpointer opaque)$/;"	f	file:
nsse_weight	ffmpeg/include/libavcodec/avcodec.h	/^     int nsse_weight;$/;"	m	struct:AVCodecContext
nstreams	glib/channel-display.c	/^    int                         nstreams;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
num	ffmpeg/include/libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
num	ffmpeg/include/libavutil/rational.h	/^    int num; \/\/\/< numerator$/;"	m	struct:AVRational
numInDashList	spice-common/common/lines.h	/^    unsigned short numInDashList;$/;"	m	struct:lineGC
num_channel_caps	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t num_channel_caps;$/;"	m	struct:SpiceLinkMess
num_channel_caps	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t num_channel_caps;$/;"	m	struct:SpiceLinkReply
num_channels	spice-common/common/quic.c	/^    unsigned int num_channels;$/;"	m	struct:Encoder	file:
num_chunks	spice-common/common/mem.h	/^    uint32_t     num_chunks;$/;"	m	struct:SpiceChunks
num_common_caps	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t num_common_caps;$/;"	m	struct:SpiceLinkMess
num_common_caps	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t num_common_caps;$/;"	m	struct:SpiceLinkReply
num_dashes	spice-common/common/glc.c	/^    int num_dashes;$/;"	m	struct:LineDash	file:
num_drops	spice-common/common/messages.h	/^    uint32_t num_drops;$/;"	m	struct:SpiceMsgcDisplayStreamReport
num_drops_on_arive	glib/channel-display-priv.h	/^    uint32_t             num_drops_on_arive;$/;"	m	struct:display_stream
num_drops_on_playback	glib/channel-display-priv.h	/^    uint32_t             num_drops_on_playback;$/;"	m	struct:display_stream
num_drops_seqs	glib/channel-display-priv.h	/^    uint32_t             num_drops_seqs;$/;"	m	struct:display_stream
num_ents	spice-common/common/draw.h	/^    uint16_t num_ents;$/;"	m	struct:SpicePalette
num_ents	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t num_ents;$/;"	m	struct:QXLPalette
num_frames	spice-common/common/messages.h	/^    uint32_t num_frames;$/;"	m	struct:SpiceMsgcDisplayStreamReport
num_input_frames	glib/channel-display-priv.h	/^    uint32_t             num_input_frames;$/;"	m	struct:display_stream
num_of_channels	spice-common/common/messages.h	/^    uint32_t num_of_channels;$/;"	m	struct:SpiceMsgChannels
num_of_monitors	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t num_of_monitors;$/;"	m	struct:VDAgentMonitorsConfig
num_of_nodes	spice-common/spice-protocol/spice/stats.h	/^    uint32_t num_of_nodes;$/;"	m	struct:SpiceStat
num_pages	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t num_pages;$/;"	m	struct:QXLRom
num_points	spice-common/common/canvas_base.c	/^    int num_points;$/;"	m	struct:__anon123	file:
num_rects	ffmpeg/include/libavcodec/avcodec.h	/^    unsigned num_rects;$/;"	m	struct:AVSubtitle
num_rects	spice-common/common/draw.h	/^  uint32_t num_rects;$/;"	m	struct:SpiceClipRects
num_rects	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t num_rects;$/;"	m	struct:QXLClipRects
num_segments	spice-common/common/draw.h	/^  uint32_t num_segments;$/;"	m	struct:SpicePath
num_segments	spice-common/common/glc.c	/^    int num_segments;$/;"	m	struct:Pathpath	file:
num_tokens	spice-common/common/messages.h	/^    uint32_t num_tokens;$/;"	m	struct:SpiceMsgMainAgentTokens
num_tokens	spice-common/common/messages.h	/^    uint32_t num_tokens;$/;"	m	struct:SpiceMsgTunnelSocketTokens
num_tokens	spice-common/common/messages.h	/^    uint32_t num_tokens;$/;"	m	struct:SpiceMsgcTunnelSocketTokens
num_underflow	glib/spice-pulse.c	/^    guint                   num_underflow;$/;"	m	struct:stream	file:
nw_size	spice-common/python_modules/demarshal.py	/^    def nw_size(self):$/;"	m	class:ItemInfo
object	win32/win32-spicy.h	/^    GObject          object;$/;"	m	struct:_SpiceWindow
observer	glib/spice-util.c	/^    GObject *observer;$/;"	m	struct:__anon23	file:
observer	win32/virt-viewer-util.c	/^    GObject *observer;$/;"	m	struct:__anon45	file:
observer_destroyed_cb	glib/spice-util.c	/^observer_destroyed_cb (gpointer ctx_,$/;"	f	file:
observer_destroyed_cb	win32/virt-viewer-util.c	/^observer_destroyed_cb(gpointer ctx_,$/;"	f	file:
offset	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t offset;      \/\/\/< byte offset from starting packet start$/;"	m	struct:AVCodecParserContext
offset	ffmpeg/include/libavutil/opt.h	/^    int offset;$/;"	m	struct:AVOption
offset	glib/wocky-http-proxy.c	/^  gssize offset;$/;"	m	struct:__anon7	file:
offset	spice-common/common/generated_client_demarshallers.c	/^    uint64_t offset;$/;"	m	struct:PointerInfo	file:
offset	spice-common/common/generated_client_demarshallers1.c	/^    uint64_t offset;$/;"	m	struct:PointerInfo	file:
offset	spice-common/common/generated_server_demarshallers.c	/^    uint64_t offset;$/;"	m	struct:PointerInfo	file:
offset	spice-common/common/glc.c	/^    double offset;$/;"	m	struct:LineDash	file:
offset	spice-common/common/marshaller.c	/^    size_t offset;$/;"	m	struct:__anon136	file:
offset	spice-common/common/mem.h	/^    size_t offset;$/;"	m	struct:SpiceBuffer
offset_of	glib/continuation.h	50;"	d
offset_plus1	ffmpeg/include/libavutil/pixdesc.h	/^    uint16_t offset_plus1 : 3;$/;"	m	struct:AVComponentDescriptor
oformat	ffmpeg/include/libavformat/avformat.h	/^    struct AVOutputFormat *oformat;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVOutputFormat
oglctx_destroy	spice-common/common/ogl_ctx.c	/^void oglctx_destroy(OGLCtx *ctx)$/;"	f
oglctx_make_current	spice-common/common/ogl_ctx.c	/^void oglctx_make_current(OGLCtx *ctx)$/;"	f
oglctx_type_str	spice-common/common/ogl_ctx.c	/^const char *oglctx_type_str(OGLCtx *ctx)$/;"	f
old_content	spice-common/spice_codegen.py	/^        old_content = f.read()$/;"	v
oldest	glib/decode-glz.c	/^    uint64_t                oldest;$/;"	m	struct:SpiceGlzDecoderWindow	file:
one_byte_pixel_t	glib/decode-glz.c	/^typedef struct ATTR_PACKED one_byte_pixel_t {$/;"	s	file:
one_byte_pixel_t	glib/decode-glz.c	/^} one_byte_pixel_t;$/;"	t	typeref:struct:one_byte_pixel_t	file:
one_byte_pixel_t	spice-common/common/lz.c	/^typedef struct ATTR_PACKED one_byte_pixel_t {$/;"	s	file:
one_byte_pixel_t	spice-common/common/lz.c	/^} one_byte_pixel_t;$/;"	t	typeref:struct:one_byte_pixel_t	file:
one_byte_pixel_t	spice-common/common/quic.c	/^typedef struct ATTR_PACKED one_byte_pixel_t {$/;"	s	file:
one_byte_t	spice-common/common/quic.c	/^} one_byte_t;$/;"	t	typeref:struct:one_byte_pixel_t	file:
only_downscale	win32/win32-spice-widget-priv.h	/^    gboolean                only_downscale;$/;"	m	struct:_SpiceDisplayPrivate
opaque	ffmpeg/include/libavcodec/avcodec.h	/^    void *opaque;$/;"	m	struct:AVCodecContext
opaque	ffmpeg/include/libavfilter/avfilter.h	/^    void *opaque;$/;"	m	struct:AVFilterGraph
opaque	ffmpeg/include/libavformat/avformat.h	/^    void *opaque;$/;"	m	struct:AVFormatContext
opaque	ffmpeg/include/libavformat/avio.h	/^    void *opaque;           \/**< A private pointer, passed to the read\/write\/seek\/...$/;"	m	struct:AVIOContext
opaque	ffmpeg/include/libavformat/avio.h	/^    void *opaque;$/;"	m	struct:AVIOInterruptCB
opaque	ffmpeg/include/libavutil/frame.h	/^    void *opaque;$/;"	m	struct:AVFrame
opaque	spice-common/common/marshaller.c	/^    void *opaque;$/;"	m	struct:__anon135	file:
opaque	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLOpaque opaque;$/;"	m	union:QXLCompatDrawable::__anon75
opaque	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLOpaque opaque;$/;"	m	union:QXLDrawable::__anon76
opaque	spice-common/spice-protocol/spice/vd_agent.h	/^    uint64_t opaque;$/;"	m	struct:VDAgentMessage
open_cb	ffmpeg/include/libavformat/avformat.h	/^    int (*open_cb)(struct AVFormatContext *s, AVIOContext **p, const char *url, int flags, const AVIOInterruptCB *int_cb, AVDictionary **options);$/;"	m	struct:AVFormatContext
open_fd	glib/spice-channel.h	/^    void (*open_fd)(SpiceChannel *channel, int with_tls);$/;"	m	struct:_SpiceChannelClass
open_host_connectable_connect	glib/spice-session.c	/^static void open_host_connectable_connect(spice_open_host *open_host, GSocketConnectable *connectable)$/;"	f	file:
open_host_idle_cb	glib/spice-session.c	/^static gboolean open_host_idle_cb(gpointer data)$/;"	f	file:
opened	glib/channel-port.c	/^    gboolean opened;$/;"	m	struct:_SpicePortChannelPrivate	file:
opened	spice-common/common/messages.h	/^    uint8_t opened;$/;"	m	struct:SpiceMsgPortInit
openssl_verify	spice-common/common/ssl_verify.c	/^static int openssl_verify(int preverify_ok, X509_STORE_CTX *ctx)$/;"	f	file:
ops	spice-common/common/canvas_base.h	/^    SpiceJpegDecoderOps *ops;$/;"	m	struct:_SpiceJpegDecoder
ops	spice-common/common/canvas_base.h	/^  SpiceCanvasOps *ops;$/;"	m	struct:_SpiceCanvas
ops	spice-common/common/canvas_base.h	/^  SpiceGlzDecoderOps *ops;$/;"	m	struct:_SpiceGlzDecoder
ops	spice-common/common/canvas_base.h	/^  SpiceImageCacheOps *ops;$/;"	m	struct:_SpiceImageCache
ops	spice-common/common/canvas_base.h	/^  SpicePaletteCacheOps *ops;$/;"	m	struct:_SpicePaletteCache
ops	spice-common/common/canvas_base.h	/^  SpiceZlibDecoderOps *ops;$/;"	m	struct:_SpiceZlibDecoder
ops	spice-common/common/canvas_base.h	/^ SpiceImageSurfacesOps *ops;$/;"	m	struct:_SpiceImageSurfaces
ops	spice-common/common/lines.h	/^    lineGCOps *ops;$/;"	m	struct:lineGC
option	ffmpeg/include/libavutil/log.h	/^    const struct AVOption *option;$/;"	m	struct:AVClass	typeref:struct:AVClass::AVOption
option_debug	glib/spice-option.c	/^static gboolean option_debug(void)$/;"	f	file:
option_version	glib/spice-option.c	/^static void option_version(void)$/;"	f	file:
optional_block	spice-common/python_modules/codegen.py	/^    def optional_block(self, scope):$/;"	m	class:CodeWriter
opus_decoder	spice-common/common/snd_codec.c	/^    OpusDecoder *opus_decoder;$/;"	m	struct:__anon134	file:
opus_encoder	spice-common/common/snd_codec.c	/^    OpusEncoder *opus_encoder;$/;"	m	struct:__anon134	file:
orientation	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t orientation;$/;"	m	struct:QXLMode
orig_buffer_size	ffmpeg/include/libavformat/avio.h	/^    int orig_buffer_size;$/;"	m	struct:AVIOContext
out	glib/spice-channel-priv.h	/^    GOutputStream               *out;$/;"	m	struct:_SpiceChannelPrivate
out	glib/vmcstream.c	/^    SpiceVmcOutputStream *out;$/;"	m	struct:_SpiceVmcStream	file:
out_channel_layouts	ffmpeg/include/libavfilter/avfilter.h	/^    struct AVFilterChannelLayouts *out_channel_layouts;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterChannelLayouts
out_formats	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterFormats *out_formats;$/;"	m	struct:AVFilterLink
out_frame	glib/channel-display-priv.h	/^    uint8_t                     *out_frame;$/;"	m	struct:display_stream
out_samplerates	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterFormats *out_samplerates;$/;"	m	struct:AVFilterLink
out_serial	glib/spice-channel-priv.h	/^    uint64_t                    out_serial;$/;"	m	struct:_SpiceChannelPrivate
out_surface	spice-common/common/canvas_utils.h	/^    pixman_image_t       *out_surface;$/;"	m	struct:LzDecodeUsrData
output	glib/channel-webdav.c	/^    GOutputStream *output;$/;"	m	struct:_OutputQueue	file:
output	glib/channel-webdav.c	/^    OutputQueue *output;$/;"	m	struct:Client	file:
output	spice-common/spice-protocol/spice/vdi_dev.h	/^    VDIPortRing output;$/;"	m	struct:VDIPortRam
output_callback	ffmpeg/include/libavcodec/vda.h	/^    VDADecoderOutputCallback output_callback;$/;"	m	struct:AVVDAContext
output_callback	ffmpeg/include/libavcodec/videotoolbox.h	/^    VTDecompressionOutputCallback output_callback;$/;"	m	struct:AVVideotoolboxContext
output_count	ffmpeg/include/libavfilter/avfilter.h	/^    attribute_deprecated unsigned output_count; \/\/\/< @deprecated use nb_outputs$/;"	m	struct:AVFilterContext
output_pads	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterPad   *output_pads;     \/\/\/< array of output pads$/;"	m	struct:AVFilterContext
output_picture_number	ffmpeg/include/libavcodec/avcodec.h	/^    int output_picture_number;$/;"	m	struct:AVCodecParserContext
output_queue_flush_cb	glib/channel-webdav.c	/^static void output_queue_flush_cb(GObject *source_object,$/;"	f	file:
output_queue_free	glib/channel-webdav.c	/^static void output_queue_free(OutputQueue *queue)$/;"	f	file:
output_queue_idle	glib/channel-webdav.c	/^static gboolean output_queue_idle(gpointer user_data)$/;"	f	file:
output_queue_new	glib/channel-webdav.c	/^static OutputQueue* output_queue_new(GOutputStream *output)$/;"	f	file:
output_queue_push	glib/channel-webdav.c	/^static void output_queue_push(OutputQueue *q, const guint8 *buf, gsize size,$/;"	f	file:
output_ts_offset	ffmpeg/include/libavformat/avformat.h	/^    int64_t output_ts_offset;$/;"	m	struct:AVFormatContext
outputs	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterLink **outputs;         \/\/\/< array of pointers to output links$/;"	m	struct:AVFilterContext
outputs	ffmpeg/include/libavfilter/avfilter.h	/^    const AVFilterPad *outputs;$/;"	m	struct:AVFilter
owner	ffmpeg/include/libavutil/frame.h	/^    struct AVCodecContext *owner;$/;"	m	struct:AVFrame	typeref:struct:AVFrame::AVCodecContext
owner	spice-common/common/glc.c	/^    InternaCtx *owner;$/;"	m	struct:InternalPat	file:
owner	spice-common/common/glc.c	/^    InternaCtx *owner;$/;"	m	struct:InternalPath	file:
p	ffmpeg/include/libavutil/blowfish.h	/^    uint32_t p[AV_BF_ROUNDS + 2];$/;"	m	struct:AVBlowfish
p	glib/continuation.c	/^	void *p;$/;"	m	union:cc_arg	file:
p_count	ffmpeg/include/libavcodec/avcodec.h	/^    int p_count;$/;"	m	struct:AVCodecContext
p_future_surface	ffmpeg/include/libavcodec/xvmc.h	/^    XvMCSurface*    p_future_surface;$/;"	m	struct:xvmc_pix_fmt
p_masking	ffmpeg/include/libavcodec/avcodec.h	/^    float p_masking;$/;"	m	struct:AVCodecContext
p_past_surface	ffmpeg/include/libavcodec/xvmc.h	/^    XvMCSurface*    p_past_surface;$/;"	m	struct:xvmc_pix_fmt
p_surface	ffmpeg/include/libavcodec/xvmc.h	/^    XvMCSurface*    p_surface;$/;"	m	struct:xvmc_pix_fmt
p_tex_bits	ffmpeg/include/libavcodec/avcodec.h	/^    int p_tex_bits;$/;"	m	struct:AVCodecContext
packet_size	ffmpeg/include/libavformat/avformat.h	/^    unsigned int packet_size;$/;"	m	struct:AVFormatContext
pad	glib/decode-glz.c	/^    uint8_t pad;$/;"	m	struct:rgb32_pixel_t	file:
pad	spice-common/common/lz.c	/^    uint8_t pad;$/;"	m	struct:rgb32_pixel_t	file:
pad	spice-common/common/quic.c	/^    BYTE pad;$/;"	m	struct:rgb32_pixel_t	file:
pad_idx	ffmpeg/include/libavfilter/avfilter.h	/^    int pad_idx;$/;"	m	struct:AVFilterInOut
padding	spice-common/common/messages.h	/^    uint8_t padding;$/;"	m	struct:SpiceMsgEmpty
padding	spice-common/spice-protocol/spice/qxl_dev.h	/^        uint16_t padding;$/;"	m	struct:QXLRom::__anon68
padding	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t padding;$/;"	m	struct:QXLCommand
pages_offset	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t pages_offset;            \/* qxl-1 *\/$/;"	m	struct:QXLRom
palette	spice-common/common/draw.h	/^    SpicePalette *palette;$/;"	m	struct:SpiceBitmap
palette	spice-common/common/draw.h	/^    SpicePalette *palette;$/;"	m	struct:SpiceLZPLTData
palette	spice-common/common/lz.c	/^    const SpicePalette    *palette;    \/\/ for decoding images with palettes to rgb$/;"	m	struct:Encoder	file:
palette	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL palette;$/;"	m	struct:QXLBitmap
palette_cache	glib/channel-display.c	/^    SpicePaletteCache           palette_cache;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
palette_cache	spice-common/common/canvas_base.c	/^    SpicePaletteCache *palette_cache;$/;"	m	struct:CanvasBase	file:
palette_cache_ops	glib/channel-display.c	/^static SpicePaletteCacheOps palette_cache_ops = {$/;"	v	file:
palette_get	glib/channel-display.c	/^static SpicePalette *palette_get(SpicePaletteCache *cache, uint64_t id)$/;"	f	file:
palette_has_changed	ffmpeg/include/libavutil/frame.h	/^    int palette_has_changed;$/;"	m	struct:AVFrame
palette_id	spice-common/common/draw.h	/^    uint64_t palette_id;$/;"	m	struct:SpiceBitmap
palette_id	spice-common/common/draw.h	/^    uint64_t palette_id;$/;"	m	struct:SpiceLZPLTData
palette_put	glib/channel-display.c	/^static void palette_put(SpicePaletteCache *cache, SpicePalette *palette)$/;"	f	file:
palette_release	glib/channel-display.c	/^static void palette_release(SpicePaletteCache *cache, SpicePalette *palette)$/;"	f	file:
palette_remove	glib/channel-display.c	/^static void palette_remove(SpicePaletteCache *cache, uint64_t id)$/;"	f	file:
palettes	glib/channel-display.c	/^    display_cache               *palettes;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
palettes	glib/spice-session-priv.h	/^    display_cache     *palettes;$/;"	m	struct:_SpiceSessionPrivate
pallet	spice-common/common/glc.h	/^    uint32_t *pallet;$/;"	m	struct:GLCPImage
pan_scan	ffmpeg/include/libavutil/frame.h	/^    struct AVPanScan *pan_scan;$/;"	m	struct:AVFrame	typeref:struct:AVFrame::AVPanScan
parent	glib/channel-cursor.h	/^    SpiceChannel parent;$/;"	m	struct:_SpiceCursorChannel
parent	glib/channel-display.h	/^    SpiceChannel parent;$/;"	m	struct:_SpiceDisplayChannel
parent	glib/channel-inputs.h	/^    SpiceChannel parent;$/;"	m	struct:_SpiceInputsChannel
parent	glib/channel-main.h	/^    SpiceChannel parent;$/;"	m	struct:_SpiceMainChannel
parent	glib/channel-playback.h	/^    SpiceChannel parent;$/;"	m	struct:_SpicePlaybackChannel
parent	glib/channel-port.h	/^    SpiceChannel parent;$/;"	m	struct:_SpicePortChannel
parent	glib/channel-record.h	/^    SpiceChannel parent;$/;"	m	struct:_SpiceRecordChannel
parent	glib/channel-smartcard.h	/^    SpiceChannel parent;$/;"	m	struct:_SpiceSmartcardChannel
parent	glib/channel-usbredir.h	/^    SpiceChannel parent;$/;"	m	struct:_SpiceUsbredirChannel
parent	glib/channel-webdav.h	/^    SpicePortChannel parent;$/;"	m	struct:_SpiceWebdavChannel
parent	glib/desktop-integration.h	/^    GObject parent;$/;"	m	struct:_SpiceDesktopIntegration
parent	glib/smartcard-manager.h	/^    GObject parent;$/;"	m	struct:_SpiceSmartcardManager
parent	glib/spice-audio.h	/^    GObject parent;$/;"	m	struct:_SpiceAudio
parent	glib/spice-channel-priv.h	/^    SpiceMsgIn            *parent;$/;"	m	struct:_SpiceMsgIn
parent	glib/spice-channel.h	/^    GObject parent;$/;"	m	struct:_SpiceChannel
parent	glib/spice-gstaudio.h	/^    SpiceAudio parent;$/;"	m	struct:_SpiceGstaudio
parent	glib/spice-pulse.h	/^    SpiceAudio parent;$/;"	m	struct:_SpicePulse
parent	glib/spice-session.h	/^    GObject parent;$/;"	m	struct:_SpiceSession
parent	glib/usb-device-manager.h	/^    GObject parent;$/;"	m	struct:_SpiceUsbDeviceManager
parent	glib/win-usb-dev.h	/^    GObject parent;$/;"	m	struct:_GUdevClient
parent	glib/win-usb-dev.h	/^  GObject parent;$/;"	m	struct:_GUdevDevice
parent	glib/win-usb-driver-install.h	/^    GObject parent;$/;"	m	struct:_SpiceWinUsbDriver
parent	glib/wocky-http-proxy.c	/^  GObject parent;$/;"	m	struct:_WockyHttpProxy	file:
parent	glib/wocky-http-proxy.c	/^  WockyHttpProxy parent;$/;"	m	struct:_WockyHttpsProxy	file:
parent	spice-common/common/canvas_base.c	/^    SpiceCanvas parent;$/;"	m	struct:CanvasBase	file:
parent	win32/spice-gtk-session.h	/^    GObject parent;$/;"	m	struct:_SpiceGtkSession
parent	win32/virt-viewer-file.h	/^    GObject parent;$/;"	m	struct:_VirtViewerFile
parent	win32/win32-spice-widget.h	/^    GObject parent;$/;"	m	struct:_SpiceDisplay
parent_class	glib/channel-cursor.h	/^    SpiceChannelClass parent_class;$/;"	m	struct:_SpiceCursorChannelClass
parent_class	glib/channel-display.h	/^    SpiceChannelClass parent_class;$/;"	m	struct:_SpiceDisplayChannelClass
parent_class	glib/channel-inputs.h	/^    SpiceChannelClass parent_class;$/;"	m	struct:_SpiceInputsChannelClass
parent_class	glib/channel-main.h	/^    SpiceChannelClass parent_class;$/;"	m	struct:_SpiceMainChannelClass
parent_class	glib/channel-playback.h	/^    SpiceChannelClass parent_class;$/;"	m	struct:_SpicePlaybackChannelClass
parent_class	glib/channel-port.h	/^    SpiceChannelClass parent_class;$/;"	m	struct:_SpicePortChannelClass
parent_class	glib/channel-record.h	/^    SpiceChannelClass parent_class;$/;"	m	struct:_SpiceRecordChannelClass
parent_class	glib/channel-smartcard.h	/^    SpiceChannelClass parent_class;$/;"	m	struct:_SpiceSmartcardChannelClass
parent_class	glib/channel-usbredir.h	/^    SpiceChannelClass parent_class;$/;"	m	struct:_SpiceUsbredirChannelClass
parent_class	glib/channel-webdav.h	/^    SpicePortChannelClass parent_class;$/;"	m	struct:_SpiceWebdavChannelClass
parent_class	glib/desktop-integration.h	/^    GObjectClass parent_class;$/;"	m	struct:_SpiceDesktopIntegrationClass
parent_class	glib/smartcard-manager.h	/^    GObjectClass parent_class;$/;"	m	struct:_SpiceSmartcardManagerClass
parent_class	glib/spice-audio.h	/^    GObjectClass parent_class;$/;"	m	struct:_SpiceAudioClass
parent_class	glib/spice-channel.h	/^    GObjectClass parent_class;$/;"	m	struct:_SpiceChannelClass
parent_class	glib/spice-gstaudio.h	/^    SpiceAudioClass parent_class;$/;"	m	struct:_SpiceGstaudioClass
parent_class	glib/spice-pulse.h	/^    SpiceAudioClass parent_class;$/;"	m	struct:_SpicePulseClass
parent_class	glib/spice-session.h	/^    GObjectClass parent_class;$/;"	m	struct:_SpiceSessionClass
parent_class	glib/spice-uri.c	/^    GObjectClass parent_class;$/;"	m	struct:_SpiceURIClass	file:
parent_class	glib/usb-device-manager.h	/^    GObjectClass parent_class;$/;"	m	struct:_SpiceUsbDeviceManagerClass
parent_class	glib/vmcstream.c	/^    GIOStreamClass parent_class;$/;"	m	struct:_SpiceVmcStreamClass	file:
parent_class	glib/vmcstream.c	/^    GInputStreamClass parent_class;$/;"	m	struct:_SpiceVmcInputStreamClass	file:
parent_class	glib/vmcstream.c	/^    GOutputStreamClass parent_class;$/;"	m	struct:_SpiceVmcOutputStreamClass	file:
parent_class	glib/win-usb-dev.h	/^    GObjectClass parent_class;$/;"	m	struct:_GUdevClientClass
parent_class	glib/win-usb-dev.h	/^  GObjectClass parent_class;$/;"	m	struct:_GUdevDeviceClass
parent_class	glib/win-usb-driver-install.h	/^    GObjectClass parent_class;$/;"	m	struct:_SpiceWinUsbDriverClass
parent_class	glib/wocky-http-proxy.c	/^  GObjectClass parent_class;$/;"	m	struct:_WockyHttpProxyClass	file:
parent_class	glib/wocky-http-proxy.c	/^  WockyHttpProxyClass parent_class;$/;"	m	struct:_WockyHttpsProxyClass	file:
parent_class	win32/spice-gtk-session.h	/^    GObjectClass parent_class;$/;"	m	struct:_SpiceGtkSessionClass
parent_class	win32/virt-viewer-file.h	/^    GObjectClass parent_class;$/;"	m	struct:_VirtViewerFileClass
parent_class	win32/win32-spice-widget.h	/^    GObjectClass parent_class;$/;"	m	struct:_SpiceDisplayClass
parent_class	win32/win32-spicy.h	/^  GObjectClass parent_class;$/;"	m	struct:_SpiceWindowClass
parent_instance	glib/spice-uri.c	/^    GObject parent_instance;$/;"	m	struct:_SpiceURI	file:
parent_instance	glib/vmcstream.c	/^    GIOStream parent_instance;$/;"	m	struct:_SpiceVmcStream	file:
parent_instance	glib/vmcstream.c	/^    GInputStream parent_instance;$/;"	m	struct:_SpiceVmcInputStream	file:
parent_instance	glib/vmcstream.c	/^    GOutputStream parent_instance;$/;"	m	struct:_SpiceVmcOutputStream	file:
parent_log_context_offset	ffmpeg/include/libavutil/log.h	/^    int parent_log_context_offset;$/;"	m	struct:AVClass
parent_source	glib/smartcard-manager.c	/^    GSource parent_source;$/;"	m	struct:_SmartcardSource	file:
parse	spice-common/common/generated_client_demarshallers.c	/^    parse_func_t parse;$/;"	m	struct:PointerInfo	file:
parse	spice-common/common/generated_client_demarshallers1.c	/^    parse_func_t parse;$/;"	m	struct:PointerInfo	file:
parse	spice-common/common/generated_server_demarshallers.c	/^    parse_func_t parse;$/;"	m	struct:PointerInfo	file:
parse	spice-common/python_modules/spice_parser.py	/^def parse(filename):$/;"	f
parseVariableDef	spice-common/python_modules/spice_parser.py	/^def parseVariableDef(toks):$/;"	f
parse_CursorChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_CursorChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_CursorChannel_msg	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_CursorChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_CursorChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_CursorChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_DisplayChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_DisplayChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_DisplayChannel_msg	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_DisplayChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_DisplayChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_DisplayChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_InputsChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_InputsChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_InputsChannel_msg	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_InputsChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_InputsChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_InputsChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_MainChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_MainChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_MainChannel_msg	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_MainChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_MainChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_MainChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_PlaybackChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_PlaybackChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_PlaybackChannel_msg	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_PlaybackChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_PlaybackChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_PlaybackChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_PortChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_PortChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_PortChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_PortChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_RecordChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_RecordChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_RecordChannel_msg	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_RecordChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_RecordChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_RecordChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_SmartcardChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_SmartcardChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_SmartcardChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_SmartcardChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_SpiceMsgAudioMute	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_SpiceMsgAudioMute(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_SpiceMsgAudioVolume	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_SpiceMsgAudioVolume(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_SpiceMsgData	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_SpiceMsgData(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_SpiceMsgData	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_SpiceMsgData(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_SpiceMsgData	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_SpiceMsgData(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_SpiceMsgEmpty	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_SpiceMsgEmpty(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_SpiceMsgEmpty	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_SpiceMsgEmpty(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_SpiceMsgEmpty	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_SpiceMsgEmpty(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_TunnelChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_TunnelChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_TunnelChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_TunnelChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_UsbredirChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_UsbredirChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_UsbredirChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_UsbredirChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_WebDAVChannel_msg	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_WebDAVChannel_msg(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_WebDAVChannel_msgc	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_WebDAVChannel_msgc(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f	file:
parse_array_int32	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_array_int32(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_array_int32	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_array_int32(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_array_uint8	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_array_uint8(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_color_depth	glib/spice-option.c	/^static gboolean parse_color_depth(const gchar *option_name, const gchar *value,$/;"	f	file:
parse_disable_effects	glib/spice-option.c	/^static gboolean parse_disable_effects(const gchar *option_name, const gchar *value,$/;"	f	file:
parse_func_t	spice-common/common/generated_client_demarshallers.c	/^typedef uint8_t * (*parse_func_t)(uint8_t *message_start, uint8_t *message_end, uint8_t *struct_data, PointerInfo *ptr_info, int minor);$/;"	t	file:
parse_func_t	spice-common/common/generated_client_demarshallers1.c	/^typedef uint8_t * (*parse_func_t)(uint8_t *message_start, uint8_t *message_end, uint8_t *struct_data, PointerInfo *ptr_info, int minor);$/;"	t	file:
parse_func_t	spice-common/common/generated_server_demarshallers.c	/^typedef uint8_t * (*parse_func_t)(uint8_t *message_start, uint8_t *message_end, uint8_t *struct_data, PointerInfo *ptr_info, int minor);$/;"	t	file:
parse_msg_cursor_init	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_cursor_init(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_cursor_init	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_cursor_init(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_cursor_inval_one	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_cursor_inval_one(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_cursor_inval_one	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_cursor_inval_one(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_cursor_move	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_cursor_move(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_cursor_move	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_cursor_move(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_cursor_set	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_cursor_set(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_cursor_set	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_cursor_set(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_cursor_trail	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_cursor_trail(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_cursor_trail	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_cursor_trail(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_disconnecting	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_disconnecting(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_disconnecting	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_disconnecting(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_copy_bits	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_copy_bits(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_copy_bits	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_copy_bits(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_alpha_blend	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_alpha_blend(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_alpha_blend	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_alpha_blend(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_blackness	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_blackness(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_blackness	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_blackness(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_blend	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_blend(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_blend	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_blend(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_composite	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_composite(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_copy	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_copy(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_copy	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_copy(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_fill	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_fill(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_fill	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_fill(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_invers	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_invers(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_invers	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_invers(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_opaque	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_opaque(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_opaque	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_opaque(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_rop3	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_rop3(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_rop3	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_rop3(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_stroke	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_stroke(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_stroke	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_stroke(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_text	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_text(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_text	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_text(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_transparent	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_transparent(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_transparent	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_transparent(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_whiteness	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_draw_whiteness(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_draw_whiteness	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_draw_whiteness(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_inval_all_pixmaps	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_inval_all_pixmaps(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_inval_all_pixmaps	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_inval_all_pixmaps(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_inval_list	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_inval_list(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_inval_list	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_inval_list(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_inval_palette	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_inval_palette(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_inval_palette	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_inval_palette(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_mode	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_mode(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_mode	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_mode(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_monitors_config	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_monitors_config(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_stream_activate_report	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_stream_activate_report(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_stream_clip	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_stream_clip(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_stream_clip	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_stream_clip(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_stream_create	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_stream_create(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_stream_create	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_stream_create(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_stream_data	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_stream_data(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_stream_data	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_stream_data(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_stream_data_sized	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_stream_data_sized(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_stream_destroy	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_stream_destroy(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_stream_destroy	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_display_stream_destroy(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_surface_create	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_surface_create(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_display_surface_destroy	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_display_surface_destroy(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_func_t	spice-common/common/generated_client_demarshallers.c	/^typedef uint8_t * (*parse_msg_func_t)(uint8_t *message_start, uint8_t *message_end, int minor, size_t *size_out, message_destructor_t *free_message);$/;"	t	file:
parse_msg_func_t	spice-common/common/generated_client_demarshallers1.c	/^typedef uint8_t * (*parse_msg_func_t)(uint8_t *message_start, uint8_t *message_end, int minor, size_t *size_out, message_destructor_t *free_message);$/;"	t	file:
parse_msg_func_t	spice-common/common/generated_server_demarshallers.c	/^typedef uint8_t * (*parse_msg_func_t)(uint8_t *message_start, uint8_t *message_end, int minor, size_t *size_out, message_destructor_t *free_message);$/;"	t	file:
parse_msg_inputs_init	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_inputs_init(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_inputs_init	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_inputs_init(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_inputs_key_modifiers	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_inputs_key_modifiers(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_inputs_key_modifiers	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_inputs_key_modifiers(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_agent_connected_tokens	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_agent_connected_tokens(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_agent_disconnected	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_agent_disconnected(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_agent_disconnected	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_main_agent_disconnected(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_agent_token	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_agent_token(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_agent_token	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_main_agent_token(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_channels_list	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_channels_list(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_channels_list	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_main_channels_list(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_init	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_init(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_init	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_main_init(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_migrate_begin	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_migrate_begin(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_migrate_begin	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_main_migrate_begin(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_migrate_begin_seamless	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_migrate_begin_seamless(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_migrate_switch_host	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_migrate_switch_host(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_migrate_switch_host	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_main_migrate_switch_host(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_mouse_mode	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_mouse_mode(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_mouse_mode	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_main_mouse_mode(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_multi_media_time	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_multi_media_time(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_multi_media_time	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_main_multi_media_time(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_name	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_name(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_main_uuid	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_main_uuid(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_migrate	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_migrate(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_migrate	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_migrate(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_notify	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_notify(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_notify	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_notify(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_ping	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_ping(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_ping	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_ping(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_playback_data	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_playback_data(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_playback_data	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_playback_data(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_playback_latency	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_playback_latency(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_playback_mode	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_playback_mode(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_playback_mode	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_playback_mode(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_playback_start	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_playback_start(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_playback_start	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_playback_start(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_port_event	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_port_event(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_port_init	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_port_init(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_record_start	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_record_start(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_record_start	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_record_start(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_set_ack	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_set_ack(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_set_ack	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_set_ack(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_smartcard_data	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_smartcard_data(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_tunnel_init	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_tunnel_init(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_tunnel_service_ip_map	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_tunnel_service_ip_map(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_tunnel_socket_close	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_tunnel_socket_close(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_tunnel_socket_closed_ack	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_tunnel_socket_closed_ack(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_tunnel_socket_data	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_tunnel_socket_data(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_tunnel_socket_fin	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_tunnel_socket_fin(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_tunnel_socket_open	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_tunnel_socket_open(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_tunnel_socket_token	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_tunnel_socket_token(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_wait_for_channels	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_msg_wait_for_channels(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msg_wait_for_channels	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_msg_wait_for_channels(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_ack_sync	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_ack_sync(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_disconnecting	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_disconnecting(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_display_init	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_display_init(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_display_stream_report	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_display_stream_report(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_inputs_key_down	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_inputs_key_down(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_inputs_key_modifiers	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_inputs_key_modifiers(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_inputs_key_up	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_inputs_key_up(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_inputs_mouse_motion	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_inputs_mouse_motion(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_inputs_mouse_position	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_inputs_mouse_position(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_inputs_mouse_press	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_inputs_mouse_press(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_inputs_mouse_release	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_inputs_mouse_release(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_main_agent_start	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_main_agent_start(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_main_agent_token	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_main_agent_token(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_main_client_info	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_main_client_info(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_main_migrate_dst_do_seamless	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_main_migrate_dst_do_seamless(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_main_mouse_mode_request	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_main_mouse_mode_request(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_pong	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_pong(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_port_event	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_port_event(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_record_data	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_record_data(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_record_mode	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_record_mode(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_record_start_mark	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_record_start_mark(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_smartcard_reader_add	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_smartcard_reader_add(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_tunnel_service_add	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_tunnel_service_add(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_tunnel_service_remove	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_tunnel_service_remove(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_tunnel_socket_closed	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_tunnel_socket_closed(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_tunnel_socket_closed_ack	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_tunnel_socket_closed_ack(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_tunnel_socket_data	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_tunnel_socket_data(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_tunnel_socket_fin	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_tunnel_socket_fin(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_tunnel_socket_open_ack	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_tunnel_socket_open_ack(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_tunnel_socket_open_nack	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_tunnel_socket_open_nack(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_msgc_tunnel_socket_token	spice-common/common/generated_server_demarshallers.c	/^static uint8_t * parse_msgc_tunnel_socket_token(uint8_t *message_start, uint8_t *message_end, SPICE_GNUC_UNUSED int minor, size_t *size, message_destructor_t *free_message)$/;"	f	file:
parse_secure_channels	glib/spice-option.c	/^static gboolean parse_secure_channels(const gchar *option_name, const gchar *value,$/;"	f	file:
parse_struct_SpiceClipRects	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_struct_SpiceClipRects(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_struct_SpiceClipRects	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_struct_SpiceClipRects(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_struct_SpiceImage	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_struct_SpiceImage(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_struct_SpiceImage	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_struct_SpiceImage(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_struct_SpicePalette	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_struct_SpicePalette(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_struct_SpicePalette	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_struct_SpicePalette(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_struct_SpicePath	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_struct_SpicePath(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_struct_SpicePath	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_struct_SpicePath(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_struct_SpiceString	spice-common/common/generated_client_demarshallers.c	/^static uint8_t * parse_struct_SpiceString(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_struct_SpiceString	spice-common/common/generated_client_demarshallers1.c	/^static uint8_t * parse_struct_SpiceString(uint8_t *message_start, SPICE_GNUC_UNUSED uint8_t *message_end, uint8_t *struct_data, PointerInfo *this_ptr_info, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
parse_usbredir_filter	glib/spice-option.c	/^static gboolean parse_usbredir_filter(const gchar *option_name,$/;"	f	file:
parsed	glib/spice-channel-priv.h	/^    uint8_t               *parsed;$/;"	m	struct:_SpiceMsgIn
parser	ffmpeg/include/libavcodec/avcodec.h	/^    AVCodecParserContext *parser;$/;"	m	struct:AVBitStreamFilterContext
parser	ffmpeg/include/libavcodec/avcodec.h	/^    struct AVCodecParser *parser;$/;"	m	struct:AVCodecParserContext	typeref:struct:AVCodecParserContext::AVCodecParser
parser	ffmpeg/include/libavformat/avformat.h	/^    struct AVCodecParserContext *parser;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVCodecParserContext
parser	glib/spice-channel-priv.h	/^    spice_parse_channel_func_t  parser;$/;"	m	struct:_SpiceChannelPrivate
parser	spice-common/spice_codegen.py	/^parser = OptionParser(usage="usage: %prog [options] <protocol_file> <destination file>")$/;"	v
parser_close	ffmpeg/include/libavcodec/avcodec.h	/^    void (*parser_close)(AVCodecParserContext *s);$/;"	m	struct:AVCodecParser
parser_init	ffmpeg/include/libavcodec/avcodec.h	/^    int (*parser_init)(AVCodecParserContext *s);$/;"	m	struct:AVCodecParser
parser_parse	ffmpeg/include/libavcodec/avcodec.h	/^    int (*parser_parse)(AVCodecParserContext *s,$/;"	m	struct:AVCodecParser
partial_block	spice-common/python_modules/codegen.py	/^    def partial_block(self, scope, semicolon=False, newline=True):$/;"	m	class:CodeWriter
partial_buf	ffmpeg/include/libavfilter/avfilter.h	/^    AVFrame *partial_buf;$/;"	m	struct:AVFilterLink
partial_buf_size	ffmpeg/include/libavfilter/avfilter.h	/^    int partial_buf_size;$/;"	m	struct:AVFilterLink
password	glib/spice-session-priv.h	/^    char              *password;$/;"	m	struct:_SpiceSessionPrivate
password	glib/spice-uri.c	/^    gchar *password;$/;"	m	struct:_SpiceURI	file:
password	win32/spice-cmdline.c	/^static char *password;$/;"	v	file:
pat	spice-common/common/draw.h	/^    SpiceImage *pat;$/;"	m	struct:SpicePattern
pat	spice-common/common/glc.c	/^    InternalPat *pat;$/;"	m	struct:InternaCtx	file:
pat	spice-common/common/rop3.c	/^ROP3_HANDLERS(PSDPSanaxx, (~(*pat & *src) & *dest) ^ *src ^ *pat, 0x16);$/;"	v
pat	spice-common/common/rop3.c	/^ROP3_HANDLERS(PSDPSaoxx, ((*src & *pat) | *dest) ^ *src ^ *pat, 0xd6);$/;"	v
pat	spice-common/common/rop3.c	/^ROP3_HANDLERS(PSDPSoaxx, ((*src | *pat) & *dest) ^ *src ^ *pat, 0x94);$/;"	v
pat	spice-common/common/rop3.c	/^ROP3_HANDLERS(PSDPSonoxx, (~(*src | *pat) | *dest) ^ *src ^ *pat, 0x97);$/;"	v
pat	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL pat;$/;"	m	struct:QXLPattern
path	spice-common/common/draw.h	/^    SpicePath *path;$/;"	m	struct:SpiceStroke
path	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL path;$/;"	m	struct:QXLStroke
path_stroke	spice-common/common/glc.c	/^    PathStroke path_stroke;$/;"	m	struct:InternaCtx	file:
paths	spice-common/common/glc.c	/^    Path *paths;$/;"	m	struct:InternalPath	file:
paths_pos	spice-common/common/glc.c	/^    int paths_pos;$/;"	m	struct:InternalPath	file:
paths_size	spice-common/common/glc.c	/^    int paths_size;$/;"	m	struct:InternalPath	file:
pattern	spice-common/common/draw.h	/^        SpicePattern pattern;$/;"	m	union:SpiceBrush::__anon154
pattern	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLPattern pattern;$/;"	m	union:QXLBrush::__anon72
pb	ffmpeg/include/libavformat/avformat.h	/^    AVIOContext *pb;$/;"	m	struct:AVFormatContext
pbuf_create	spice-common/common/ogl_ctx.c	/^OGLCtx *pbuf_create(int width, int heigth)$/;"	f
pchannel	glib/spice-gstaudio.c	/^    SpiceChannel            *pchannel;$/;"	m	struct:_SpiceGstaudioPrivate	file:
pchannel	glib/spice-pulse.c	/^    SpiceChannel            *pchannel;$/;"	m	struct:_SpicePulsePrivate	file:
pci_ram_size	glib/spice-session-priv.h	/^    uint32_t          pci_ram_size;$/;"	m	struct:_SpiceSessionPrivate
pcounters	spice-common/common/quic.c	/^    COUNTER *pcounters;     \/* pointer to array of counters *\/$/;"	m	struct:s_bucket	file:
pcr_pid	ffmpeg/include/libavformat/avformat.h	/^    int pcr_pid;$/;"	m	struct:AVProgram
peer_hdr	glib/spice-channel-priv.h	/^    SpiceLinkHeader             peer_hdr;$/;"	m	struct:_SpiceChannelPrivate
peer_msg	glib/spice-channel-priv.h	/^    SpiceLinkReply*             peer_msg;$/;"	m	struct:_SpiceChannelPrivate
peer_pos	glib/spice-channel-priv.h	/^    int                         peer_pos;$/;"	m	struct:_SpiceChannelPrivate
pending	glib/channel-main.c	/^    gboolean                       pending;$/;"	m	struct:SpiceFileXferTask	file:
pending_card_insertions	glib/channel-smartcard.c	/^    GHashTable *pending_card_insertions;$/;"	m	struct:_SpiceSmartcardChannelPrivate	file:
pending_event	glib/smartcard-manager.c	/^    VEvent *pending_event;$/;"	m	struct:_SmartcardSource	file:
pending_reader_additions	glib/channel-smartcard.c	/^    GList *pending_reader_additions;$/;"	m	struct:_SpiceSmartcardChannelPrivate	file:
pending_reader_removals	glib/channel-smartcard.c	/^    GHashTable *pending_reader_removals;$/;"	m	struct:_SpiceSmartcardChannelPrivate	file:
perms	ffmpeg/include/libavfilter/avfilter.h	/^    int perms;                  \/\/\/< permissions, see the AV_PERM_* flags$/;"	m	struct:AVFilterBufferRef
pfree	glib/spice-channel-priv.h	/^    message_destructor_t  pfree;$/;"	m	struct:_SpiceMsgIn
phodav_server_get	glib/channel-webdav.c	/^static PhodavServer* phodav_server_get(SpiceSession *session, gint *port)$/;"	f	file:
pic_param_buf_id	ffmpeg/include/libavcodec/vaapi.h	/^    uint32_t pic_param_buf_id;$/;"	m	struct:vaapi_context
pict	ffmpeg/include/libavcodec/avcodec.h	/^    AVPicture pict;$/;"	m	struct:AVSubtitleRect
pict_type	ffmpeg/include/libavcodec/avcodec.h	/^    int pict_type; \/* XXX: Put it back in AVCodecContext. *\/$/;"	m	struct:AVCodecParserContext
pict_type	ffmpeg/include/libavfilter/avfilter.h	/^    enum AVPictureType pict_type; \/\/\/< picture type of the frame$/;"	m	struct:AVFilterBufferRefVideoProps	typeref:enum:AVFilterBufferRefVideoProps::AVPictureType
pict_type	ffmpeg/include/libavutil/frame.h	/^    enum AVPictureType pict_type;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVPictureType
picture_structure	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVPictureStructure picture_structure;$/;"	m	struct:AVCodecParserContext	typeref:enum:AVCodecParserContext::AVPictureStructure
picture_structure	ffmpeg/include/libavcodec/xvmc.h	/^    unsigned int    picture_structure;$/;"	m	struct:xvmc_pix_fmt
pid	glib/usb-device-manager.c	/^    guint16 pid;$/;"	m	struct:_SpiceUsbDeviceInfo	file:
pid	glib/win-usb-clerk.h	/^    UINT16 pid;$/;"	m	struct:USBClerkDriverOp
pid	glib/win-usb-dev.c	/^    guint16 pid;$/;"	m	struct:_GUdevDeviceInfo	file:
pix_fmt	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVPixelFormat pix_fmt;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVPixelFormat
pix_fmt	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVPixelFormat pix_fmt;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::AVPixelFormat
pix_fmt	ffmpeg/include/libavcodec/dv_profile.h	/^    enum AVPixelFormat pix_fmt;             \/* picture pixel format *\/$/;"	m	struct:AVDVProfile	typeref:enum:AVDVProfile::AVPixelFormat
pix_fmt	glib/h264_type.h	/^    enum AVPixelFormat pix_fmt;$/;"	m	struct:_H264StreamInfo	typeref:enum:_H264StreamInfo::AVPixelFormat
pix_fmts	ffmpeg/include/libavcodec/avcodec.h	/^    const enum AVPixelFormat *pix_fmts;     \/\/\/< array of supported pixel formats, or NULL if unknown, array is terminated by -1$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVPixelFormat
pixel_fmts	ffmpeg/include/libavfilter/buffersink.h	/^    const enum AVPixelFormat *pixel_fmts; \/\/\/< list of allowed pixel formats, terminated by AV_PIX_FMT_NONE$/;"	m	struct:__anon30	typeref:enum:__anon30::AVPixelFormat
pixel_format	ffmpeg/include/libavdevice/avdevice.h	/^    enum AVPixelFormat pixel_format;$/;"	m	struct:AVDeviceCapabilitiesQuery	typeref:enum:AVDeviceCapabilitiesQuery::AVPixelFormat
pixels	spice-common/common/glc.h	/^    uint8_t *pixels;$/;"	m	struct:GLCPImage
pixman_format_compatible	spice-common/common/pixman_utils.c	/^static int pixman_format_compatible (pixman_format_code_t dest_format,$/;"	f	file:
pixman_image_add_data	spice-common/common/canvas_utils.c	/^pixman_image_add_data(pixman_image_t *image)$/;"	f	file:
pixmap	spice-common/common/ogl_ctx.c	/^    Pixmap pixmap;$/;"	m	struct:OGLPixmapCtx	file:
pixmap_cache_id	spice-common/common/messages.h	/^    uint8_t pixmap_cache_id;$/;"	m	struct:SpiceMsgcDisplayInit
pixmap_cache_size	spice-common/common/messages.h	/^    int64_t pixmap_cache_size; \/\/in pixels$/;"	m	struct:SpiceMsgcDisplayInit
pixmap_create	spice-common/common/ogl_ctx.c	/^OGLCtx *pixmap_create(int width, int heigth)$/;"	f
pkt	ffmpeg/include/libavcodec/avcodec.h	/^    AVPacket *pkt;$/;"	m	struct:AVCodecContext
pkt	ffmpeg/include/libavformat/avformat.h	/^    AVPacket pkt;$/;"	m	struct:AVPacketList
pkt_dts	ffmpeg/include/libavutil/frame.h	/^    int64_t pkt_dts;$/;"	m	struct:AVFrame
pkt_duration	ffmpeg/include/libavutil/frame.h	/^    int64_t pkt_duration;$/;"	m	struct:AVFrame
pkt_pos	ffmpeg/include/libavutil/frame.h	/^    int64_t pkt_pos;$/;"	m	struct:AVFrame
pkt_pts	ffmpeg/include/libavutil/frame.h	/^    int64_t pkt_pts;$/;"	m	struct:AVFrame
pkt_size	ffmpeg/include/libavutil/frame.h	/^    int pkt_size;$/;"	m	struct:AVFrame
pkt_timebase	ffmpeg/include/libavcodec/avcodec.h	/^    AVRational pkt_timebase;$/;"	m	struct:AVCodecContext
plane	ffmpeg/include/libavutil/pixdesc.h	/^    uint16_t plane        : 2;$/;"	m	struct:AVComponentDescriptor
playback	glib/spice-gstaudio.c	/^    struct stream           playback;$/;"	m	struct:_SpiceGstaudioPrivate	typeref:struct:_SpiceGstaudioPrivate::stream	file:
playback	glib/spice-pulse.c	/^    struct stream           playback;$/;"	m	struct:_SpicePulsePrivate	typeref:struct:_SpicePulsePrivate::stream	file:
playback_channel	glib/spice-session-priv.h	/^    SpicePlaybackChannel *playback_channel;$/;"	m	struct:_SpiceSessionPrivate
playback_data	glib/channel-playback.h	/^    void (*playback_data)(SpicePlaybackChannel *channel, gpointer *data, gint size);$/;"	m	struct:_SpicePlaybackChannelClass
playback_data	glib/spice-gstaudio.c	/^static void playback_data(SpicePlaybackChannel *channel,$/;"	f	file:
playback_data	glib/spice-pulse.c	/^static void playback_data(SpicePlaybackChannel *channel,$/;"	f	file:
playback_handle_data	glib/channel-playback.c	/^static void playback_handle_data(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
playback_handle_mode	glib/channel-playback.c	/^static void playback_handle_mode(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
playback_handle_set_latency	glib/channel-playback.c	/^static void playback_handle_set_latency(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
playback_handle_set_mute	glib/channel-playback.c	/^static void playback_handle_set_mute(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
playback_handle_set_volume	glib/channel-playback.c	/^static void playback_handle_set_volume(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
playback_handle_start	glib/channel-playback.c	/^static void playback_handle_start(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
playback_handle_stop	glib/channel-playback.c	/^static void playback_handle_stop(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
playback_min_latency_changed	glib/spice-pulse.c	/^static void playback_min_latency_changed(GObject *object, GParamSpec *pspec, gpointer data)$/;"	f	file:
playback_mute_changed	glib/spice-gstaudio.c	/^static void playback_mute_changed(GObject *object, GParamSpec *pspec, gpointer data)$/;"	f	file:
playback_mute_changed	glib/spice-pulse.c	/^static void playback_mute_changed(GObject *object, GParamSpec *pspec, gpointer data)$/;"	f	file:
playback_start	glib/channel-playback.h	/^    void (*playback_start)(SpicePlaybackChannel *channel,$/;"	m	struct:_SpicePlaybackChannelClass
playback_start	glib/spice-gstaudio.c	/^static void playback_start(SpicePlaybackChannel *channel, gint format, gint channels,$/;"	f	file:
playback_start	glib/spice-pulse.c	/^static void playback_start(SpicePlaybackChannel *channel, gint format, gint channels,$/;"	f	file:
playback_stop	glib/channel-playback.h	/^    void (*playback_stop)(SpicePlaybackChannel *channel);$/;"	m	struct:_SpicePlaybackChannelClass
playback_stop	glib/spice-gstaudio.c	/^static void playback_stop(SpicePlaybackChannel *channel, gpointer data)$/;"	f	file:
playback_stop	glib/spice-pulse.c	/^static void playback_stop(SpicePlaybackChannel *channel, gpointer data)$/;"	f	file:
playback_sync_drops_seq_len	glib/channel-display-priv.h	/^    uint32_t             playback_sync_drops_seq_len;$/;"	m	struct:display_stream
playback_volume_changed	glib/spice-gstaudio.c	/^static void playback_volume_changed(GObject *object, GParamSpec *pspec, gpointer data)$/;"	f	file:
playback_volume_changed	glib/spice-pulse.c	/^static void playback_volume_changed(GObject *object, GParamSpec *pspec, gpointer data)$/;"	f	file:
pmt_pid	ffmpeg/include/libavformat/avformat.h	/^    int pmt_pid;$/;"	m	struct:AVProgram
point	spice-common/common/glc.c	/^    PathPoint point;$/;"	m	struct:TassVertex	file:
pointer_ref	spice-common/common/marshaller.c	/^    MarshallerRef pointer_ref;$/;"	m	struct:SpiceMarshaller	file:
points	spice-common/common/canvas_base.c	/^    SpicePoint *points;$/;"	m	struct:__anon123	file:
points	spice-common/common/draw.h	/^    SpicePointFix points[0];$/;"	m	struct:SpicePathSeg
points	spice-common/common/glc.c	/^    PathPoint *points;$/;"	m	struct:InternalPath	file:
points	spice-common/common/lines.c	/^    DDXPointPtr points;         \/* pointer to list of start points  *\/$/;"	m	struct:__anon147	file:
points	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPointFix points[0];$/;"	m	struct:QXLPathSeg
points_pos	spice-common/common/glc.c	/^    int points_pos;$/;"	m	struct:InternalPath	file:
points_size	spice-common/common/glc.c	/^    int points_size;$/;"	m	struct:InternalPath	file:
poll_frame	ffmpeg/include/libavfilter/avfilter.h	/^    int (*poll_frame)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
pool	ffmpeg/include/libavfilter/avfilter.h	/^    struct AVFilterPool *pool;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterPool
pop_index	spice-common/python_modules/codegen.py	/^    def pop_index(self):$/;"	m	class:CodeWriter
port	glib/channel-main.c	/^    uint16_t port;$/;"	m	struct:OldRedMigrationBegin	file:
port	glib/spice-session-priv.h	/^    char              *port;$/;"	m	struct:_SpiceSessionPrivate
port	glib/spice-session.c	/^    int port;$/;"	m	struct:spice_open_host	file:
port	glib/spice-uri.c	/^    guint port;$/;"	m	struct:_SpiceURI	file:
port	spice-common/common/messages.h	/^    uint16_t port;$/;"	m	struct:SpiceMigrationDstInfo
port	spice-common/common/messages.h	/^    uint16_t port;$/;"	m	struct:SpiceMsgMainMigrationSwitchHost
port	spice-common/common/messages.h	/^    uint32_t port;$/;"	m	struct:SpiceMsgcTunnelAddGenericService
port	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t port;$/;"	m	struct:VDIChunkHeader
port	win32/spice-cmdline.c	/^static char *port;$/;"	v	file:
port	win32/win32_spice_interface.c	/^    gchar port[10];$/;"	m	struct:SpiceConnectARGS	file:
port_event	glib/channel-webdav.c	/^static void port_event(SpiceWebdavChannel *self, gint event)$/;"	f	file:
port_handle_event	glib/channel-port.c	/^static void port_handle_event(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
port_handle_init	glib/channel-port.c	/^static void port_handle_init(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
port_handle_msg	glib/channel-port.c	/^static void port_handle_msg(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
port_set_opened	glib/channel-port.c	/^static void port_set_opened(SpicePortChannel *self, gboolean opened)$/;"	f	file:
pos	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t pos;                            \/\/\/< byte position in stream, -1 if unknown$/;"	m	struct:AVPacket
pos	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t pos;$/;"	m	struct:AVCodecParserContext
pos	ffmpeg/include/libavfilter/avfilter.h	/^    int64_t pos;                \/\/\/< byte position in stream, -1 if unknown$/;"	m	struct:AVFilterBufferRef
pos	ffmpeg/include/libavformat/avformat.h	/^    int64_t pos;$/;"	m	struct:AVIndexEntry
pos	ffmpeg/include/libavformat/avio.h	/^    int64_t pos;            \/**< position in the file of the current buffer *\/$/;"	m	struct:AVIOContext
pos	glib/vmcstream.c	/^    gsize pos;$/;"	m	struct:_SpiceVmcInputStream	file:
pos	spice-common/common/draw.h	/^    SpicePoint pos;$/;"	m	struct:SpicePattern
pos	spice-common/common/draw.h	/^    SpicePoint pos;$/;"	m	struct:SpiceQMask
pos	spice-common/common/gdi_canvas.c	/^    SpicePoint pos;$/;"	m	struct:BitmapData	file:
pos	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPoint pos;$/;"	m	struct:QXLPattern
pos	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPoint pos;$/;"	m	struct:QXLQMask
position	ffmpeg/include/libavcodec/avcodec.h	/^    int16_t position[3][2];$/;"	m	struct:AVPanScan
position	spice-common/common/messages.h	/^    SpicePoint16 position;$/;"	m	struct:SpiceMsgCursorInit
position	spice-common/common/messages.h	/^    SpicePoint16 position;$/;"	m	struct:SpiceMsgCursorMove
position	spice-common/common/messages.h	/^    SpicePoint16 position;$/;"	m	struct:SpiceMsgCursorSet
position	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t position;$/;"	m	struct:FrgMenuAddItem
position	spice-common/spice-protocol/spice/qxl_dev.h	/^            QXLPoint16 position;$/;"	m	struct:QXLCursorCmd::__anon70::SPICE_ATTR_PACKED
position	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLPoint16 position;$/;"	m	union:QXLCursorCmd::__anon70
position	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t position;$/;"	m	struct:QXLSurfaceCreate
pp_context	ffmpeg/include/libpostproc/postprocess.h	/^typedef void pp_context;$/;"	t
pp_context_t	ffmpeg/include/libpostproc/postprocess.h	/^typedef pp_context pp_context_t;$/;"	t
pp_mode	ffmpeg/include/libpostproc/postprocess.h	/^typedef void pp_mode;$/;"	t
pp_mode_t	ffmpeg/include/libpostproc/postprocess.h	/^typedef pp_mode pp_mode_t;$/;"	t
pre_dia_size	ffmpeg/include/libavcodec/avcodec.h	/^    int pre_dia_size;$/;"	m	struct:AVCodecContext
pre_me	ffmpeg/include/libavcodec/avcodec.h	/^    int pre_me;$/;"	m	struct:AVCodecContext
prediction_method	ffmpeg/include/libavcodec/avcodec.h	/^     int prediction_method;$/;"	m	struct:AVCodecContext
preferred_downmix_type	ffmpeg/include/libavutil/downmix_info.h	/^    enum AVDownmixType preferred_downmix_type;$/;"	m	struct:AVDownmixInfo	typeref:enum:AVDownmixInfo::AVDownmixType
prefix_camel	spice-common/python_modules/codegen.py	/^def prefix_camel(*args):$/;"	f
prefix_m	spice-common/python_modules/demarshal.py	/^    def prefix_m(prefix, m):$/;"	f	function:write_validate_container
prefix_underscore_lower	spice-common/python_modules/codegen.py	/^def prefix_underscore_lower(*args):$/;"	f
prefix_underscore_upper	spice-common/python_modules/codegen.py	/^def prefix_underscore_upper(*args):$/;"	f
prev	spice-common/common/ring.h	/^    RingItem *prev;$/;"	m	struct:Ring
prev_chunk	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL prev_chunk;$/;"	m	struct:QXLDataChunk
prev_hbitmap	spice-common/common/gdi_canvas.c	/^    HBITMAP prev_hbitmap;$/;"	m	struct:BitmapData	file:
primary	glib/channel-display-priv.h	/^    bool                        primary;$/;"	m	struct:display_surface
primary	glib/channel-display.c	/^    display_surface             *primary;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
primary_create	win32/win32-spice-widget.c	/^static void primary_create(SpiceChannel *channel, gint format, gint width, gint height, gint stride, gint shmid, gpointer imgdata, gpointer data) {$/;"	f	file:
primary_destroy	win32/win32-spice-widget.c	/^static void primary_destroy(SpiceChannel *channel, gpointer data) {$/;"	f	file:
primitive_type	spice-common/python_modules/ptypes.py	/^    def primitive_type(self):$/;"	m	class:EnumBaseType
primitive_type	spice-common/python_modules/ptypes.py	/^    def primitive_type(self):$/;"	m	class:IntegerType
primitive_type	spice-common/python_modules/ptypes.py	/^    def primitive_type(self):$/;"	m	class:PointerType
primitive_type	spice-common/python_modules/ptypes.py	/^    def primitive_type(self):$/;"	m	class:TypeAlias
print_cursor	glib/channel-cursor.c	/^static void print_cursor(display_cursor *cursor, const guint8 *data)$/;"	f	file:
priv	ffmpeg/include/libavcodec/avcodec.h	/^    void  *priv;$/;"	m	struct:AVPacket
priv	ffmpeg/include/libavfilter/avfilter.h	/^    void *priv;                     \/\/\/< private data for use by the filter$/;"	m	struct:AVFilterContext
priv	ffmpeg/include/libavfilter/avfilter.h	/^    void *priv;$/;"	m	struct:AVFilterBuffer
priv	glib/channel-cursor.h	/^    SpiceCursorChannelPrivate *priv;$/;"	m	struct:_SpiceCursorChannel
priv	glib/channel-display.h	/^    SpiceDisplayChannelPrivate *priv;$/;"	m	struct:_SpiceDisplayChannel
priv	glib/channel-inputs.h	/^    SpiceInputsChannelPrivate *priv;$/;"	m	struct:_SpiceInputsChannel
priv	glib/channel-main.h	/^    SpiceMainChannelPrivate *priv;$/;"	m	struct:_SpiceMainChannel
priv	glib/channel-playback.h	/^    SpicePlaybackChannelPrivate *priv;$/;"	m	struct:_SpicePlaybackChannel
priv	glib/channel-port.h	/^    SpicePortChannelPrivate *priv;$/;"	m	struct:_SpicePortChannel
priv	glib/channel-record.h	/^    SpiceRecordChannelPrivate *priv;$/;"	m	struct:_SpiceRecordChannel
priv	glib/channel-smartcard.h	/^    SpiceSmartcardChannelPrivate *priv;$/;"	m	struct:_SpiceSmartcardChannel
priv	glib/channel-usbredir.h	/^    SpiceUsbredirChannelPrivate *priv;$/;"	m	struct:_SpiceUsbredirChannel
priv	glib/channel-webdav.h	/^    SpiceWebdavChannelPrivate *priv;$/;"	m	struct:_SpiceWebdavChannel
priv	glib/desktop-integration.h	/^    SpiceDesktopIntegrationPrivate *priv;$/;"	m	struct:_SpiceDesktopIntegration
priv	glib/smartcard-manager.h	/^    SpiceSmartcardManagerPrivate *priv;$/;"	m	struct:_SpiceSmartcardManager
priv	glib/spice-audio.h	/^    SpiceAudioPrivate *priv;$/;"	m	struct:_SpiceAudio
priv	glib/spice-channel.h	/^    SpiceChannelPrivate *priv;$/;"	m	struct:_SpiceChannel
priv	glib/spice-gstaudio.h	/^    SpiceGstaudioPrivate *priv;$/;"	m	struct:_SpiceGstaudio
priv	glib/spice-pulse.h	/^    SpicePulsePrivate *priv;$/;"	m	struct:_SpicePulse
priv	glib/spice-session.h	/^    SpiceSessionPrivate *priv;$/;"	m	struct:_SpiceSession
priv	glib/usb-device-manager.h	/^    SpiceUsbDeviceManagerPrivate *priv;$/;"	m	struct:_SpiceUsbDeviceManager
priv	glib/win-usb-dev.h	/^    GUdevClientPrivate *priv;$/;"	m	struct:_GUdevClient
priv	glib/win-usb-dev.h	/^  GUdevDevicePrivate *priv;$/;"	m	struct:_GUdevDevice
priv	glib/win-usb-driver-install.h	/^    SpiceWinUsbDriverPrivate *priv;$/;"	m	struct:_SpiceWinUsbDriver
priv	win32/spice-gtk-session.h	/^    SpiceGtkSessionPrivate *priv;$/;"	m	struct:_SpiceGtkSession
priv	win32/virt-viewer-file.h	/^    VirtViewerFilePrivate *priv;$/;"	m	struct:_VirtViewerFile
priv	win32/win32-spice-widget.h	/^    SpiceDisplayPrivate *priv;$/;"	m	struct:_SpiceDisplay
priv_allocated_size	ffmpeg/include/libavcodec/vda.h	/^    int                 priv_allocated_size;$/;"	m	struct:vda_context
priv_bitstream	ffmpeg/include/libavcodec/vda.h	/^    uint8_t             *priv_bitstream;$/;"	m	struct:vda_context
priv_bitstream_size	ffmpeg/include/libavcodec/vda.h	/^    int                 priv_bitstream_size;$/;"	m	struct:vda_context
priv_class	ffmpeg/include/libavcodec/avcodec.h	/^    const AVClass *priv_class;              \/\/\/< AVClass for the private context$/;"	m	struct:AVCodec
priv_class	ffmpeg/include/libavfilter/avfilter.h	/^    const AVClass *priv_class;$/;"	m	struct:AVFilter
priv_class	ffmpeg/include/libavformat/avformat.h	/^    const AVClass *priv_class; \/\/\/< AVClass for the private context$/;"	m	struct:AVInputFormat
priv_class	ffmpeg/include/libavformat/avformat.h	/^    const AVClass *priv_class; \/\/\/< AVClass for the private context$/;"	m	struct:AVOutputFormat
priv_data	ffmpeg/include/libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVBitStreamFilterContext
priv_data	ffmpeg/include/libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVCodecContext
priv_data	ffmpeg/include/libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVCodecParserContext
priv_data	ffmpeg/include/libavformat/avformat.h	/^    void *priv_data;$/;"	m	struct:AVFormatContext
priv_data	ffmpeg/include/libavformat/avformat.h	/^    void *priv_data;$/;"	m	struct:AVStream
priv_data_size	ffmpeg/include/libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVBitStreamFilter
priv_data_size	ffmpeg/include/libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVCodec
priv_data_size	ffmpeg/include/libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVCodecParser
priv_data_size	ffmpeg/include/libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVHWAccel
priv_data_size	ffmpeg/include/libavformat/avformat.h	/^    int priv_data_size;$/;"	m	struct:AVInputFormat
priv_data_size	ffmpeg/include/libavformat/avformat.h	/^    int priv_data_size;$/;"	m	struct:AVOutputFormat
priv_size	ffmpeg/include/libavfilter/avfilter.h	/^    int priv_size;      \/\/\/< size of private data to allocate for the filter$/;"	m	struct:AVFilter
priv_spice_connection	win32/win32_spice_interface_priv.h	/^typedef struct priv_spice_connection$/;"	s
priv_spice_connection	win32/win32_spice_interface_priv.h	/^}priv_spice_connection;$/;"	t	typeref:struct:priv_spice_connection
private_data	spice-common/common/gl_canvas.c	/^    void *private_data;$/;"	m	struct:GLCanvas	file:
private_data	spice-common/common/sw_canvas.c	/^    uint32_t *private_data;$/;"	m	struct:SwCanvas	file:
private_data_size	spice-common/common/gl_canvas.c	/^    int private_data_size;$/;"	m	struct:GLCanvas	file:
private_data_size	spice-common/common/sw_canvas.c	/^    int private_data_size;$/;"	m	struct:SwCanvas	file:
private_tex	spice-common/common/glc.c	/^    GLuint private_tex;$/;"	m	struct:InternaCtx	file:
private_tex_height	spice-common/common/glc.c	/^    int private_tex_height;$/;"	m	struct:InternaCtx	file:
private_tex_width	spice-common/common/glc.c	/^    int private_tex_width;$/;"	m	struct:InternaCtx	file:
probe_data	ffmpeg/include/libavformat/avformat.h	/^    AVProbeData probe_data;$/;"	m	struct:AVStream
probe_packets	ffmpeg/include/libavformat/avformat.h	/^    int probe_packets;$/;"	m	struct:AVStream
probe_score	ffmpeg/include/libavformat/avformat.h	/^    int probe_score;$/;"	m	struct:AVFormatContext
probesize	ffmpeg/include/libavformat/avformat.h	/^    unsigned int probesize;$/;"	m	struct:AVFormatContext
probesize2	ffmpeg/include/libavformat/avformat.h	/^    int64_t probesize2;$/;"	m	struct:AVFormatContext
process_command	ffmpeg/include/libavfilter/avfilter.h	/^    int (*process_command)(AVFilterContext *, const char *cmd, const char *arg, char *res, int res_len, int flags);$/;"	m	struct:AVFilter
product_count	glib/usbutil.c	/^    int product_count;$/;"	m	struct:_usb_vendor_info	file:
product_id	glib/usbutil.c	/^    guint16 product_id;$/;"	m	struct:_usb_product_info	file:
product_info	glib/usbutil.c	/^    usb_product_info *product_info;$/;"	m	struct:_usb_vendor_info	file:
profile	ffmpeg/include/libavcodec/avcodec.h	/^     int profile;$/;"	m	struct:AVCodecContext
profile	ffmpeg/include/libavcodec/avcodec.h	/^    int profile;$/;"	m	struct:AVProfile
profile	glib/h264_type.h	/^    int profile;$/;"	m	struct:_H264StreamInfo
profiles	ffmpeg/include/libavcodec/avcodec.h	/^    const AVProfile *profiles;              \/\/\/< array of recognized profiles, or NULL if unknown, array is terminated by {FF_PROFILE_UNKNOWN}$/;"	m	struct:AVCodec
program_num	ffmpeg/include/libavformat/avformat.h	/^    int program_num;$/;"	m	struct:AVProgram
programs	ffmpeg/include/libavformat/avformat.h	/^    AVProgram **programs;$/;"	m	struct:AVFormatContext
progress_callback	glib/channel-main.c	/^    GFileProgressCallback          progress_callback;$/;"	m	struct:SpiceFileXferTask	file:
progress_callback_data	glib/channel-main.c	/^    gpointer                       progress_callback_data;$/;"	m	struct:SpiceFileXferTask	file:
propagated_attributes	spice-common/python_modules/ptypes.py	/^propagated_attributes=["ptr_array", "nonnull", "chunk"]$/;"	v
properties	ffmpeg/include/libavcodec/avcodec.h	/^    unsigned properties;$/;"	m	struct:AVCodecContext
propname	glib/gio-coroutine.c	/^    const gchar *propname;$/;"	m	struct:signal_data	file:
props	ffmpeg/include/libavcodec/avcodec.h	/^    int             props;$/;"	m	struct:AVCodecDescriptor
proto	spice-common/spice_codegen.py	/^proto = spice_parser.parse(proto_file)$/;"	v
proto_file	spice-common/spice_codegen.py	/^proto_file = args[0]$/;"	v
proto_prefix	spice-common/python_modules/codegen.py	/^proto_prefix = "Temp"$/;"	v
protocol	glib/spice-session-priv.h	/^    int               protocol;$/;"	m	struct:_SpiceSessionPrivate
protocol	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t protocol;$/;"	m	struct:VDAgentMessage
proxy	glib/spice-session-priv.h	/^    SpiceURI          *proxy;$/;"	m	struct:_SpiceSessionPrivate
proxy	glib/spice-session.c	/^    SpiceURI *proxy;$/;"	m	struct:spice_open_host	file:
proxy_lookup_ready	glib/spice-session.c	/^static void proxy_lookup_ready(GObject *source_object, GAsyncResult *result,$/;"	f	file:
psize	glib/spice-channel-priv.h	/^    size_t                psize;$/;"	m	struct:_SpiceMsgIn
pts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t pts;     \/* pts of the current frame *\/$/;"	m	struct:AVCodecParserContext
pts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t pts;    \/\/\/< Same as packet pts, in AV_TIME_BASE$/;"	m	struct:AVSubtitle
pts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t pts;$/;"	m	struct:AVPacket
pts	ffmpeg/include/libavfilter/avfilter.h	/^    int64_t pts;$/;"	m	struct:AVFilterBufferRef
pts	ffmpeg/include/libavformat/avformat.h	/^    struct AVFrac pts;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVFrac
pts	ffmpeg/include/libavutil/frame.h	/^    int64_t pts;$/;"	m	struct:AVFrame
pts_buffer	ffmpeg/include/libavformat/avformat.h	/^    int64_t pts_buffer[MAX_REORDER_DELAY+1];$/;"	m	struct:AVStream
pts_correction_last_dts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t pts_correction_last_dts;       \/\/\/ DTS of the last frame$/;"	m	struct:AVCodecContext
pts_correction_last_pts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t pts_correction_last_pts;       \/\/\/ PTS of the last frame$/;"	m	struct:AVCodecContext
pts_correction_num_faulty_dts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t pts_correction_num_faulty_dts; \/\/\/ Number of incorrect DTS values so far$/;"	m	struct:AVCodecContext
pts_correction_num_faulty_pts	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t pts_correction_num_faulty_pts; \/\/\/ Number of incorrect PTS values so far$/;"	m	struct:AVCodecContext
pts_dts_delta	ffmpeg/include/libavcodec/avcodec.h	/^    int pts_dts_delta;$/;"	m	struct:AVCodecParserContext
pts_reorder_error	ffmpeg/include/libavformat/avformat.h	/^    int64_t pts_reorder_error[MAX_REORDER_DELAY+1];$/;"	m	struct:AVStream
pts_reorder_error_count	ffmpeg/include/libavformat/avformat.h	/^    uint8_t pts_reorder_error_count[MAX_REORDER_DELAY+1];$/;"	m	struct:AVStream
pts_wrap_behavior	ffmpeg/include/libavformat/avformat.h	/^    int pts_wrap_behavior;         \/\/\/< behavior on wrap detection$/;"	m	struct:AVProgram
pts_wrap_behavior	ffmpeg/include/libavformat/avformat.h	/^    int pts_wrap_behavior;$/;"	m	struct:AVStream
pts_wrap_bits	ffmpeg/include/libavformat/avformat.h	/^    int pts_wrap_bits; \/**< number of bits in pts (used for wrapping control) *\/$/;"	m	struct:AVStream
pts_wrap_reference	ffmpeg/include/libavformat/avformat.h	/^    int64_t pts_wrap_reference;    \/\/\/< reference dts for wrap detection$/;"	m	struct:AVProgram
pts_wrap_reference	ffmpeg/include/libavformat/avformat.h	/^    int64_t pts_wrap_reference;$/;"	m	struct:AVStream
pub_key	spice-common/spice-protocol/spice/protocol.h	/^    uint8_t pub_key[SPICE_TICKET_PUBKEY_BYTES];$/;"	m	struct:SpiceLinkReply
pub_key_data	spice-common/common/messages.h	/^    uint8_t *pub_key_data;$/;"	m	struct:SpiceMigrationDstInfo
pub_key_size	spice-common/common/messages.h	/^    uint32_t pub_key_size;$/;"	m	struct:SpiceMigrationDstInfo
pub_key_type	spice-common/common/messages.h	/^    uint16_t pub_key_type;$/;"	m	struct:SpiceMigrationDstInfo
pubkey	glib/spice-session-priv.h	/^    GByteArray        *pubkey;$/;"	m	struct:_SpiceSessionPrivate
pubkey	spice-common/common/ssl_verify.h	/^    char                *pubkey;$/;"	m	struct:__anon131
pubkey_size	spice-common/common/ssl_verify.h	/^    size_t              pubkey_size;$/;"	m	struct:__anon131
pulse_cork_cb	glib/spice-pulse.c	/^static void pulse_cork_cb(pa_stream *pastream, int success, void *data)$/;"	f	file:
pulse_cork_flush_cb	glib/spice-pulse.c	/^static void pulse_cork_flush_cb(pa_stream *pastream, int success, void *data)$/;"	f	file:
pulse_flush_cb	glib/spice-pulse.c	/^static void pulse_flush_cb(pa_stream *pastream, int success, void *data)$/;"	f	file:
pulse_uncork_cb	glib/spice-pulse.c	/^static void pulse_uncork_cb(pa_stream *pastream, int success, void *data)$/;"	f	file:
push_index	spice-common/python_modules/codegen.py	/^    def push_index(self):$/;"	m	class:CodeWriter
pushed_cb	glib/channel-webdav.c	/^    GFunc pushed_cb;$/;"	m	struct:_OutputQueueElem	file:
pushed_client_cb	glib/channel-webdav.c	/^static void pushed_client_cb(OutputQueue *q, gpointer user_data)$/;"	f	file:
put	spice-common/common/canvas_base.h	/^    void (*put)(SpiceImageCache *cache,$/;"	m	struct:__anon140
put	spice-common/common/canvas_base.h	/^    void (*put)(SpicePaletteCache *cache,$/;"	m	struct:__anon142
put_image	spice-common/common/canvas_base.h	/^    void (*put_image)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
put_lossy	spice-common/common/canvas_base.h	/^    void (*put_lossy)(SpiceImageCache *cache,$/;"	m	struct:__anon140
put_point	spice-common/common/glc.c	/^static inline void put_point(InternalPath *path, double x, double y)$/;"	f	file:
pw	win32/win32_spice_interface.c	/^    gchar pw[100];$/;"	m	struct:SpiceConnectARGS	file:
q	ffmpeg/include/libavutil/opt.h	/^        AVRational q;$/;"	m	union:AVOption::__anon38
qblur	ffmpeg/include/libavcodec/avcodec.h	/^    float qblur;      \/\/\/< amount of qscale smoothing over time (0.0-1.0)$/;"	m	struct:AVCodecContext
qcompress	ffmpeg/include/libavcodec/avcodec.h	/^    float qcompress;  \/\/\/< amount of qscale change between easy & hard scenes (0.0-1.0)$/;"	m	struct:AVCodecContext
qcompress	glib/h264_type.h	/^    float qcompress;  $/;"	m	struct:_H264StreamInfo
qmax	ffmpeg/include/libavcodec/avcodec.h	/^    int qmax;$/;"	m	struct:AVCodecContext
qmax	glib/h264_type.h	/^    int qmax;$/;"	m	struct:_H264StreamInfo
qmin	ffmpeg/include/libavcodec/avcodec.h	/^    int qmin;$/;"	m	struct:AVCodecContext
qmin	glib/h264_type.h	/^    int qmin;$/;"	m	struct:_H264StreamInfo
qp_table	ffmpeg/include/libavfilter/avfilter.h	/^    int8_t *qp_table;             \/\/\/< array of Quantization Parameters$/;"	m	struct:AVFilterBufferRefVideoProps
qp_table_buf	ffmpeg/include/libavutil/frame.h	/^    AVBufferRef *qp_table_buf;$/;"	m	struct:AVFrame
qp_table_linesize	ffmpeg/include/libavfilter/avfilter.h	/^    int qp_table_linesize;                \/\/\/< qp_table stride$/;"	m	struct:AVFilterBufferRefVideoProps
qp_table_size	ffmpeg/include/libavfilter/avfilter.h	/^    int qp_table_size;            \/\/\/< qp_table size$/;"	m	struct:AVFilterBufferRefVideoProps
qscale	ffmpeg/include/libavcodec/avcodec.h	/^    int qscale; \/\/ If this is 0 then quality_factor will be used instead.$/;"	m	struct:RcOverride
qscale_table	ffmpeg/include/libavutil/frame.h	/^    int8_t *qscale_table;$/;"	m	struct:AVFrame
qscale_type	ffmpeg/include/libavutil/frame.h	/^    int qscale_type;$/;"	m	struct:AVFrame
qstride	ffmpeg/include/libavutil/frame.h	/^    int qstride;$/;"	m	struct:AVFrame
quality	ffmpeg/include/libavutil/frame.h	/^    int quality;$/;"	m	struct:AVFrame
quality_factor	ffmpeg/include/libavcodec/avcodec.h	/^    float quality_factor;$/;"	m	struct:RcOverride
query_codec	ffmpeg/include/libavformat/avformat.h	/^    int (*query_codec)(enum AVCodecID id, int std_compliance);$/;"	m	struct:AVOutputFormat
query_formats	ffmpeg/include/libavfilter/avfilter.h	/^    int (*query_formats)(AVFilterContext *);$/;"	m	struct:AVFilter
query_ranges	ffmpeg/include/libavutil/log.h	/^    int (*query_ranges)(struct AVOptionRanges **, void *obj, const char *key, int flags);$/;"	m	struct:AVClass
queue	glib/channel-webdav.c	/^    GQueue *queue;$/;"	m	struct:_OutputQueue	file:
queue	glib/channel-webdav.c	/^    OutputQueue *queue;$/;"	m	struct:_OutputQueueElem	file:
queue	glib/channel-webdav.c	/^    OutputQueue *queue;$/;"	m	struct:_SpiceWebdavChannelPrivate	file:
quic	spice-common/common/canvas_base.c	/^    QuicContext *quic;$/;"	m	struct:QuicData	file:
quic	spice-common/common/draw.h	/^        SpiceQUICData       quic;$/;"	m	union:SpiceImage::__anon153
quic	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLQUICData quic;$/;"	m	union:QXLImage::__anon81
quic_create	spice-common/common/quic.c	/^QuicContext *quic_create(QuicUsrContext *usr)$/;"	f
quic_data	spice-common/common/canvas_base.c	/^    QuicData quic_data;$/;"	m	struct:CanvasBase	file:
quic_decode	spice-common/common/quic.c	/^int quic_decode(QuicContext *quic, QuicImageType type, uint8_t *buf, int stride)$/;"	f
quic_decode_begin	spice-common/common/quic.c	/^int quic_decode_begin(QuicContext *quic, uint32_t *io_ptr, unsigned int num_io_words,$/;"	f
quic_destroy	spice-common/common/quic.c	/^void quic_destroy(QuicContext *quic)$/;"	f
quic_encode	spice-common/common/quic.c	/^int quic_encode(QuicContext *quic, QuicImageType type, int width, int height,$/;"	f
quic_image_params	spice-common/common/quic.c	/^static void quic_image_params(Encoder *encoder, QuicImageType type, int *channels, int *bpc)$/;"	f	file:
quic_init	spice-common/common/quic.c	/^void quic_init(void)$/;"	f
quic_usr_error	spice-common/common/canvas_base.c	/^SPICE_ATTR_PRINTF(2, 3) static void quic_usr_error(QuicUsrContext *usr, const char *fmt, ...)$/;"	f	file:
quic_usr_free	spice-common/common/canvas_base.c	/^static void quic_usr_free(QuicUsrContext *usr, void *ptr)$/;"	f	file:
quic_usr_malloc	spice-common/common/canvas_base.c	/^static void *quic_usr_malloc(QuicUsrContext *usr, int size)$/;"	f	file:
quic_usr_more_lines	spice-common/common/canvas_base.c	/^static int quic_usr_more_lines(QuicUsrContext *usr, uint8_t **lines)$/;"	f	file:
quic_usr_more_space	spice-common/common/canvas_base.c	/^static int quic_usr_more_space(QuicUsrContext *usr, uint32_t **io_ptr, int rows_completed)$/;"	f	file:
quic_usr_warn	spice-common/common/canvas_base.c	/^SPICE_ATTR_PRINTF(2, 3) static void quic_usr_warn(QuicUsrContext *usr, const char *fmt, ...)$/;"	f	file:
r	glib/decode-glz.c	/^    uint8_t r;$/;"	m	struct:rgb24_pixel_t	file:
r	glib/decode-glz.c	/^    uint8_t r;$/;"	m	struct:rgb32_pixel_t	file:
r	spice-common/common/lz.c	/^    uint8_t r;$/;"	m	struct:rgb24_pixel_t	file:
r	spice-common/common/lz.c	/^    uint8_t r;$/;"	m	struct:rgb32_pixel_t	file:
r	spice-common/common/quic.c	/^    BYTE r;$/;"	m	struct:rgb24_pixel_t	file:
r	spice-common/common/quic.c	/^    BYTE r;$/;"	m	struct:rgb32_pixel_t	file:
r	win32/create_bmp.h	/^   BYTE r;$/;"	m	struct:__anon52
r_frame_rate	ffmpeg/include/libavformat/avformat.h	/^    AVRational r_frame_rate;$/;"	m	struct:AVStream
ram_header_offset	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t ram_header_offset;$/;"	m	struct:QXLRom
ram_hint	spice-common/common/messages.h	/^    uint32_t ram_hint;$/;"	m	struct:SpiceMsgMainInit
random_region	spice-common/common/region.c	/^static void random_region(QRegion *reg)$/;"	f	file:
range	ffmpeg/include/libavutil/opt.h	/^    AVOptionRange **range;$/;"	m	struct:AVOptionRanges
raster_ops	spice-common/common/gdi_canvas.c	/^uint32_t raster_ops[] = {$/;"	v
rate	ffmpeg/include/libavutil/timecode.h	/^    AVRational rate;    \/\/\/< frame rate in rational form$/;"	m	struct:__anon37
raw_codec_id	ffmpeg/include/libavformat/avformat.h	/^    int raw_codec_id;$/;"	m	struct:AVInputFormat
rc_buffer_aggressivity	ffmpeg/include/libavcodec/avcodec.h	/^    float rc_buffer_aggressivity;$/;"	m	struct:AVCodecContext
rc_buffer_size	ffmpeg/include/libavcodec/avcodec.h	/^    int rc_buffer_size;$/;"	m	struct:AVCodecContext
rc_buffer_size	glib/h264_type.h	/^    int rc_buffer_size;$/;"	m	struct:_H264StreamInfo
rc_eq	ffmpeg/include/libavcodec/avcodec.h	/^    const char *rc_eq;$/;"	m	struct:AVCodecContext
rc_initial_buffer_occupancy	ffmpeg/include/libavcodec/avcodec.h	/^    int rc_initial_buffer_occupancy;$/;"	m	struct:AVCodecContext
rc_initial_cplx	ffmpeg/include/libavcodec/avcodec.h	/^    float rc_initial_cplx;$/;"	m	struct:AVCodecContext
rc_max_available_vbv_use	ffmpeg/include/libavcodec/avcodec.h	/^    float rc_max_available_vbv_use;$/;"	m	struct:AVCodecContext
rc_max_rate	ffmpeg/include/libavcodec/avcodec.h	/^    int rc_max_rate;$/;"	m	struct:AVCodecContext
rc_max_rate	glib/h264_type.h	/^    int rc_max_rate;$/;"	m	struct:_H264StreamInfo
rc_min_rate	ffmpeg/include/libavcodec/avcodec.h	/^    int rc_min_rate;$/;"	m	struct:AVCodecContext
rc_min_rate	glib/h264_type.h	/^    int rc_min_rate;$/;"	m	struct:_H264StreamInfo
rc_min_vbv_overflow_use	ffmpeg/include/libavcodec/avcodec.h	/^    float rc_min_vbv_overflow_use;$/;"	m	struct:AVCodecContext
rc_override	ffmpeg/include/libavcodec/avcodec.h	/^    RcOverride *rc_override;$/;"	m	struct:AVCodecContext
rc_override_count	ffmpeg/include/libavcodec/avcodec.h	/^    int rc_override_count;$/;"	m	struct:AVCodecContext
rc_qmod_amp	ffmpeg/include/libavcodec/avcodec.h	/^    float rc_qmod_amp;$/;"	m	struct:AVCodecContext
rc_qmod_freq	ffmpeg/include/libavcodec/avcodec.h	/^    int rc_qmod_freq;$/;"	m	struct:AVCodecContext
rc_qsquish	ffmpeg/include/libavcodec/avcodec.h	/^    float rc_qsquish;$/;"	m	struct:AVCodecContext
rc_strategy	ffmpeg/include/libavcodec/avcodec.h	/^    attribute_deprecated int rc_strategy;$/;"	m	struct:AVCodecContext
rchannel	glib/spice-gstaudio.c	/^    SpiceChannel            *rchannel;$/;"	m	struct:_SpiceGstaudioPrivate	file:
rchannel	glib/spice-pulse.c	/^    SpiceChannel            *rchannel;$/;"	m	struct:_SpicePulsePrivate	file:
re	ffmpeg/include/libavcodec/avfft.h	/^    FFTSample re, im;$/;"	m	struct:FFTComplex
read_array_len	spice-common/python_modules/demarshal.py	/^def read_array_len(writer, prefix, array, dest, scope, is_ptr):$/;"	f
read_bits	spice-common/common/canvas_base.h	/^    void (*read_bits)(SpiceCanvas *canvas, uint8_t *dest, int dest_stride, const SpiceRect *area);$/;"	m	struct:__anon145
read_buf	glib/channel-usbredir.c	/^    const uint8_t *read_buf;$/;"	m	struct:_SpiceUsbredirChannelPrivate	file:
read_buf_size	glib/channel-usbredir.c	/^    int read_buf_size;$/;"	m	struct:_SpiceUsbredirChannelPrivate	file:
read_bytes	glib/channel-main.c	/^    uint64_t                       read_bytes;$/;"	m	struct:SpiceFileXferTask	file:
read_cancelled	glib/vmcstream.c	/^read_cancelled(GCancellable *cancellable,$/;"	f	file:
read_close	ffmpeg/include/libavformat/avformat.h	/^    int (*read_close)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_header	ffmpeg/include/libavformat/avformat.h	/^    int (*read_header)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_int16	spice-common/common/generated_client_demarshallers.c	42;"	d	file:
read_int16	spice-common/common/generated_client_demarshallers.c	59;"	d	file:
read_int16	spice-common/common/generated_client_demarshallers1.c	42;"	d	file:
read_int16	spice-common/common/generated_client_demarshallers1.c	59;"	d	file:
read_int16	spice-common/common/generated_server_demarshallers.c	42;"	d	file:
read_int16	spice-common/common/generated_server_demarshallers.c	59;"	d	file:
read_int32	spice-common/common/generated_client_demarshallers.c	46;"	d	file:
read_int32	spice-common/common/generated_client_demarshallers.c	63;"	d	file:
read_int32	spice-common/common/generated_client_demarshallers1.c	46;"	d	file:
read_int32	spice-common/common/generated_client_demarshallers1.c	63;"	d	file:
read_int32	spice-common/common/generated_server_demarshallers.c	46;"	d	file:
read_int32	spice-common/common/generated_server_demarshallers.c	63;"	d	file:
read_int64	spice-common/common/generated_client_demarshallers.c	50;"	d	file:
read_int64	spice-common/common/generated_client_demarshallers.c	67;"	d	file:
read_int64	spice-common/common/generated_client_demarshallers1.c	50;"	d	file:
read_int64	spice-common/common/generated_client_demarshallers1.c	67;"	d	file:
read_int64	spice-common/common/generated_server_demarshallers.c	50;"	d	file:
read_int64	spice-common/common/generated_server_demarshallers.c	67;"	d	file:
read_int8	spice-common/common/generated_client_demarshallers.c	38;"	d	file:
read_int8	spice-common/common/generated_client_demarshallers.c	55;"	d	file:
read_int8	spice-common/common/generated_client_demarshallers1.c	38;"	d	file:
read_int8	spice-common/common/generated_client_demarshallers1.c	55;"	d	file:
read_int8	spice-common/common/generated_server_demarshallers.c	38;"	d	file:
read_int8	spice-common/common/generated_server_demarshallers.c	55;"	d	file:
read_io_word	spice-common/common/quic.c	/^static inline void read_io_word(Encoder *encoder)$/;"	f	file:
read_only	glib/spice-session-priv.h	/^    gboolean          read_only;$/;"	m	struct:_SpiceSessionPrivate
read_packet	ffmpeg/include/libavformat/avformat.h	/^    int (*read_packet)(struct AVFormatContext *, AVPacket *pkt);$/;"	m	struct:AVInputFormat
read_packet	ffmpeg/include/libavformat/avio.h	/^    int (*read_packet)(void *opaque, uint8_t *buf, int buf_size);$/;"	m	struct:AVIOContext
read_pause	ffmpeg/include/libavformat/avformat.h	/^    int (*read_pause)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_pause	ffmpeg/include/libavformat/avio.h	/^    int (*read_pause)(void *opaque, int pause);$/;"	m	struct:AVIOContext
read_play	ffmpeg/include/libavformat/avformat.h	/^    int (*read_play)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_probe	ffmpeg/include/libavformat/avformat.h	/^    int (*read_probe)(AVProbeData *);$/;"	m	struct:AVInputFormat
read_seek	ffmpeg/include/libavformat/avformat.h	/^    int (*read_seek)(struct AVFormatContext *,$/;"	m	struct:AVInputFormat
read_seek	ffmpeg/include/libavformat/avio.h	/^    int64_t (*read_seek)(void *opaque, int stream_index,$/;"	m	struct:AVIOContext
read_seek2	ffmpeg/include/libavformat/avformat.h	/^    int (*read_seek2)(struct AVFormatContext *s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags);$/;"	m	struct:AVInputFormat
read_timestamp	ffmpeg/include/libavformat/avformat.h	/^    int64_t (*read_timestamp)(struct AVFormatContext *s, int stream_index,$/;"	m	struct:AVInputFormat
read_uint16	spice-common/common/generated_client_demarshallers.c	44;"	d	file:
read_uint16	spice-common/common/generated_client_demarshallers.c	61;"	d	file:
read_uint16	spice-common/common/generated_client_demarshallers1.c	44;"	d	file:
read_uint16	spice-common/common/generated_client_demarshallers1.c	61;"	d	file:
read_uint16	spice-common/common/generated_server_demarshallers.c	44;"	d	file:
read_uint16	spice-common/common/generated_server_demarshallers.c	61;"	d	file:
read_uint32	spice-common/common/generated_client_demarshallers.c	48;"	d	file:
read_uint32	spice-common/common/generated_client_demarshallers.c	65;"	d	file:
read_uint32	spice-common/common/generated_client_demarshallers1.c	48;"	d	file:
read_uint32	spice-common/common/generated_client_demarshallers1.c	65;"	d	file:
read_uint32	spice-common/common/generated_server_demarshallers.c	48;"	d	file:
read_uint32	spice-common/common/generated_server_demarshallers.c	65;"	d	file:
read_uint64	spice-common/common/generated_client_demarshallers.c	52;"	d	file:
read_uint64	spice-common/common/generated_client_demarshallers.c	69;"	d	file:
read_uint64	spice-common/common/generated_client_demarshallers1.c	52;"	d	file:
read_uint64	spice-common/common/generated_client_demarshallers1.c	69;"	d	file:
read_uint64	spice-common/common/generated_server_demarshallers.c	52;"	d	file:
read_uint64	spice-common/common/generated_server_demarshallers.c	69;"	d	file:
read_uint8	spice-common/common/generated_client_demarshallers.c	40;"	d	file:
read_uint8	spice-common/common/generated_client_demarshallers.c	57;"	d	file:
read_uint8	spice-common/common/generated_client_demarshallers1.c	40;"	d	file:
read_uint8	spice-common/common/generated_client_demarshallers1.c	57;"	d	file:
read_uint8	spice-common/common/generated_server_demarshallers.c	40;"	d	file:
read_uint8	spice-common/common/generated_server_demarshallers.c	57;"	d	file:
reader_added	glib/smartcard-manager.h	/^    void (*reader_added)(SpiceSmartcardManager *manager, SpiceSmartcardReader *reader);$/;"	m	struct:_SpiceSmartcardManagerClass
reader_added_cb	glib/channel-smartcard.c	/^static void reader_added_cb(SpiceSmartcardManager *manager, VReader *reader,$/;"	f	file:
reader_id	spice-common/common/messages.h	/^    uint32_t reader_id;$/;"	m	struct:SpiceMsgSmartcard
reader_removed	glib/smartcard-manager.h	/^    void (*reader_removed)(SpiceSmartcardManager *manager, SpiceSmartcardReader *reader);$/;"	m	struct:_SpiceSmartcardManagerClass
reader_removed_cb	glib/channel-smartcard.c	/^static void reader_removed_cb(SpiceSmartcardManager *manager, VReader *reader,$/;"	f	file:
ready	win32/win32-spice-widget-priv.h	/^    gboolean                ready;$/;"	m	struct:_SpiceDisplayPrivate
reason	spice-common/common/messages.h	/^    uint32_t reason; \/\/ SPICE_ERR_?$/;"	m	struct:SpiceMsgDisconnect
rec_mutex_conn	win32/win32_spice_interface_priv.h	/^   GRecMutex rec_mutex_conn;$/;"	m	struct:Win32SpiceGloabInfo
rec_mutex_loop	win32/win32_spice_interface_priv.h	/^   GRecMutex rec_mutex_loop;$/;"	m	struct:Win32SpiceGloabInfo
recommended_encoder_configuration	ffmpeg/include/libavformat/avformat.h	/^    char *recommended_encoder_configuration;$/;"	m	struct:AVStream
record	glib/spice-gstaudio.c	/^    struct stream           record;$/;"	m	struct:_SpiceGstaudioPrivate	typeref:struct:_SpiceGstaudioPrivate::stream	file:
record	glib/spice-pulse.c	/^    struct stream           record;$/;"	m	struct:_SpicePulsePrivate	typeref:struct:_SpicePulsePrivate::stream	file:
record_bus_cb	glib/spice-gstaudio.c	/^static gboolean record_bus_cb(GstBus *bus, GstMessage *msg, gpointer data)$/;"	f	file:
record_data	glib/channel-record.h	/^    void (*record_data)(SpiceRecordChannel *channel, gpointer *data, gint size);$/;"	m	struct:_SpiceRecordChannelClass
record_handle_set_mute	glib/channel-record.c	/^static void record_handle_set_mute(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
record_handle_set_volume	glib/channel-record.c	/^static void record_handle_set_volume(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
record_handle_start	glib/channel-record.c	/^static void record_handle_start(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
record_handle_stop	glib/channel-record.c	/^static void record_handle_stop(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
record_mute_changed	glib/spice-gstaudio.c	/^static void record_mute_changed(GObject *object, GParamSpec *pspec, gpointer data)$/;"	f	file:
record_mute_changed	glib/spice-pulse.c	/^static void record_mute_changed(GObject *object, GParamSpec *pspec, gpointer data)$/;"	f	file:
record_new_buffer	glib/spice-gstaudio.c	/^static void record_new_buffer(GstAppSink *appsink, gpointer data)$/;"	f	file:
record_start	glib/channel-record.h	/^    void (*record_start)(SpiceRecordChannel *channel,$/;"	m	struct:_SpiceRecordChannelClass
record_start	glib/spice-gstaudio.c	/^static void record_start(SpiceRecordChannel *channel, gint format, gint channels,$/;"	f	file:
record_start	glib/spice-pulse.c	/^static void record_start(SpiceRecordChannel *channel, gint format, gint channels,$/;"	f	file:
record_stop	glib/channel-record.h	/^    void (*record_stop)(SpiceRecordChannel *channel);$/;"	m	struct:_SpiceRecordChannelClass
record_stop	glib/spice-gstaudio.c	/^static void record_stop(SpiceRecordChannel *channel, gpointer data)$/;"	f	file:
record_stop	glib/spice-pulse.c	/^static void record_stop(SpiceRecordChannel *channel, gpointer data)$/;"	f	file:
record_volume_changed	glib/spice-gstaudio.c	/^static void record_volume_changed(GObject *object, GParamSpec *pspec, gpointer data)$/;"	f	file:
record_volume_changed	glib/spice-pulse.c	/^static void record_volume_changed(GObject *object, GParamSpec *pspec, gpointer data)$/;"	f	file:
rect_contains	spice-common/common/rect.h	/^static inline int rect_contains(const SpiceRect *big, const SpiceRect *small)$/;"	f
rect_contains	spice-common/common/rect.h	/^static inline int rect_contains(const SpiceRect& big, const SpiceRect& small)$/;"	f
rect_debug	spice-common/common/rect.h	/^static inline void rect_debug(const SpiceRect &r)$/;"	f
rect_debug	spice-common/common/rect.h	/^static inline void rect_debug(const SpiceRect *r)$/;"	f
rect_get_area	spice-common/common/rect.h	/^static inline int rect_get_area(const SpiceRect *r)$/;"	f
rect_get_area	spice-common/common/rect.h	/^static inline int rect_get_area(const SpiceRect& r)$/;"	f
rect_intersects	spice-common/common/rect.h	/^static inline int rect_intersects(const SpiceRect& r1, const SpiceRect& r2)$/;"	f
rect_intersects	spice-common/common/rect.h	/^static inline int rect_intersects(const SpiceRect* r1, const SpiceRect* r2)$/;"	f
rect_is_empty	spice-common/common/rect.h	/^static inline int rect_is_empty(const SpiceRect& r)$/;"	f
rect_is_empty	spice-common/common/rect.h	/^static inline int rect_is_empty(const SpiceRect* r)$/;"	f
rect_is_equal	spice-common/common/rect.h	/^static inline int rect_is_equal(const SpiceRect *r1, const SpiceRect *r2)$/;"	f
rect_is_equal	spice-common/common/rect.h	/^static inline int rect_is_equal(const SpiceRect& r1, const SpiceRect& r2)$/;"	f
rect_is_same_size	spice-common/common/rect.h	/^static inline int rect_is_same_size(const SpiceRect *r1, const SpiceRect *r2)$/;"	f
rect_is_same_size	spice-common/common/rect.h	/^static inline int rect_is_same_size(const SpiceRect& r1, const SpiceRect& r2)$/;"	f
rect_is_valid	spice-common/common/region.c	/^static int rect_is_valid(const SpiceRect *r)$/;"	f	file:
rect_offset	spice-common/common/rect.h	/^static inline void rect_offset(SpiceRect& r, int dx, int dy)$/;"	f
rect_offset	spice-common/common/rect.h	/^static inline void rect_offset(SpiceRect* r, int dx, int dy)$/;"	f
rect_sect	spice-common/common/rect.h	/^static inline void rect_sect(SpiceRect& r, const SpiceRect& bounds)$/;"	f
rect_sect	spice-common/common/rect.h	/^static inline void rect_sect(SpiceRect* r, const SpiceRect* bounds)$/;"	f
rect_set	spice-common/common/region.c	/^static void rect_set(SpiceRect *r, int32_t top, int32_t left, int32_t bottom, int32_t right)$/;"	f	file:
rect_union	spice-common/common/rect.h	/^static inline void rect_union(SpiceRect *dest, const SpiceRect *r)$/;"	f
rect_union	spice-common/common/rect.h	/^static inline void rect_union(SpiceRect& dest, const SpiceRect& r)$/;"	f
rects	ffmpeg/include/libavcodec/avcodec.h	/^    AVSubtitleRect **rects;$/;"	m	struct:AVSubtitle
rects	spice-common/common/draw.h	/^    SpiceClipRects *rects;$/;"	m	struct:SpiceClip
rects	spice-common/common/draw.h	/^  SpiceRect rects[0];$/;"	m	struct:SpiceClipRects
redirect_on_connect	glib/usb-device-manager.c	/^    gchar *redirect_on_connect;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
redirect_on_connect_rules	glib/usb-device-manager.c	/^    struct usbredirfilter_rule *redirect_on_connect_rules;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	typeref:struct:_SpiceUsbDeviceManagerPrivate::usbredirfilter_rule	file:
redirect_on_connect_rules_count	glib/usb-device-manager.c	/^    int redirect_on_connect_rules_count;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
ref	glib/usb-device-manager.c	/^    gint    ref;$/;"	m	struct:_SpiceUsbDeviceInfo	file:
ref	spice-common/common/lz.c	/^    uint8_t            *ref;$/;"	m	struct:HashEntry	file:
ref_index	ffmpeg/include/libavutil/frame.h	/^    int8_t *ref_index[2];$/;"	m	struct:AVFrame
ref_pat	spice-common/common/glc.c	/^static inline InternalPat *ref_pat(InternalPat *pat)$/;"	f	file:
refcount	ffmpeg/include/libavfilter/avfilter.h	/^    unsigned refcount;          \/\/\/< number of references to this buffer$/;"	m	struct:AVFilterBuffer
refcount	glib/channel-cursor.c	/^    int                         refcount;$/;"	m	struct:display_cursor	file:
refcount	glib/spice-channel-priv.h	/^    int                   refcount;$/;"	m	struct:_SpiceMsgIn
refcount	glib/spice-channel-priv.h	/^    int                   refcount;$/;"	m	struct:_SpiceMsgOut
refcounted_frames	ffmpeg/include/libavcodec/avcodec.h	/^    int refcounted_frames;$/;"	m	struct:AVCodecContext
reference	ffmpeg/include/libavutil/frame.h	/^    int reference;$/;"	m	struct:AVFrame
refs	ffmpeg/include/libavcodec/avcodec.h	/^    int refs;$/;"	m	struct:AVCodecContext
refs	glib/channel-webdav.c	/^    guint refs;$/;"	m	struct:Client	file:
refs	spice-common/common/glc.c	/^    int refs;$/;"	m	struct:InternalPat	file:
reget_buffer	ffmpeg/include/libavcodec/avcodec.h	/^    int (*reget_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
region	glib/channel-display-priv.h	/^    QRegion                     region;$/;"	m	struct:display_stream
region_add	spice-common/common/region.c	/^void region_add(QRegion *rgn, const SpiceRect *r)$/;"	f
region_and	spice-common/common/region.c	/^void region_and(QRegion *rgn, const QRegion *other_rgn)$/;"	f
region_bounds_intersects	spice-common/common/region.c	/^int region_bounds_intersects(const QRegion *rgn1, const QRegion *rgn2)$/;"	f
region_clear	spice-common/common/region.c	/^void region_clear(QRegion *rgn)$/;"	f
region_clone	spice-common/common/region.c	/^void region_clone(QRegion *dest, const QRegion *src)$/;"	f
region_contains	spice-common/common/region.c	/^int region_contains(const QRegion *rgn, const QRegion *other)$/;"	f
region_contains_point	spice-common/common/region.c	/^int region_contains_point(const QRegion *rgn, int32_t x, int32_t y)$/;"	f
region_destroy	spice-common/common/region.c	/^void region_destroy(QRegion *rgn)$/;"	f
region_dump	spice-common/common/region.c	/^void region_dump(const QRegion *rgn, const char *prefix)$/;"	f
region_dup_rects	spice-common/common/region.c	/^SpiceRect *region_dup_rects(const QRegion *rgn, uint32_t *num_rects)$/;"	f
region_exclude	spice-common/common/region.c	/^void region_exclude(QRegion *rgn, const QRegion *other_rgn)$/;"	f
region_extents	spice-common/common/region.c	/^void region_extents(const QRegion *rgn, SpiceRect *r)$/;"	f
region_init	spice-common/common/region.c	/^void region_init(QRegion *rgn)$/;"	f
region_intersects	spice-common/common/region.c	/^int region_intersects(const QRegion *rgn1, const QRegion *rgn2)$/;"	f
region_is_empty	spice-common/common/region.c	/^int region_is_empty(const QRegion *rgn)$/;"	f
region_is_equal	spice-common/common/region.c	/^int region_is_equal(const QRegion *rgn1, const QRegion *rgn2)$/;"	f
region_is_valid	spice-common/common/region.c	/^int region_is_valid(const QRegion *rgn)$/;"	f
region_offset	spice-common/common/region.c	/^void region_offset(QRegion *rgn, int32_t dx, int32_t dy)$/;"	f
region_or	spice-common/common/region.c	/^void region_or(QRegion *rgn, const QRegion *other_rgn)$/;"	f
region_remove	spice-common/common/region.c	/^void region_remove(QRegion *rgn, const SpiceRect *r)$/;"	f
region_ret_rects	spice-common/common/region.c	/^void region_ret_rects(const QRegion *rgn, SpiceRect *rects, uint32_t num_rects)$/;"	f
region_test	spice-common/common/region.c	/^int region_test(const QRegion *_reg1, const QRegion *_reg2, int query)$/;"	f
region_xor	spice-common/common/region.c	/^void region_xor(QRegion *rgn, const QRegion *other_rgn)$/;"	f
register	spice-common/python_modules/ptypes.py	/^    def register(self):$/;"	m	class:Type
register	spice-common/python_modules/ptypes.py	/^    def register(self):$/;"	m	class:TypeRef
rej_perms	ffmpeg/include/libavfilter/avfilter.h	/^    attribute_deprecated int rej_perms;$/;"	m	struct:AVFilterPad
release	glib/continuation.h	/^	int (*release)(struct continuation *cc);$/;"	m	struct:continuation
release	glib/coroutine.h	/^	int (*release)(struct coroutine *);$/;"	m	struct:coroutine
release	spice-common/common/canvas_base.h	/^    void (*release)(SpicePaletteCache *cache,$/;"	m	struct:__anon142
release_bitmap	spice-common/common/gdi_canvas.c	/^static void release_bitmap(HDC dc, HBITMAP bitmap, HBITMAP prev_bitmap, int cache)$/;"	f	file:
release_buffer	ffmpeg/include/libavcodec/avcodec.h	/^    void (*release_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
release_data	spice-common/common/canvas_utils.c	/^static void release_data(SPICE_GNUC_UNUSED pixman_image_t *image,$/;"	f	file:
release_info	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLReleaseInfo release_info;$/;"	m	struct:QXLCompatDrawable
release_info	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLReleaseInfo release_info;$/;"	m	struct:QXLCompatUpdateCmd
release_info	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLReleaseInfo release_info;$/;"	m	struct:QXLCursorCmd
release_info	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLReleaseInfo release_info;$/;"	m	struct:QXLDrawable
release_info	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLReleaseInfo release_info;$/;"	m	struct:QXLMessage
release_info	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLReleaseInfo release_info;$/;"	m	struct:QXLSurfaceCmd
release_info	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLReleaseInfo release_info;$/;"	m	struct:QXLUpdateCmd
release_ring	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLReleaseRing release_ring;$/;"	m	struct:QXLRam
remaining_buffer_size	spice-common/common/marshaller.c	/^static size_t remaining_buffer_size(SpiceMarshallerData *d)$/;"	f	file:
remote_caps	glib/spice-channel-priv.h	/^    GArray                      *remote_caps;$/;"	m	struct:_SpiceChannelPrivate
remote_common_caps	glib/spice-channel-priv.h	/^    GArray                      *remote_common_caps;$/;"	m	struct:_SpiceChannelPrivate
remove_client	glib/channel-webdav.c	/^static void remove_client(SpiceWebdavChannel *self, Client *client)$/;"	f	file:
remove_stencil_client	spice-common/common/glc.c	/^static inline void remove_stencil_client(InternaCtx *ctx)$/;"	f	file:
render	ffmpeg/include/libavcodec/vdpau.h	/^    VdpDecoderRender *render;$/;"	m	struct:AVVDPAUContext
render2	ffmpeg/include/libavcodec/vdpau.h	/^    AVVDPAU_Render2 render2;$/;"	m	struct:AVVDPAUContext
render_pos	spice-common/common/draw.h	/^    SpicePoint render_pos;$/;"	m	struct:SpiceRasterGlyph
render_pos	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPoint render_pos;$/;"	m	struct:QXLRasterGlyph
reordered_opaque	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t reordered_opaque;$/;"	m	struct:AVCodecContext
reordered_opaque	ffmpeg/include/libavutil/frame.h	/^    int64_t reordered_opaque;$/;"	m	struct:AVFrame
repeat_pict	ffmpeg/include/libavcodec/avcodec.h	/^    int repeat_pict; \/* XXX: Put it back in AVCodecContext. *\/$/;"	m	struct:AVCodecParserContext
repeat_pict	ffmpeg/include/libavutil/frame.h	/^    int repeat_pict;$/;"	m	struct:AVFrame
replace_lossy	spice-common/common/canvas_base.h	/^    void (*replace_lossy)(SpiceImageCache *cache,$/;"	m	struct:__anon140
reply	glib/win-usb-driver-install.c	/^    USBClerkReply         reply;$/;"	m	struct:_SpiceWinUsbDriverPrivate	file:
reply_read_cb	glib/wocky-http-proxy.c	/^reply_read_cb (GObject *source,$/;"	f	file:
report_drops_seq_len	glib/channel-display-priv.h	/^    uint32_t report_drops_seq_len;$/;"	m	struct:display_stream
report_id	ffmpeg/include/libavcodec/d3d11va.h	/^    unsigned report_id;$/;"	m	struct:AVD3D11VAContext
report_id	ffmpeg/include/libavcodec/dxva2.h	/^    unsigned report_id;$/;"	m	struct:dxva_context
report_id	glib/channel-display-priv.h	/^    uint32_t report_id;$/;"	m	struct:display_stream
report_is_active	glib/channel-display-priv.h	/^    gboolean report_is_active;$/;"	m	struct:display_stream
report_max_window	glib/channel-display-priv.h	/^    uint32_t report_max_window;$/;"	m	struct:display_stream
report_num_drops	glib/channel-display-priv.h	/^    uint32_t report_num_drops;$/;"	m	struct:display_stream
report_num_frames	glib/channel-display-priv.h	/^    uint32_t report_num_frames;$/;"	m	struct:display_stream
report_start_frame_time	glib/channel-display-priv.h	/^    uint32_t report_start_frame_time;$/;"	m	struct:display_stream
report_start_time	glib/channel-display-priv.h	/^    uint64_t report_start_time;$/;"	m	struct:display_stream
report_timeout	glib/channel-display-priv.h	/^    uint32_t report_timeout;$/;"	m	struct:display_stream
request	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t  request;$/;"	m	struct:VDAgentAnnounceCapabilities
request_channel_layout	ffmpeg/include/libavcodec/avcodec.h	/^    uint64_t request_channel_layout;$/;"	m	struct:AVCodecContext
request_channels	ffmpeg/include/libavcodec/avcodec.h	/^    attribute_deprecated int request_channels;$/;"	m	struct:AVCodecContext
request_frame	ffmpeg/include/libavfilter/avfilter.h	/^    int (*request_frame)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
request_probe	ffmpeg/include/libavformat/avformat.h	/^    int request_probe;$/;"	m	struct:AVStream
request_sample_fmt	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVSampleFormat request_sample_fmt;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVSampleFormat
request_samples	ffmpeg/include/libavfilter/avfilter.h	/^    int request_samples;$/;"	m	struct:AVFilterLink
request_write_cb	glib/wocky-http-proxy.c	/^request_write_cb (GObject *source,$/;"	f	file:
resample_lavr_opts	ffmpeg/include/libavfilter/avfilter.h	/^    char *resample_lavr_opts;   \/\/\/< libavresample options to use for the auto-inserted resample filters$/;"	m	struct:AVFilterGraph
reserv	spice-common/spice-protocol/spice/vdi_dev.h	/^    uint32_t reserv[32];$/;"	m	struct:VDIPortRam
reset_tass_vertex	spice-common/common/glc.c	/^static void reset_tass_vertex(InternaCtx *ctx)$/;"	f	file:
resize_guest_enable	win32/win32-spice-widget-priv.h	/^    bool                    resize_guest_enable;$/;"	m	struct:_SpiceDisplayPrivate
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self):$/;"	m	class:ArrayType
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self):$/;"	m	class:ChannelType
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self):$/;"	m	class:ContainerType
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self):$/;"	m	class:PointerType
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self):$/;"	m	class:ProtocolType
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self):$/;"	m	class:Type
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self):$/;"	m	class:TypeAlias
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self):$/;"	m	class:TypeRef
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self, channel):$/;"	m	class:ChannelMember
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self, container):$/;"	m	class:Member
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self, container):$/;"	m	class:Switch
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self, container):$/;"	m	class:SwitchCase
resolve	spice-common/python_modules/ptypes.py	/^    def resolve(self, protocol):$/;"	m	class:ProtocolMember
resources	spice-common/common/messages.h	/^    SpiceResourceID resources[0];$/;"	m	struct:SpiceResourceList
result	glib/channel-usbredir.c	/^    GSimpleAsyncResult *result;$/;"	m	struct:_SpiceUsbredirChannelPrivate	file:
result	glib/vmcstream.c	/^    GSimpleAsyncResult *result;$/;"	m	struct:_SpiceVmcInputStream	file:
result	glib/win-usb-driver-install.c	/^    GSimpleAsyncResult    *result;$/;"	m	struct:_SpiceWinUsbDriverPrivate	file:
result	spice-common/spice-protocol/spice/vd_agent.h	/^   uint32_t result;$/;"	m	struct:VDAgentFileXferStatusMessage
ret	glib/coroutine.h	/^        int ret;$/;"	m	struct:coroutine
revers_bits	spice-common/common/canvas_base.c	/^static inline uint8_t revers_bits(uint8_t byte)$/;"	f	file:
rfps_duration_sum	ffmpeg/include/libavformat/avformat.h	/^        int64_t rfps_duration_sum;$/;"	m	struct:AVStream::__anon35
rgb16_pixel_t	glib/decode-glz.c	/^typedef uint16_t rgb16_pixel_t;$/;"	t	file:
rgb16_pixel_t	spice-common/common/lz.c	/^typedef uint16_t rgb16_pixel_t;$/;"	t	file:
rgb16_pixel_t	spice-common/common/quic.c	/^typedef uint16_t rgb16_pixel_t;$/;"	t	file:
rgb24_pixel_t	glib/decode-glz.c	/^typedef struct ATTR_PACKED rgb24_pixel_t {$/;"	s	file:
rgb24_pixel_t	glib/decode-glz.c	/^} rgb24_pixel_t;$/;"	t	typeref:struct:rgb24_pixel_t	file:
rgb24_pixel_t	spice-common/common/lz.c	/^typedef struct ATTR_PACKED rgb24_pixel_t {$/;"	s	file:
rgb24_pixel_t	spice-common/common/lz.c	/^} rgb24_pixel_t;$/;"	t	typeref:struct:rgb24_pixel_t	file:
rgb24_pixel_t	spice-common/common/quic.c	/^typedef struct ATTR_PACKED rgb24_pixel_t {$/;"	s	file:
rgb24_pixel_t	spice-common/common/quic.c	/^} rgb24_pixel_t;$/;"	t	typeref:struct:rgb24_pixel_t	file:
rgb32_pixel_t	glib/decode-glz.c	/^typedef struct ATTR_PACKED rgb32_pixel_t {$/;"	s	file:
rgb32_pixel_t	glib/decode-glz.c	/^} rgb32_pixel_t;$/;"	t	typeref:struct:rgb32_pixel_t	file:
rgb32_pixel_t	spice-common/common/lz.c	/^typedef struct ATTR_PACKED rgb32_pixel_t {$/;"	s	file:
rgb32_pixel_t	spice-common/common/lz.c	/^} rgb32_pixel_t;$/;"	t	typeref:struct:rgb32_pixel_t	file:
rgb32_pixel_t	spice-common/common/quic.c	/^typedef struct ATTR_PACKED rgb32_pixel_t {$/;"	s	file:
rgb32_pixel_t	spice-common/common/quic.c	/^} rgb32_pixel_t;$/;"	t	typeref:struct:rgb32_pixel_t	file:
rgb_16_555_to_32	spice-common/common/pixman_utils.c	/^static inline uint32_t rgb_16_555_to_32(uint16_t color)$/;"	f	file:
rgb_32_to_16_555	spice-common/common/canvas_base.c	/^static inline uint16_t rgb_32_to_16_555(uint32_t color)$/;"	f	file:
rgb_32_to_16_555	spice-common/common/pixman_utils.c	/^static inline uint16_t rgb_32_to_16_555(uint32_t color)$/;"	f	file:
rgb_32_to_16_565	spice-common/common/canvas_base.c	/^static inline uint16_t rgb_32_to_16_565(uint32_t color)$/;"	f	file:
rgb_state	spice-common/common/quic.c	/^    CommonState rgb_state;$/;"	m	struct:Encoder	file:
rgbframe	glib/h264_decoder.h	/^   AVFrame *rgbframe;$/;"	m	struct:_H264Decoder
right	spice-common/common/draw.h	/^    int32_t right;$/;"	m	struct:SpiceRect
right	spice-common/spice-protocol/spice/qxl_dev.h	/^    int32_t right;$/;"	m	struct:QXLRect
right	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t right;$/;"	m	struct:QXLURect
ring_add	spice-common/common/ring.h	/^static inline void ring_add(Ring *ring, RingItem *item)$/;"	f
ring_add_after	spice-common/common/ring.h	/^static inline void ring_add_after(RingItem *item, RingItem *pos)$/;"	f
ring_add_before	spice-common/common/ring.h	/^static inline void ring_add_before(RingItem *item, RingItem *pos)$/;"	f
ring_get_head	spice-common/common/ring.h	/^static inline RingItem *ring_get_head(Ring *ring)$/;"	f
ring_get_length	spice-common/common/ring.h	/^static inline unsigned int ring_get_length(Ring *ring)$/;"	f
ring_get_tail	spice-common/common/ring.h	/^static inline RingItem *ring_get_tail(Ring *ring)$/;"	f
ring_init	spice-common/common/ring.h	/^static inline void ring_init(Ring *ring)$/;"	f
ring_is_empty	spice-common/common/ring.h	/^static inline int ring_is_empty(Ring *ring)$/;"	f
ring_item_init	spice-common/common/ring.h	/^static inline void ring_item_init(RingItem *item)$/;"	f
ring_item_is_linked	spice-common/common/ring.h	/^static inline int ring_item_is_linked(RingItem *item)$/;"	f
ring_next	spice-common/common/ring.h	/^static inline RingItem *ring_next(Ring *ring, RingItem *pos)$/;"	f
ring_prev	spice-common/common/ring.h	/^static inline RingItem *ring_prev(Ring *ring, RingItem *pos)$/;"	f
ring_remove	spice-common/common/ring.h	/^static inline void ring_remove(RingItem *item)$/;"	f
rndx	ffmpeg/include/libavutil/fifo.h	/^    uint32_t rndx, wndx;$/;"	m	struct:AVFifoBuffer
ro_check	glib/spice-channel-priv.h	/^    gboolean              ro_check;$/;"	m	struct:_SpiceMsgOut
root_index	spice-common/spice-protocol/spice/stats.h	/^    uint32_t root_index;$/;"	m	struct:SpiceStat
rop3	spice-common/common/draw.h	/^    uint8_t rop3;$/;"	m	struct:SpiceRop3
rop3	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLRop3 rop3;$/;"	m	union:QXLCompatDrawable::__anon75
rop3	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLRop3 rop3;$/;"	m	union:QXLDrawable::__anon76
rop3	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t rop3;$/;"	m	struct:QXLRop3
rop3_init	spice-common/common/rop3.c	/^void rop3_init(void)$/;"	f
rop3_test_handler_t	spice-common/common/rop3.c	/^typedef void (*rop3_test_handler_t)(void);$/;"	t	file:
rop3_test_handlers_16	spice-common/common/rop3.c	/^static rop3_test_handler_t rop3_test_handlers_16[ROP3_NUM_OPS];$/;"	v	file:
rop3_test_handlers_32	spice-common/common/rop3.c	/^static rop3_test_handler_t rop3_test_handlers_32[ROP3_NUM_OPS];$/;"	v	file:
rop3_with_color_handler_t	spice-common/common/rop3.c	/^typedef void (*rop3_with_color_handler_t)(pixman_image_t *d, pixman_image_t *s,$/;"	t	file:
rop3_with_color_handlers_16	spice-common/common/rop3.c	/^static rop3_with_color_handler_t rop3_with_color_handlers_16[ROP3_NUM_OPS];$/;"	v	file:
rop3_with_color_handlers_32	spice-common/common/rop3.c	/^static rop3_with_color_handler_t rop3_with_color_handlers_32[ROP3_NUM_OPS];$/;"	v	file:
rop3_with_pattern_handler_t	spice-common/common/rop3.c	/^typedef void (*rop3_with_pattern_handler_t)(pixman_image_t *d, pixman_image_t *s,$/;"	t	file:
rop3_with_pattern_handlers_16	spice-common/common/rop3.c	/^static rop3_with_pattern_handler_t rop3_with_pattern_handlers_16[ROP3_NUM_OPS];$/;"	v	file:
rop3_with_pattern_handlers_32	spice-common/common/rop3.c	/^static rop3_with_pattern_handler_t rop3_with_pattern_handlers_32[ROP3_NUM_OPS];$/;"	v	file:
rop_descriptor	spice-common/common/draw.h	/^    uint16_t rop_descriptor;$/;"	m	struct:SpiceCopy
rop_descriptor	spice-common/common/draw.h	/^    uint16_t rop_descriptor;$/;"	m	struct:SpiceFill
rop_descriptor	spice-common/common/draw.h	/^    uint16_t rop_descriptor;$/;"	m	struct:SpiceOpaque
rop_descriptor	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t rop_descriptor;$/;"	m	struct:QXLCopy
rop_descriptor	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t rop_descriptor;$/;"	m	struct:QXLFill
rop_descriptor	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t rop_descriptor;$/;"	m	struct:QXLOpaque
ropd_descriptor_to_rop	spice-common/common/canvas_base.c	/^static SpiceROP ropd_descriptor_to_rop(int desc,$/;"	f	file:
rows_completed	spice-common/common/quic.c	/^    int rows_completed;$/;"	m	struct:Encoder	file:
rptr	ffmpeg/include/libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
rtp_callback	ffmpeg/include/libavcodec/avcodec.h	/^    void (*rtp_callback)(struct AVCodecContext *avctx, void *data, int size, int mb_nb);$/;"	m	struct:AVCodecContext
rtp_payload_size	ffmpeg/include/libavcodec/avcodec.h	/^    int rtp_payload_size;   \/* The size of the RTP payload: the coder will  *\/$/;"	m	struct:AVCodecContext
runnable	glib/coroutine.h	/^	gboolean runnable;$/;"	m	struct:coroutine
s	ffmpeg/include/libavutil/blowfish.h	/^    uint32_t s[4][256];$/;"	m	struct:AVBlowfish
s_bucket	spice-common/common/quic.c	/^typedef struct s_bucket {$/;"	s	file:
s_bucket	spice-common/common/quic.c	/^} s_bucket;$/;"	t	typeref:struct:s_bucket	file:
s_pix_fmt	glib/h264_type.h	/^    enum AVPixelFormat s_pix_fmt;$/;"	m	struct:_H264StreamInfo	typeref:enum:_H264StreamInfo::AVPixelFormat
saddr	glib/win-usb-dev.c	/^    gchar saddr[4];$/;"	m	struct:_GUdevDeviceInfo	file:
sample_aspect_ratio	ffmpeg/include/libavcodec/avcodec.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVCodecContext
sample_aspect_ratio	ffmpeg/include/libavfilter/avfilter.h	/^    AVRational sample_aspect_ratio; \/\/\/< agreed upon sample aspect ratio$/;"	m	struct:AVFilterLink
sample_aspect_ratio	ffmpeg/include/libavfilter/avfilter.h	/^    AVRational sample_aspect_ratio; \/\/\/< sample aspect ratio$/;"	m	struct:AVFilterBufferRefVideoProps
sample_aspect_ratio	ffmpeg/include/libavformat/avformat.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVStream
sample_aspect_ratio	ffmpeg/include/libavutil/frame.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVFrame
sample_fmt	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVSampleFormat sample_fmt;  \/\/\/< sample format$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVSampleFormat
sample_fmts	ffmpeg/include/libavcodec/avcodec.h	/^    const enum AVSampleFormat *sample_fmts; \/\/\/< array of supported sample formats, or NULL if unknown, array is terminated by -1$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVSampleFormat
sample_fmts	ffmpeg/include/libavfilter/buffersink.h	/^    const enum AVSampleFormat *sample_fmts; \/\/\/< list of allowed sample formats, terminated by AV_SAMPLE_FMT_NONE$/;"	m	struct:__anon31	typeref:enum:__anon31::AVSampleFormat
sample_format	ffmpeg/include/libavdevice/avdevice.h	/^    enum AVSampleFormat sample_format;$/;"	m	struct:AVDeviceCapabilitiesQuery	typeref:enum:AVDeviceCapabilitiesQuery::AVSampleFormat
sample_rate	ffmpeg/include/libavcodec/avcodec.h	/^    int sample_rate; \/\/\/< samples per second$/;"	m	struct:AVCodecContext
sample_rate	ffmpeg/include/libavdevice/avdevice.h	/^    int sample_rate;$/;"	m	struct:AVDeviceCapabilitiesQuery
sample_rate	ffmpeg/include/libavfilter/avfilter.h	/^    int sample_rate;            \/\/\/< audio buffer sample rate$/;"	m	struct:AVFilterBufferRefAudioProps
sample_rate	ffmpeg/include/libavfilter/avfilter.h	/^    int sample_rate;            \/\/\/< samples per second$/;"	m	struct:AVFilterLink
sample_rate	ffmpeg/include/libavutil/frame.h	/^    int sample_rate;$/;"	m	struct:AVFrame
sample_rates	ffmpeg/include/libavfilter/buffersink.h	/^    int *sample_rates;                      \/\/\/< list of allowed sample rates, terminated by -1$/;"	m	struct:__anon31
sar	ffmpeg/include/libavcodec/dv_profile.h	/^    AVRational       sar[2];                \/* sample aspect ratios for 4:3 and 16:9 *\/$/;"	m	struct:AVDVProfile
sasl_conn	glib/spice-channel-priv.h	/^    sasl_conn_t                 *sasl_conn;$/;"	m	struct:_SpiceChannelPrivate
sasl_decoded	glib/spice-channel-priv.h	/^    const char                  *sasl_decoded;$/;"	m	struct:_SpiceChannelPrivate
sasl_decoded_length	glib/spice-channel-priv.h	/^    unsigned int                sasl_decoded_length;$/;"	m	struct:_SpiceChannelPrivate
sasl_decoded_offset	glib/spice-channel-priv.h	/^    unsigned int                sasl_decoded_offset;$/;"	m	struct:_SpiceChannelPrivate
sbus	glib/win-usb-dev.c	/^    gchar sbus[4];$/;"	m	struct:_GUdevDeviceInfo	file:
scale	spice-common/common/glc.c	/^static void scale(uint32_t *dest, uint32_t dest_width, uint32_t dest_height,$/;"	f	file:
scale_image	spice-common/common/canvas_base.h	/^    void (*scale_image)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
scale_image	spice-common/common/sw_canvas.c	/^static void scale_image(SpiceCanvas *spice_canvas,$/;"	f	file:
scale_image_from_surface	spice-common/common/canvas_base.h	/^    void (*scale_image_from_surface)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
scale_image_from_surface	spice-common/common/sw_canvas.c	/^static void scale_image_from_surface(SpiceCanvas *spice_canvas,$/;"	f	file:
scale_image_rop	spice-common/common/canvas_base.h	/^    void (*scale_image_rop)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
scale_image_rop	spice-common/common/sw_canvas.c	/^static void scale_image_rop(SpiceCanvas *spice_canvas,$/;"	f	file:
scale_image_rop_from_surface	spice-common/common/canvas_base.h	/^    void (*scale_image_rop_from_surface)(SpiceCanvas *canvas,$/;"	m	struct:__anon145
scale_image_rop_from_surface	spice-common/common/sw_canvas.c	/^static void scale_image_rop_from_surface(SpiceCanvas *spice_canvas,$/;"	f	file:
scale_mode	spice-common/common/draw.h	/^    uint8_t scale_mode;$/;"	m	struct:SpiceCopy
scale_mode	spice-common/common/draw.h	/^    uint8_t scale_mode;$/;"	m	struct:SpiceOpaque
scale_mode	spice-common/common/draw.h	/^    uint8_t scale_mode;$/;"	m	struct:SpiceRop3
scale_mode	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t scale_mode;$/;"	m	struct:QXLCopy
scale_mode	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t scale_mode;$/;"	m	struct:QXLOpaque
scale_mode	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t scale_mode;$/;"	m	struct:QXLRop3
scale_sws_opts	ffmpeg/include/libavfilter/avfilter.h	/^    char *scale_sws_opts; \/\/\/< sws options to use for the auto-inserted scale filters$/;"	m	struct:AVFilterGraph
scenechange_factor	ffmpeg/include/libavcodec/avcodec.h	/^    attribute_deprecated int scenechange_factor;$/;"	m	struct:AVCodecContext
scenechange_threshold	ffmpeg/include/libavcodec/avcodec.h	/^    int scenechange_threshold;$/;"	m	struct:AVCodecContext
scheme	glib/spice-uri.c	/^    gchar *scheme;$/;"	m	struct:_SpiceURI	file:
sclass	glib/win-usb-dev.c	/^    gchar sclass[4];$/;"	m	struct:_GUdevDeviceInfo	file:
screem	win32/win32-spice-widget-priv.h	/^    struct SPICE_Invalidate screem;$/;"	m	struct:_SpiceDisplayPrivate	typeref:struct:_SpiceDisplayPrivate::SPICE_Invalidate
secure_channels	glib/spice-option.c	/^static gchar *secure_channels = NULL;$/;"	v	file:
secure_channels	glib/spice-session-priv.h	/^    GStrv             secure_channels;$/;"	m	struct:_SpiceSessionPrivate
seek	ffmpeg/include/libavformat/avio.h	/^    int64_t (*seek)(void *opaque, int64_t offset, int whence);$/;"	m	struct:AVIOContext
seek2any	ffmpeg/include/libavformat/avformat.h	/^    int seek2any;$/;"	m	struct:AVFormatContext
seek_count	ffmpeg/include/libavformat/avio.h	/^    int seek_count;$/;"	m	struct:AVIOContext
seek_preroll	ffmpeg/include/libavcodec/avcodec.h	/^    int seek_preroll;$/;"	m	struct:AVCodecContext
seekable	ffmpeg/include/libavformat/avio.h	/^    int seekable;$/;"	m	struct:AVIOContext
segments	spice-common/common/draw.h	/^  SpicePathSeg *segments[0];$/;"	m	struct:SpicePath
segments	spice-common/common/glc.c	/^    PathSegment *segments;$/;"	m	struct:InternalPath	file:
segments_pos	spice-common/common/glc.c	/^    int segments_pos;$/;"	m	struct:InternalPath	file:
segments_size	spice-common/common/glc.c	/^    int segments_size;$/;"	m	struct:InternalPath	file:
self	glib/channel-webdav.c	/^    SpiceWebdavChannel *self;$/;"	m	struct:Client	file:
self	glib/gio-coroutine.c	/^    GCoroutine *self;$/;"	m	struct:_GConditionWaitSource	file:
self	glib/usb-device-manager.c	/^    SpiceUsbDeviceManager *self;$/;"	m	struct:hotplug_idle_cb_args	file:
self_bitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t self_bitmap;$/;"	m	struct:QXLDrawable
self_bitmap_area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect self_bitmap_area;$/;"	m	struct:QXLDrawable
send_key	win32/win32-spice-widget.c	/^void send_key(SpiceDisplay *display, int scancode, int down)$/;"	f
send_motion	glib/channel-inputs.c	/^static void send_motion(SpiceInputsChannel *channel)$/;"	f	file:
send_msg_atr	glib/channel-smartcard.c	/^static void send_msg_atr(SpiceSmartcardChannel *channel, VReader *reader)$/;"	f	file:
send_msg_generic	glib/channel-smartcard.c	/^static void send_msg_generic(SpiceSmartcardChannel *channel, VReader *reader,$/;"	f	file:
send_msg_generic_with_data	glib/channel-smartcard.c	/^send_msg_generic_with_data(SpiceSmartcardChannel *channel, VReader *reader,$/;"	f	file:
send_position	glib/channel-inputs.c	/^static void send_position(SpiceInputsChannel *channel)$/;"	f	file:
serial	spice-common/spice-protocol/spice/protocol.h	/^    uint64_t serial;$/;"	m	struct:SpiceDataHeader
server_reply_cb	glib/channel-webdav.c	/^static void server_reply_cb(GObject *source_object,$/;"	f	file:
service_id	spice-common/common/messages.h	/^    uint32_t service_id;$/;"	m	struct:SpiceMsgTunnelServiceIpMap
service_id	spice-common/common/messages.h	/^    uint32_t service_id;$/;"	m	struct:SpiceMsgTunnelSocketOpen
session	ffmpeg/include/libavcodec/qsv.h	/^    mfxSession session;$/;"	m	struct:AVQSVContext
session	ffmpeg/include/libavcodec/videotoolbox.h	/^    VTDecompressionSessionRef session;$/;"	m	struct:AVVideotoolboxContext
session	glib/channel-main.c	/^    SpiceSession *session;$/;"	m	struct:channel_new	file:
session	glib/channel-main.c	/^    SpiceSession *session;$/;"	m	struct:spice_migrate	file:
session	glib/smartcard-manager.c	/^    SpiceSession *session;$/;"	m	struct:__anon22	file:
session	glib/spice-audio-priv.h	/^    SpiceSession            *session;$/;"	m	struct:_SpiceAudioPrivate
session	glib/spice-channel-priv.h	/^    SpiceSession                *session;$/;"	m	struct:_SpiceChannelPrivate
session	glib/spice-session.c	/^    SpiceSession *session;$/;"	m	struct:spice_open_host	file:
session	glib/usb-device-manager.c	/^    SpiceSession *session;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
session	win32/win32-spice-widget-priv.h	/^    SpiceSession            *session;$/;"	m	struct:_SpiceDisplayPrivate
session	win32/win32-spicy.h	/^    SpiceSession     *session;$/;"	m	struct:spice_connection
session_enable_audio	glib/spice-audio.c	/^static void session_enable_audio(GObject *gobject, GParamSpec *pspec,$/;"	f	file:
session_id	spice-common/common/messages.h	/^    uint32_t session_id;$/;"	m	struct:SpiceMsgMainInit
set	spice-common/spice-protocol/spice/qxl_dev.h	/^        } set;$/;"	m	union:QXLCursorCmd::__anon70	typeref:struct:QXLCursorCmd::__anon70::SPICE_ATTR_PACKED
setKeepAlive	glib/spice-channel.c	/^static void setKeepAlive(SpiceChannel *channel, int iSockfd , socklen_t iIdleTime , socklen_t iInterval , socklen_t iCount )$/;"	f	file:
set_agent_connected	glib/channel-main.c	/^static void set_agent_connected(SpiceMainChannel *channel, gboolean connected)$/;"	f	file:
set_brush	spice-common/common/gdi_canvas.c	/^static HBRUSH set_brush(HDC dc, HBRUSH hbrush, SpiceBrush *brush)$/;"	f	file:
set_brush	spice-common/common/gl_canvas.c	/^static void set_brush(GLCanvas *canvas, SpiceBrush *brush)$/;"	f	file:
set_capability	glib/spice-channel.c	/^static void set_capability(GArray *caps, guint32 cap)$/;"	f	file:
set_clip	spice-common/common/gdi_canvas.c	/^static void set_clip(GdiCanvas *canvas, SpiceClip *clip)$/;"	f	file:
set_clip	spice-common/common/gl_canvas.c	/^static void set_clip(GLCanvas *canvas, SpiceRect *bbox, SpiceClip *clip)$/;"	f	file:
set_cursor	glib/channel-cursor.c	/^static display_cursor *set_cursor(SpiceChannel *channel, SpiceCursor *scursor)$/;"	f	file:
set_handlers	glib/channel-base.c	/^static void set_handlers(SpiceChannelClass *klass,$/;"	f	file:
set_is_generated	spice-common/python_modules/codegen.py	/^    def set_is_generated(self, kind, name):$/;"	m	class:CodeWriter
set_key_locks	glib/channel-inputs.c	/^static SpiceMsgOut* set_key_locks(SpiceInputsChannel *channel, guint locks)$/;"	f	file:
set_mask	spice-common/common/gl_canvas.c	/^static void set_mask(GLCanvas *canvas, SpiceQMask *mask, int x, int y)$/;"	f	file:
set_mouse_mode	glib/channel-main.c	/^static void set_mouse_mode(SpiceMainChannel *channel, uint32_t supported, uint32_t current)$/;"	f	file:
set_op	spice-common/common/gl_canvas.c	/^static void set_op(GLCanvas *canvas, uint16_t rop_decriptor)$/;"	f	file:
set_option	spice-common/python_modules/codegen.py	/^    def set_option(self, opt, value = True):$/;"	m	class:CodeWriter
set_pat	spice-common/common/glc.c	/^static void set_pat(InternaCtx *ctx, InternalPat *pat)$/;"	f	file:
set_path	spice-common/common/gdi_canvas.c	/^static void set_path(GdiCanvas *canvas, SpicePath *s)$/;"	f	file:
set_prefix	spice-common/python_modules/codegen.py	/^def set_prefix(prefix):$/;"	f
set_ptr_size	spice-common/python_modules/ptypes.py	/^    def set_ptr_size(self, new_size):$/;"	m	class:PointerType
set_raster_pos	spice-common/common/glc.c	/^static inline void set_raster_pos(InternaCtx *ctx, int x, int y)$/;"	f	file:
set_scale_mode	spice-common/common/gdi_canvas.c	/^static void set_scale_mode(GdiCanvas *canvas, uint8_t scale_mode)$/;"	f	file:
set_wm_trigger	spice-common/common/quic.c	/^static void set_wm_trigger(CommonState *state)$/;"	f	file:
settingchanges	examples/test_bmp.c	/^void* settingchanges(void * ctx,void* ud)$/;"	f
severity	spice-common/common/messages.h	/^    uint32_t severity;$/;"	m	struct:SpiceMsgNotify
sh	win32/win32_spice_interface.c	/^    SPICE_HANDLE sh;$/;"	m	struct:SpiceConnectARGS	file:
sh	win32/win32_spice_interface.c	/^    SPICE_HANDLE sh;$/;"	m	struct:smain_thread	file:
shape	spice-common/spice-protocol/spice/qxl_dev.h	/^            QXLPHYSICAL shape;$/;"	m	struct:QXLCursorCmd::__anon70::SPICE_ATTR_PACKED
shared_dir	glib/spice-option.c	/^static gchar *shared_dir = NULL;$/;"	v	file:
shared_dir	glib/spice-session-priv.h	/^    gchar             *shared_dir;$/;"	m	struct:_SpiceSessionPrivate
shift	ffmpeg/include/libavutil/pixdesc.h	/^    uint16_t shift        : 3;$/;"	m	struct:AVComponentDescriptor
shmid	glib/channel-display-priv.h	/^    int                         shmid;$/;"	m	struct:display_surface
shmid	glib/channel-display.h	/^    gint shmid;$/;"	m	struct:_SpiceDisplayPrimary
shmid	win32/win32-spice-widget-priv.h	/^    gint                    shmid;$/;"	m	struct:_SpiceDisplayPrivate
shminfo	win32/win32-spice-widget-priv.h	/^    XShmSegmentInfo         *shminfo;$/;"	m	struct:_SpiceDisplayPrivate
short_seek_threshold	ffmpeg/include/libavformat/avio.h	/^    int short_seek_threshold;$/;"	m	struct:AVIOContext
side_data	ffmpeg/include/libavcodec/avcodec.h	/^    AVPacketSideData *side_data;$/;"	m	struct:AVPacket
side_data	ffmpeg/include/libavformat/avformat.h	/^    AVPacketSideData *side_data;$/;"	m	struct:AVStream
side_data	ffmpeg/include/libavutil/frame.h	/^    AVFrameSideData **side_data;$/;"	m	struct:AVFrame
side_data_elems	ffmpeg/include/libavcodec/avcodec.h	/^    int side_data_elems;$/;"	m	struct:AVPacket
side_data_only_packets	ffmpeg/include/libavcodec/avcodec.h	/^    int side_data_only_packets;$/;"	m	struct:AVCodecContext
signal_data	glib/gio-coroutine.c	/^struct signal_data$/;"	s	file:
signal_id	glib/gio-coroutine.c	/^    guint signal_id;$/;"	m	struct:signal_data	file:
signals	glib/channel-cursor.c	/^static guint signals[SPICE_CURSOR_LAST_SIGNAL];$/;"	v	file:
signals	glib/channel-display.c	/^static guint signals[SPICE_DISPLAY_LAST_SIGNAL];$/;"	v	file:
signals	glib/channel-inputs.c	/^static guint signals[SPICE_INPUTS_LAST_SIGNAL];$/;"	v	file:
signals	glib/channel-main.c	/^static guint signals[SPICE_MAIN_LAST_SIGNAL];$/;"	v	file:
signals	glib/channel-playback.c	/^static guint signals[SPICE_PLAYBACK_LAST_SIGNAL];$/;"	v	file:
signals	glib/channel-port.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	glib/channel-record.c	/^static guint signals[SPICE_RECORD_LAST_SIGNAL];$/;"	v	file:
signals	glib/smartcard-manager.c	/^static guint signals[SPICE_SMARTCARD_MANAGER_LAST_SIGNAL];$/;"	v	file:
signals	glib/spice-channel.c	/^static guint signals[SPICE_CHANNEL_LAST_SIGNAL];$/;"	v	file:
signals	glib/spice-session.c	/^static guint signals[SPICE_SESSION_LAST_SIGNAL];$/;"	v	file:
signals	glib/usb-device-manager.c	/^static guint signals[LAST_SIGNAL] = { 0, };$/;"	v	file:
signals	glib/win-usb-dev.c	/^static guint signals[LAST_SIGNAL] = { 0, };$/;"	v	file:
signdx	spice-common/common/lines.c	/^    int signdx;                 \/* variable dx sign *\/$/;"	m	struct:_PolyEdge	file:
simple	glib/wocky-http-proxy.c	/^  GSimpleAsyncResult *simple;$/;"	m	struct:__anon7	file:
singleton	glib/win-usb-dev.c	/^static GUdevClient *singleton = NULL;$/;"	v	file:
sink_links	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterLink **sink_links;$/;"	m	struct:AVFilterGraph
sink_links_count	ffmpeg/include/libavfilter/avfilter.h	/^    int sink_links_count;$/;"	m	struct:AVFilterGraph
size	ffmpeg/include/libavcodec/avcodec.h	/^    int      size;$/;"	m	struct:AVPacketSideData
size	ffmpeg/include/libavcodec/avcodec.h	/^    int   size;$/;"	m	struct:AVPacket
size	ffmpeg/include/libavformat/avformat.h	/^    int size:30; \/\/Yeah, trying to keep the size of this small to reduce memory requirements (it is 24 vs. 32 bytes due to possible 8-byte alignment).$/;"	m	struct:AVIndexEntry
size	ffmpeg/include/libavformat/avio.h	/^    int64_t size;                         \/**< File size in bytes, -1 if unknown. *\/$/;"	m	struct:AVIODirEntry
size	ffmpeg/include/libavutil/buffer.h	/^    int      size;$/;"	m	struct:AVBufferRef
size	ffmpeg/include/libavutil/frame.h	/^    int      size;$/;"	m	struct:AVFrameSideData
size	glib/channel-display-priv.h	/^    int                         width, height, stride, size;$/;"	m	struct:display_surface
size	glib/channel-webdav.c	/^        guint16 size;$/;"	m	struct:Client::_mux	file:
size	glib/channel-webdav.c	/^        guint16 size;$/;"	m	struct:_SpiceWebdavChannelPrivate::_demux	file:
size	glib/channel-webdav.c	/^    gsize size;$/;"	m	struct:_OutputQueueElem	file:
size	glib/win-usb-clerk.h	/^    UINT16 size;$/;"	m	struct:USBClerkHeader
size	spice-common/common/canvas_base.c	/^    int size;$/;"	m	struct:__anon123	file:
size	spice-common/common/lines.c	/^    int size;                   \/* Total number of *Spans allocated     *\/$/;"	m	struct:__anon148	file:
size	spice-common/spice-protocol/spice/controller_prot.h	/^    uint32_t size;$/;"	m	struct:ControllerInitHeader
size	spice-common/spice-protocol/spice/controller_prot.h	/^    uint32_t size;$/;"	m	struct:ControllerMsg
size	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t size;$/;"	m	struct:FrgMenuInitHeader
size	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t size;$/;"	m	struct:FrgMenuMsg
size	spice-common/spice-protocol/spice/protocol.h	/^    uint16_t size;$/;"	m	struct:SpiceSubMessageList
size	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t size;$/;"	m	struct:SpiceDataHeader
size	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t size;$/;"	m	struct:SpiceLinkHeader
size	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t size;$/;"	m	struct:SpiceMiniDataHeader
size	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t size;$/;"	m	struct:SpiceSubMessage
size	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t size;$/;"	m	struct:VDAgentMessage
size	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t size;$/;"	m	struct:VDIChunkHeader
size	spice-common/spice-protocol/spice/vd_agent.h	/^   uint64_t size;$/;"	m	struct:VDAgentFileXferDataMessage
size	spice-common/spice-protocol/spice/vdi_dev.h	/^    uint32_t size;$/;"	m	struct:VDIPortPacket
size_delta	spice-common/common/lz.c	/^    unsigned int size_delta;    \/\/ total size of the previous segments in units of$/;"	m	struct:LzImageSegment	file:
size_read_cb	glib/channel-webdav.c	/^static void size_read_cb(GObject *source_object,$/;"	f	file:
sizeof	spice-common/python_modules/ptypes.py	/^    def sizeof(self):$/;"	m	class:ArrayType
sizeof	spice-common/python_modules/ptypes.py	/^    def sizeof(self):$/;"	m	class:Member
sizeof	spice-common/python_modules/ptypes.py	/^    def sizeof(self):$/;"	m	class:Switch
sizeof	spice-common/python_modules/ptypes.py	/^    def sizeof(self):$/;"	m	class:Type
skip_alpha	ffmpeg/include/libavcodec/avcodec.h	/^    int skip_alpha;$/;"	m	struct:AVCodecContext
skip_bottom	ffmpeg/include/libavcodec/avcodec.h	/^    int skip_bottom;$/;"	m	struct:AVCodecContext
skip_count	ffmpeg/include/libavcodec/avcodec.h	/^    int skip_count;$/;"	m	struct:AVCodecContext
skip_frame	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVDiscard skip_frame;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_idct	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVDiscard skip_idct;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_initial_bytes	ffmpeg/include/libavformat/avformat.h	/^    int64_t skip_initial_bytes;$/;"	m	struct:AVFormatContext
skip_loop_filter	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVDiscard skip_loop_filter;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_samples	ffmpeg/include/libavformat/avformat.h	/^    int skip_samples;$/;"	m	struct:AVStream
skip_to_keyframe	ffmpeg/include/libavformat/avformat.h	/^    int skip_to_keyframe;$/;"	m	struct:AVStream
skip_top	ffmpeg/include/libavcodec/avcodec.h	/^    int skip_top;$/;"	m	struct:AVCodecContext
slice_buf_ids	ffmpeg/include/libavcodec/vaapi.h	/^    uint32_t *slice_buf_ids;$/;"	m	struct:vaapi_context
slice_buf_ids_alloc	ffmpeg/include/libavcodec/vaapi.h	/^    unsigned int slice_buf_ids_alloc;$/;"	m	struct:vaapi_context
slice_count	ffmpeg/include/libavcodec/avcodec.h	/^    int slice_count;$/;"	m	struct:AVCodecContext
slice_count	ffmpeg/include/libavcodec/vaapi.h	/^    unsigned int slice_count;$/;"	m	struct:vaapi_context
slice_data	ffmpeg/include/libavcodec/vaapi.h	/^    const uint8_t *slice_data;$/;"	m	struct:vaapi_context
slice_data_size	ffmpeg/include/libavcodec/vaapi.h	/^    uint32_t slice_data_size;$/;"	m	struct:vaapi_context
slice_flags	ffmpeg/include/libavcodec/avcodec.h	/^    int slice_flags;$/;"	m	struct:AVCodecContext
slice_offset	ffmpeg/include/libavcodec/avcodec.h	/^    int *slice_offset;$/;"	m	struct:AVCodecContext
slice_param_size	ffmpeg/include/libavcodec/vaapi.h	/^    unsigned int slice_param_size;$/;"	m	struct:vaapi_context
slice_params	ffmpeg/include/libavcodec/vaapi.h	/^    void *slice_params;$/;"	m	struct:vaapi_context
slice_params_alloc	ffmpeg/include/libavcodec/vaapi.h	/^    unsigned int slice_params_alloc;$/;"	m	struct:vaapi_context
slices	ffmpeg/include/libavcodec/avcodec.h	/^    int slices;$/;"	m	struct:AVCodecContext
slot_gen_bits	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t slot_gen_bits;$/;"	m	struct:QXLRom
slot_generation	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t slot_generation;$/;"	m	struct:QXLRom
slot_id_bits	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t slot_id_bits;$/;"	m	struct:QXLRom
slots_end	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t slots_end;$/;"	m	struct:QXLRom
slots_start	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t slots_start;$/;"	m	struct:QXLRom
slow_region_test	spice-common/common/region.c	/^static int slow_region_test(const QRegion *rgn, const QRegion *other_rgn, int query)$/;"	f	file:
smain_thread	win32/win32_spice_interface.c	/^struct smain_thread$/;"	s	file:
smallUpdateBitmap	win32/win32_io.c	/^void smallUpdateBitmap (SpiceDisplay* display,char* bitmap, gint x, gint y, gint width, gint height)$/;"	f
smartcard	glib/spice-option.c	/^static gboolean smartcard = FALSE;$/;"	v	file:
smartcard	glib/spice-session-priv.h	/^    gboolean          smartcard;$/;"	m	struct:_SpiceSessionPrivate
smartcard	win32/win32-spice-widget-priv.h	/^    SpiceSmartcardChannel   *smartcard;$/;"	m	struct:_SpiceDisplayPrivate
smartcard_certificates	glib/spice-option.c	/^static char *smartcard_certificates = NULL;$/;"	v	file:
smartcard_certificates	glib/spice-session-priv.h	/^    GStrv             smartcard_certificates;$/;"	m	struct:_SpiceSessionPrivate
smartcard_db	glib/spice-option.c	/^static char *smartcard_db = NULL;$/;"	v	file:
smartcard_db	glib/spice-session-priv.h	/^    char *            smartcard_db;$/;"	m	struct:_SpiceSessionPrivate
smartcard_manager_init	glib/smartcard-manager.c	/^static gboolean smartcard_manager_init(SmartcardManagerInitArgs *args)$/;"	f	file:
smartcard_manager_init_helper	glib/smartcard-manager.c	/^static void smartcard_manager_init_helper(GSimpleAsyncResult *res,$/;"	f	file:
smartcard_message_complete_in_flight	glib/channel-smartcard.c	/^smartcard_message_complete_in_flight(SpiceSmartcardChannel *channel)$/;"	f	file:
smartcard_message_free	glib/channel-smartcard.c	/^smartcard_message_free(SpiceSmartcardChannelMessage *message)$/;"	f	file:
smartcard_message_new	glib/channel-smartcard.c	/^smartcard_message_new(VSCMsgType msg_type, SpiceMsgOut *msg_out)$/;"	f	file:
smartcard_message_send	glib/channel-smartcard.c	/^static void smartcard_message_send(SpiceSmartcardChannel *channel,$/;"	f	file:
smartcard_monitor_add	glib/smartcard-manager.c	/^static guint smartcard_monitor_add(SmartcardSourceFunc callback,$/;"	f	file:
smartcard_monitor_dispatch	glib/smartcard-manager.c	/^static gboolean smartcard_monitor_dispatch(VEvent *event, gpointer user_data)$/;"	f	file:
smartcard_monitor_source_new	glib/smartcard-manager.c	/^static GSource *smartcard_monitor_source_new(void)$/;"	f	file:
smartcard_source_check	glib/smartcard-manager.c	/^static gboolean smartcard_source_check(GSource *source)$/;"	f	file:
smartcard_source_dispatch	glib/smartcard-manager.c	/^static gboolean smartcard_source_dispatch(GSource *source,$/;"	f	file:
smartcard_source_finalize	glib/smartcard-manager.c	/^static void smartcard_source_finalize(GSource *source)$/;"	f	file:
smartcard_source_prepare	glib/smartcard-manager.c	/^static gboolean smartcard_source_prepare(GSource *source, gint *timeout)$/;"	f	file:
snd_codec_create	spice-common/common/snd_codec.c	/^int snd_codec_create(SndCodec *codec, int mode, int frequency, int purpose)$/;"	f
snd_codec_create_celt051	spice-common/common/snd_codec.c	/^static int snd_codec_create_celt051(SndCodecInternal *codec, int purpose)$/;"	f	file:
snd_codec_create_opus	spice-common/common/snd_codec.c	/^static int snd_codec_create_opus(SndCodecInternal *codec, int purpose)$/;"	f	file:
snd_codec_decode	spice-common/common/snd_codec.c	/^int snd_codec_decode(SndCodec codec, uint8_t *in_ptr, int in_size, uint8_t *out_ptr, int *out_size)$/;"	f
snd_codec_decode_celt051	spice-common/common/snd_codec.c	/^static int snd_codec_decode_celt051(SndCodecInternal *codec, uint8_t *in_ptr, int in_size, uint8_t *out_ptr, int *out_size)$/;"	f	file:
snd_codec_decode_opus	spice-common/common/snd_codec.c	/^static int snd_codec_decode_opus(SndCodecInternal *codec, uint8_t *in_ptr, int in_size, uint8_t *out_ptr, int *out_size)$/;"	f	file:
snd_codec_destroy	spice-common/common/snd_codec.c	/^void snd_codec_destroy(SndCodec *codec)$/;"	f
snd_codec_destroy_celt051	spice-common/common/snd_codec.c	/^static void snd_codec_destroy_celt051(SndCodecInternal *codec)$/;"	f	file:
snd_codec_destroy_opus	spice-common/common/snd_codec.c	/^static void snd_codec_destroy_opus(SndCodecInternal *codec)$/;"	f	file:
snd_codec_encode	spice-common/common/snd_codec.c	/^int snd_codec_encode(SndCodec codec, uint8_t *in_ptr, int in_size, uint8_t *out_ptr, int *out_size)$/;"	f
snd_codec_encode_celt051	spice-common/common/snd_codec.c	/^static int snd_codec_encode_celt051(SndCodecInternal *codec, uint8_t *in_ptr, int in_size, uint8_t *out_ptr, int *out_size)$/;"	f	file:
snd_codec_encode_opus	spice-common/common/snd_codec.c	/^static int snd_codec_encode_opus(SndCodecInternal *codec, uint8_t *in_ptr, int in_size, uint8_t *out_ptr, int *out_size)$/;"	f	file:
snd_codec_frame_size	spice-common/common/snd_codec.c	/^int snd_codec_frame_size(SndCodec codec)$/;"	f
snd_codec_is_capable	spice-common/common/snd_codec.c	/^int snd_codec_is_capable(int mode, int frequency)$/;"	f
sock	glib/spice-channel-priv.h	/^    GSocket                     *sock;$/;"	m	struct:_SpiceChannelPrivate
socket_client_connect_ready	glib/spice-session.c	/^static void socket_client_connect_ready(GObject *source_object, GAsyncResult *result,$/;"	f	file:
software_reader	glib/smartcard-manager.c	/^    VReader *software_reader;$/;"	m	struct:_SpiceSmartcardManagerPrivate	file:
solid	spice-common/common/canvas_base.c	/^    int solid;$/;"	m	struct:__anon121	file:
solid_rop_16_func_t	spice-common/common/pixman_utils.c	/^typedef void (*solid_rop_16_func_t)(uint16_t *ptr, int len, uint16_t src);$/;"	t	file:
solid_rop_32_func_t	spice-common/common/pixman_utils.c	/^typedef void (*solid_rop_32_func_t)(uint32_t *ptr, int len, uint32_t src);$/;"	t	file:
solid_rop_8_func_t	spice-common/common/pixman_utils.c	/^typedef void (*solid_rop_8_func_t)(uint8_t *ptr, int len, uint8_t src);$/;"	t	file:
sound	win32/win32_spice_interface.c	/^    bool sound;$/;"	m	struct:SpiceConnectARGS	file:
source	ffmpeg/include/libavutil/motion_vector.h	/^    int32_t source;$/;"	m	struct:AVMotionVector
spatial_cplx_masking	ffmpeg/include/libavcodec/avcodec.h	/^    float spatial_cplx_masking;$/;"	m	struct:AVCodecContext
spec	glib/spice-pulse.c	/^    pa_sample_spec          spec;$/;"	m	struct:stream	file:
spice	win32/win32-spicy.h	/^    SpiceDisplay      *spice;$/;"	m	struct:_SpiceWindow
spiceClientConnect	win32/win32_service.c	/^int spiceClientConnect (spice_connection *conn,const gchar *h, const gchar *p, const gchar *tp,$/;"	f
spiceClientConnectVv	win32/win32_service.c	/^int spiceClientConnectVv (spice_connection *conn,VirtViewerFile *vv_file, const gboolean sound)$/;"	f
spice_abort	spice-common/common/spice_common.h	32;"	d
spice_abort	spice-common/common/spice_common.h	34;"	d
spice_assert	spice-common/common/log.h	135;"	d
spice_audio_class_init	glib/spice-audio.c	/^static void spice_audio_class_init(SpiceAudioClass *klass)$/;"	f	file:
spice_audio_finalize	glib/spice-audio.c	/^static void spice_audio_finalize(GObject *gobject)$/;"	f	file:
spice_audio_get	glib/spice-audio.c	/^SpiceAudio *spice_audio_get(SpiceSession *session, GMainContext *context)$/;"	f
spice_audio_get_property	glib/spice-audio.c	/^static void spice_audio_get_property(GObject *gobject,$/;"	f	file:
spice_audio_init	glib/spice-audio.c	/^static void spice_audio_init(SpiceAudio *self)$/;"	f	file:
spice_audio_new	glib/spice-audio.c	/^SpiceAudio *spice_audio_new(SpiceSession *session, GMainContext *context,$/;"	f
spice_audio_set_property	glib/spice-audio.c	/^static void spice_audio_set_property(GObject *gobject,$/;"	f	file:
spice_backtrace	spice-common/common/backtrace.c	/^void spice_backtrace(void)$/;"	f
spice_backtrace	spice-common/common/backtrace.h	27;"	d
spice_backtrace_backtrace	spice-common/common/backtrace.c	/^static void spice_backtrace_backtrace(void)$/;"	f	file:
spice_backtrace_gstack	spice-common/common/backtrace.c	/^static int spice_backtrace_gstack(void)$/;"	f	file:
spice_bit_find_msb	make/bitopscommon.h	/^static inline int spice_bit_find_msb(unsigned int val)$/;"	f
spice_bit_find_msb	make/wbitopscommon.h	/^static inline int spice_bit_find_msb(unsigned int val)$/;"	f
spice_bit_find_msb	spice-common/common/bitops.h	/^static inline int spice_bit_find_msb(unsigned int val)$/;"	f
spice_bit_next_pow2	make/bitopscommon.h	/^static inline int spice_bit_next_pow2(unsigned int val)$/;"	f
spice_bit_next_pow2	make/wbitopscommon.h	/^static inline int spice_bit_next_pow2(unsigned int val)$/;"	f
spice_bit_next_pow2	spice-common/common/bitops.h	/^static inline int spice_bit_next_pow2(unsigned int val)$/;"	f
spice_bitmap_convert_to_pixman	spice-common/common/pixman_utils.c	/^pixman_image_t *spice_bitmap_convert_to_pixman(pixman_format_code_t dest_format,$/;"	f
spice_bitmap_format_to_pixman	spice-common/common/pixman_utils.c	/^pixman_format_code_t spice_bitmap_format_to_pixman(int bitmap_format,$/;"	f
spice_bitmap_to_pixman	spice-common/common/pixman_utils.c	/^pixman_image_t *spice_bitmap_to_pixman(pixman_image_t *dest_image,$/;"	f
spice_bitmap_try_as_pixman	spice-common/common/pixman_utils.c	/^pixman_image_t *spice_bitmap_try_as_pixman(int src_format,$/;"	f
spice_buffer_append	spice-common/common/mem.c	/^void spice_buffer_append(SpiceBuffer *buffer, const void *data, size_t len)$/;"	f
spice_buffer_copy	spice-common/common/mem.c	/^size_t spice_buffer_copy(SpiceBuffer *buffer, void *dest, size_t len)$/;"	f
spice_buffer_empty	spice-common/common/mem.c	/^int spice_buffer_empty(SpiceBuffer *buffer)$/;"	f
spice_buffer_end	spice-common/common/mem.c	/^uint8_t *spice_buffer_end(SpiceBuffer *buffer)$/;"	f
spice_buffer_free	spice-common/common/mem.c	/^void spice_buffer_free(SpiceBuffer *buffer)$/;"	f
spice_buffer_remove	spice-common/common/mem.c	/^size_t spice_buffer_remove(SpiceBuffer *buffer, size_t len)$/;"	f
spice_buffer_reserve	spice-common/common/mem.c	/^void spice_buffer_reserve(SpiceBuffer *buffer, size_t len)$/;"	f
spice_buffer_reset	spice-common/common/mem.c	/^void spice_buffer_reset(SpiceBuffer *buffer)$/;"	f
spice_canvas_clip_spans	spice-common/common/lines.c	/^int spice_canvas_clip_spans(pixman_region32_t *prgnDst,$/;"	f
spice_canvas_get_usr_data	spice-common/common/canvas_base.c	/^void *spice_canvas_get_usr_data(SpiceCanvas *spice_canvas)$/;"	f
spice_canvas_set_usr_data	spice-common/common/canvas_base.c	/^void spice_canvas_set_usr_data(SpiceCanvas *spice_canvas,$/;"	f
spice_caps_set	glib/spice-channel.c	/^void spice_caps_set(GArray *caps, guint32 cap, const gchar *desc)$/;"	f
spice_channel_add_base_handlers	glib/channel-base.c	/^static void spice_channel_add_base_handlers(SpiceChannelClass *klass)$/;"	f	file:
spice_channel_class_init	glib/spice-channel.c	/^static void spice_channel_class_init(SpiceChannelClass *klass)$/;"	f	file:
spice_channel_connect	glib/spice-channel.c	/^gboolean spice_channel_connect(SpiceChannel *channel)$/;"	f
spice_channel_constructed	glib/spice-channel.c	/^static void spice_channel_constructed(GObject *gobject)$/;"	f	file:
spice_channel_coroutine	glib/spice-channel.c	/^static void *spice_channel_coroutine(void *data)$/;"	f	file:
spice_channel_delayed_unref	glib/spice-channel.c	/^static gboolean spice_channel_delayed_unref(gpointer data)$/;"	f	file:
spice_channel_destroy	glib/spice-channel.c	/^void spice_channel_destroy(SpiceChannel *channel)$/;"	f
spice_channel_disconnect	glib/spice-channel.c	/^void spice_channel_disconnect(SpiceChannel *channel, SpiceChannelEvent reason)$/;"	f
spice_channel_dispose	glib/spice-channel.c	/^static void spice_channel_dispose(GObject *gobject)$/;"	f	file:
spice_channel_drop_pending_card_insertion	glib/channel-smartcard.c	/^spice_channel_drop_pending_card_insertion(SpiceSmartcardChannel *channel,$/;"	f	file:
spice_channel_drop_pending_reader_removal	glib/channel-smartcard.c	/^spice_channel_drop_pending_reader_removal(SpiceSmartcardChannel *channel,$/;"	f	file:
spice_channel_event_get_type	glib/spice-glib-enums.c	/^spice_channel_event_get_type (void)$/;"	f
spice_channel_finalize	glib/spice-channel.c	/^static void spice_channel_finalize(GObject *gobject)$/;"	f	file:
spice_channel_flush_async	glib/spice-channel.c	/^void spice_channel_flush_async(SpiceChannel *self, GCancellable *cancellable,$/;"	f
spice_channel_flush_finish	glib/spice-channel.c	/^gboolean spice_channel_flush_finish(SpiceChannel *self, GAsyncResult *result,$/;"	f
spice_channel_flush_sasl	glib/spice-channel.c	/^static void spice_channel_flush_sasl(SpiceChannel *channel, const void *data, size_t len)$/;"	f	file:
spice_channel_flush_wire	glib/spice-channel.c	/^static void spice_channel_flush_wire(SpiceChannel *channel,$/;"	f	file:
spice_channel_flushed	glib/spice-channel.c	/^static void spice_channel_flushed(SpiceChannel *channel, gboolean success)$/;"	f	file:
spice_channel_gather_sasl_credentials	glib/spice-channel.c	/^spice_channel_gather_sasl_credentials(SpiceChannel *channel,$/;"	f	file:
spice_channel_get_channel_id	glib/spice-channel.c	/^gint spice_channel_get_channel_id(SpiceChannel *channel)$/;"	f
spice_channel_get_channel_type	glib/spice-channel.c	/^gint spice_channel_get_channel_type(SpiceChannel *channel)$/;"	f
spice_channel_get_error	glib/spice-channel.c	/^const GError* spice_channel_get_error(SpiceChannel *self)$/;"	f
spice_channel_get_property	glib/spice-channel.c	/^static void spice_channel_get_property(GObject    *gobject,$/;"	f	file:
spice_channel_get_read_only	glib/spice-channel.c	/^gboolean spice_channel_get_read_only(SpiceChannel *channel)$/;"	f
spice_channel_get_session	glib/spice-channel.c	/^SpiceSession* spice_channel_get_session(SpiceChannel *channel)$/;"	f
spice_channel_get_state	glib/spice-channel.c	/^enum spice_channel_state spice_channel_get_state(SpiceChannel *channel)$/;"	f
spice_channel_handle_disconnect	glib/channel-base.c	/^void spice_channel_handle_disconnect(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f
spice_channel_handle_migrate	glib/channel-base.c	/^void spice_channel_handle_migrate(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f
spice_channel_handle_msg	glib/spice-channel.c	/^static void spice_channel_handle_msg(SpiceChannel *channel, SpiceMsgIn *msg)$/;"	f	file:
spice_channel_handle_notify	glib/channel-base.c	/^void spice_channel_handle_notify(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f
spice_channel_handle_ping	glib/channel-base.c	/^void spice_channel_handle_ping(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f
spice_channel_handle_set_ack	glib/channel-base.c	/^void spice_channel_handle_set_ack(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f
spice_channel_handle_wait_for_channels	glib/channel-base.c	/^void spice_channel_handle_wait_for_channels(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f
spice_channel_has_pending_card_insertion	glib/channel-smartcard.c	/^spice_channel_has_pending_card_insertion(SpiceSmartcardChannel *channel,$/;"	f	file:
spice_channel_has_pending_reader_removal	glib/channel-smartcard.c	/^spice_channel_has_pending_reader_removal(SpiceSmartcardChannel *channel,$/;"	f	file:
spice_channel_idle_wakeup	glib/spice-channel.c	/^static gboolean spice_channel_idle_wakeup(gpointer user_data)$/;"	f	file:
spice_channel_init	glib/spice-channel.c	/^static void spice_channel_init(SpiceChannel *channel)$/;"	f	file:
spice_channel_iterate	glib/spice-channel.c	/^static gboolean spice_channel_iterate(SpiceChannel *channel)$/;"	f	file:
spice_channel_iterate_read	glib/spice-channel.c	/^static void spice_channel_iterate_read(SpiceChannel *channel)$/;"	f	file:
spice_channel_iterate_write	glib/channel-main.c	/^static void spice_channel_iterate_write(SpiceChannel *channel)$/;"	f	file:
spice_channel_iterate_write	glib/spice-channel.c	/^static void spice_channel_iterate_write(SpiceChannel *channel)$/;"	f	file:
spice_channel_load_ca	glib/spice-channel.c	/^static int spice_channel_load_ca(SpiceChannel *channel)$/;"	f	file:
spice_channel_new	glib/spice-channel.c	/^SpiceChannel *spice_channel_new(SpiceSession *s, int type, int id)$/;"	f
spice_channel_open_fd	glib/spice-channel.c	/^gboolean spice_channel_open_fd(SpiceChannel *channel, int fd)$/;"	f
spice_channel_perform_auth_sasl	glib/spice-channel.c	/^static gboolean spice_channel_perform_auth_sasl(SpiceChannel *channel)$/;"	f	file:
spice_channel_queue_card_insertion	glib/channel-smartcard.c	/^spice_channel_queue_card_insertion(SpiceSmartcardChannel *channel,$/;"	f	file:
spice_channel_queue_reader_removal	glib/channel-smartcard.c	/^spice_channel_queue_reader_removal(SpiceSmartcardChannel *channel,$/;"	f	file:
spice_channel_read	glib/spice-channel.c	/^static int spice_channel_read(SpiceChannel *channel, void *data, size_t length)$/;"	f	file:
spice_channel_read_sasl	glib/spice-channel.c	/^static int spice_channel_read_sasl(SpiceChannel *channel, void *data, size_t len)$/;"	f	file:
spice_channel_read_wire	glib/spice-channel.c	/^static int spice_channel_read_wire(SpiceChannel *channel, void *data, size_t len)$/;"	f	file:
spice_channel_recv_auth	glib/spice-channel.c	/^static void spice_channel_recv_auth(SpiceChannel *channel)$/;"	f	file:
spice_channel_recv_link_hdr	glib/spice-channel.c	/^static gboolean spice_channel_recv_link_hdr(SpiceChannel *channel, gboolean *switch_protocol)$/;"	f	file:
spice_channel_recv_link_msg	glib/spice-channel.c	/^static void spice_channel_recv_link_msg(SpiceChannel *channel, gboolean *switch_tls)$/;"	f	file:
spice_channel_recv_msg	glib/spice-channel.c	/^void spice_channel_recv_msg(SpiceChannel *channel,$/;"	f
spice_channel_reset	glib/spice-channel.c	/^void spice_channel_reset(SpiceChannel *channel, gboolean migrating)$/;"	f
spice_channel_reset_capabilities	glib/spice-channel.c	/^static void spice_channel_reset_capabilities(SpiceChannel *channel)$/;"	f	file:
spice_channel_send_link	glib/spice-channel.c	/^static void spice_channel_send_link(SpiceChannel *channel)$/;"	f	file:
spice_channel_send_migration_handshake	glib/spice-channel.c	/^static void spice_channel_send_migration_handshake(SpiceChannel *channel)$/;"	f	file:
spice_channel_send_spice_ticket	glib/spice-channel.c	/^static void spice_channel_send_spice_ticket(SpiceChannel *channel)$/;"	f	file:
spice_channel_set_capability	glib/spice-channel-priv.h	187;"	d
spice_channel_set_capability	glib/spice-channel.c	/^void spice_channel_set_capability(SpiceChannel *channel, guint32 cap)$/;"	f
spice_channel_set_capability	glib/spice-channel.c	2827;"	d	file:
spice_channel_set_common_capability	glib/spice-channel-priv.h	185;"	d
spice_channel_set_detailed_authentication_error	glib/spice-channel.c	/^static void spice_channel_set_detailed_authentication_error(SpiceChannel *channel)$/;"	f	file:
spice_channel_set_handlers	glib/channel-base.c	/^void spice_channel_set_handlers(SpiceChannelClass *klass,$/;"	f
spice_channel_set_property	glib/spice-channel.c	/^static void spice_channel_set_property(GObject      *gobject,$/;"	f	file:
spice_channel_state	glib/spice-channel-priv.h	/^enum spice_channel_state {$/;"	g
spice_channel_string_to_type	glib/spice-channel.c	/^gint spice_channel_string_to_type(const gchar *str)$/;"	f
spice_channel_supported_string	glib/spice-channel.c	/^gchar *spice_channel_supported_string(void)$/;"	f
spice_channel_swap	glib/spice-channel.c	/^void spice_channel_swap(SpiceChannel *channel, SpiceChannel *swap, gboolean swap_msgs)$/;"	f
spice_channel_test_capability	glib/spice-channel.c	/^gboolean spice_channel_test_capability(SpiceChannel *self, guint32 cap)$/;"	f
spice_channel_test_common_capability	glib/spice-channel.c	/^gboolean spice_channel_test_common_capability(SpiceChannel *self, guint32 cap)$/;"	f
spice_channel_type_to_string	glib/spice-channel.c	/^const gchar* spice_channel_type_to_string(gint type)$/;"	f
spice_channel_up	glib/spice-channel.c	/^void spice_channel_up(SpiceChannel *channel)$/;"	f
spice_channel_wakeup	glib/spice-channel.c	/^void spice_channel_wakeup(SpiceChannel *channel, gboolean cancel)$/;"	f
spice_channel_write	glib/spice-channel.c	/^static void spice_channel_write(SpiceChannel *channel, const void *data, size_t len)$/;"	f	file:
spice_channel_write_msg	glib/spice-channel.c	/^static void spice_channel_write_msg(SpiceChannel *channel, SpiceMsgOut *out)$/;"	f	file:
spice_chunks_destroy	spice-common/common/mem.c	/^void spice_chunks_destroy(SpiceChunks *chunks)$/;"	f
spice_chunks_linearize	spice-common/common/mem.c	/^void spice_chunks_linearize(SpiceChunks *chunks)$/;"	f
spice_chunks_new	spice-common/common/mem.c	/^SpiceChunks *spice_chunks_new(uint32_t count)$/;"	f
spice_chunks_new_linear	spice-common/common/mem.c	/^SpiceChunks *spice_chunks_new_linear(uint8_t *data, uint32_t len)$/;"	f
spice_client_error_quark	glib/spice-client.c	/^GQuark spice_client_error_quark(void)$/;"	f
spice_cmdline_get_option_group	win32/spice-cmdline.c	/^GOptionGroup *spice_cmdline_get_option_group(void)$/;"	f
spice_cmdline_session_setup	win32/spice-cmdline.c	/^void spice_cmdline_session_setup(SpiceSession *session)$/;"	f
spice_connection	win32/win32-spicy.h	/^struct spice_connection {$/;"	s
spice_connection	win32/win32-spicy.h	/^typedef struct spice_connection spice_connection;$/;"	t	typeref:struct:spice_connection
spice_convert_newlines	glib/spice-util.c	/^static gchar* spice_convert_newlines(const gchar *str, gssize len,$/;"	f	file:
spice_critical	spice-common/common/log.h	107;"	d
spice_cursor_channel_class_init	glib/channel-cursor.c	/^static void spice_cursor_channel_class_init(SpiceCursorChannelClass *klass)$/;"	f	file:
spice_cursor_channel_finalize	glib/channel-cursor.c	/^static void spice_cursor_channel_finalize(GObject *obj)$/;"	f	file:
spice_cursor_channel_init	glib/channel-cursor.c	/^static void spice_cursor_channel_init(SpiceCursorChannel *channel)$/;"	f	file:
spice_cursor_channel_reset	glib/channel-cursor.c	/^static void spice_cursor_channel_reset(SpiceChannel *channel, gboolean migrating)$/;"	f	file:
spice_debug	spice-common/common/log.h	95;"	d
spice_destroy_fn_t	spice-common/common/canvas_base.h	/^typedef void (*spice_destroy_fn_t)(void *data);$/;"	t
spice_device	glib/channel-usbredir.c	/^    SpiceUsbDevice *spice_device;$/;"	m	struct:_SpiceUsbredirChannelPrivate	file:
spice_device	glib/channel-usbredir.c	/^    SpiceUsbDevice *spice_device;$/;"	m	struct:device_error_data	file:
spice_display_channel_class_init	glib/channel-display.c	/^static void spice_display_channel_class_init(SpiceDisplayChannelClass *klass)$/;"	f	file:
spice_display_channel_constructed	glib/channel-display.c	/^static void spice_display_channel_constructed(GObject *object)$/;"	f	file:
spice_display_channel_dispose	glib/channel-display.c	/^static void spice_display_channel_dispose(GObject *object)$/;"	f	file:
spice_display_channel_finalize	glib/channel-display.c	/^static void spice_display_channel_finalize(GObject *object)$/;"	f	file:
spice_display_channel_init	glib/channel-display.c	/^static void spice_display_channel_init(SpiceDisplayChannel *channel)$/;"	f	file:
spice_display_channel_reset	glib/channel-display.c	/^static void spice_display_channel_reset(SpiceChannel *channel, gboolean migrating)$/;"	f	file:
spice_display_channel_reset_capabilities	glib/channel-display.c	/^static void spice_display_channel_reset_capabilities(SpiceChannel *channel)$/;"	f	file:
spice_display_channel_up	glib/channel-display.c	/^static void spice_display_channel_up(SpiceChannel *channel)$/;"	f	file:
spice_display_class_init	win32/win32-spice-widget.c	/^static void spice_display_class_init(SpiceDisplayClass *klass)$/;"	f	file:
spice_display_decoding	glib/channel-display.c	/^static void spice_display_decoding(display_stream* st, SpiceMsgIn* in)$/;"	f	file:
spice_display_dispose	win32/win32-spice-widget.c	/^static void spice_display_dispose(GObject *obj)$/;"	f	file:
spice_display_finalize	win32/win32-spice-widget.c	/^static void spice_display_finalize(GObject *obj)$/;"	f	file:
spice_display_get_primary	glib/channel-display.c	/^gboolean spice_display_get_primary(SpiceChannel *channel, guint32 surface_id,$/;"	f
spice_display_get_property	glib/channel-display.c	/^static void spice_display_get_property(GObject    *object,$/;"	f	file:
spice_display_init	win32/win32-spice-widget.c	/^static void spice_display_init(SpiceDisplay *display)$/;"	f	file:
spice_display_key_event_get_type	win32/spice-widget-enums.c	/^spice_display_key_event_get_type (void)$/;"	f
spice_display_new	win32/win32-spice-widget.c	/^SpiceDisplay *spice_display_new(SpiceSession *session, int id)$/;"	f
spice_display_set_property	glib/channel-display.c	/^static void spice_display_set_property(GObject      *object,$/;"	f	file:
spice_dos2unix	glib/spice-util.c	/^gchar* spice_dos2unix(const gchar *str, gssize len, GError **error)$/;"	f
spice_entries	win32/spice-cmdline.c	/^static GOptionEntry spice_entries[] = {$/;"	v	file:
spice_error	spice-common/common/log.h	113;"	d
spice_g_signal_connect_object	glib/spice-util.c	/^gulong spice_g_signal_connect_object (gpointer instance,$/;"	f
spice_get_client_channel_parser	spice-common/common/generated_server_demarshallers.c	/^spice_parse_channel_func_t spice_get_client_channel_parser(uint32_t channel, unsigned int *max_message_type)$/;"	f
spice_get_option_group	glib/spice-option.c	/^GOptionGroup* spice_get_option_group(void)$/;"	f
spice_get_server_channel_parser	spice-common/common/generated_client_demarshallers.c	/^spice_parse_channel_func_t spice_get_server_channel_parser(uint32_t channel, unsigned int *max_message_type)$/;"	f
spice_get_server_channel_parser1	spice-common/common/generated_client_demarshallers1.c	/^spice_parse_channel_func_t spice_get_server_channel_parser1(uint32_t channel, unsigned int *max_message_type)$/;"	f
spice_gstaudio_class_init	glib/spice-gstaudio.c	/^static void spice_gstaudio_class_init(SpiceGstaudioClass *klass)$/;"	f	file:
spice_gstaudio_dispose	glib/spice-gstaudio.c	/^static void spice_gstaudio_dispose(GObject *obj)$/;"	f	file:
spice_gstaudio_finalize	glib/spice-gstaudio.c	/^static void spice_gstaudio_finalize(GObject *obj)$/;"	f	file:
spice_gstaudio_init	glib/spice-gstaudio.c	/^static void spice_gstaudio_init(SpiceGstaudio *pulse)$/;"	f	file:
spice_gstaudio_new	glib/spice-gstaudio.c	/^SpiceGstaudio *spice_gstaudio_new(SpiceSession *session, GMainContext *context,$/;"	f
spice_header_get_header_size	glib/spice-channel.c	/^static inline int spice_header_get_header_size(gboolean is_mini_header)$/;"	f	file:
spice_header_get_in_msg_serial	glib/spice-channel.c	/^static inline uint64_t spice_header_get_in_msg_serial(SpiceMsgIn *in)$/;"	f	file:
spice_header_get_msg_size	glib/spice-channel.c	/^uint32_t spice_header_get_msg_size(uint8_t *header, gboolean is_mini_header)$/;"	f
spice_header_get_msg_sub_list	glib/spice-channel.c	/^static inline uint32_t spice_header_get_msg_sub_list(uint8_t *header, gboolean is_mini_header)$/;"	f	file:
spice_header_get_msg_type	glib/spice-channel.c	/^uint16_t spice_header_get_msg_type(uint8_t *header, gboolean is_mini_header)$/;"	f
spice_header_get_out_msg_serial	glib/spice-channel.c	/^static inline uint64_t spice_header_get_out_msg_serial(SpiceMsgOut *out)$/;"	f	file:
spice_header_reset_msg_sub_list	glib/spice-channel.c	/^static inline void spice_header_reset_msg_sub_list(uint8_t *header, gboolean is_mini_header)$/;"	f	file:
spice_header_set_msg_serial	glib/spice-channel.c	/^static inline void spice_header_set_msg_serial(uint8_t *header, gboolean is_mini_header,$/;"	f	file:
spice_header_set_msg_size	glib/spice-channel.c	/^static inline void spice_header_set_msg_size(uint8_t *header, gboolean is_mini_header,$/;"	f	file:
spice_header_set_msg_type	glib/spice-channel.c	/^static inline void spice_header_set_msg_type(uint8_t *header, gboolean is_mini_header,$/;"	f	file:
spice_hotkey_to_gtk_accelerator	win32/virt-viewer-util.c	/^spice_hotkey_to_gtk_accelerator(const gchar *key)$/;"	f
spice_info	spice-common/common/log.h	89;"	d
spice_inputs_button_press	glib/channel-inputs.c	/^void spice_inputs_button_press(SpiceInputsChannel *channel, gint button,$/;"	f
spice_inputs_button_release	glib/channel-inputs.c	/^void spice_inputs_button_release(SpiceInputsChannel *channel, gint button,$/;"	f
spice_inputs_channel_class_init	glib/channel-inputs.c	/^static void spice_inputs_channel_class_init(SpiceInputsChannelClass *klass)$/;"	f	file:
spice_inputs_channel_finalize	glib/channel-inputs.c	/^static void spice_inputs_channel_finalize(GObject *obj)$/;"	f	file:
spice_inputs_channel_init	glib/channel-inputs.c	/^static void spice_inputs_channel_init(SpiceInputsChannel *channel)$/;"	f	file:
spice_inputs_channel_reset	glib/channel-inputs.c	/^static void spice_inputs_channel_reset(SpiceChannel *channel, gboolean migrating)$/;"	f	file:
spice_inputs_channel_up	glib/channel-inputs.c	/^static void spice_inputs_channel_up(SpiceChannel *channel)$/;"	f	file:
spice_inputs_get_property	glib/channel-inputs.c	/^static void spice_inputs_get_property(GObject    *object,$/;"	f	file:
spice_inputs_key_press	glib/channel-inputs.c	/^void spice_inputs_key_press(SpiceInputsChannel *channel, guint scancode)$/;"	f
spice_inputs_key_press_and_release	glib/channel-inputs.c	/^void spice_inputs_key_press_and_release(SpiceInputsChannel *input_channel, guint scancode)$/;"	f
spice_inputs_key_release	glib/channel-inputs.c	/^void spice_inputs_key_release(SpiceInputsChannel *channel, guint scancode)$/;"	f
spice_inputs_lock_get_type	glib/spice-glib-enums.c	/^spice_inputs_lock_get_type (void)$/;"	f
spice_inputs_motion	glib/channel-inputs.c	/^void spice_inputs_motion(SpiceInputsChannel *channel, gint dx, gint dy,$/;"	f
spice_inputs_position	glib/channel-inputs.c	/^void spice_inputs_position(SpiceInputsChannel *channel, gint x, gint y,$/;"	f
spice_inputs_set_key_locks	glib/channel-inputs.c	/^void spice_inputs_set_key_locks(SpiceInputsChannel *channel, guint locks)$/;"	f
spice_log	spice-common/common/log.c	/^void spice_log(const char *log_domain,$/;"	f
spice_log_h	logger/spice_log.h	3;"	d
spice_log_level_to_string	spice-common/common/log.c	/^static const char * spice_log_level_to_string(SpiceLogLevel level)$/;"	f	file:
spice_logv	spice-common/common/log.c	/^void spice_logv(const char *log_domain,$/;"	f
spice_main_agent_test_capability	glib/channel-main.c	/^gboolean spice_main_agent_test_capability(SpiceMainChannel *channel, guint32 cap)$/;"	f
spice_main_channel_class_init	glib/channel-main.c	/^static void spice_main_channel_class_init(SpiceMainChannelClass *klass)$/;"	f	file:
spice_main_channel_dispose	glib/channel-main.c	/^static void spice_main_channel_dispose(GObject *obj)$/;"	f	file:
spice_main_channel_finalize	glib/channel-main.c	/^static void spice_main_channel_finalize(GObject *obj)$/;"	f	file:
spice_main_channel_init	glib/channel-main.c	/^static void spice_main_channel_init(SpiceMainChannel *channel)$/;"	f	file:
spice_main_channel_reset	glib/channel-main.c	/^static void spice_main_channel_reset(SpiceChannel *channel, gboolean migrating)$/;"	f	file:
spice_main_channel_reset_agent	glib/channel-main.c	/^static void spice_main_channel_reset_agent(SpiceMainChannel *channel)$/;"	f	file:
spice_main_channel_reset_capabilties	glib/channel-main.c	/^static void spice_main_channel_reset_capabilties(SpiceChannel *channel)$/;"	f	file:
spice_main_channel_send_migration_handshake	glib/channel-main.c	/^static void spice_main_channel_send_migration_handshake(SpiceChannel *channel)$/;"	f	file:
spice_main_clipboard_grab	glib/channel-main.c	/^void spice_main_clipboard_grab(SpiceMainChannel *channel, guint32 *types, int ntypes)$/;"	f
spice_main_clipboard_notify	glib/channel-main.c	/^void spice_main_clipboard_notify(SpiceMainChannel *channel,$/;"	f
spice_main_clipboard_release	glib/channel-main.c	/^void spice_main_clipboard_release(SpiceMainChannel *channel)$/;"	f
spice_main_clipboard_request	glib/channel-main.c	/^void spice_main_clipboard_request(SpiceMainChannel *channel, guint32 type)$/;"	f
spice_main_clipboard_selection_grab	glib/channel-main.c	/^void spice_main_clipboard_selection_grab(SpiceMainChannel *channel, guint selection,$/;"	f
spice_main_clipboard_selection_notify	glib/channel-main.c	/^void spice_main_clipboard_selection_notify(SpiceMainChannel *channel, guint selection,$/;"	f
spice_main_clipboard_selection_release	glib/channel-main.c	/^void spice_main_clipboard_selection_release(SpiceMainChannel *channel, guint selection)$/;"	f
spice_main_clipboard_selection_request	glib/channel-main.c	/^void spice_main_clipboard_selection_request(SpiceMainChannel *channel, guint selection, guint32 type)$/;"	f
spice_main_constructed	glib/channel-main.c	/^static void spice_main_constructed(GObject *object)$/;"	f	file:
spice_main_file_copy_async	glib/channel-main.c	/^void spice_main_file_copy_async(SpiceMainChannel *channel,$/;"	f
spice_main_file_copy_finish	glib/channel-main.c	/^gboolean spice_main_file_copy_finish(SpiceMainChannel *channel,$/;"	f
spice_main_get_max_clipboard	glib/channel-main.c	/^static gint spice_main_get_max_clipboard(SpiceMainChannel *self)$/;"	f	file:
spice_main_get_property	glib/channel-main.c	/^static void spice_main_get_property(GObject    *object,$/;"	f	file:
spice_main_handle_msg	glib/channel-main.c	/^static void spice_main_handle_msg(SpiceChannel *channel, SpiceMsgIn *msg)$/;"	f	file:
spice_main_send_monitor_config	glib/channel-main.c	/^gboolean spice_main_send_monitor_config(SpiceMainChannel *channel)$/;"	f
spice_main_set_display	glib/channel-main.c	/^void spice_main_set_display(SpiceMainChannel *channel, int id,$/;"	f
spice_main_set_display_enabled	glib/channel-main.c	/^void spice_main_set_display_enabled(SpiceMainChannel *channel, int id, gboolean enabled)$/;"	f
spice_main_set_max_clipboard	glib/channel-main.c	/^static void spice_main_set_max_clipboard(SpiceMainChannel *self, gint max)$/;"	f	file:
spice_main_set_property	glib/channel-main.c	/^static void spice_main_set_property(GObject *gobject, guint prop_id,$/;"	f	file:
spice_main_update_display	glib/channel-main.c	/^void spice_main_update_display(SpiceMainChannel *channel, int id,$/;"	f
spice_make_scancode	glib/spice-util.c	/^guint16 spice_make_scancode(guint scancode, gboolean release)$/;"	f
spice_malloc	spice-common/common/mem.c	/^void *spice_malloc(size_t n_bytes)$/;"	f
spice_malloc0	spice-common/common/mem.c	/^void *spice_malloc0(size_t n_bytes)$/;"	f
spice_malloc0_n	spice-common/common/mem.c	/^void *spice_malloc0_n(size_t n_blocks, size_t n_block_bytes)$/;"	f
spice_malloc_n	spice-common/common/mem.c	/^void *spice_malloc_n(size_t n_blocks, size_t n_block_bytes)$/;"	f
spice_malloc_n_m	spice-common/common/mem.c	/^void *spice_malloc_n_m(size_t n_blocks, size_t n_block_bytes, size_t extra_size)$/;"	f
spice_marshall_AlphaBlend	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_AlphaBlend(SpiceMarshaller *m, SpiceAlphaBlend *ptr, SpiceMarshaller **src_bitmap_out)$/;"	f
spice_marshall_Blackness	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Blackness(SpiceMarshaller *m, SpiceBlackness *ptr, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_Blend	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Blend(SpiceMarshaller *m, SpiceCopy *ptr, SpiceMarshaller **src_bitmap_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_Composite	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Composite(SpiceMarshaller *m, SpiceComposite *ptr, SpiceMarshaller **src_bitmap_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_Copy	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Copy(SpiceMarshaller *m, SpiceCopy *ptr, SpiceMarshaller **src_bitmap_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_DisplayBase	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_DisplayBase(SpiceMarshaller *m, SpiceMsgDisplayBase *ptr)$/;"	f
spice_marshall_Fill	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Fill(SpiceMarshaller *m, SpiceFill *ptr, SpiceMarshaller **brush_pat_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_Image	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Image(SpiceMarshaller *m, SpiceImage *ptr, SpiceMarshaller **bitmap_palette_out, SpiceMarshaller **lzplt_palette_out)$/;"	f
spice_marshall_Invers	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Invers(SpiceMarshaller *m, SpiceInvers *ptr, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_Opaque	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Opaque(SpiceMarshaller *m, SpiceOpaque *ptr, SpiceMarshaller **src_bitmap_out, SpiceMarshaller **pat_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_Palette	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Palette(SpiceMarshaller *m, SpicePalette *ptr)$/;"	f
spice_marshall_Path	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Path(SpiceMarshaller *m, SpicePath *ptr)$/;"	f
spice_marshall_Point	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Point(SpiceMarshaller *m, SpicePoint *ptr)$/;"	f
spice_marshall_Rect	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Rect(SpiceMarshaller *m, SpiceRect *ptr)$/;"	f
spice_marshall_Rop3	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Rop3(SpiceMarshaller *m, SpiceRop3 *ptr, SpiceMarshaller **src_bitmap_out, SpiceMarshaller **pat_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_SpiceMsgAudioMute	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_SpiceMsgAudioMute(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgAudioMute *msg)$/;"	f
spice_marshall_SpiceMsgAudioVolume	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_SpiceMsgAudioVolume(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgAudioVolume *msg)$/;"	f
spice_marshall_SpiceMsgData	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_SpiceMsgData(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgData *msg)$/;"	f	file:
spice_marshall_SpiceMsgData	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_SpiceMsgData(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgData *msg)$/;"	f	file:
spice_marshall_SpiceMsgData	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_SpiceMsgData(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgData *msg)$/;"	f
spice_marshall_SpiceMsgEmpty	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_SpiceMsgEmpty(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgEmpty *msg)$/;"	f	file:
spice_marshall_SpiceMsgEmpty	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_SpiceMsgEmpty(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgEmpty *msg)$/;"	f	file:
spice_marshall_SpiceMsgEmpty	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_SpiceMsgEmpty(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgEmpty *msg)$/;"	f
spice_marshall_String	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_String(SpiceMarshaller *m, SpiceString *ptr)$/;"	f
spice_marshall_Stroke	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Stroke(SpiceMarshaller *m, SpiceStroke *ptr, SpiceMarshaller **style_out, SpiceMarshaller **pat_out)$/;"	f
spice_marshall_Text	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Text(SpiceMarshaller *m, SpiceText *ptr, SpiceMarshaller **fore_brush_pat_out, SpiceMarshaller **back_brush_pat_out)$/;"	f
spice_marshall_Transparent	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Transparent(SpiceMarshaller *m, SpiceTransparent *ptr, SpiceMarshaller **src_bitmap_out)$/;"	f
spice_marshall_Whiteness	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_Whiteness(SpiceMarshaller *m, SpiceWhiteness *ptr, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_array_int32	spice-common/common/generated_server_marshallers.c	/^SPICE_GNUC_UNUSED static void spice_marshall_array_int32(SpiceMarshaller *m, int32_t *ptr, unsigned count)$/;"	f	file:
spice_marshall_array_uint8	spice-common/common/generated_client_marshallers.c	/^SPICE_GNUC_UNUSED static void spice_marshall_array_uint8(SpiceMarshaller *m, uint8_t *ptr, unsigned count)$/;"	f	file:
spice_marshall_array_uint8	spice-common/common/generated_server_marshallers.c	/^SPICE_GNUC_UNUSED static void spice_marshall_array_uint8(SpiceMarshaller *m, uint8_t *ptr, unsigned count)$/;"	f	file:
spice_marshall_msg_cursor_init	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_cursor_init(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgCursorInit *msg)$/;"	f
spice_marshall_msg_cursor_inval_one	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_cursor_inval_one(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayInvalOne *msg)$/;"	f
spice_marshall_msg_cursor_move	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_cursor_move(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgCursorMove *msg)$/;"	f
spice_marshall_msg_cursor_set	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_cursor_set(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgCursorSet *msg)$/;"	f
spice_marshall_msg_cursor_trail	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_cursor_trail(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgCursorTrail *msg)$/;"	f
spice_marshall_msg_disconnecting	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_disconnecting(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisconnect *msg)$/;"	f
spice_marshall_msg_display_copy_bits	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_copy_bits(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayCopyBits *msg)$/;"	f
spice_marshall_msg_display_draw_alpha_blend	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_alpha_blend(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawAlphaBlend *msg, SpiceMarshaller **src_bitmap_out)$/;"	f
spice_marshall_msg_display_draw_blackness	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_blackness(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawBlackness *msg, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_msg_display_draw_blend	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_blend(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawBlend *msg, SpiceMarshaller **src_bitmap_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_msg_display_draw_composite	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_composite(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawComposite *msg, SpiceMarshaller **src_bitmap_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_msg_display_draw_copy	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_copy(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawCopy *msg, SpiceMarshaller **src_bitmap_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_msg_display_draw_fill	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_fill(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawFill *msg, SpiceMarshaller **brush_pat_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_msg_display_draw_invers	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_invers(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawInvers *msg, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_msg_display_draw_opaque	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_opaque(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawOpaque *msg, SpiceMarshaller **src_bitmap_out, SpiceMarshaller **pat_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_msg_display_draw_rop3	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_rop3(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawRop3 *msg, SpiceMarshaller **src_bitmap_out, SpiceMarshaller **pat_out, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_msg_display_draw_stroke	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_stroke(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawStroke *msg, SpiceMarshaller **style_out, SpiceMarshaller **pat_out)$/;"	f
spice_marshall_msg_display_draw_text	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_text(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawText *msg, SpiceMarshaller **fore_brush_pat_out, SpiceMarshaller **back_brush_pat_out)$/;"	f
spice_marshall_msg_display_draw_transparent	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_transparent(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawTransparent *msg, SpiceMarshaller **src_bitmap_out)$/;"	f
spice_marshall_msg_display_draw_whiteness	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_draw_whiteness(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayDrawWhiteness *msg, SpiceMarshaller **mask_bitmap_out)$/;"	f
spice_marshall_msg_display_inval_all_pixmaps	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_inval_all_pixmaps(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgWaitForChannels *msg)$/;"	f
spice_marshall_msg_display_inval_list	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_inval_list(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceResourceList *msg)$/;"	f
spice_marshall_msg_display_inval_palette	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_inval_palette(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayInvalOne *msg)$/;"	f
spice_marshall_msg_display_mode	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_mode(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayMode *msg)$/;"	f
spice_marshall_msg_display_monitors_config	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_monitors_config(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayMonitorsConfig *msg)$/;"	f
spice_marshall_msg_display_stream_activate_report	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_stream_activate_report(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayStreamActivateReport *msg)$/;"	f
spice_marshall_msg_display_stream_clip	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_stream_clip(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayStreamClip *msg)$/;"	f
spice_marshall_msg_display_stream_create	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_stream_create(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayStreamCreate *msg)$/;"	f
spice_marshall_msg_display_stream_data	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_stream_data(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayStreamData *msg)$/;"	f
spice_marshall_msg_display_stream_data_sized	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_stream_data_sized(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayStreamDataSized *msg)$/;"	f
spice_marshall_msg_display_stream_destroy	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_stream_destroy(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisplayStreamDestroy *msg)$/;"	f
spice_marshall_msg_display_surface_create	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_surface_create(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgSurfaceCreate *msg)$/;"	f
spice_marshall_msg_display_surface_destroy	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_display_surface_destroy(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgSurfaceDestroy *msg)$/;"	f
spice_marshall_msg_inputs_init	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_inputs_init(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgInputsInit *msg)$/;"	f
spice_marshall_msg_inputs_key_modifiers	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_inputs_key_modifiers(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgInputsKeyModifiers *msg)$/;"	f
spice_marshall_msg_main_agent_connected_tokens	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_agent_connected_tokens(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainAgentConnectedTokens *msg)$/;"	f
spice_marshall_msg_main_agent_disconnected	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_agent_disconnected(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainAgentDisconnect *msg)$/;"	f
spice_marshall_msg_main_agent_token	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_agent_token(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainAgentTokens *msg)$/;"	f
spice_marshall_msg_main_channels_list	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_channels_list(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgChannels *msg)$/;"	f
spice_marshall_msg_main_init	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_init(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainInit *msg)$/;"	f
spice_marshall_msg_main_migrate_begin	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_migrate_begin(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainMigrationBegin *msg)$/;"	f
spice_marshall_msg_main_migrate_begin_seamless	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_migrate_begin_seamless(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainMigrateBeginSeamless *msg)$/;"	f
spice_marshall_msg_main_migrate_switch_host	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_migrate_switch_host(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainMigrationSwitchHost *msg)$/;"	f
spice_marshall_msg_main_mouse_mode	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_mouse_mode(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainMouseMode *msg)$/;"	f
spice_marshall_msg_main_multi_media_time	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_multi_media_time(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainMultiMediaTime *msg)$/;"	f
spice_marshall_msg_main_name	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_name(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainName *msg)$/;"	f
spice_marshall_msg_main_uuid	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_main_uuid(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMainUuid *msg)$/;"	f
spice_marshall_msg_migrate	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_migrate(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgMigrate *msg)$/;"	f
spice_marshall_msg_notify	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_notify(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgNotify *msg)$/;"	f
spice_marshall_msg_ping	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_ping(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgPing *msg)$/;"	f
spice_marshall_msg_playback_data	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_playback_data(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgPlaybackPacket *msg)$/;"	f
spice_marshall_msg_playback_latency	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_playback_latency(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgPlaybackLatency *msg)$/;"	f
spice_marshall_msg_playback_mode	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_playback_mode(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgPlaybackMode *msg)$/;"	f
spice_marshall_msg_playback_start	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_playback_start(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgPlaybackStart *msg)$/;"	f
spice_marshall_msg_port_event	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_port_event(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgPortEvent *msg)$/;"	f
spice_marshall_msg_port_init	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_port_init(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgPortInit *msg)$/;"	f
spice_marshall_msg_record_start	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_record_start(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgRecordStart *msg)$/;"	f
spice_marshall_msg_set_ack	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_set_ack(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgSetAck *msg)$/;"	f
spice_marshall_msg_smartcard_data	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_smartcard_data(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgSmartcard *msg)$/;"	f
spice_marshall_msg_tunnel_init	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_tunnel_init(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgTunnelInit *msg)$/;"	f
spice_marshall_msg_tunnel_service_ip_map	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_tunnel_service_ip_map(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgTunnelServiceIpMap *msg)$/;"	f
spice_marshall_msg_tunnel_socket_close	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_tunnel_socket_close(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgTunnelSocketClose *msg)$/;"	f
spice_marshall_msg_tunnel_socket_closed_ack	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_tunnel_socket_closed_ack(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgTunnelSocketClosedAck *msg)$/;"	f
spice_marshall_msg_tunnel_socket_data	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_tunnel_socket_data(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgTunnelSocketData *msg)$/;"	f
spice_marshall_msg_tunnel_socket_fin	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_tunnel_socket_fin(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgTunnelSocketFin *msg)$/;"	f
spice_marshall_msg_tunnel_socket_open	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_tunnel_socket_open(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgTunnelSocketOpen *msg)$/;"	f
spice_marshall_msg_tunnel_socket_token	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_tunnel_socket_token(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgTunnelSocketTokens *msg)$/;"	f
spice_marshall_msg_wait_for_channels	spice-common/common/generated_server_marshallers.c	/^void spice_marshall_msg_wait_for_channels(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgWaitForChannels *msg)$/;"	f
spice_marshall_msgc_ack_sync	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_ack_sync(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcAckSync *msg)$/;"	f	file:
spice_marshall_msgc_ack_sync	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_ack_sync(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcAckSync *msg)$/;"	f	file:
spice_marshall_msgc_disconnecting	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_disconnecting(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisconnect *msg)$/;"	f	file:
spice_marshall_msgc_disconnecting	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_disconnecting(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgDisconnect *msg)$/;"	f	file:
spice_marshall_msgc_display_init	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_display_init(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcDisplayInit *msg)$/;"	f	file:
spice_marshall_msgc_display_init	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_display_init(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcDisplayInit *msg)$/;"	f	file:
spice_marshall_msgc_display_stream_report	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_display_stream_report(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcDisplayStreamReport *msg)$/;"	f	file:
spice_marshall_msgc_inputs_key_down	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_inputs_key_down(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcKeyDown *msg)$/;"	f	file:
spice_marshall_msgc_inputs_key_down	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_inputs_key_down(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcKeyDown *msg)$/;"	f	file:
spice_marshall_msgc_inputs_key_modifiers	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_inputs_key_modifiers(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcKeyModifiers *msg)$/;"	f	file:
spice_marshall_msgc_inputs_key_modifiers	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_inputs_key_modifiers(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcKeyModifiers *msg)$/;"	f	file:
spice_marshall_msgc_inputs_key_up	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_inputs_key_up(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcKeyUp *msg)$/;"	f	file:
spice_marshall_msgc_inputs_key_up	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_inputs_key_up(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcKeyUp *msg)$/;"	f	file:
spice_marshall_msgc_inputs_mouse_motion	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_inputs_mouse_motion(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMouseMotion *msg)$/;"	f	file:
spice_marshall_msgc_inputs_mouse_motion	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_inputs_mouse_motion(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMouseMotion *msg)$/;"	f	file:
spice_marshall_msgc_inputs_mouse_position	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_inputs_mouse_position(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMousePosition *msg)$/;"	f	file:
spice_marshall_msgc_inputs_mouse_position	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_inputs_mouse_position(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMousePosition *msg)$/;"	f	file:
spice_marshall_msgc_inputs_mouse_press	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_inputs_mouse_press(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMousePress *msg)$/;"	f	file:
spice_marshall_msgc_inputs_mouse_press	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_inputs_mouse_press(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMousePress *msg)$/;"	f	file:
spice_marshall_msgc_inputs_mouse_release	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_inputs_mouse_release(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMouseRelease *msg)$/;"	f	file:
spice_marshall_msgc_inputs_mouse_release	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_inputs_mouse_release(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMouseRelease *msg)$/;"	f	file:
spice_marshall_msgc_main_agent_start	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_main_agent_start(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMainAgentStart *msg)$/;"	f	file:
spice_marshall_msgc_main_agent_start	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_main_agent_start(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMainAgentStart *msg)$/;"	f	file:
spice_marshall_msgc_main_agent_token	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_main_agent_token(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMainAgentTokens *msg)$/;"	f	file:
spice_marshall_msgc_main_agent_token	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_main_agent_token(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMainAgentTokens *msg)$/;"	f	file:
spice_marshall_msgc_main_client_info	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_main_client_info(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcClientInfo *msg)$/;"	f	file:
spice_marshall_msgc_main_client_info	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_main_client_info(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcClientInfo *msg)$/;"	f	file:
spice_marshall_msgc_main_migrate_dst_do_seamless	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_main_migrate_dst_do_seamless(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMainMigrateDstDoSeamless *msg)$/;"	f	file:
spice_marshall_msgc_main_mouse_mode_request	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_main_mouse_mode_request(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMainMouseModeRequest *msg)$/;"	f	file:
spice_marshall_msgc_main_mouse_mode_request	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_main_mouse_mode_request(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcMainMouseModeRequest *msg)$/;"	f	file:
spice_marshall_msgc_pong	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_pong(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgPing *msg)$/;"	f	file:
spice_marshall_msgc_pong	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_pong(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgPing *msg)$/;"	f	file:
spice_marshall_msgc_port_event	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_port_event(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcPortEvent *msg)$/;"	f	file:
spice_marshall_msgc_record_data	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_record_data(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcRecordPacket *msg)$/;"	f	file:
spice_marshall_msgc_record_data	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_record_data(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcRecordPacket *msg)$/;"	f	file:
spice_marshall_msgc_record_mode	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_record_mode(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcRecordMode *msg)$/;"	f	file:
spice_marshall_msgc_record_mode	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_record_mode(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcRecordMode *msg)$/;"	f	file:
spice_marshall_msgc_record_start_mark	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_record_start_mark(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcRecordStartMark *msg)$/;"	f	file:
spice_marshall_msgc_record_start_mark	spice-common/common/generated_client_marshallers1.c	/^static void spice_marshall_msgc_record_start_mark(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcRecordStartMark *msg)$/;"	f	file:
spice_marshall_msgc_smartcard_atr	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_smartcard_atr(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED VSCMsgATR *msg)$/;"	f	file:
spice_marshall_msgc_smartcard_data	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_smartcard_data(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcSmartcard *msg, SpiceMarshaller **reader_name_out)$/;"	f	file:
spice_marshall_msgc_smartcard_error	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_smartcard_error(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED VSCMsgError *msg)$/;"	f	file:
spice_marshall_msgc_smartcard_header	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_smartcard_header(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED VSCMsgHeader *msg)$/;"	f	file:
spice_marshall_msgc_smartcard_reader_add	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_smartcard_reader_add(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED VSCMsgReaderAdd *msg)$/;"	f	file:
spice_marshall_msgc_tunnel_service_add	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_tunnel_service_add(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcTunnelAddGenericService *msg, SpiceMarshaller **name_out, SpiceMarshaller **description_out)$/;"	f	file:
spice_marshall_msgc_tunnel_service_remove	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_tunnel_service_remove(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcTunnelRemoveService *msg)$/;"	f	file:
spice_marshall_msgc_tunnel_socket_closed	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_tunnel_socket_closed(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcTunnelSocketClosed *msg)$/;"	f	file:
spice_marshall_msgc_tunnel_socket_closed_ack	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_tunnel_socket_closed_ack(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcTunnelSocketClosedAck *msg)$/;"	f	file:
spice_marshall_msgc_tunnel_socket_data	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_tunnel_socket_data(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcTunnelSocketData *msg)$/;"	f	file:
spice_marshall_msgc_tunnel_socket_fin	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_tunnel_socket_fin(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcTunnelSocketFin *msg)$/;"	f	file:
spice_marshall_msgc_tunnel_socket_open_ack	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_tunnel_socket_open_ack(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcTunnelSocketOpenAck *msg)$/;"	f	file:
spice_marshall_msgc_tunnel_socket_open_nack	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_tunnel_socket_open_nack(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcTunnelSocketOpenNack *msg)$/;"	f	file:
spice_marshall_msgc_tunnel_socket_token	spice-common/common/generated_client_marshallers.c	/^static void spice_marshall_msgc_tunnel_socket_token(SPICE_GNUC_UNUSED SpiceMarshaller *m, SPICE_GNUC_UNUSED SpiceMsgcTunnelSocketTokens *msg)$/;"	f	file:
spice_marshaller_add	spice-common/common/marshaller.c	/^uint8_t *spice_marshaller_add(SpiceMarshaller *m, const uint8_t *data, size_t size)$/;"	f
spice_marshaller_add_int16	spice-common/common/marshaller.c	/^void *spice_marshaller_add_int16(SpiceMarshaller *m, int16_t v)$/;"	f
spice_marshaller_add_int32	spice-common/common/marshaller.c	/^void *spice_marshaller_add_int32(SpiceMarshaller *m, int32_t v)$/;"	f
spice_marshaller_add_int64	spice-common/common/marshaller.c	/^void *spice_marshaller_add_int64(SpiceMarshaller *m, int64_t v)$/;"	f
spice_marshaller_add_int8	spice-common/common/marshaller.c	/^void *spice_marshaller_add_int8(SpiceMarshaller *m, int8_t v)$/;"	f
spice_marshaller_add_item	spice-common/common/marshaller.c	/^static MarshallerItem *spice_marshaller_add_item(SpiceMarshaller *m)$/;"	f	file:
spice_marshaller_add_ref	spice-common/common/marshaller.c	/^uint8_t *spice_marshaller_add_ref(SpiceMarshaller *m, uint8_t *data, size_t size)$/;"	f
spice_marshaller_add_ref_chunks	spice-common/common/marshaller.c	/^void spice_marshaller_add_ref_chunks(SpiceMarshaller *m, SpiceChunks *chunks)$/;"	f
spice_marshaller_add_ref_full	spice-common/common/marshaller.c	/^uint8_t *spice_marshaller_add_ref_full(SpiceMarshaller *m, uint8_t *data, size_t size,$/;"	f
spice_marshaller_add_uint16	spice-common/common/marshaller.c	/^void *spice_marshaller_add_uint16(SpiceMarshaller *m, uint16_t v)$/;"	f
spice_marshaller_add_uint32	spice-common/common/marshaller.c	/^void *spice_marshaller_add_uint32(SpiceMarshaller *m, uint32_t v)$/;"	f
spice_marshaller_add_uint64	spice-common/common/marshaller.c	/^void *spice_marshaller_add_uint64(SpiceMarshaller *m, uint64_t v)$/;"	f
spice_marshaller_add_uint8	spice-common/common/marshaller.c	/^void *spice_marshaller_add_uint8(SpiceMarshaller *m, uint8_t v)$/;"	f
spice_marshaller_destroy	spice-common/common/marshaller.c	/^void spice_marshaller_destroy(SpiceMarshaller *m)$/;"	f
spice_marshaller_fill_iovec	spice-common/common/marshaller.c	/^int spice_marshaller_fill_iovec(SpiceMarshaller *m, struct iovec *vec,$/;"	f
spice_marshaller_flush	spice-common/common/marshaller.c	/^void spice_marshaller_flush(SpiceMarshaller *m)$/;"	f
spice_marshaller_get_offset	spice-common/common/marshaller.c	/^size_t spice_marshaller_get_offset(SpiceMarshaller *m)$/;"	f
spice_marshaller_get_ptr	spice-common/common/marshaller.c	/^uint8_t *spice_marshaller_get_ptr(SpiceMarshaller *m)$/;"	f
spice_marshaller_get_ptr_submarshaller	spice-common/common/marshaller.c	/^SpiceMarshaller *spice_marshaller_get_ptr_submarshaller(SpiceMarshaller *m, int is_64bit)$/;"	f
spice_marshaller_get_size	spice-common/common/marshaller.c	/^size_t spice_marshaller_get_size(SpiceMarshaller *m)$/;"	f
spice_marshaller_get_submarshaller	spice-common/common/marshaller.c	/^SpiceMarshaller *spice_marshaller_get_submarshaller(SpiceMarshaller *m)$/;"	f
spice_marshaller_get_total_size	spice-common/common/marshaller.c	/^size_t spice_marshaller_get_total_size(SpiceMarshaller *m)$/;"	f
spice_marshaller_init	spice-common/common/marshaller.c	/^static void spice_marshaller_init(SpiceMarshaller *m,$/;"	f	file:
spice_marshaller_item_free_func	spice-common/common/marshaller.h	/^typedef void (*spice_marshaller_item_free_func)(uint8_t *data, void *opaque);$/;"	t
spice_marshaller_linearize	spice-common/common/marshaller.c	/^uint8_t *spice_marshaller_linearize(SpiceMarshaller *m, size_t skip_bytes,$/;"	f
spice_marshaller_new	spice-common/common/marshaller.c	/^SpiceMarshaller *spice_marshaller_new(void)$/;"	f
spice_marshaller_reserve_space	spice-common/common/marshaller.c	/^uint8_t *spice_marshaller_reserve_space(SpiceMarshaller *m, size_t size)$/;"	f
spice_marshaller_reset	spice-common/common/marshaller.c	/^void spice_marshaller_reset(SpiceMarshaller *m)$/;"	f
spice_marshaller_set_base	spice-common/common/marshaller.c	/^void spice_marshaller_set_base(SpiceMarshaller *m, size_t base)$/;"	f
spice_marshaller_set_uint32	spice-common/common/marshaller.c	/^void spice_marshaller_set_uint32(SPICE_GNUC_UNUSED SpiceMarshaller *m, void *ref, uint32_t v)$/;"	f
spice_marshaller_unreserve_space	spice-common/common/marshaller.c	/^void spice_marshaller_unreserve_space(SpiceMarshaller *m, size_t size)$/;"	f
spice_mb	spice-common/spice-protocol/spice/barrier.h	38;"	d
spice_mb	spice-common/spice-protocol/spice/barrier.h	41;"	d
spice_mb	spice-common/spice-protocol/spice/barrier.h	48;"	d
spice_mb	spice-common/spice-protocol/spice/barrier.h	50;"	d
spice_memdup	spice-common/common/mem.c	/^void *spice_memdup(const void *mem, size_t n_bytes)$/;"	f
spice_message_marshallers_get	spice-common/common/generated_client_marshallers.c	/^SpiceMessageMarshallers * spice_message_marshallers_get(void)$/;"	f
spice_message_marshallers_get1	spice-common/common/generated_client_marshallers1.c	/^SpiceMessageMarshallers * spice_message_marshallers_get1(void)$/;"	f
spice_migrate	glib/channel-main.c	/^struct spice_migrate {$/;"	s	file:
spice_migrate	glib/channel-main.c	/^typedef struct spice_migrate spice_migrate;$/;"	t	typeref:struct:spice_migrate	file:
spice_mono_edge_highlight	glib/spice-util.c	/^void spice_mono_edge_highlight(unsigned width, unsigned height,$/;"	f
spice_msg_handler	glib/spice-channel.h	/^typedef void (*spice_msg_handler)(SpiceChannel *channel, SpiceMsgIn *in);$/;"	t
spice_msg_in_hexdump	glib/spice-channel.c	/^void spice_msg_in_hexdump(SpiceMsgIn *in)$/;"	f
spice_msg_in_new	glib/spice-channel.c	/^SpiceMsgIn *spice_msg_in_new(SpiceChannel *channel)$/;"	f
spice_msg_in_parsed	glib/spice-channel.c	/^void *spice_msg_in_parsed(SpiceMsgIn *in)$/;"	f
spice_msg_in_raw	glib/spice-channel.c	/^void *spice_msg_in_raw(SpiceMsgIn *in, int *len)$/;"	f
spice_msg_in_ref	glib/spice-channel.c	/^void spice_msg_in_ref(SpiceMsgIn *in)$/;"	f
spice_msg_in_sub_new	glib/spice-channel.c	/^SpiceMsgIn *spice_msg_in_sub_new(SpiceChannel *channel, SpiceMsgIn *parent,$/;"	f
spice_msg_in_type	glib/spice-channel.c	/^int spice_msg_in_type(SpiceMsgIn *in)$/;"	f
spice_msg_in_unref	glib/spice-channel.c	/^void spice_msg_in_unref(SpiceMsgIn *in)$/;"	f
spice_msg_out_hexdump	glib/spice-channel.c	/^void spice_msg_out_hexdump(SpiceMsgOut *out, unsigned char *data, int len)$/;"	f
spice_msg_out_new	glib/spice-channel.c	/^SpiceMsgOut *spice_msg_out_new(SpiceChannel *channel, int type)$/;"	f
spice_msg_out_ref	glib/spice-channel.c	/^void spice_msg_out_ref(SpiceMsgOut *out)$/;"	f
spice_msg_out_send	glib/spice-channel.c	/^void spice_msg_out_send(SpiceMsgOut *out)$/;"	f
spice_msg_out_send_internal	glib/spice-channel.c	/^void spice_msg_out_send_internal(SpiceMsgOut *out)$/;"	f
spice_msg_out_unref	glib/spice-channel.c	/^void spice_msg_out_unref(SpiceMsgOut *out)$/;"	f
spice_new	spice-common/common/mem.h	143;"	d
spice_new0	spice-common/common/mem.h	144;"	d
spice_open_host	glib/spice-session.c	/^struct spice_open_host {$/;"	s	file:
spice_open_host	glib/spice-session.c	/^typedef struct spice_open_host spice_open_host;$/;"	t	typeref:struct:spice_open_host	file:
spice_openssl_verify_free	spice-common/common/ssl_verify.c	/^void spice_openssl_verify_free(SpiceOpenSSLVerify* verify)$/;"	f
spice_openssl_verify_new	spice-common/common/ssl_verify.c	/^SpiceOpenSSLVerify* spice_openssl_verify_new(SSL *ssl, SPICE_SSL_VERIFY_OP verifyop,$/;"	f
spice_parse_channel_func_t	spice-common/common/client_demarshallers.h	/^typedef uint8_t * (*spice_parse_channel_func_t)(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, int minor,$/;"	t
spice_parse_channel_func_t	spice-common/common/generated_client_demarshallers.c	/^typedef uint8_t * (*spice_parse_channel_func_t)(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, int minor, size_t *size_out, message_destructor_t *free_message);$/;"	t	file:
spice_parse_channel_func_t	spice-common/common/generated_client_demarshallers1.c	/^typedef uint8_t * (*spice_parse_channel_func_t)(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, int minor, size_t *size_out, message_destructor_t *free_message);$/;"	t	file:
spice_parse_channel_func_t	spice-common/common/generated_server_demarshallers.c	/^typedef uint8_t * (*spice_parse_channel_func_t)(uint8_t *message_start, uint8_t *message_end, uint16_t message_type, int minor, size_t *size_out, message_destructor_t *free_message);$/;"	t	file:
spice_parse_msg	spice-common/common/generated_client_demarshallers.c	/^uint8_t * spice_parse_msg(uint8_t *message_start, uint8_t *message_end, uint32_t channel, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f
spice_parse_msg1	spice-common/common/generated_client_demarshallers1.c	/^uint8_t * spice_parse_msg1(uint8_t *message_start, uint8_t *message_end, uint32_t channel, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f
spice_parse_reply	spice-common/common/generated_server_demarshallers.c	/^uint8_t * spice_parse_reply(uint8_t *message_start, uint8_t *message_end, uint32_t channel, uint16_t message_type, SPICE_GNUC_UNUSED int minor, size_t *size_out, message_destructor_t *free_message)$/;"	f
spice_parse_uri	glib/spice-session.c	/^static int spice_parse_uri(SpiceSession *session, const char *original_uri)$/;"	f	file:
spice_pixman_blit	spice-common/common/pixman_utils.c	/^void spice_pixman_blit(pixman_image_t *dest,$/;"	f
spice_pixman_blit_colorkey	spice-common/common/pixman_utils.c	/^void spice_pixman_blit_colorkey (pixman_image_t *dest,$/;"	f
spice_pixman_blit_rop	spice-common/common/pixman_utils.c	/^void spice_pixman_blit_rop (pixman_image_t *dest,$/;"	f
spice_pixman_copy_rect	spice-common/common/pixman_utils.c	/^void spice_pixman_copy_rect (pixman_image_t *image,$/;"	f
spice_pixman_fill_rect	spice-common/common/pixman_utils.c	/^void spice_pixman_fill_rect(pixman_image_t *dest,$/;"	f
spice_pixman_fill_rect_rop	spice-common/common/pixman_utils.c	/^void spice_pixman_fill_rect_rop(pixman_image_t *dest,$/;"	f
spice_pixman_image_get_bpp	spice-common/common/pixman_utils.c	/^int spice_pixman_image_get_bpp(pixman_image_t *image)$/;"	f
spice_pixman_image_get_format	spice-common/common/canvas_utils.c	/^int spice_pixman_image_get_format(pixman_image_t *image, pixman_format_code_t *format)$/;"	f
spice_pixman_image_set_format	spice-common/common/canvas_utils.c	/^spice_pixman_image_set_format(pixman_image_t *image,$/;"	f
spice_pixman_region32_init_rects	spice-common/common/pixman_utils.c	/^pixman_bool_t spice_pixman_region32_init_rects (pixman_region32_t *region,$/;"	f
spice_pixman_tile_rect	spice-common/common/pixman_utils.c	/^void spice_pixman_tile_rect(pixman_image_t *dest,$/;"	f
spice_pixman_tile_rect_rop	spice-common/common/pixman_utils.c	/^void spice_pixman_tile_rect_rop(pixman_image_t *dest,$/;"	f
spice_playback_channel_class_init	glib/channel-playback.c	/^static void spice_playback_channel_class_init(SpicePlaybackChannelClass *klass)$/;"	f	file:
spice_playback_channel_finalize	glib/channel-playback.c	/^static void spice_playback_channel_finalize(GObject *obj)$/;"	f	file:
spice_playback_channel_get_latency	glib/channel-playback.c	/^guint32 spice_playback_channel_get_latency(SpicePlaybackChannel *channel)$/;"	f
spice_playback_channel_get_property	glib/channel-playback.c	/^static void spice_playback_channel_get_property(GObject    *gobject,$/;"	f	file:
spice_playback_channel_init	glib/channel-playback.c	/^static void spice_playback_channel_init(SpicePlaybackChannel *channel)$/;"	f	file:
spice_playback_channel_is_active	glib/channel-playback.c	/^gboolean spice_playback_channel_is_active(SpicePlaybackChannel *channel)$/;"	f
spice_playback_channel_reset	glib/channel-playback.c	/^static void spice_playback_channel_reset(SpiceChannel *channel, gboolean migrating)$/;"	f	file:
spice_playback_channel_reset_capabilities	glib/channel-playback.c	/^static void spice_playback_channel_reset_capabilities(SpiceChannel *channel)$/;"	f	file:
spice_playback_channel_set_delay	glib/channel-playback.c	/^void spice_playback_channel_set_delay(SpicePlaybackChannel *channel, guint32 delay_ms)$/;"	f
spice_playback_channel_set_property	glib/channel-playback.c	/^static void spice_playback_channel_set_property(GObject      *gobject,$/;"	f	file:
spice_playback_channel_sync_latency	glib/channel-playback.c	/^void spice_playback_channel_sync_latency(SpicePlaybackChannel *channel)$/;"	f
spice_port_channel_class_init	glib/channel-port.c	/^static void spice_port_channel_class_init(SpicePortChannelClass *klass)$/;"	f	file:
spice_port_channel_finalize	glib/channel-port.c	/^static void spice_port_channel_finalize(GObject *object)$/;"	f	file:
spice_port_channel_init	glib/channel-port.c	/^static void spice_port_channel_init(SpicePortChannel *channel)$/;"	f	file:
spice_port_channel_reset	glib/channel-port.c	/^static void spice_port_channel_reset(SpiceChannel *channel, gboolean migrating)$/;"	f	file:
spice_port_event	glib/channel-port.c	/^void spice_port_event(SpicePortChannel *self, guint8 event)$/;"	f
spice_port_get_property	glib/channel-port.c	/^static void spice_port_get_property(GObject    *object,$/;"	f	file:
spice_port_write_async	glib/channel-port.c	/^void spice_port_write_async(SpicePortChannel *self,$/;"	f
spice_port_write_finish	glib/channel-port.c	/^gssize spice_port_write_finish(SpicePortChannel *self,$/;"	f
spice_printerr	spice-common/common/log.h	83;"	d
spice_pulse_class_init	glib/spice-pulse.c	/^static void spice_pulse_class_init(SpicePulseClass *klass)$/;"	f	file:
spice_pulse_dispose	glib/spice-pulse.c	/^static void spice_pulse_dispose(GObject *obj)$/;"	f	file:
spice_pulse_finalize	glib/spice-pulse.c	/^static void spice_pulse_finalize(GObject *obj)$/;"	f	file:
spice_pulse_init	glib/spice-pulse.c	/^static void spice_pulse_init(SpicePulse *pulse)$/;"	f	file:
spice_pulse_new	glib/spice-pulse.c	/^SpicePulse *spice_pulse_new(SpiceSession *session, GMainContext *context,$/;"	f
spice_realloc	spice-common/common/mem.c	/^void *spice_realloc(void *mem, size_t n_bytes)$/;"	f
spice_realloc_n	spice-common/common/mem.c	/^void *spice_realloc_n(void *mem, size_t n_blocks, size_t n_block_bytes)$/;"	f
spice_record_channel_class_init	glib/channel-record.c	/^static void spice_record_channel_class_init(SpiceRecordChannelClass *klass)$/;"	f	file:
spice_record_channel_finalize	glib/channel-record.c	/^static void spice_record_channel_finalize(GObject *obj)$/;"	f	file:
spice_record_channel_get_property	glib/channel-record.c	/^static void spice_record_channel_get_property(GObject    *gobject,$/;"	f	file:
spice_record_channel_init	glib/channel-record.c	/^static void spice_record_channel_init(SpiceRecordChannel *channel)$/;"	f	file:
spice_record_channel_reset_capabilities	glib/channel-record.c	/^static void spice_record_channel_reset_capabilities(SpiceChannel *channel)$/;"	f	file:
spice_record_channel_set_property	glib/channel-record.c	/^static void spice_record_channel_set_property(GObject      *gobject,$/;"	f	file:
spice_record_desired_mode	glib/channel-record.c	/^static int spice_record_desired_mode(SpiceChannel *channel, int frequency)$/;"	f	file:
spice_record_mode	glib/channel-record.c	/^static void spice_record_mode(SpiceRecordChannel *channel, uint32_t time,$/;"	f	file:
spice_record_send_data	glib/channel-record.c	/^void spice_record_send_data(SpiceRecordChannel *channel, gpointer data,$/;"	f
spice_record_start_mark	glib/channel-record.c	/^static void spice_record_start_mark(SpiceRecordChannel *channel, uint32_t time)$/;"	f	file:
spice_renew	spice-common/common/mem.h	145;"	d
spice_return_if_fail	spice-common/common/log.h	59;"	d
spice_return_val_if_fail	spice-common/common/log.h	68;"	d
spice_session_abort_migration	glib/spice-session.c	/^void spice_session_abort_migration(SpiceSession *session)$/;"	f
spice_session_channel_destroy	glib/spice-session.c	/^void spice_session_channel_destroy(SpiceSession *session, SpiceChannel *channel)$/;"	f
spice_session_channel_migrate	glib/spice-session.c	/^void spice_session_channel_migrate(SpiceSession *session, SpiceChannel *channel)$/;"	f
spice_session_channel_new	glib/spice-session.c	/^void spice_session_channel_new(SpiceSession *session, SpiceChannel *channel)$/;"	f
spice_session_channel_open_host	glib/spice-session.c	/^GSocketConnection* spice_session_channel_open_host(SpiceSession *session, SpiceChannel *channel,$/;"	f
spice_session_class_init	glib/spice-session.c	/^static void spice_session_class_init(SpiceSessionClass *klass)$/;"	f	file:
spice_session_connect	glib/spice-session.c	/^gboolean spice_session_connect(SpiceSession *session)$/;"	f
spice_session_disconnect	glib/spice-session.c	/^void spice_session_disconnect(SpiceSession *session)$/;"	f
spice_session_dispose	glib/spice-session.c	/^spice_session_dispose(GObject *gobject)$/;"	f	file:
spice_session_dispose_self	glib/spice-session.c	/^void spice_session_dispose_self(SpiceSession *session)$/;"	f
spice_session_dispose_self_cache	glib/spice-session.c	/^void spice_session_dispose_self_cache(SpiceSession *session)$/;"	f
spice_session_finalize	glib/spice-session.c	/^spice_session_finalize(GObject *gobject)$/;"	f	file:
spice_session_get_ca	glib/spice-session.c	/^void spice_session_get_ca(SpiceSession *session, guint8 **ca, guint *size)$/;"	f
spice_session_get_ca_file	glib/spice-session.c	/^const gchar* spice_session_get_ca_file(SpiceSession *session)$/;"	f
spice_session_get_caches	glib/spice-session.c	/^void spice_session_get_caches(SpiceSession *session,$/;"	f
spice_session_get_cert_subject	glib/spice-session.c	/^const gchar* spice_session_get_cert_subject(SpiceSession *session)$/;"	f
spice_session_get_channels	glib/spice-session.c	/^GList *spice_session_get_channels(SpiceSession *session)$/;"	f
spice_session_get_ciphers	glib/spice-session.c	/^const gchar* spice_session_get_ciphers(SpiceSession *session)$/;"	f
spice_session_get_client_provided_socket	glib/spice-session.c	/^gboolean spice_session_get_client_provided_socket(SpiceSession *session)$/;"	f
spice_session_get_connection_id	glib/spice-session.c	/^int spice_session_get_connection_id(SpiceSession *session)$/;"	f
spice_session_get_host	glib/spice-session.c	/^const gchar* spice_session_get_host(SpiceSession *session)$/;"	f
spice_session_get_mm_time	glib/spice-session.c	/^guint32 spice_session_get_mm_time(SpiceSession *session)$/;"	f
spice_session_get_password	glib/spice-session.c	/^const gchar* spice_session_get_password(SpiceSession *session)$/;"	f
spice_session_get_playback_latency	glib/spice-session.c	/^guint32 spice_session_get_playback_latency(SpiceSession *session)$/;"	f
spice_session_get_property	glib/spice-session.c	/^static void spice_session_get_property(GObject    *gobject,$/;"	f	file:
spice_session_get_proxy_uri	glib/spice-session.c	/^SpiceURI *spice_session_get_proxy_uri(SpiceSession *session)$/;"	f
spice_session_get_pubkey	glib/spice-session.c	/^void spice_session_get_pubkey(SpiceSession *session, guint8 **pubkey, guint *size)$/;"	f
spice_session_get_read_only	glib/spice-session.c	/^gboolean spice_session_get_read_only(SpiceSession *self)$/;"	f
spice_session_get_shared_dir	glib/spice-session.c	/^const gchar* spice_session_get_shared_dir(SpiceSession *session)$/;"	f
spice_session_get_username	glib/spice-session.c	/^const gchar* spice_session_get_username(SpiceSession *session)$/;"	f
spice_session_get_verify	glib/spice-session.c	/^guint spice_session_get_verify(SpiceSession *session)$/;"	f
spice_session_has_channel_type	glib/spice-session.c	/^gboolean spice_session_has_channel_type(SpiceSession *session, gint type)$/;"	f
spice_session_init	glib/spice-session.c	/^static void spice_session_init(SpiceSession *session)$/;"	f	file:
spice_session_is_playback_active	glib/spice-session.c	/^gboolean spice_session_is_playback_active(SpiceSession *session)$/;"	f
spice_session_lookup_channel	glib/spice-session.c	/^SpiceChannel* spice_session_lookup_channel(SpiceSession *session, gint id, gint type)$/;"	f
spice_session_migrate_after_main_init	glib/spice-session.c	/^gboolean spice_session_migrate_after_main_init(SpiceSession *self)$/;"	f
spice_session_migrate_end	glib/spice-session.c	/^void spice_session_migrate_end(SpiceSession *self)$/;"	f
spice_session_migration_get_type	glib/spice-glib-enums.c	/^spice_session_migration_get_type (void)$/;"	f
spice_session_new	glib/spice-session.c	/^SpiceSession *spice_session_new(void)$/;"	f
spice_session_new_from_session	glib/spice-session.c	/^SpiceSession *spice_session_new_from_session(SpiceSession *session)$/;"	f
spice_session_open_fd	glib/spice-session.c	/^gboolean spice_session_open_fd(SpiceSession *session, int fd)$/;"	f
spice_session_set_caches_hints	glib/spice-session.c	/^void spice_session_set_caches_hints(SpiceSession *session,$/;"	f
spice_session_set_connection_id	glib/spice-session.c	/^void spice_session_set_connection_id(SpiceSession *session, int id)$/;"	f
spice_session_set_migration	glib/spice-session.c	/^void spice_session_set_migration(SpiceSession *session,$/;"	f
spice_session_set_migration_state	glib/spice-session.c	/^void spice_session_set_migration_state(SpiceSession *session, SpiceSessionMigration state)$/;"	f
spice_session_set_mm_time	glib/spice-session.c	/^void spice_session_set_mm_time(SpiceSession *session, guint32 time)$/;"	f
spice_session_set_name	glib/spice-session.c	/^void spice_session_set_name(SpiceSession *session, const gchar *name)$/;"	f
spice_session_set_port	glib/spice-session.c	/^void spice_session_set_port(SpiceSession *session, int port, gboolean tls)$/;"	f
spice_session_set_property	glib/spice-session.c	/^static void spice_session_set_property(GObject      *gobject,$/;"	f	file:
spice_session_set_shared_dir	glib/spice-session.c	/^void spice_session_set_shared_dir(SpiceSession *session, const gchar *dir)$/;"	f
spice_session_set_uuid	glib/spice-session.c	/^void spice_session_set_uuid(SpiceSession *session, guint8 uuid[16])$/;"	f
spice_session_setup	win32/win32_service.c	/^void spice_session_setup(SpiceSession *session, const char *host, const char *port,$/;"	f
spice_session_setup_from_vv	win32/win32_service.c	/^static void spice_session_setup_from_vv(VirtViewerFile *file, SpiceSession *session)$/;"	f	file:
spice_session_switching_disconnect	glib/spice-session.c	/^void spice_session_switching_disconnect(SpiceSession *self)$/;"	f
spice_session_sync_playback_latency	glib/spice-session.c	/^void spice_session_sync_playback_latency(SpiceSession *session)$/;"	f
spice_session_verify_get_type	glib/spice-glib-enums.c	/^spice_session_verify_get_type (void)$/;"	f
spice_set_session_option	glib/spice-option.c	/^void spice_set_session_option(SpiceSession *session)$/;"	f
spice_smartcard_channel_class_init	glib/channel-smartcard.c	/^static void spice_smartcard_channel_class_init(SpiceSmartcardChannelClass *klass)$/;"	f	file:
spice_smartcard_channel_constructed	glib/channel-smartcard.c	/^static void spice_smartcard_channel_constructed(GObject *object)$/;"	f	file:
spice_smartcard_channel_finalize	glib/channel-smartcard.c	/^static void spice_smartcard_channel_finalize(GObject *obj)$/;"	f	file:
spice_smartcard_channel_init	glib/channel-smartcard.c	/^static void spice_smartcard_channel_init(SpiceSmartcardChannel *channel)$/;"	f	file:
spice_smartcard_channel_reset	glib/channel-smartcard.c	/^static void spice_smartcard_channel_reset(SpiceChannel *channel, gboolean migrating)$/;"	f	file:
spice_smartcard_channel_up	glib/channel-smartcard.c	/^static void spice_smartcard_channel_up(SpiceChannel *channel)$/;"	f	file:
spice_smartcard_channel_up_cb	glib/channel-smartcard.c	/^static void spice_smartcard_channel_up_cb(GObject *source_object,$/;"	f	file:
spice_smartcard_manager_class_init	glib/smartcard-manager.c	/^static void spice_smartcard_manager_class_init(SpiceSmartcardManagerClass *klass)$/;"	f	file:
spice_smartcard_manager_dispose	glib/smartcard-manager.c	/^static void spice_smartcard_manager_dispose(GObject *gobject)$/;"	f	file:
spice_smartcard_manager_finalize	glib/smartcard-manager.c	/^static void spice_smartcard_manager_finalize(GObject *gobject)$/;"	f	file:
spice_smartcard_manager_get	glib/smartcard-manager.c	/^SpiceSmartcardManager *spice_smartcard_manager_get(void)$/;"	f
spice_smartcard_manager_get_readers	glib/smartcard-manager.c	/^GList *spice_smartcard_manager_get_readers(SpiceSmartcardManager *manager)$/;"	f
spice_smartcard_manager_init	glib/smartcard-manager.c	/^static void spice_smartcard_manager_init(SpiceSmartcardManager *smartcard_manager)$/;"	f	file:
spice_smartcard_manager_init_async	glib/smartcard-manager.c	/^void spice_smartcard_manager_init_async(SpiceSession *session,$/;"	f
spice_smartcard_manager_init_finish	glib/smartcard-manager.c	/^gboolean spice_smartcard_manager_init_finish(SpiceSession *session,$/;"	f
spice_smartcard_manager_insert_card	glib/smartcard-manager.c	/^gboolean spice_smartcard_manager_insert_card(SpiceSmartcardManager *manager)$/;"	f
spice_smartcard_manager_new	glib/smartcard-manager.c	/^static SpiceSmartcardManager *spice_smartcard_manager_new(void)$/;"	f	file:
spice_smartcard_manager_remove_card	glib/smartcard-manager.c	/^gboolean spice_smartcard_manager_remove_card(SpiceSmartcardManager *manager)$/;"	f
spice_smartcard_manager_update_monitor	glib/smartcard-manager.c	/^spice_smartcard_manager_update_monitor(void)$/;"	f	file:
spice_smartcard_reader_insert_card	glib/smartcard-manager.c	/^gboolean spice_smartcard_reader_insert_card(SpiceSmartcardReader *reader)$/;"	f
spice_smartcard_reader_is_software	glib/smartcard-manager.c	/^gboolean spice_smartcard_reader_is_software(SpiceSmartcardReader *reader)$/;"	f
spice_smartcard_reader_remove_card	glib/smartcard-manager.c	/^gboolean spice_smartcard_reader_remove_card(SpiceSmartcardReader *reader)$/;"	f
spice_static_assert	spice-common/common/log.h	144;"	d
spice_strdup	spice-common/common/mem.c	/^char *spice_strdup(const char *str)$/;"	f
spice_strndup	spice-common/common/mem.c	/^char *spice_strndup(const char *str, size_t n_bytes)$/;"	f
spice_strnlen	spice-common/common/mem.c	/^size_t spice_strnlen(const char *str, size_t max_len)$/;"	f
spice_strv_contains	glib/spice-util.c	/^gboolean spice_strv_contains(const GStrv strv, const gchar *str)$/;"	f
spice_surface_format_to_pixman	spice-common/common/pixman_utils.c	/^pixman_format_code_t spice_surface_format_to_pixman(uint32_t surface_format)$/;"	f
spice_unix2dos	glib/spice-util.c	/^gchar* spice_unix2dos(const gchar *str, gssize len, GError **error)$/;"	f
spice_uri_class_init	glib/spice-uri.c	/^static void spice_uri_class_init(SpiceURIClass *klass)$/;"	f	file:
spice_uri_create	glib/spice-session.c	/^static int spice_uri_create(SpiceSession *session, char *dest, int len)$/;"	f	file:
spice_uri_finalize	glib/spice-uri.c	/^static void spice_uri_finalize(GObject* obj)$/;"	f	file:
spice_uri_get_hostname	glib/spice-uri.c	/^const gchar* spice_uri_get_hostname(SpiceURI *self)$/;"	f
spice_uri_get_password	glib/spice-uri.c	/^const gchar* spice_uri_get_password(SpiceURI *self)$/;"	f
spice_uri_get_port	glib/spice-uri.c	/^guint spice_uri_get_port(SpiceURI *self)$/;"	f
spice_uri_get_property	glib/spice-uri.c	/^static void spice_uri_get_property(GObject *object, guint property_id,$/;"	f	file:
spice_uri_get_scheme	glib/spice-uri.c	/^const gchar* spice_uri_get_scheme(SpiceURI *self)$/;"	f
spice_uri_get_user	glib/spice-uri.c	/^const gchar* spice_uri_get_user(SpiceURI *self)$/;"	f
spice_uri_init	glib/spice-uri.c	/^static void spice_uri_init (SpiceURI *self)$/;"	f	file:
spice_uri_new	glib/spice-uri.c	/^SpiceURI* spice_uri_new(void)$/;"	f
spice_uri_parse	glib/spice-uri.c	/^gboolean spice_uri_parse(SpiceURI *self, const gchar *_uri, GError **error)$/;"	f
spice_uri_set_hostname	glib/spice-uri.c	/^void spice_uri_set_hostname(SpiceURI *self, const gchar *hostname)$/;"	f
spice_uri_set_password	glib/spice-uri.c	/^void spice_uri_set_password(SpiceURI *self, const gchar *password)$/;"	f
spice_uri_set_port	glib/spice-uri.c	/^void spice_uri_set_port(SpiceURI *self, guint port)$/;"	f
spice_uri_set_property	glib/spice-uri.c	/^static void spice_uri_set_property(GObject *object, guint property_id,$/;"	f	file:
spice_uri_set_scheme	glib/spice-uri.c	/^void spice_uri_set_scheme(SpiceURI *self, const gchar *scheme)$/;"	f
spice_uri_set_user	glib/spice-uri.c	/^void spice_uri_set_user(SpiceURI *self, const gchar *user)$/;"	f
spice_uri_to_string	glib/spice-uri.c	/^gchar* spice_uri_to_string(SpiceURI* self)$/;"	f
spice_usb_device_equal_libdev	glib/usb-device-manager.c	/^spice_usb_device_equal_libdev(SpiceUsbDevice *device,$/;"	f	file:
spice_usb_device_get_busnum	glib/usb-device-manager.c	/^guint8 spice_usb_device_get_busnum(const SpiceUsbDevice *device)$/;"	f
spice_usb_device_get_description	glib/usb-device-manager.c	/^gchar *spice_usb_device_get_description(SpiceUsbDevice *device, const gchar *format)$/;"	f
spice_usb_device_get_devaddr	glib/usb-device-manager.c	/^guint8 spice_usb_device_get_devaddr(const SpiceUsbDevice *device)$/;"	f
spice_usb_device_get_pid	glib/usb-device-manager.c	/^guint16 spice_usb_device_get_pid(const SpiceUsbDevice *device)$/;"	f
spice_usb_device_get_state	glib/usb-device-manager.c	/^guint8 spice_usb_device_get_state(SpiceUsbDevice *device)$/;"	f
spice_usb_device_get_vid	glib/usb-device-manager.c	/^guint16 spice_usb_device_get_vid(const SpiceUsbDevice *device)$/;"	f
spice_usb_device_manager_add_dev	glib/usb-device-manager.c	/^static void spice_usb_device_manager_add_dev(SpiceUsbDeviceManager  *self,$/;"	f	file:
spice_usb_device_manager_add_udev	glib/usb-device-manager.c	/^static void spice_usb_device_manager_add_udev(SpiceUsbDeviceManager  *self,$/;"	f	file:
spice_usb_device_manager_auto_connect_cb	glib/usb-device-manager.c	/^void spice_usb_device_manager_auto_connect_cb(GObject      *gobject,$/;"	f
spice_usb_device_manager_can_redirect_device	glib/usb-device-manager.c	/^spice_usb_device_manager_can_redirect_device(SpiceUsbDeviceManager  *self,$/;"	f
spice_usb_device_manager_channel_connect_cb	glib/usb-device-manager.c	/^static void spice_usb_device_manager_channel_connect_cb($/;"	f	file:
spice_usb_device_manager_check_redir_on_connect	glib/usb-device-manager.c	/^static void spice_usb_device_manager_check_redir_on_connect($/;"	f	file:
spice_usb_device_manager_class_init	glib/usb-device-manager.c	/^static void spice_usb_device_manager_class_init(SpiceUsbDeviceManagerClass *klass)$/;"	f	file:
spice_usb_device_manager_connect_device_async	glib/usb-device-manager.c	/^void spice_usb_device_manager_connect_device_async(SpiceUsbDeviceManager *self,$/;"	f
spice_usb_device_manager_connect_device_finish	glib/usb-device-manager.c	/^gboolean spice_usb_device_manager_connect_device_finish($/;"	f
spice_usb_device_manager_device_error	glib/usb-device-manager.c	/^void spice_usb_device_manager_device_error($/;"	f
spice_usb_device_manager_device_match	glib/usb-device-manager.c	/^spice_usb_device_manager_device_match(SpiceUsbDevice *device,$/;"	f	file:
spice_usb_device_manager_device_to_libdev	glib/usb-device-manager.c	/^spice_usb_device_manager_device_to_libdev(SpiceUsbDeviceManager *self,$/;"	f	file:
spice_usb_device_manager_disconnect_device	glib/usb-device-manager.c	/^void spice_usb_device_manager_disconnect_device(SpiceUsbDeviceManager *self,$/;"	f
spice_usb_device_manager_dispose	glib/usb-device-manager.c	/^static void spice_usb_device_manager_dispose(GObject *gobject)$/;"	f	file:
spice_usb_device_manager_drv_install_cb	glib/usb-device-manager.c	/^static void spice_usb_device_manager_drv_install_cb(GObject *gobject,$/;"	f	file:
spice_usb_device_manager_finalize	glib/usb-device-manager.c	/^static void spice_usb_device_manager_finalize(GObject *gobject)$/;"	f	file:
spice_usb_device_manager_find_device	glib/usb-device-manager.c	/^spice_usb_device_manager_find_device(SpiceUsbDeviceManager *self,$/;"	f	file:
spice_usb_device_manager_get	glib/usb-device-manager.c	/^SpiceUsbDeviceManager *spice_usb_device_manager_get(SpiceSession *session,$/;"	f
spice_usb_device_manager_get_channel_for_dev	glib/usb-device-manager.c	/^static SpiceUsbredirChannel *spice_usb_device_manager_get_channel_for_dev($/;"	f	file:
spice_usb_device_manager_get_device_descriptor	glib/usb-device-manager.c	/^static gboolean spice_usb_device_manager_get_device_descriptor($/;"	f	file:
spice_usb_device_manager_get_devices	glib/usb-device-manager.c	/^GPtrArray* spice_usb_device_manager_get_devices(SpiceUsbDeviceManager *self)$/;"	f
spice_usb_device_manager_get_devices_with_filter	glib/usb-device-manager.c	/^GPtrArray* spice_usb_device_manager_get_devices_with_filter($/;"	f
spice_usb_device_manager_get_libdev_vid_pid	glib/usb-device-manager.c	/^static gboolean spice_usb_device_manager_get_libdev_vid_pid($/;"	f	file:
spice_usb_device_manager_get_property	glib/usb-device-manager.c	/^static void spice_usb_device_manager_get_property(GObject     *gobject,$/;"	f	file:
spice_usb_device_manager_get_udev_bus_n_address	glib/usb-device-manager.c	/^static gboolean spice_usb_device_manager_get_udev_bus_n_address($/;"	f	file:
spice_usb_device_manager_hotplug_cb	glib/usb-device-manager.c	/^static int spice_usb_device_manager_hotplug_cb(libusb_context       *ctx,$/;"	f	file:
spice_usb_device_manager_hotplug_idle_cb	glib/usb-device-manager.c	/^static gboolean spice_usb_device_manager_hotplug_idle_cb(gpointer user_data)$/;"	f	file:
spice_usb_device_manager_init	glib/usb-device-manager.c	/^static void spice_usb_device_manager_init(SpiceUsbDeviceManager *self)$/;"	f	file:
spice_usb_device_manager_initable_iface_init	glib/usb-device-manager.c	/^static void spice_usb_device_manager_initable_iface_init(GInitableIface *iface)$/;"	f	file:
spice_usb_device_manager_initable_init	glib/usb-device-manager.c	/^static gboolean spice_usb_device_manager_initable_init(GInitable  *initable,$/;"	f	file:
spice_usb_device_manager_is_device_connected	glib/usb-device-manager.c	/^gboolean spice_usb_device_manager_is_device_connected(SpiceUsbDeviceManager *self,$/;"	f
spice_usb_device_manager_libdev_match	glib/usb-device-manager.c	/^spice_usb_device_manager_libdev_match(libusb_device *libdev,$/;"	f	file:
spice_usb_device_manager_remove_dev	glib/usb-device-manager.c	/^static void spice_usb_device_manager_remove_dev(SpiceUsbDeviceManager *self,$/;"	f	file:
spice_usb_device_manager_remove_udev	glib/usb-device-manager.c	/^static void spice_usb_device_manager_remove_udev(SpiceUsbDeviceManager  *self,$/;"	f	file:
spice_usb_device_manager_set_property	glib/usb-device-manager.c	/^static void spice_usb_device_manager_set_property(GObject       *gobject,$/;"	f	file:
spice_usb_device_manager_start_event_listening	glib/usb-device-manager.c	/^gboolean spice_usb_device_manager_start_event_listening($/;"	f
spice_usb_device_manager_stop_event_listening	glib/usb-device-manager.c	/^void spice_usb_device_manager_stop_event_listening($/;"	f
spice_usb_device_manager_uevent_cb	glib/usb-device-manager.c	/^static void spice_usb_device_manager_uevent_cb(GUdevClient     *client,$/;"	f	file:
spice_usb_device_manager_usb_ev_thread	glib/usb-device-manager.c	/^static gpointer spice_usb_device_manager_usb_ev_thread(gpointer user_data)$/;"	f	file:
spice_usb_device_new	glib/usb-device-manager.c	/^static SpiceUsbDeviceInfo *spice_usb_device_new(libusb_device *libdev)$/;"	f	file:
spice_usb_device_ref	glib/usb-device-manager.c	/^SpiceUsbDevice *spice_usb_device_ref(SpiceUsbDevice *device)$/;"	f
spice_usb_device_set_state	glib/usb-device-manager.c	/^void spice_usb_device_set_state(SpiceUsbDevice *device, guint8 state)$/;"	f
spice_usb_device_unref	glib/usb-device-manager.c	/^void spice_usb_device_unref(SpiceUsbDevice *device)$/;"	f
spice_usb_util_get_device_strings	glib/usbutil.c	/^void spice_usb_util_get_device_strings(int bus, int address,$/;"	f
spice_usbredir_channel_class_init	glib/channel-usbredir.c	/^static void spice_usbredir_channel_class_init(SpiceUsbredirChannelClass *klass)$/;"	f	file:
spice_usbredir_channel_connect_device_async	glib/channel-usbredir.c	/^void spice_usbredir_channel_connect_device_async($/;"	f
spice_usbredir_channel_connect_device_finish	glib/channel-usbredir.c	/^gboolean spice_usbredir_channel_connect_device_finish($/;"	f
spice_usbredir_channel_disconnect_device	glib/channel-usbredir.c	/^void spice_usbredir_channel_disconnect_device(SpiceUsbredirChannel *channel)$/;"	f
spice_usbredir_channel_dispose	glib/channel-usbredir.c	/^static void spice_usbredir_channel_dispose(GObject *obj)$/;"	f	file:
spice_usbredir_channel_finalize	glib/channel-usbredir.c	/^static void spice_usbredir_channel_finalize(GObject *obj)$/;"	f	file:
spice_usbredir_channel_get_device	glib/channel-usbredir.c	/^libusb_device *spice_usbredir_channel_get_device(SpiceUsbredirChannel *channel)$/;"	f
spice_usbredir_channel_get_guest_filter	glib/channel-usbredir.c	/^void spice_usbredir_channel_get_guest_filter($/;"	f
spice_usbredir_channel_init	glib/channel-usbredir.c	/^static void spice_usbredir_channel_init(SpiceUsbredirChannel *channel)$/;"	f	file:
spice_usbredir_channel_open_acl_cb	glib/channel-usbredir.c	/^static void spice_usbredir_channel_open_acl_cb($/;"	f	file:
spice_usbredir_channel_open_device	glib/channel-usbredir.c	/^static gboolean spice_usbredir_channel_open_device($/;"	f	file:
spice_usbredir_channel_reset	glib/channel-usbredir.c	/^static void spice_usbredir_channel_reset(SpiceChannel *c, gboolean migrating)$/;"	f	file:
spice_usbredir_channel_set_context	glib/channel-usbredir.c	/^void spice_usbredir_channel_set_context(SpiceUsbredirChannel *channel,$/;"	f
spice_usbredir_channel_up	glib/channel-usbredir.c	/^static void spice_usbredir_channel_up(SpiceChannel *c)$/;"	f	file:
spice_usbutil_get_sysfs_attribute	glib/usbutil.c	/^static gchar *spice_usbutil_get_sysfs_attribute(int bus, int address,$/;"	f	file:
spice_usbutil_libusb_strerror	glib/usbutil.c	/^const char *spice_usbutil_libusb_strerror(enum libusb_error error_code)$/;"	f
spice_usbutil_load_usbids	glib/usbutil.c	/^static gboolean spice_usbutil_load_usbids(void)$/;"	f	file:
spice_usbutil_parse_usbids	glib/usbutil.c	/^static gboolean spice_usbutil_parse_usbids(gchar *path)$/;"	f	file:
spice_util_enable_debug_messages	glib/spice-util.c	/^static void spice_util_enable_debug_messages(void)$/;"	f	file:
spice_util_get_debug	glib/spice-util.c	/^gboolean spice_util_get_debug(void)$/;"	f
spice_util_get_version_string	glib/spice-util.c	/^const gchar *spice_util_get_version_string(void)$/;"	f
spice_util_set_debug	glib/spice-util.c	/^void spice_util_set_debug(gboolean enabled)$/;"	f
spice_uuid_to_string	glib/spice-util.c	/^gchar* spice_uuid_to_string(const guint8 uuid[16])$/;"	f
spice_vmc_input_stream_class_init	glib/vmcstream.c	/^spice_vmc_input_stream_class_init(SpiceVmcInputStreamClass *klass)$/;"	f	file:
spice_vmc_input_stream_close	glib/vmcstream.c	/^spice_vmc_input_stream_close(GInputStream  *stream,$/;"	f	file:
spice_vmc_input_stream_co_data	glib/vmcstream.c	/^spice_vmc_input_stream_co_data(SpiceVmcInputStream *self,$/;"	f
spice_vmc_input_stream_init	glib/vmcstream.c	/^spice_vmc_input_stream_init(SpiceVmcInputStream *self)$/;"	f	file:
spice_vmc_input_stream_new	glib/vmcstream.c	/^spice_vmc_input_stream_new(void)$/;"	f	file:
spice_vmc_input_stream_read	glib/vmcstream.c	/^spice_vmc_input_stream_read(GInputStream  *stream,$/;"	f	file:
spice_vmc_input_stream_read_all_async	glib/vmcstream.c	/^spice_vmc_input_stream_read_all_async(GInputStream        *stream,$/;"	f
spice_vmc_input_stream_read_all_finish	glib/vmcstream.c	/^spice_vmc_input_stream_read_all_finish(GInputStream *stream,$/;"	f
spice_vmc_input_stream_read_async	glib/vmcstream.c	/^spice_vmc_input_stream_read_async(GInputStream        *stream,$/;"	f	file:
spice_vmc_input_stream_read_finish	glib/vmcstream.c	/^spice_vmc_input_stream_read_finish(GInputStream *stream,$/;"	f	file:
spice_vmc_input_stream_skip	glib/vmcstream.c	/^spice_vmc_input_stream_skip(GInputStream  *stream,$/;"	f	file:
spice_vmc_output_stream_class_init	glib/vmcstream.c	/^spice_vmc_output_stream_class_init(SpiceVmcOutputStreamClass *klass)$/;"	f	file:
spice_vmc_output_stream_init	glib/vmcstream.c	/^spice_vmc_output_stream_init(SpiceVmcOutputStream *self)$/;"	f	file:
spice_vmc_output_stream_new	glib/vmcstream.c	/^spice_vmc_output_stream_new(SpiceChannel *channel)$/;"	f	file:
spice_vmc_output_stream_write_async	glib/vmcstream.c	/^spice_vmc_output_stream_write_async(GOutputStream *stream,$/;"	f	file:
spice_vmc_output_stream_write_finish	glib/vmcstream.c	/^spice_vmc_output_stream_write_finish(GOutputStream *stream,$/;"	f	file:
spice_vmc_output_stream_write_fn	glib/vmcstream.c	/^spice_vmc_output_stream_write_fn(GOutputStream   *stream,$/;"	f	file:
spice_vmc_stream_class_init	glib/vmcstream.c	/^spice_vmc_stream_class_init(SpiceVmcStreamClass *klass)$/;"	f	file:
spice_vmc_stream_finalize	glib/vmcstream.c	/^spice_vmc_stream_finalize(GObject *object)$/;"	f	file:
spice_vmc_stream_get_input_stream	glib/vmcstream.c	/^spice_vmc_stream_get_input_stream(GIOStream *stream)$/;"	f	file:
spice_vmc_stream_get_output_stream	glib/vmcstream.c	/^spice_vmc_stream_get_output_stream(GIOStream *stream)$/;"	f	file:
spice_vmc_stream_init	glib/vmcstream.c	/^spice_vmc_stream_init(SpiceVmcStream *self)$/;"	f	file:
spice_vmc_stream_new	glib/vmcstream.c	/^spice_vmc_stream_new(SpiceChannel *channel)$/;"	f
spice_vmc_write_async	glib/channel-base.c	/^void spice_vmc_write_async(SpiceChannel *self,$/;"	f
spice_vmc_write_finish	glib/channel-base.c	/^gssize spice_vmc_write_finish(SpiceChannel *self,$/;"	f
spice_warn_if	spice-common/common/log.h	127;"	d
spice_warn_if_fail	spice-common/common/log.h	119;"	d
spice_warn_if_reached	spice-common/common/log.h	77;"	d
spice_warning	spice-common/common/log.h	101;"	d
spice_webdav_channel_class_init	glib/channel-webdav.c	/^static void spice_webdav_channel_class_init(SpiceWebdavChannelClass *klass)$/;"	f	file:
spice_webdav_channel_dispose	glib/channel-webdav.c	/^static void spice_webdav_channel_dispose(GObject *object)$/;"	f	file:
spice_webdav_channel_finalize	glib/channel-webdav.c	/^static void spice_webdav_channel_finalize(GObject *object)$/;"	f	file:
spice_webdav_channel_init	glib/channel-webdav.c	/^static void spice_webdav_channel_init(SpiceWebdavChannel *channel)$/;"	f	file:
spice_webdav_channel_up	glib/channel-webdav.c	/^static void spice_webdav_channel_up(SpiceChannel *channel)$/;"	f	file:
spice_webdav_handle_msg	glib/channel-webdav.c	/^static void spice_webdav_handle_msg(SpiceChannel *channel, SpiceMsgIn *msg)$/;"	f	file:
spice_win_usb_driver_class_init	glib/win-usb-driver-install.c	/^static void spice_win_usb_driver_class_init(SpiceWinUsbDriverClass *klass)$/;"	f	file:
spice_win_usb_driver_close	glib/win-usb-driver-install.c	/^static void spice_win_usb_driver_close(SpiceWinUsbDriver *self)$/;"	f	file:
spice_win_usb_driver_error_quark	glib/win-usb-driver-install.c	/^GQuark spice_win_usb_driver_error_quark(void)$/;"	f
spice_win_usb_driver_finalize	glib/win-usb-driver-install.c	/^static void spice_win_usb_driver_finalize(GObject *gobject)$/;"	f	file:
spice_win_usb_driver_get_device	glib/win-usb-driver-install.c	/^SpiceUsbDevice *spice_win_usb_driver_get_device(SpiceWinUsbDriver *self)$/;"	f
spice_win_usb_driver_init	glib/win-usb-driver-install.c	/^static void spice_win_usb_driver_init(SpiceWinUsbDriver *self)$/;"	f	file:
spice_win_usb_driver_install	glib/win-usb-driver-install.c	/^void spice_win_usb_driver_install(SpiceWinUsbDriver *self,$/;"	f
spice_win_usb_driver_install_finish	glib/win-usb-driver-install.c	/^gint spice_win_usb_driver_install_finish(SpiceWinUsbDriver *self,$/;"	f
spice_win_usb_driver_new	glib/win-usb-driver-install.c	/^SpiceWinUsbDriver *spice_win_usb_driver_new(void)$/;"	f
spice_win_usb_driver_op	glib/win-usb-driver-install.c	/^void spice_win_usb_driver_op(SpiceWinUsbDriver *self,$/;"	f	file:
spice_win_usb_driver_read_reply_async	glib/win-usb-driver-install.c	/^void spice_win_usb_driver_read_reply_async(SpiceWinUsbDriver *self)$/;"	f	file:
spice_win_usb_driver_send_request	glib/win-usb-driver-install.c	/^gboolean spice_win_usb_driver_send_request(SpiceWinUsbDriver *self, guint16 op,$/;"	f	file:
spice_win_usb_driver_uninstall	glib/win-usb-driver-install.c	/^void spice_win_usb_driver_uninstall(SpiceWinUsbDriver *self,$/;"	f
spice_window_class_init	win32/win32-spicy.h	/^static void spice_window_class_init (SpiceWindowClass *klass) {}$/;"	f
spice_window_init	win32/win32-spicy.h	/^static void spice_window_init (SpiceWindow *self) {}$/;"	f
spice_x509_mem_lookup	glib/spice-channel.c	/^static X509_LOOKUP_METHOD spice_x509_mem_lookup = {$/;"	v	file:
spice_yes_no	glib/spice-util.c	/^const gchar* spice_yes_no(gboolean value)$/;"	f
spid	glib/win-usb-dev.c	/^    gchar spid[8];$/;"	m	struct:_GUdevDeviceInfo	file:
split	ffmpeg/include/libavcodec/avcodec.h	/^    int (*split)(AVCodecContext *avctx, const uint8_t *buf, int buf_size);$/;"	m	struct:AVCodecParser
sport	glib/channel-main.c	/^    uint16_t sport;$/;"	m	struct:OldRedMigrationBegin	file:
sport	spice-common/common/messages.h	/^    uint16_t sport;$/;"	m	struct:SpiceMigrationDstInfo
sport	spice-common/common/messages.h	/^    uint16_t sport;$/;"	m	struct:SpiceMsgMainMigrationSwitchHost
src	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterContext *src;       \/\/\/< source filter$/;"	m	struct:AVFilterLink
src	glib/gio-coroutine.c	/^    GSource src;$/;"	m	struct:_GConditionWaitSource	file:
src	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL		src;$/;"	m	struct:QXLComposite
src_area	spice-common/common/draw.h	/^    SpiceRect src_area;$/;"	m	struct:SpiceAlphaBlend
src_area	spice-common/common/draw.h	/^    SpiceRect src_area;$/;"	m	struct:SpiceCopy
src_area	spice-common/common/draw.h	/^    SpiceRect src_area;$/;"	m	struct:SpiceOpaque
src_area	spice-common/common/draw.h	/^    SpiceRect src_area;$/;"	m	struct:SpiceRop3
src_area	spice-common/common/draw.h	/^    SpiceRect src_area;$/;"	m	struct:SpiceTransparent
src_area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect src_area;$/;"	m	struct:QXLAlphaBlend
src_area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect src_area;$/;"	m	struct:QXLCompatAlphaBlend
src_area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect src_area;$/;"	m	struct:QXLCopy
src_area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect src_area;$/;"	m	struct:QXLOpaque
src_area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect src_area;$/;"	m	struct:QXLRop3
src_area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect src_area;$/;"	m	struct:QXLTransparent
src_bitmap	spice-common/common/draw.h	/^    SpiceImage *src_bitmap;$/;"	m	struct:SpiceAlphaBlend
src_bitmap	spice-common/common/draw.h	/^    SpiceImage *src_bitmap;$/;"	m	struct:SpiceComposite
src_bitmap	spice-common/common/draw.h	/^    SpiceImage *src_bitmap;$/;"	m	struct:SpiceCopy
src_bitmap	spice-common/common/draw.h	/^    SpiceImage *src_bitmap;$/;"	m	struct:SpiceOpaque
src_bitmap	spice-common/common/draw.h	/^    SpiceImage *src_bitmap;$/;"	m	struct:SpiceRop3
src_bitmap	spice-common/common/draw.h	/^    SpiceImage *src_bitmap;$/;"	m	struct:SpiceTransparent
src_bitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL src_bitmap;$/;"	m	struct:QXLAlphaBlend
src_bitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL src_bitmap;$/;"	m	struct:QXLCompatAlphaBlend
src_bitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL src_bitmap;$/;"	m	struct:QXLCopy
src_bitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL src_bitmap;$/;"	m	struct:QXLOpaque
src_bitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL src_bitmap;$/;"	m	struct:QXLRop3
src_bitmap	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL src_bitmap;$/;"	m	struct:QXLTransparent
src_channel	glib/channel-main.c	/^    SpiceChannel *src_channel;$/;"	m	struct:spice_migrate	file:
src_color	spice-common/common/draw.h	/^    uint32_t src_color;$/;"	m	struct:SpiceTransparent
src_color	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t src_color;$/;"	m	struct:QXLTransparent
src_height	spice-common/common/messages.h	/^    uint32_t src_height;$/;"	m	struct:SpiceMsgDisplayStreamCreate
src_mig_version	glib/channel-main.c	/^    uint32_t src_mig_version;$/;"	m	struct:spice_migrate	file:
src_mig_version	spice-common/common/messages.h	/^    uint32_t src_mig_version;$/;"	m	struct:SpiceMsgMainMigrateBeginSeamless
src_origin	spice-common/common/draw.h	/^    SpicePoint16 src_origin;$/;"	m	struct:SpiceComposite
src_origin	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPoint16		src_origin;$/;"	m	struct:QXLComposite
src_pos	spice-common/common/messages.h	/^    SpicePoint src_pos;$/;"	m	struct:SpiceMsgDisplayCopyBits
src_pos	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPoint src_pos;$/;"	m	struct:QXLCopyBits
src_transform	spice-common/common/draw.h	/^    SpiceTransform src_transform;$/;"	m	struct:SpiceComposite
src_transform	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL		src_transform;		\/* May be NULL *\/$/;"	m	struct:QXLComposite
src_version	spice-common/common/messages.h	/^    uint32_t src_version;$/;"	m	struct:SpiceMsgcMainMigrateDstDoSeamless
src_width	spice-common/common/messages.h	/^    uint32_t src_width;$/;"	m	struct:SpiceMsgDisplayStreamCreate
src_x	ffmpeg/include/libavutil/motion_vector.h	/^    int16_t src_x, src_y;$/;"	m	struct:AVMotionVector
src_y	ffmpeg/include/libavutil/motion_vector.h	/^    int16_t src_x, src_y;$/;"	m	struct:AVMotionVector
srcpad	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterPad *srcpad;        \/\/\/< output pad on the source filter$/;"	m	struct:AVFilterLink
ssl	glib/spice-channel-priv.h	/^    SSL                         *ssl;$/;"	m	struct:_SpiceChannelPrivate
ssl	spice-common/common/ssl_verify.h	/^    SSL                 *ssl;$/;"	m	struct:__anon131
sslverify	glib/spice-channel-priv.h	/^    SpiceOpenSSLVerify          *sslverify;$/;"	m	struct:_SpiceChannelPrivate
stabrand	spice-common/common/quic.c	/^static unsigned int stabrand(void)$/;"	f	file:
stack	glib/continuation.h	/^	char *stack;$/;"	m	struct:continuation
stack_size	glib/continuation.h	/^	size_t stack_size;$/;"	m	struct:continuation
stack_size	glib/coroutine.h	/^	size_t stack_size;$/;"	m	struct:coroutine
stamp	spice-common/common/messages.h	/^    uint64_t stamp;$/;"	m	struct:SpiceMsgDisplayStreamCreate
start	ffmpeg/include/libavformat/avformat.h	/^    int64_t start, end;     \/\/\/< chapter start\/end time in time_base units$/;"	m	struct:AVChapter
start	ffmpeg/include/libavutil/timecode.h	/^    int start;          \/\/\/< timecode frame start (first base frame number)$/;"	m	struct:__anon37
start_client	glib/channel-webdav.c	/^static void start_client(SpiceWebdavChannel *self)$/;"	f	file:
start_demux	glib/channel-webdav.c	/^static void start_demux(SpiceWebdavChannel *self)$/;"	f	file:
start_display_time	ffmpeg/include/libavcodec/avcodec.h	/^    uint32_t start_display_time; \/* relative to packet pts, in ms *\/$/;"	m	struct:AVSubtitle
start_draw	spice-common/common/glc.c	/^static inline void start_draw(InternaCtx *ctx)$/;"	f	file:
start_frame	ffmpeg/include/libavcodec/avcodec.h	/^    int (*start_frame)(AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size);$/;"	m	struct:AVHWAccel
start_frame	ffmpeg/include/libavcodec/avcodec.h	/^    int start_frame;$/;"	m	struct:RcOverride
start_frame	ffmpeg/include/libavfilter/avfilter.h	/^    int (*start_frame)(AVFilterLink *link, AVFilterBufferRef *picref);$/;"	m	struct:AVFilterPad
start_frame_mm_time	spice-common/common/messages.h	/^    uint32_t start_frame_mm_time;$/;"	m	struct:SpiceMsgcDisplayStreamReport
start_mm_time	glib/channel-display-priv.h	/^    uint32_t start_mm_time;$/;"	m	struct:drops_sequence_stats
start_mv_blocks_num	ffmpeg/include/libavcodec/xvmc.h	/^    int             start_mv_blocks_num;$/;"	m	struct:xvmc_pix_fmt
start_point	spice-common/common/glc.c	/^    int start_point;$/;"	m	struct:Pathpath	file:
start_skip_samples	ffmpeg/include/libavformat/avformat.h	/^    int64_t start_skip_samples;$/;"	m	struct:AVStream
start_time	ffmpeg/include/libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVFormatContext
start_time	ffmpeg/include/libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVProgram
start_time	ffmpeg/include/libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVStream
start_time_realtime	ffmpeg/include/libavformat/avformat.h	/^    int64_t start_time_realtime;$/;"	m	struct:AVFormatContext
started	glib/channel-record.c	/^    gboolean                    started;$/;"	m	struct:_SpiceRecordChannelPrivate	file:
started	glib/spice-pulse.c	/^    gboolean                started;$/;"	m	struct:stream	file:
state	ffmpeg/include/libavcodec/vdpau.h	/^    int state; \/\/\/< Holds FF_VDPAU_STATE_* values.$/;"	m	struct:vdpau_render_state
state	ffmpeg/include/libavutil/lfg.h	/^    unsigned int state[64];$/;"	m	struct:AVLFG
state	glib/channel-usbredir.c	/^    enum SpiceUsbredirChannelState state;$/;"	m	struct:_SpiceUsbredirChannelPrivate	typeref:enum:_SpiceUsbredirChannelPrivate::SpiceUsbredirChannelState	file:
state	glib/spice-channel-priv.h	/^    enum spice_channel_state    state;$/;"	m	struct:_SpiceChannelPrivate	typeref:enum:_SpiceChannelPrivate::spice_channel_state
state	glib/spice-pulse.c	/^    int                     state;$/;"	m	struct:_SpicePulsePrivate	file:
state	glib/spice-pulse.c	/^    int                     state;$/;"	m	struct:stream	file:
state	glib/usb-device-manager.c	/^    guint8  state;$/;"	m	struct:_SpiceUsbDeviceInfo	file:
state	spice-common/common/glc.c	/^    int state;$/;"	m	struct:PathStroke	file:
state	spice-common/common/quic.c	/^    CommonState state;$/;"	m	struct:Channel	file:
statement	spice-common/python_modules/codegen.py	/^    def statement(self, s):$/;"	m	class:CodeWriter
static_assert	spice-common/common/verify.h	210;"	d
static_buffer	spice-common/common/marshaller.c	/^    MarshallerBuffer static_buffer;$/;"	m	struct:SpiceMarshallerData	file:
static_items	spice-common/common/marshaller.c	/^    MarshallerItem static_items[N_STATIC_ITEMS];$/;"	m	struct:SpiceMarshaller	file:
static_marshaller	spice-common/common/marshaller.c	/^    SpiceMarshaller static_marshaller;$/;"	m	struct:SpiceMarshallerData	file:
stats_in	ffmpeg/include/libavcodec/avcodec.h	/^    char *stats_in;$/;"	m	struct:AVCodecContext
stats_out	ffmpeg/include/libavcodec/avcodec.h	/^    char *stats_out;$/;"	m	struct:AVCodecContext
status	glib/win-usb-clerk.h	/^    UINT32 status;$/;"	m	struct:USBClerkReply
status_change_timestamp	ffmpeg/include/libavformat/avio.h	/^    int64_t status_change_timestamp;      \/**< Time of last status change in microseconds since unix$/;"	m	struct:AVIODirEntry
stencil_mask	spice-common/common/glc.c	/^    int stencil_mask;$/;"	m	struct:InternaCtx	file:
stencil_refs	spice-common/common/glc.c	/^    int stencil_refs;$/;"	m	struct:InternaCtx	file:
step_minus1	ffmpeg/include/libavutil/pixdesc.h	/^    uint16_t step_minus1  : 3;$/;"	m	struct:AVComponentDescriptor
stepx	spice-common/common/lines.c	/^    int stepx;                  \/* fixed integral dx *\/$/;"	m	struct:_PolyEdge	file:
str	ffmpeg/include/libavutil/opt.h	/^        const char *str;$/;"	m	union:AVOption::__anon38
str	ffmpeg/include/libavutil/opt.h	/^    const char *str;$/;"	m	struct:AVOptionRange
str	spice-common/common/draw.h	/^    SpiceString *str;$/;"	m	struct:SpiceText
str	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL str;$/;"	m	struct:QXLText
stream	glib/bio-gio.c	/^    GIOStream *stream;$/;"	m	struct:bio_gsocket_method	file:
stream	glib/channel-webdav.c	/^    SpiceVmcStream *stream;$/;"	m	struct:_SpiceWebdavChannelPrivate	file:
stream	glib/spice-pulse.c	/^    pa_stream               *stream;$/;"	m	struct:stream	file:
stream	glib/spice-pulse.c	/^struct stream {$/;"	s	file:
stream_codec_tag	ffmpeg/include/libavcodec/avcodec.h	/^    unsigned int stream_codec_tag;$/;"	m	struct:AVCodecContext
stream_connected	glib/wocky-http-proxy.c	/^stream_connected (ConnectAsyncData *data,$/;"	f	file:
stream_cork	glib/spice-pulse.c	/^static void stream_cork(SpicePulse *pulse, struct stream *s, gboolean with_flush)$/;"	f	file:
stream_dispose	glib/spice-gstaudio.c	/^void stream_dispose(struct stream *s)$/;"	f
stream_get_current_frame	glib/channel-display.c	/^uint32_t stream_get_current_frame(display_stream *st, uint8_t **data)$/;"	f
stream_get_dest	glib/channel-display.c	/^static SpiceRect *stream_get_dest(display_stream *st)$/;"	f	file:
stream_get_dimensions	glib/channel-display.c	/^void stream_get_dimensions(display_stream *st, int *width, int *height)$/;"	f
stream_get_flags	glib/channel-display.c	/^static uint32_t stream_get_flags(display_stream *st)$/;"	f	file:
stream_h264_cleanup	glib/channel-display-h264.c	/^void stream_h264_cleanup(display_stream* st)$/;"	f
stream_h264_data	glib/channel-display-h264.c	/^void stream_h264_data(display_stream* st, SpiceRect* rc)$/;"	f
stream_h264_init	glib/channel-display-h264.c	/^void stream_h264_init(display_stream* st)$/;"	f
stream_height	spice-common/common/messages.h	/^    uint32_t stream_height;$/;"	m	struct:SpiceMsgDisplayStreamCreate
stream_id	spice-common/common/messages.h	/^    uint32_t stream_id;$/;"	m	struct:SpiceMsgDisplayStreamActivateReport
stream_id	spice-common/common/messages.h	/^    uint32_t stream_id;$/;"	m	struct:SpiceMsgcDisplayStreamReport
stream_identifier	ffmpeg/include/libavformat/avformat.h	/^    int stream_identifier;$/;"	m	struct:AVStream
stream_index	ffmpeg/include/libavcodec/avcodec.h	/^    int   stream_index;$/;"	m	struct:AVPacket
stream_index	ffmpeg/include/libavformat/avformat.h	/^    unsigned int   *stream_index;$/;"	m	struct:AVProgram
stream_mjpeg_cleanup	glib/channel-display-mjpeg.c	/^void stream_mjpeg_cleanup(display_stream *st)$/;"	f
stream_mjpeg_data	glib/channel-display-mjpeg.c	/^void stream_mjpeg_data(display_stream *st)$/;"	f
stream_mjpeg_init	glib/channel-display-mjpeg.c	/^void stream_mjpeg_init(display_stream *st)$/;"	f
stream_read_callback	glib/spice-pulse.c	/^static void stream_read_callback(pa_stream *s, size_t length, void *data)$/;"	f	file:
stream_state_callback	glib/spice-pulse.c	/^static void stream_state_callback(pa_stream *s, void *userdata)$/;"	f	file:
stream_state_names	glib/spice-pulse.c	/^static const char *stream_state_names[] = {$/;"	v	file:
stream_stop	glib/spice-pulse.c	/^static void stream_stop(SpicePulse *pulse, struct stream *s)$/;"	f	file:
stream_uncork	glib/spice-pulse.c	/^static void stream_uncork(SpicePulse *pulse, struct stream *s)$/;"	f	file:
stream_underflow_cb	glib/spice-pulse.c	/^static void stream_underflow_cb(pa_stream *s, void *userdata)$/;"	f	file:
stream_update_latency_callback	glib/spice-pulse.c	/^static void stream_update_latency_callback(pa_stream *s, void *userdata)$/;"	f	file:
stream_width	spice-common/common/messages.h	/^    uint32_t stream_width;$/;"	m	struct:SpiceMsgDisplayStreamCreate
streams	ffmpeg/include/libavformat/avformat.h	/^    AVStream **streams;$/;"	m	struct:AVFormatContext
streams	glib/channel-display.c	/^    display_stream              **streams;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
strict_std_compliance	ffmpeg/include/libavcodec/avcodec.h	/^    int strict_std_compliance;$/;"	m	struct:AVCodecContext
strict_std_compliance	ffmpeg/include/libavformat/avformat.h	/^    int strict_std_compliance;$/;"	m	struct:AVFormatContext
stride	glib/channel-display-priv.h	/^    int                         width, height, stride, size;$/;"	m	struct:display_surface
stride	glib/channel-display.h	/^    gint stride;$/;"	m	struct:_SpiceDisplayPrimary
stride	spice-common/common/draw.h	/^    uint32_t stride;$/;"	m	struct:SpiceBitmap
stride	spice-common/common/glc.c	/^    int stride;$/;"	m	struct:FillMaskInfo	file:
stride	spice-common/common/glc.h	/^    int stride;$/;"	m	struct:GLCPImage
stride	spice-common/common/lz.c	/^    int stride;                       \/\/ stride is in bytes. For rgb must be equal to$/;"	m	struct:Encoder	file:
stride	spice-common/spice-protocol/spice/qxl_dev.h	/^    int32_t stride;$/;"	m	struct:QXLSurface
stride	spice-common/spice-protocol/spice/qxl_dev.h	/^    int32_t stride;$/;"	m	struct:QXLSurfaceCreate
stride	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t stride;$/;"	m	struct:QXLBitmap
stride	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t stride;$/;"	m	struct:QXLMode
stride	win32/win32-spice-widget-priv.h	/^    gint                    width, height, stride;$/;"	m	struct:_SpiceDisplayPrivate
string	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint8_t string[0]; \/\/UTF8$/;"	m	struct:FrgMenuAddItem
string	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint8_t string[0]; \/\/UTF8$/;"	m	struct:FrgMenuSetTitle
stroke	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLStroke stroke;$/;"	m	union:QXLCompatDrawable::__anon75
stroke	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLStroke stroke;$/;"	m	union:QXLDrawable::__anon76
stroke_fill_rects	spice-common/common/canvas_base.c	/^static void stroke_fill_rects(lineGC * pGC,$/;"	f	file:
stroke_fill_spans	spice-common/common/canvas_base.c	/^static void stroke_fill_spans(lineGC * pGC,$/;"	f	file:
stroke_lines_append	spice-common/common/canvas_base.c	/^static void stroke_lines_append(StrokeLines *lines,$/;"	f	file:
stroke_lines_append_bezier	spice-common/common/canvas_base.c	/^static void stroke_lines_append_bezier(StrokeLines *lines,$/;"	f	file:
stroke_lines_append_fix	spice-common/common/canvas_base.c	/^static void stroke_lines_append_fix(StrokeLines *lines,$/;"	f	file:
stroke_lines_draw	spice-common/common/canvas_base.c	/^static void stroke_lines_draw(StrokeLines *lines,$/;"	f	file:
stroke_lines_free	spice-common/common/canvas_base.c	/^static void stroke_lines_free(StrokeLines *lines)$/;"	f	file:
stroke_lines_init	spice-common/common/canvas_base.c	/^static void stroke_lines_init(StrokeLines *lines)$/;"	f	file:
strtok_r	glib/glib-compat.c	/^char *strtok_r(char *s, const char *delim, char **save_ptr)$/;"	f
style	spice-common/common/draw.h	/^    SPICE_FIXED28_4 *style;$/;"	m	struct:SpiceLineAttr
style	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLPHYSICAL style;$/;"	m	struct:QXLLineAttr
style_nseg	spice-common/common/draw.h	/^    uint8_t style_nseg;$/;"	m	struct:SpiceLineAttr
style_nseg	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t style_nseg;$/;"	m	struct:QXLLineAttr
sub_charenc	ffmpeg/include/libavcodec/avcodec.h	/^    char *sub_charenc;$/;"	m	struct:AVCodecContext
sub_charenc_mode	ffmpeg/include/libavcodec/avcodec.h	/^    int sub_charenc_mode;$/;"	m	struct:AVCodecContext
sub_list	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t sub_list; \/\/offset to SpiceSubMessageList[]$/;"	m	struct:SpiceDataHeader
sub_messages	spice-common/spice-protocol/spice/protocol.h	/^    uint32_t sub_messages[0]; \/\/offsets to SpicedSubMessage$/;"	m	struct:SpiceSubMessageList
subdivide_bezier	spice-common/common/canvas_base.c	/^static void subdivide_bezier(StrokeLines *lines,$/;"	f	file:
subject	spice-common/common/ssl_verify.h	/^    char                *subject;$/;"	m	struct:__anon131
subject_to_x509_name	spice-common/common/ssl_verify.c	/^static X509_NAME* subject_to_x509_name(const char *subject, int *nentries)$/;"	f	file:
subtitle_codec	ffmpeg/include/libavformat/avformat.h	/^    AVCodec *subtitle_codec;$/;"	m	struct:AVFormatContext
subtitle_codec	ffmpeg/include/libavformat/avformat.h	/^    enum AVCodecID subtitle_codec; \/**< default subtitle codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
subtitle_codec_id	ffmpeg/include/libavformat/avformat.h	/^    enum AVCodecID subtitle_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
subtitle_header	ffmpeg/include/libavcodec/avcodec.h	/^    uint8_t *subtitle_header;$/;"	m	struct:AVCodecContext
subtitle_header_size	ffmpeg/include/libavcodec/avcodec.h	/^    int subtitle_header_size;$/;"	m	struct:AVCodecContext
sum_array	spice-common/python_modules/codegen.py	/^def sum_array(array):$/;"	f
supported_framerates	ffmpeg/include/libavcodec/avcodec.h	/^    const AVRational *supported_framerates; \/\/\/< array of supported framerates, or NULL if any, array is terminated by {0,0}$/;"	m	struct:AVCodec
supported_modes	spice-common/common/messages.h	/^    uint32_t supported_modes;$/;"	m	struct:SpiceMsgMainMouseMode
supported_mouse_modes	spice-common/common/messages.h	/^    uint32_t supported_mouse_modes;$/;"	m	struct:SpiceMsgMainInit
supported_samplerates	ffmpeg/include/libavcodec/avcodec.h	/^    const int *supported_samplerates;       \/\/\/< array of supported audio samplerates, or NULL if unknown, array is terminated by 0$/;"	m	struct:AVCodec
surface	ffmpeg/include/libavcodec/d3d11va.h	/^    ID3D11VideoDecoderOutputView **surface;$/;"	m	struct:AVD3D11VAContext
surface	ffmpeg/include/libavcodec/dxva2.h	/^    LPDIRECT3DSURFACE9 *surface;$/;"	m	struct:dxva_context
surface	ffmpeg/include/libavcodec/vdpau.h	/^    VdpVideoSurface surface; \/\/\/< Used as rendered surface, never changed.$/;"	m	struct:vdpau_render_state
surface	glib/channel-display-priv.h	/^    display_surface             *surface;$/;"	m	struct:display_stream
surface	glib/decode-glz.c	/^    pixman_image_t          *surface;$/;"	m	struct:glz_image	file:
surface	spice-common/common/draw.h	/^        SpiceSurface        surface;$/;"	m	union:SpiceImage::__anon153
surface0_area_size	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t surface0_area_size;      \/* qxl-1 name: draw_area_size *\/$/;"	m	struct:QXLRom
surface_canvas	spice-common/common/canvas_base.c	/^        SpiceCanvas *surface_canvas;$/;"	m	union:__anon121::__anon122	file:
surface_count	ffmpeg/include/libavcodec/d3d11va.h	/^    unsigned surface_count;$/;"	m	struct:AVD3D11VAContext
surface_count	ffmpeg/include/libavcodec/dxva2.h	/^    unsigned surface_count;$/;"	m	struct:dxva_context
surface_create	spice-common/common/canvas_utils.c	/^pixman_image_t *surface_create(HDC dc, pixman_format_code_t format,$/;"	f
surface_create	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLSurface surface_create;$/;"	m	union:QXLSurfaceCmd::__anon77
surface_create_stride	spice-common/common/canvas_utils.c	/^pixman_image_t *surface_create_stride(HDC dc, pixman_format_code_t format, int width, int height,$/;"	f
surface_id	glib/channel-display-priv.h	/^    guint32                     surface_id;$/;"	m	struct:display_surface
surface_id	glib/channel-display.h	/^    guint surface_id;$/;"	m	struct:_SpiceDisplayMonitorConfig
surface_id	spice-common/common/draw.h	/^    uint32_t surface_id;$/;"	m	struct:SpiceSurface
surface_id	spice-common/common/messages.h	/^    uint32_t surface_id;$/;"	m	struct:SpiceMsgDisplayBase
surface_id	spice-common/common/messages.h	/^    uint32_t surface_id;$/;"	m	struct:SpiceMsgDisplayHead
surface_id	spice-common/common/messages.h	/^    uint32_t surface_id;$/;"	m	struct:SpiceMsgDisplayStreamCreate
surface_id	spice-common/common/messages.h	/^    uint32_t surface_id;$/;"	m	struct:SpiceMsgSurfaceCreate
surface_id	spice-common/common/messages.h	/^    uint32_t surface_id;$/;"	m	struct:SpiceMsgSurfaceDestroy
surface_id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t surface_id;$/;"	m	struct:QXLDrawable
surface_id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t surface_id;$/;"	m	struct:QXLHead
surface_id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t surface_id;$/;"	m	struct:QXLSurfaceCmd
surface_id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t surface_id;$/;"	m	struct:QXLSurfaceId
surface_id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t surface_id;$/;"	m	struct:QXLUpdateCmd
surface_image	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLSurfaceId surface_image;$/;"	m	union:QXLImage::__anon81
surface_to_image	spice-common/common/gl_canvas.c	/^static inline void surface_to_image(GLCanvas *canvas, pixman_image_t *surface, GLCImage *image,$/;"	f	file:
surfaces	glib/channel-display.c	/^    GHashTable                  *surfaces;$/;"	m	struct:_SpiceDisplayChannelPrivate	file:
surfaces	spice-common/common/canvas_base.c	/^    SpiceImageSurfaces *surfaces;$/;"	m	struct:CanvasBase	file:
surfaces_dest	spice-common/spice-protocol/spice/qxl_dev.h	/^    int32_t surfaces_dest[3];$/;"	m	struct:QXLDrawable
surfaces_get	glib/channel-display.c	/^static SpiceCanvas *surfaces_get(SpiceImageSurfaces *surfaces,$/;"	f	file:
surfaces_rects	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect surfaces_rects[3];$/;"	m	struct:QXLDrawable
surround_mix_level	ffmpeg/include/libavutil/downmix_info.h	/^    double surround_mix_level;$/;"	m	struct:AVDownmixInfo
surround_mix_level_ltrt	ffmpeg/include/libavutil/downmix_info.h	/^    double surround_mix_level_ltrt;$/;"	m	struct:AVDownmixInfo
svid	glib/win-usb-dev.c	/^    gchar svid[8];$/;"	m	struct:_GUdevDeviceInfo	file:
sw_canvas_init	spice-common/common/sw_canvas.c	/^void sw_canvas_init(void) \/\/unsafe global function$/;"	f
sw_canvas_ops	spice-common/common/sw_canvas.c	/^static SpiceCanvasOps sw_canvas_ops;$/;"	v	file:
sw_pix_fmt	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVPixelFormat sw_pix_fmt;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVPixelFormat
switch_host_delayed	glib/channel-main.c	/^static gboolean switch_host_delayed(gpointer data)$/;"	f	file:
switch_host_delayed_id	glib/channel-main.c	/^    guint                       switch_host_delayed_id;$/;"	m	struct:_SpiceMainChannelPrivate	file:
sws_context	glib/h264_decoder.h	/^   struct SwsContext *sws_context;$/;"	m	struct:_H264Decoder	typeref:struct:_H264Decoder::SwsContext
t	spice-common/spice_codegen.py	/^        t = ptypes.lookup_type(structname)$/;"	v
t00	spice-common/common/draw.h	/^    uint32_t t00;$/;"	m	struct:SpiceTransform
t00	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t	t00;$/;"	m	struct:__anon74
t01	spice-common/common/draw.h	/^    uint32_t t01;$/;"	m	struct:SpiceTransform
t01	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t	t01;$/;"	m	struct:__anon74
t02	spice-common/common/draw.h	/^    uint32_t t02;$/;"	m	struct:SpiceTransform
t02	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t	t02;$/;"	m	struct:__anon74
t10	spice-common/common/draw.h	/^    uint32_t t10;$/;"	m	struct:SpiceTransform
t10	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t	t10;$/;"	m	struct:__anon74
t11	spice-common/common/draw.h	/^    uint32_t t11;$/;"	m	struct:SpiceTransform
t11	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t	t11;$/;"	m	struct:__anon74
t12	spice-common/common/draw.h	/^    uint32_t t12;$/;"	m	struct:SpiceTransform
t12	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t	t12;$/;"	m	struct:__anon74
tabrand	spice-common/common/quic.c	/^static unsigned int tabrand(unsigned int *tabrand_seed)$/;"	f	file:
tabrand_chaos	spice-common/common/quic.c	/^static const unsigned int tabrand_chaos[TABRAND_TABSIZE] = {$/;"	v	file:
tabrand_seed	spice-common/common/quic.c	/^    unsigned int tabrand_seed;$/;"	m	struct:CommonState	file:
tail_gap	glib/decode-glz.c	/^    uint64_t                tail_gap;$/;"	m	struct:SpiceGlzDecoderWindow	file:
tail_image_segs	spice-common/common/lz.c	/^    LzImageSegment *tail_image_segs;$/;"	m	struct:Encoder	file:
target_delay	glib/spice-pulse.c	/^    guint                   target_delay;$/;"	m	struct:_SpicePulsePrivate	file:
temporal_cplx_masking	ffmpeg/include/libavcodec/avcodec.h	/^    float temporal_cplx_masking;$/;"	m	struct:AVCodecContext
tesselator	spice-common/common/glc.c	/^    GLUtesselator* tesselator;$/;"	m	struct:InternaCtx	file:
tessellation_combine	spice-common/common/glc.c	/^static void tessellation_combine(GLdouble coords[3], GLdouble *vertex_data[4], GLfloat weight[4],$/;"	f	file:
tessellation_error	spice-common/common/glc.c	/^static void tessellation_error(GLenum errorCode)$/;"	f	file:
test	spice-common/common/region.c	/^static void test(const QRegion *r1, const QRegion *r2, int *expected)$/;"	f	file:
test_agent_cap	glib/channel-main.c	/^static gboolean test_agent_cap(SpiceMainChannel *channel, guint32 cap)$/;"	f	file:
test_band	spice-common/common/region.c	/^static int test_band(int query,$/;"	f	file:
test_bit_be	spice-common/common/pixman_utils.c	/^static inline int test_bit_be(void* addr, int bit)$/;"	f	file:
test_capability	glib/spice-channel.c	/^static gboolean test_capability(GArray *caps, guint32 cap)$/;"	f	file:
test_generic	spice-common/common/region.c	/^static int test_generic (pixman_region32_t *reg1,$/;"	f	file:
text	ffmpeg/include/libavcodec/avcodec.h	/^    char *text;                     \/\/\/< 0 terminated plain UTF-8 text$/;"	m	struct:AVSubtitleRect
text	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLText text;$/;"	m	union:QXLCompatDrawable::__anon75
text	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLText text;$/;"	m	union:QXLDrawable::__anon76
texture	spice-common/common/glc.c	/^    GLuint texture;$/;"	m	struct:InternalPat	file:
textures_lost	spice-common/common/gl_canvas.c	/^    int textures_lost;$/;"	m	struct:GLCanvas	file:
thread	glib/coroutine.h	/^	GThread *thread;$/;"	m	struct:coroutine
thread	win32/win32_spice_interface_priv.h	/^   GThread * thread;$/;"	m	struct:main_loop_context
thread	win32/win32_spice_interface_priv.h	/^   GThread * thread;$/;"	m	struct:priv_spice_connection
thread_count	ffmpeg/include/libavcodec/avcodec.h	/^    int thread_count;$/;"	m	struct:AVCodecContext
thread_count	glib/h264_type.h	/^    int thread_count;$/;"	m	struct:_H264StreamInfo
thread_opaque	ffmpeg/include/libavcodec/avcodec.h	/^    void *thread_opaque;$/;"	m	struct:AVCodecContext
thread_opaque	ffmpeg/include/libavutil/frame.h	/^    void *thread_opaque;$/;"	m	struct:AVFrame
thread_safe_callbacks	ffmpeg/include/libavcodec/avcodec.h	/^    int thread_safe_callbacks;$/;"	m	struct:AVCodecContext
thread_type	ffmpeg/include/libavcodec/avcodec.h	/^    int thread_type;$/;"	m	struct:AVCodecContext
thread_type	ffmpeg/include/libavfilter/avfilter.h	/^    int thread_type;$/;"	m	struct:AVFilterContext
thread_type	ffmpeg/include/libavfilter/avfilter.h	/^    int thread_type;$/;"	m	struct:AVFilterGraph
three_bytes_pixel_t	spice-common/common/quic.c	/^typedef struct ATTR_PACKED three_bytes_pixel_t {$/;"	s	file:
three_bytes_t	spice-common/common/quic.c	/^} three_bytes_t;$/;"	t	typeref:struct:three_bytes_pixel_t	file:
ticks_per_frame	ffmpeg/include/libavcodec/avcodec.h	/^    int ticks_per_frame;$/;"	m	struct:AVCodecContext
tile	spice-common/common/canvas_base.c	/^        pixman_image_t *tile;$/;"	m	union:__anon121::__anon122	file:
tile_offset_x	spice-common/common/canvas_base.c	/^    int tile_offset_x;$/;"	m	struct:__anon121	file:
tile_offset_y	spice-common/common/canvas_base.c	/^    int tile_offset_y;$/;"	m	struct:__anon121	file:
tiled_rop_16_func_t	spice-common/common/pixman_utils.c	/^typedef void (*tiled_rop_16_func_t)(uint16_t *ptr, int len,$/;"	t	file:
tiled_rop_32_func_t	spice-common/common/pixman_utils.c	/^typedef void (*tiled_rop_32_func_t)(uint32_t *ptr, int len,$/;"	t	file:
tiled_rop_8_func_t	spice-common/common/pixman_utils.c	/^typedef void (*tiled_rop_8_func_t)(uint8_t *ptr, int len,$/;"	t	file:
time	spice-common/common/messages.h	/^    uint32_t time;$/;"	m	struct:SpiceMsgMainMultiMediaTime
time	spice-common/common/messages.h	/^    uint32_t time;$/;"	m	struct:SpiceMsgPlaybackMode
time	spice-common/common/messages.h	/^    uint32_t time;$/;"	m	struct:SpiceMsgPlaybackPacket
time	spice-common/common/messages.h	/^    uint32_t time;$/;"	m	struct:SpiceMsgPlaybackStart
time	spice-common/common/messages.h	/^    uint32_t time;$/;"	m	struct:SpiceMsgcRecordStartMark
time_base	ffmpeg/include/libavcodec/avcodec.h	/^    AVRational time_base;$/;"	m	struct:AVCodecContext
time_base	ffmpeg/include/libavcodec/dv_profile.h	/^    AVRational       time_base;             \/* 1\/framerate *\/$/;"	m	struct:AVDVProfile
time_base	ffmpeg/include/libavfilter/avfilter.h	/^    AVRational time_base;$/;"	m	struct:AVFilterLink
time_base	ffmpeg/include/libavformat/avformat.h	/^    AVRational time_base;   \/\/\/< time base in which the start\/end timestamps are specified$/;"	m	struct:AVChapter
time_base	ffmpeg/include/libavformat/avformat.h	/^    AVRational time_base;$/;"	m	struct:AVStream
time_base	glib/h264_type.h	/^    AVRational time_base;$/;"	m	struct:_H264StreamInfo
time_stamp	spice-common/common/messages.h	/^    uint64_t time_stamp;$/;"	m	struct:SpiceMsgDisconnect
time_stamp	spice-common/common/messages.h	/^    uint64_t time_stamp;$/;"	m	struct:SpiceMsgNotify
timecode_frame_start	ffmpeg/include/libavcodec/avcodec.h	/^    int64_t timecode_frame_start;$/;"	m	struct:AVCodecContext
timeout	glib/channel-display-priv.h	/^    guint                       timeout;$/;"	m	struct:display_stream
timeout_id	glib/spice-session.c	/^    guint timeout_id;$/;"	m	struct:spice_open_host	file:
timeout_ms	spice-common/common/messages.h	/^    uint32_t timeout_ms;$/;"	m	struct:SpiceMsgDisplayStreamActivateReport
timer_id	glib/channel-main.c	/^    gint                        timer_id;$/;"	m	struct:_SpiceMainChannelPrivate	file:
timer_set_display	glib/channel-main.c	/^static gboolean timer_set_display(gpointer data)$/;"	f	file:
timestamp	ffmpeg/include/libavformat/avformat.h	/^    int64_t timestamp;        \/**<$/;"	m	struct:AVIndexEntry
timestamp	spice-common/common/messages.h	/^    uint64_t timestamp;$/;"	m	struct:SpiceMsgPing
title	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint8_t title[0]; \/\/UTF8$/;"	m	struct:FrgMenuInit
tls	glib/spice-channel-priv.h	/^    int                         tls;$/;"	m	struct:_SpiceChannelPrivate
tls_port	glib/spice-session-priv.h	/^    char              *tls_port;$/;"	m	struct:_SpiceSessionPrivate
tls_port	win32/spice-cmdline.c	/^static char *tls_port;$/;"	v	file:
to_string	glib/spice-channel.c	/^static const char *to_string[] = {$/;"	v	file:
todo	spice-common/python_modules/codegen.py	/^    def todo(self, str):$/;"	m	class:CodeWriter
tokens	spice-common/common/messages.h	/^    uint32_t tokens;$/;"	m	struct:SpiceMsgTunnelSocketOpen
tokens	spice-common/common/messages.h	/^    uint32_t tokens;$/;"	m	struct:SpiceMsgcTunnelSocketOpenAck
top	spice-common/common/draw.h	/^    int32_t top;$/;"	m	struct:SpiceRect
top	spice-common/spice-protocol/spice/qxl_dev.h	/^    int32_t top;$/;"	m	struct:QXLRect
top	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t top;$/;"	m	struct:QXLURect
top_down	glib/decode-glz.c	/^    bool                    top_down;$/;"	m	struct:glz_image_hdr	file:
top_field_first	ffmpeg/include/libavfilter/avfilter.h	/^    int top_field_first;        \/\/\/< field order$/;"	m	struct:AVFilterBufferRefVideoProps
top_field_first	ffmpeg/include/libavutil/frame.h	/^    int top_field_first;$/;"	m	struct:AVFrame
total_frames	glib/channel-display-priv.h	/^    unsigned long                   total_frames;               $/;"	m	struct:display_stream
total_read_bytes	glib/spice-channel-priv.h	/^    gsize                       total_read_bytes;$/;"	m	struct:_SpiceChannelPrivate
total_size	spice-common/common/marshaller.c	/^    size_t total_size;$/;"	m	struct:SpiceMarshaller	file:
total_size	spice-common/common/marshaller.c	/^    size_t total_size;$/;"	m	struct:SpiceMarshallerData	file:
touch_brush	spice-common/common/canvas_base.c	/^static void touch_brush(CanvasBase *canvas, SpiceBrush *brush)$/;"	f	file:
tp	win32/win32_spice_interface.c	/^    gchar tp[10];$/;"	m	struct:SpiceConnectARGS	file:
track_gain	ffmpeg/include/libavutil/replaygain.h	/^    int32_t track_gain;$/;"	m	struct:AVReplayGain
track_peak	ffmpeg/include/libavutil/replaygain.h	/^    uint32_t track_peak;$/;"	m	struct:AVReplayGain
trail	spice-common/spice-protocol/spice/qxl_dev.h	/^        } trail;$/;"	m	union:QXLCursorCmd::__anon70	typeref:struct:QXLCursorCmd::__anon70::SPICE_ATTR_PACKED
trail_frequency	spice-common/common/messages.h	/^    uint16_t trail_frequency;$/;"	m	struct:SpiceMsgCursorInit
trail_length	spice-common/common/messages.h	/^    uint16_t trail_length;$/;"	m	struct:SpiceMsgCursorInit
transform_to_pixman_transform	spice-common/common/canvas_base.c	/^static void transform_to_pixman_transform(SpiceTransform *transform,$/;"	f	file:
transparent	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLTransparent transparent;$/;"	m	union:QXLCompatDrawable::__anon75
transparent	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLTransparent transparent;$/;"	m	union:QXLDrawable::__anon76
trellis	ffmpeg/include/libavcodec/avcodec.h	/^    int trellis;$/;"	m	struct:AVCodecContext
true_color	spice-common/common/draw.h	/^    uint32_t true_color;$/;"	m	struct:SpiceTransparent
true_color	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t true_color;$/;"	m	struct:QXLTransparent
ts_id	ffmpeg/include/libavformat/avformat.h	/^    int ts_id;$/;"	m	struct:AVFormatContext
type	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVMediaType
type	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVCodecDescriptor	typeref:enum:AVCodecDescriptor::AVMediaType
type	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::AVMediaType
type	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVPacketSideDataType type;$/;"	m	struct:AVPacketSideData	typeref:enum:AVPacketSideData::AVPacketSideDataType
type	ffmpeg/include/libavcodec/avcodec.h	/^    enum AVSubtitleType type;$/;"	m	struct:AVSubtitleRect	typeref:enum:AVSubtitleRect::AVSubtitleType
type	ffmpeg/include/libavfilter/avfilter.h	/^    enum AVMediaType type;      \/\/\/< filter media type$/;"	m	struct:AVFilterLink	typeref:enum:AVFilterLink::AVMediaType
type	ffmpeg/include/libavfilter/avfilter.h	/^    enum AVMediaType type;      \/\/\/< media type of buffer data$/;"	m	struct:AVFilterBufferRef	typeref:enum:AVFilterBufferRef::AVMediaType
type	ffmpeg/include/libavfilter/avfilter.h	/^    enum AVMediaType type;$/;"	m	struct:AVFilterPad	typeref:enum:AVFilterPad::AVMediaType
type	ffmpeg/include/libavformat/avio.h	/^    int type;                             \/**< Type of the entry *\/$/;"	m	struct:AVIODirEntry
type	ffmpeg/include/libavutil/frame.h	/^    enum AVFrameSideDataType type;$/;"	m	struct:AVFrameSideData	typeref:enum:AVFrameSideData::AVFrameSideDataType
type	ffmpeg/include/libavutil/frame.h	/^    int type;$/;"	m	struct:AVFrame
type	ffmpeg/include/libavutil/opt.h	/^    enum AVOptionType type;$/;"	m	struct:AVOption	typeref:enum:AVOption::AVOptionType
type	ffmpeg/include/libavutil/stereo3d.h	/^    enum AVStereo3DType type;$/;"	m	struct:AVStereo3D	typeref:enum:AVStereo3D::AVStereo3DType
type	glib/channel-main.c	/^    int type;$/;"	m	struct:channel_new	file:
type	glib/decode-glz.c	/^    LzImageType             type;$/;"	m	struct:glz_image_hdr	file:
type	glib/win-usb-clerk.h	/^    UINT16 type;$/;"	m	struct:USBClerkHeader
type	spice-common/common/draw.h	/^    uint16_t type;$/;"	m	struct:SpiceCursorHeader
type	spice-common/common/draw.h	/^    uint32_t type;$/;"	m	struct:SpiceBrush
type	spice-common/common/draw.h	/^    uint8_t type;$/;"	m	struct:SpiceClip
type	spice-common/common/draw.h	/^    uint8_t type;$/;"	m	struct:SpiceImageDescriptor
type	spice-common/common/glc.c	/^    int type;$/;"	m	struct:PathSegment	file:
type	spice-common/common/lz.c	/^    LzImageType type;$/;"	m	struct:Encoder	file:
type	spice-common/common/messages.h	/^    VSCMsgType type;$/;"	m	struct:SpiceMsgSmartcard
type	spice-common/common/messages.h	/^    uint16_t type;$/;"	m	struct:SpiceMsgTunnelIpInfo
type	spice-common/common/messages.h	/^    uint32_t type;$/;"	m	struct:SpiceMsgcTunnelAddGenericService
type	spice-common/common/messages.h	/^    uint8_t type;$/;"	m	struct:SpiceChannelId
type	spice-common/common/messages.h	/^    uint8_t type;$/;"	m	struct:SpiceResourceID
type	spice-common/common/ogl_ctx.c	/^    int type;$/;"	m	struct:OGLCtx	file:
type	spice-common/common/quic.c	/^    QuicImageType type;$/;"	m	struct:Encoder	file:
type	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t type;$/;"	m	struct:FrgMenuAddItem
type	spice-common/spice-protocol/spice/protocol.h	/^    uint16_t type;$/;"	m	struct:SpiceDataHeader
type	spice-common/spice-protocol/spice/protocol.h	/^    uint16_t type;$/;"	m	struct:SpiceMiniDataHeader
type	spice-common/spice-protocol/spice/protocol.h	/^    uint16_t type;$/;"	m	struct:SpiceSubMessage
type	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t type;$/;"	m	struct:QXLCursorHeader
type	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t type;$/;"	m	struct:QXLBrush
type	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t type;$/;"	m	struct:QXLClip
type	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t type;$/;"	m	struct:QXLCommand
type	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t type;$/;"	m	struct:QXLSurfaceCreate
type	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t type;$/;"	m	struct:QXLCompatDrawable
type	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t type;$/;"	m	struct:QXLCursorCmd
type	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t type;$/;"	m	struct:QXLDrawable
type	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t type;$/;"	m	struct:QXLImageDescriptor
type	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint8_t type;$/;"	m	struct:QXLSurfaceCmd
type	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t type;$/;"	m	struct:VDAgentClipboard
type	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t type;$/;"	m	struct:VDAgentClipboardRequest
type	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t type;$/;"	m	struct:VDAgentMessage
type	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t type;$/;"	m	struct:VDAgentReply
type	win32/win32_spice_interface_types.h	/^   CBTypes type;$/;"	m	struct:SpiceCallBacks
type_exists	spice-common/python_modules/ptypes.py	/^def type_exists(name):$/;"	f
types	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t types[0];$/;"	m	struct:VDAgentClipboardGrab
u	spice-common/common/draw.h	/^    } u;$/;"	m	struct:SpiceBrush	typeref:union:SpiceBrush::__anon154
u	spice-common/common/draw.h	/^    } u;$/;"	m	struct:SpiceImage	typeref:union:SpiceImage::__anon153
u	spice-common/common/messages.h	/^    } u;$/;"	m	struct:SpiceMsgTunnelIpInfo	typeref:union:SpiceMsgTunnelIpInfo::__anon150
u	spice-common/common/messages.h	/^    } u;$/;"	m	struct:SpiceMsgcTunnelAddGenericService	typeref:union:SpiceMsgcTunnelAddGenericService::__anon151
u	spice-common/spice-protocol/spice/qxl_dev.h	/^    } u;$/;"	m	struct:QXLBrush	typeref:union:QXLBrush::__anon72
u	spice-common/spice-protocol/spice/qxl_dev.h	/^    } u;$/;"	m	struct:QXLCompatDrawable	typeref:union:QXLCompatDrawable::__anon75
u	spice-common/spice-protocol/spice/qxl_dev.h	/^    } u;$/;"	m	struct:QXLCursorCmd	typeref:union:QXLCursorCmd::__anon70
u	spice-common/spice-protocol/spice/qxl_dev.h	/^    } u;$/;"	m	struct:QXLDrawable	typeref:union:QXLDrawable::__anon76
u	spice-common/spice-protocol/spice/qxl_dev.h	/^    } u;$/;"	m	struct:QXLSurfaceCmd	typeref:union:QXLSurfaceCmd::__anon77
u16	ffmpeg/include/libavutil/intreadwrite.h	/^    uint16_t u16;$/;"	m	union:__anon44
u16	ffmpeg/include/libavutil/intreadwrite.h	/^    uint16_t u16[2];$/;"	m	union:__anon43
u16	ffmpeg/include/libavutil/intreadwrite.h	/^    uint16_t u16[4];$/;"	m	union:__anon42
u32	ffmpeg/include/libavutil/intreadwrite.h	/^    uint32_t u32;$/;"	m	union:__anon43
u32	ffmpeg/include/libavutil/intreadwrite.h	/^    uint32_t u32[2];$/;"	m	union:__anon42
u64	ffmpeg/include/libavutil/intreadwrite.h	/^    uint64_t u64;$/;"	m	union:__anon42
u8	ffmpeg/include/libavutil/intreadwrite.h	/^    uint8_t  u8 [2];$/;"	m	union:__anon44
u8	ffmpeg/include/libavutil/intreadwrite.h	/^    uint8_t  u8 [4];$/;"	m	union:__anon43
u8	ffmpeg/include/libavutil/intreadwrite.h	/^    uint8_t  u8 [8];$/;"	m	union:__anon42
uc	glib/continuation.h	/^	ucontext_t uc;$/;"	m	struct:continuation
uchar	win32/win32_io.h	/^typedef unsigned char uchar;$/;"	t
udev	glib/usb-device-manager.c	/^    GUdevClient *udev;$/;"	m	struct:_SpiceUsbDeviceManagerPrivate	file:
udev_list	glib/win-usb-dev.c	/^    GList *udev_list;$/;"	m	struct:_GUdevClientPrivate	file:
udev_list_size	glib/win-usb-dev.c	/^    gssize udev_list_size;$/;"	m	struct:_GUdevClientPrivate	file:
udevinfo	glib/win-usb-dev.c	/^    GUdevDeviceInfo *udevinfo;$/;"	m	struct:_GUdevDevicePrivate	file:
uevent	glib/win-usb-dev.h	/^    void (*uevent)(GUdevClient *client, const gchar *action, GUdevDevice  *device);$/;"	m	struct:_GUdevClientClass
uiCallbackInvalidate	win32/win32_io.c	/^void uiCallbackInvalidate (SpiceDisplay *display, gint x, gint y, gint w, gint h)$/;"	f
uiCallbackSettingsChanged	win32/win32_io.c	/^void uiCallbackSettingsChanged (SpiceDisplay *display,gint instance, gint width, gint height, gint bpp)$/;"	f
uint16	spice-common/python_modules/ptypes.py	/^uint16 = IntegerType(16, False)$/;"	v
uint32	spice-common/python_modules/ptypes.py	/^uint32 = IntegerType(32, False)$/;"	v
uint64	spice-common/python_modules/ptypes.py	/^uint64 = IntegerType(64, False)$/;"	v
uint8	spice-common/python_modules/ptypes.py	/^uint8 = IntegerType(8, False)$/;"	v
unaligned_16	ffmpeg/include/libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	u
unaligned_32	ffmpeg/include/libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	u
unaligned_64	ffmpeg/include/libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	u
uncompress_gray	spice-common/common/quic.c	/^static void uncompress_gray(Encoder *encoder, uint8_t *buf, int stride)$/;"	f	file:
uncompress_rgba	spice-common/common/quic.c	/^static void uncompress_rgba(Encoder *encoder, uint8_t *buf, int stride)$/;"	f	file:
uncompress_row	spice-common/common/quic_rgb_tmpl.c	/^static void FNAME(uncompress_row)(Encoder *encoder,$/;"	f	file:
uncompress_row	spice-common/common/quic_tmpl.c	/^static void FNAME(uncompress_row)(Encoder *encoder, Channel *channel,$/;"	f	file:
uncompress_row0	spice-common/common/quic_rgb_tmpl.c	/^static void FNAME(uncompress_row0)(Encoder *encoder,$/;"	f	file:
uncompress_row0	spice-common/common/quic_tmpl.c	/^static void FNAME(uncompress_row0)(Encoder *encoder, Channel *channel,$/;"	f	file:
uncompress_row0_seg	spice-common/common/quic_rgb_tmpl.c	/^static void FNAME(uncompress_row0_seg)(Encoder *encoder, int i,$/;"	f	file:
uncompress_row0_seg	spice-common/common/quic_tmpl.c	/^static void FNAME(uncompress_row0_seg)(Encoder *encoder, Channel *channel, int i,$/;"	f	file:
uncompress_row_seg	spice-common/common/quic_rgb_tmpl.c	/^static void FNAME(uncompress_row_seg)(Encoder *encoder,$/;"	f	file:
uncompress_row_seg	spice-common/common/quic_tmpl.c	/^static void FNAME(uncompress_row_seg)(Encoder *encoder, Channel *channel,$/;"	f	file:
uncork_op	glib/spice-pulse.c	/^    pa_operation            *uncork_op;$/;"	m	struct:stream	file:
underscores_to_camel	spice-common/python_modules/codegen.py	/^def underscores_to_camel(s):$/;"	f
unimplemented_op	spice-common/common/canvas_base.c	/^static void unimplemented_op(SpiceCanvas *canvas)$/;"	f	file:
unindent	spice-common/python_modules/codegen.py	/^    def unindent(self):$/;"	m	class:CodeWriter
uninit	ffmpeg/include/libavcodec/avcodec.h	/^    int (*uninit)(AVCodecContext *avctx);$/;"	m	struct:AVHWAccel
uninit	ffmpeg/include/libavfilter/avfilter.h	/^    void (*uninit)(AVFilterContext *ctx);$/;"	m	struct:AVFilter
unique	spice-common/common/draw.h	/^    uint64_t unique;$/;"	m	struct:SpiceCursorHeader
unique	spice-common/common/draw.h	/^    uint64_t unique;$/;"	m	struct:SpicePalette
unique	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t unique;$/;"	m	struct:QXLImageID
unique	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint64_t unique;$/;"	m	struct:QXLCursorHeader
unique	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint64_t unique;$/;"	m	struct:QXLPalette
unique_id	spice-common/common/messages.h	/^    uint32_t unique_id;$/;"	m	struct:SpiceMsgDisplayStreamActivateReport
unique_id	spice-common/common/messages.h	/^    uint32_t unique_id;$/;"	m	struct:SpiceMsgcDisplayStreamReport
unit	ffmpeg/include/libavutil/opt.h	/^    const char *unit;$/;"	m	struct:AVOption
unref_pat	spice-common/common/glc.c	/^static inline void unref_pat(InternalPat *pat)$/;"	f	file:
unset_brush	spice-common/common/gdi_canvas.c	/^static void unset_brush(HDC dc, HBRUSH prev_hbrush)$/;"	f	file:
unsigned_intra	ffmpeg/include/libavcodec/xvmc.h	/^    int             unsigned_intra;$/;"	m	struct:xvmc_pix_fmt
update_area	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLRect update_area;$/;"	m	struct:QXLRam
update_audio_channels	glib/spice-audio.c	/^static void update_audio_channels(SpiceAudio *self, SpiceSession *session)$/;"	f	file:
update_checksum	ffmpeg/include/libavformat/avio.h	/^    unsigned long (*update_checksum)(unsigned long checksum, const uint8_t *buf, unsigned int size);$/;"	m	struct:AVIOContext
update_copy_count	spice-common/common/lz.c	/^static inline void update_copy_count(Encoder *encoder, uint8_t copy_count)$/;"	f	file:
update_display_timer	glib/channel-main.c	/^static void update_display_timer(SpiceMainChannel *channel, guint seconds)$/;"	f	file:
update_id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t update_id;$/;"	m	struct:QXLCompatUpdateCmd
update_id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t update_id;$/;"	m	struct:QXLRom
update_id	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t update_id;$/;"	m	struct:QXLUpdateCmd
update_initial_durations_done	ffmpeg/include/libavformat/avformat.h	/^    int update_initial_durations_done;$/;"	m	struct:AVStream
update_mmtime_timeout_cb	glib/spice-gstaudio.c	/^static gboolean update_mmtime_timeout_cb(gpointer data)$/;"	f	file:
update_model	spice-common/common/quic_family_tmpl.c	/^static void FNAME(update_model)(CommonState *state, s_bucket * const bucket,$/;"	f	file:
update_model	spice-common/common/quic_rgb_tmpl.c	28;"	d	file:
update_model	spice-common/common/quic_rgb_tmpl.c	49;"	d	file:
update_model	spice-common/common/quic_rgb_tmpl.c	70;"	d	file:
update_model	spice-common/common/quic_rgb_tmpl.c	753;"	d	file:
update_model	spice-common/common/quic_rgb_tmpl.c	91;"	d	file:
update_model	spice-common/common/quic_tmpl.c	42;"	d	file:
update_model	spice-common/common/quic_tmpl.c	631;"	d	file:
update_mouse_mode	win32/win32-spice-widget.c	/^static void update_mouse_mode(SpiceChannel *channel, gpointer data)$/;"	f	file:
update_proxy	glib/spice-session.c	/^static void update_proxy(SpiceSession *self, const gchar *str)$/;"	f	file:
update_surface	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t update_surface;$/;"	m	struct:QXLRam
update_thread_context	ffmpeg/include/libavcodec/avcodec.h	/^    int (*update_thread_context)(AVCodecContext *dst, const AVCodecContext *src);$/;"	m	struct:AVCodec
uri	win32/spice-cmdline.c	/^static char *uri;$/;"	v	file:
url_context	ffmpeg/include/libavformat/avio.h	/^    struct URLContext *url_context;$/;"	m	struct:AVIODirContext	typeref:struct:AVIODirContext::URLContext
usb_connect_failed	win32/win32-spicy.c	/^static void usb_connect_failed(GObject               *object,$/;"	f	file:
usb_device_error	win32/win32-spicy.c	/^static void usb_device_error(GObject               *object,$/;"	f	file:
usb_manager	glib/spice-session-priv.h	/^    SpiceUsbDeviceManager *usb_manager;$/;"	m	struct:_SpiceSessionPrivate
usb_product_info	glib/usbutil.c	/^} usb_product_info;$/;"	t	typeref:struct:_usb_product_info	file:
usb_vendor_info	glib/usbutil.c	/^} usb_vendor_info;$/;"	t	typeref:struct:_usb_vendor_info	file:
usbids_load_mutex	glib/usbutil.c	/^static GStaticMutex usbids_load_mutex = G_STATIC_MUTEX_INIT;$/;"	v	file:
usbids_vendor_count	glib/usbutil.c	/^static int usbids_vendor_count = 0; \/* < 0: failed, 0: empty, > 0: loaded *\/$/;"	v	file:
usbids_vendor_info	glib/usbutil.c	/^static usb_vendor_info *usbids_vendor_info = NULL;$/;"	v	file:
usbredir	glib/spice-session-priv.h	/^    gboolean          usbredir;$/;"	m	struct:_SpiceSessionPrivate
usbredir_alloc_lock	glib/channel-usbredir.c	/^static void *usbredir_alloc_lock(void) {$/;"	f	file:
usbredir_auto_redirect_filter	glib/spice-option.c	/^static char *usbredir_auto_redirect_filter = NULL;$/;"	v	file:
usbredir_free_lock	glib/channel-usbredir.c	/^static void usbredir_free_lock(void *user_data) {$/;"	f	file:
usbredir_free_write_cb_data	glib/channel-usbredir.c	/^static void usbredir_free_write_cb_data(uint8_t *data, void *user_data)$/;"	f	file:
usbredir_handle_msg	glib/channel-usbredir.c	/^static void usbredir_handle_msg(SpiceChannel *c, SpiceMsgIn *in)$/;"	f	file:
usbredir_lock_lock	glib/channel-usbredir.c	/^static void usbredir_lock_lock(void *user_data) {$/;"	f	file:
usbredir_log	glib/channel-usbredir.c	/^static void usbredir_log(void *user_data, int level, const char *msg)$/;"	f	file:
usbredir_read_callback	glib/channel-usbredir.c	/^static int usbredir_read_callback(void *user_data, uint8_t *data, int count)$/;"	f	file:
usbredir_redirect_on_connect	glib/spice-option.c	/^static char *usbredir_redirect_on_connect = NULL;$/;"	v	file:
usbredir_unlock_lock	glib/channel-usbredir.c	/^static void usbredir_unlock_lock(void *user_data) {$/;"	f	file:
usbredir_write_callback	glib/channel-usbredir.c	/^static int usbredir_write_callback(void *user_data, uint8_t *data, int count)$/;"	f	file:
usbredir_write_flush_callback	glib/channel-usbredir.c	/^static void usbredir_write_flush_callback(void *user_data)$/;"	f	file:
use_mini_header	glib/spice-channel-priv.h	/^    gboolean                    use_mini_header;$/;"	m	struct:_SpiceChannelPrivate
use_ref_buffer	ffmpeg/include/libavcodec/vda.h	/^    int                 use_ref_buffer;$/;"	m	struct:vda_context
use_surface_canvas	spice-common/common/canvas_base.c	/^    int use_surface_canvas;$/;"	m	struct:__anon121	file:
use_sync_decoding	ffmpeg/include/libavcodec/vda.h	/^    int                 use_sync_decoding;$/;"	m	struct:vda_context
use_wallclock_as_timestamps	ffmpeg/include/libavformat/avformat.h	/^    int use_wallclock_as_timestamps;$/;"	m	struct:AVFormatContext
used_tess_vertex	spice-common/common/glc.c	/^    TassVertex *used_tess_vertex;$/;"	m	struct:InternaCtx	file:
user	glib/spice-uri.c	/^    gchar *user;$/;"	m	struct:_SpiceURI	file:
user_data	glib/channel-main.c	/^    gpointer                       user_data;$/;"	m	struct:SpiceFileXferTask	file:
user_data	glib/channel-webdav.c	/^    gpointer user_data;$/;"	m	struct:_OutputQueueElem	file:
user_data	glib/usb-device-manager.c	/^    gpointer              user_data;$/;"	m	struct:_UsbInstallCbInfo	file:
user_id	ffmpeg/include/libavformat/avio.h	/^    int64_t user_id;                      \/**< User ID of owner, -1 if unknown. *\/$/;"	m	struct:AVIODirEntry
username	glib/spice-session-priv.h	/^    char              *username;$/;"	m	struct:_SpiceSessionPrivate
usr	spice-common/common/canvas_base.c	/^    LzUsrContext usr;$/;"	m	struct:LzData	file:
usr	spice-common/common/canvas_base.c	/^    QuicUsrContext usr;$/;"	m	struct:QuicData	file:
usr	spice-common/common/lz.c	/^    LzUsrContext    *usr;$/;"	m	struct:Encoder	file:
usr	spice-common/common/quic.c	/^    QuicUsrContext *usr;$/;"	m	struct:Encoder	file:
usr_data	spice-common/common/canvas_base.c	/^    void *usr_data;$/;"	m	struct:CanvasBase	file:
usr_data_destroy	spice-common/common/canvas_base.c	/^    spice_destroy_fn_t usr_data_destroy;$/;"	m	struct:CanvasBase	file:
utf8	ffmpeg/include/libavformat/avio.h	/^    int utf8;                             \/**< Set to 1 when name is encoded with UTF-8, 0 otherwise.$/;"	m	struct:AVIODirEntry
uuid	glib/spice-session-priv.h	/^    guint8            uuid[16];$/;"	m	struct:_SpiceSessionPrivate
uuid	spice-common/common/messages.h	/^    uint8_t uuid[16];$/;"	m	struct:SpiceMsgMainUuid
vaapi_context	ffmpeg/include/libavcodec/vaapi.h	/^struct vaapi_context {$/;"	s
val	ffmpeg/include/libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
validate_SpiceClipRects	spice-common/common/generated_client_demarshallers1.c	/^static intptr_t validate_SpiceClipRects(uint8_t *message_start, uint8_t *message_end, uint64_t offset, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
validate_SpiceImage	spice-common/common/generated_client_demarshallers.c	/^static intptr_t validate_SpiceImage(uint8_t *message_start, uint8_t *message_end, uint64_t offset, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
validate_SpiceImage	spice-common/common/generated_client_demarshallers1.c	/^static intptr_t validate_SpiceImage(uint8_t *message_start, uint8_t *message_end, uint64_t offset, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
validate_SpicePalette	spice-common/common/generated_client_demarshallers.c	/^static intptr_t validate_SpicePalette(uint8_t *message_start, uint8_t *message_end, uint64_t offset, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
validate_SpicePalette	spice-common/common/generated_client_demarshallers1.c	/^static intptr_t validate_SpicePalette(uint8_t *message_start, uint8_t *message_end, uint64_t offset, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
validate_SpicePath	spice-common/common/generated_client_demarshallers.c	/^static intptr_t validate_SpicePath(uint8_t *message_start, uint8_t *message_end, uint64_t offset, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
validate_SpicePath	spice-common/common/generated_client_demarshallers1.c	/^static intptr_t validate_SpicePath(uint8_t *message_start, uint8_t *message_end, uint64_t offset, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
validate_SpiceString	spice-common/common/generated_client_demarshallers.c	/^static intptr_t validate_SpiceString(uint8_t *message_start, uint8_t *message_end, uint64_t offset, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
validate_SpiceString	spice-common/common/generated_client_demarshallers1.c	/^static intptr_t validate_SpiceString(uint8_t *message_start, uint8_t *message_end, uint64_t offset, SPICE_GNUC_UNUSED int minor)$/;"	f	file:
value	ffmpeg/include/libavutil/dict.h	/^    char *value;$/;"	m	struct:AVDictionaryEntry
value	spice-common/spice-protocol/spice/controller_prot.h	/^    uint32_t value;$/;"	m	struct:ControllerValue
value	spice-common/spice-protocol/spice/qxl_dev.h	/^  uint64_t value;$/;"	m	union:__anon80
value	spice-common/spice-protocol/spice/stats.h	/^    uint64_t value;$/;"	m	struct:SpiceStatNode
value_max	ffmpeg/include/libavutil/opt.h	/^    double value_min, value_max;$/;"	m	struct:AVOptionRange
value_min	ffmpeg/include/libavutil/opt.h	/^    double value_min, value_max;$/;"	m	struct:AVOptionRange
var_args	glib/gio-coroutine.c	/^    va_list var_args;$/;"	m	struct:signal_data	file:
var_values	ffmpeg/include/libavfilter/avfilter.h	/^    double *var_values;             \/\/\/< variable values for the enable expression$/;"	m	struct:AVFilterContext
variable_def	spice-common/python_modules/codegen.py	/^    def variable_def(self, ctype, *names):$/;"	m	class:CodeWriter
variable_defined	spice-common/python_modules/codegen.py	/^    def variable_defined(self, name):$/;"	m	class:CodeWriter
vbv_delay	ffmpeg/include/libavcodec/avcodec.h	/^    uint64_t vbv_delay;$/;"	m	struct:AVCodecContext
vc1	ffmpeg/include/libavcodec/vdpau.h	/^    VdpPictureInfoVC1          vc1;$/;"	m	union:AVVDPAUPictureInfo
vda_context	ffmpeg/include/libavcodec/vda.h	/^struct vda_context {$/;"	s
vdpau_render_state	ffmpeg/include/libavcodec/vdpau.h	/^struct vdpau_render_state {$/;"	s
vendor_id	glib/usbutil.c	/^    guint16 vendor_id;$/;"	m	struct:_usb_vendor_info	file:
verify	glib/spice-session-priv.h	/^    guint             verify;$/;"	m	struct:_SpiceSessionPrivate
verify	spice-common/common/verify.h	241;"	d
verify_expr	spice-common/common/verify.h	235;"	d
verify_hostname	spice-common/common/ssl_verify.c	/^static int verify_hostname(X509* cert, const char *hostname)$/;"	f	file:
verify_pubkey	spice-common/common/ssl_verify.c	/^static int verify_pubkey(X509* cert, const char *key, size_t key_size)$/;"	f	file:
verify_subject	spice-common/common/ssl_verify.c	/^static int verify_subject(X509* cert, SpiceOpenSSLVerify* verify)$/;"	f	file:
verify_true	spice-common/common/verify.h	230;"	d
verifyop	spice-common/common/ssl_verify.h	/^    SPICE_SSL_VERIFY_OP verifyop;$/;"	m	struct:__anon131
version	ffmpeg/include/libavutil/log.h	/^    int version;$/;"	m	struct:AVClass
version	glib/win-usb-clerk.h	/^    UINT16 version;$/;"	m	struct:USBClerkHeader
version	spice-common/spice-protocol/spice/controller_prot.h	/^    uint32_t version;$/;"	m	struct:ControllerInitHeader
version	spice-common/spice-protocol/spice/foreign_menu_prot.h	/^    uint32_t version;$/;"	m	struct:FrgMenuInitHeader
version	spice-common/spice-protocol/spice/stats.h	/^    uint32_t version;$/;"	m	struct:SpiceStat
vertex_bufs	spice-common/common/glc.c	/^    TassVertexBuf *vertex_bufs;$/;"	m	struct:InternaCtx	file:
vertexs	spice-common/common/glc.c	/^    TassVertex vertexs[0];$/;"	m	struct:TassVertexBuf	file:
vfork	make/wconfigcommon.h	214;"	d
vi	win32/win32-spice-widget-priv.h	/^    XVisualInfo             *vi;$/;"	m	struct:_SpiceDisplayPrivate
vid	glib/usb-device-manager.c	/^    guint16 vid;$/;"	m	struct:_SpiceUsbDeviceInfo	file:
vid	glib/win-usb-clerk.h	/^    UINT16 vid;$/;"	m	struct:USBClerkDriverOp
vid	glib/win-usb-dev.c	/^    guint16 vid;$/;"	m	struct:_GUdevDeviceInfo	file:
video	ffmpeg/include/libavfilter/avfilter.h	/^    AVFilterBufferRefVideoProps *video; \/\/\/< video buffer specific properties$/;"	m	struct:AVFilterBufferRef
video_codec	ffmpeg/include/libavformat/avformat.h	/^    AVCodec *video_codec;$/;"	m	struct:AVFormatContext
video_codec	ffmpeg/include/libavformat/avformat.h	/^    enum AVCodecID video_codec;    \/**< default video codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
video_codec_id	ffmpeg/include/libavformat/avformat.h	/^    enum AVCodecID video_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
video_context	ffmpeg/include/libavcodec/d3d11va.h	/^    ID3D11VideoContext *video_context;$/;"	m	struct:AVD3D11VAContext
video_stype	ffmpeg/include/libavcodec/dv_profile.h	/^    int              video_stype;           \/* stype for VAUX source pack *\/$/;"	m	struct:AVDVProfile
virt_viewer_compare_version	win32/virt-viewer-util.c	/^virt_viewer_compare_version(const gchar *s1, const gchar *s2)$/;"	f
virt_viewer_error_quark	win32/virt-viewer-util.c	/^virt_viewer_error_quark(void)$/;"	f
virt_viewer_file_class_init	win32/virt-viewer-file.c	/^virt_viewer_file_class_init(VirtViewerFileClass* klass)$/;"	f	file:
virt_viewer_file_finalize	win32/virt-viewer-file.c	/^virt_viewer_file_finalize(GObject* object)$/;"	f	file:
virt_viewer_file_get_ca	win32/virt-viewer-file.c	/^virt_viewer_file_get_ca(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_color_depth	win32/virt-viewer-file.c	/^virt_viewer_file_get_color_depth(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_delete_this_file	win32/virt-viewer-file.c	/^virt_viewer_file_get_delete_this_file(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_disable_channels	win32/virt-viewer-file.c	/^virt_viewer_file_get_disable_channels(VirtViewerFile* self, gsize* length)$/;"	f
virt_viewer_file_get_disable_effects	win32/virt-viewer-file.c	/^virt_viewer_file_get_disable_effects(VirtViewerFile* self, gsize* length)$/;"	f
virt_viewer_file_get_enable_smartcard	win32/virt-viewer-file.c	/^virt_viewer_file_get_enable_smartcard(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_enable_usb_autoshare	win32/virt-viewer-file.c	/^virt_viewer_file_get_enable_usb_autoshare(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_enable_usbredir	win32/virt-viewer-file.c	/^virt_viewer_file_get_enable_usbredir(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_file_type	win32/virt-viewer-file.c	/^virt_viewer_file_get_file_type(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_fullscreen	win32/virt-viewer-file.c	/^virt_viewer_file_get_fullscreen(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_host	win32/virt-viewer-file.c	/^virt_viewer_file_get_host(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_host_subject	win32/virt-viewer-file.c	/^virt_viewer_file_get_host_subject(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_int	win32/virt-viewer-file.c	/^virt_viewer_file_get_int(VirtViewerFile* self, const gchar* key)$/;"	f	file:
virt_viewer_file_get_password	win32/virt-viewer-file.c	/^virt_viewer_file_get_password(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_port	win32/virt-viewer-file.c	/^virt_viewer_file_get_port(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_property	win32/virt-viewer-file.c	/^virt_viewer_file_get_property(GObject* object, guint property_id,$/;"	f	file:
virt_viewer_file_get_proxy	win32/virt-viewer-file.c	/^virt_viewer_file_get_proxy(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_release_cursor	win32/virt-viewer-file.c	/^virt_viewer_file_get_release_cursor(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_secure_attention	win32/virt-viewer-file.c	/^virt_viewer_file_get_secure_attention(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_secure_channels	win32/virt-viewer-file.c	/^virt_viewer_file_get_secure_channels(VirtViewerFile* self, gsize* length)$/;"	f
virt_viewer_file_get_smartcard_insert	win32/virt-viewer-file.c	/^virt_viewer_file_get_smartcard_insert(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_smartcard_remove	win32/virt-viewer-file.c	/^virt_viewer_file_get_smartcard_remove(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_string	win32/virt-viewer-file.c	/^virt_viewer_file_get_string(VirtViewerFile* self, const gchar* key)$/;"	f	file:
virt_viewer_file_get_string_list	win32/virt-viewer-file.c	/^virt_viewer_file_get_string_list(VirtViewerFile* self, const gchar* key, gsize* length)$/;"	f	file:
virt_viewer_file_get_title	win32/virt-viewer-file.c	/^virt_viewer_file_get_title(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_tls_ciphers	win32/virt-viewer-file.c	/^virt_viewer_file_get_tls_ciphers(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_tls_port	win32/virt-viewer-file.c	/^virt_viewer_file_get_tls_port(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_toggle_fullscreen	win32/virt-viewer-file.c	/^virt_viewer_file_get_toggle_fullscreen(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_usb_filter	win32/virt-viewer-file.c	/^virt_viewer_file_get_usb_filter(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_username	win32/virt-viewer-file.c	/^virt_viewer_file_get_username(VirtViewerFile* self)$/;"	f
virt_viewer_file_get_version	win32/virt-viewer-file.c	/^virt_viewer_file_get_version(VirtViewerFile* self)$/;"	f
virt_viewer_file_init	win32/virt-viewer-file.c	/^virt_viewer_file_init(VirtViewerFile* self)$/;"	f	file:
virt_viewer_file_is_set	win32/virt-viewer-file.c	/^virt_viewer_file_is_set(VirtViewerFile* self, const gchar* key)$/;"	f
virt_viewer_file_new	win32/virt-viewer-file.c	/^virt_viewer_file_new(const gchar* location, GError** error)$/;"	f
virt_viewer_file_set_ca	win32/virt-viewer-file.c	/^virt_viewer_file_set_ca(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_color_depth	win32/virt-viewer-file.c	/^virt_viewer_file_set_color_depth(VirtViewerFile* self, gint value)$/;"	f
virt_viewer_file_set_delete_this_file	win32/virt-viewer-file.c	/^virt_viewer_file_set_delete_this_file(VirtViewerFile* self, gint value)$/;"	f
virt_viewer_file_set_disable_channels	win32/virt-viewer-file.c	/^virt_viewer_file_set_disable_channels(VirtViewerFile* self, const gchar* const* value, gsize length)$/;"	f
virt_viewer_file_set_disable_effects	win32/virt-viewer-file.c	/^virt_viewer_file_set_disable_effects(VirtViewerFile* self, const gchar* const* value, gsize length)$/;"	f
virt_viewer_file_set_enable_smartcard	win32/virt-viewer-file.c	/^virt_viewer_file_set_enable_smartcard(VirtViewerFile* self, gint value)$/;"	f
virt_viewer_file_set_enable_usb_autoshare	win32/virt-viewer-file.c	/^virt_viewer_file_set_enable_usb_autoshare(VirtViewerFile* self, gint value)$/;"	f
virt_viewer_file_set_enable_usbredir	win32/virt-viewer-file.c	/^virt_viewer_file_set_enable_usbredir(VirtViewerFile* self, gint value)$/;"	f
virt_viewer_file_set_fullscreen	win32/virt-viewer-file.c	/^virt_viewer_file_set_fullscreen(VirtViewerFile* self, gint value)$/;"	f
virt_viewer_file_set_host	win32/virt-viewer-file.c	/^virt_viewer_file_set_host(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_host_subject	win32/virt-viewer-file.c	/^virt_viewer_file_set_host_subject(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_int	win32/virt-viewer-file.c	/^virt_viewer_file_set_int(VirtViewerFile* self, const gchar* key, gint value)$/;"	f	file:
virt_viewer_file_set_password	win32/virt-viewer-file.c	/^virt_viewer_file_set_password(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_port	win32/virt-viewer-file.c	/^virt_viewer_file_set_port(VirtViewerFile* self, gint value)$/;"	f
virt_viewer_file_set_property	win32/virt-viewer-file.c	/^virt_viewer_file_set_property(GObject* object, guint property_id,$/;"	f	file:
virt_viewer_file_set_proxy	win32/virt-viewer-file.c	/^virt_viewer_file_set_proxy(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_release_cursor	win32/virt-viewer-file.c	/^virt_viewer_file_set_release_cursor(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_secure_attention	win32/virt-viewer-file.c	/^virt_viewer_file_set_secure_attention(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_secure_channels	win32/virt-viewer-file.c	/^virt_viewer_file_set_secure_channels(VirtViewerFile* self, const gchar* const* value, gsize length)$/;"	f
virt_viewer_file_set_smartcard_insert	win32/virt-viewer-file.c	/^virt_viewer_file_set_smartcard_insert(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_smartcard_remove	win32/virt-viewer-file.c	/^virt_viewer_file_set_smartcard_remove(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_string	win32/virt-viewer-file.c	/^virt_viewer_file_set_string(VirtViewerFile* self, const gchar* key, const gchar* value)$/;"	f	file:
virt_viewer_file_set_string_list	win32/virt-viewer-file.c	/^virt_viewer_file_set_string_list(VirtViewerFile* self, const gchar* key, const gchar* const* value, gsize length)$/;"	f	file:
virt_viewer_file_set_title	win32/virt-viewer-file.c	/^virt_viewer_file_set_title(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_tls_ciphers	win32/virt-viewer-file.c	/^virt_viewer_file_set_tls_ciphers(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_tls_port	win32/virt-viewer-file.c	/^virt_viewer_file_set_tls_port(VirtViewerFile* self, gint value)$/;"	f
virt_viewer_file_set_toggle_fullscreen	win32/virt-viewer-file.c	/^virt_viewer_file_set_toggle_fullscreen(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_type	win32/virt-viewer-file.c	/^virt_viewer_file_set_type(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_usb_filter	win32/virt-viewer-file.c	/^virt_viewer_file_set_usb_filter(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_username	win32/virt-viewer-file.c	/^virt_viewer_file_set_username(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_file_set_version	win32/virt-viewer-file.c	/^virt_viewer_file_set_version(VirtViewerFile* self, const gchar* value)$/;"	f
virt_viewer_signal_connect_object	win32/virt-viewer-util.c	/^gulong virt_viewer_signal_connect_object(gpointer instance,$/;"	f
virt_viewer_util_extract_host	win32/virt-viewer-util.c	/^virt_viewer_util_extract_host(const char *uristr,$/;"	f
virt_viewer_util_init	win32/virt-viewer-util.c	/^void virt_viewer_util_init(const char *appname)$/;"	f
virtual_ip	spice-common/common/messages.h	/^    SpiceMsgTunnelIpInfo virtual_ip;$/;"	m	struct:SpiceMsgTunnelServiceIpMap
visibilty	spice-common/common/messages.h	/^    uint32_t visibilty;$/;"	m	struct:SpiceMsgNotify
visible	spice-common/common/messages.h	/^    uint8_t visible;$/;"	m	struct:SpiceMsgCursorInit
visible	spice-common/common/messages.h	/^    uint8_t visible;$/;"	m	struct:SpiceMsgCursorSet
visible	spice-common/spice-protocol/spice/qxl_dev.h	/^            uint8_t visible;$/;"	m	struct:QXLCursorCmd::__anon70::SPICE_ATTR_PACKED
vmc_write_free_cb	glib/channel-base.c	/^vmc_write_free_cb(uint8_t *data, void *user_data)$/;"	f	file:
volume	glib/channel-playback.c	/^    guint16                     *volume;$/;"	m	struct:_SpicePlaybackChannelPrivate	file:
volume	glib/channel-record.c	/^    guint16                     *volume;$/;"	m	struct:_SpiceRecordChannelPrivate	file:
volume	spice-common/common/messages.h	/^    uint16_t volume[0];$/;"	m	struct:SpiceMsgAudioVolume
vvFileName	win32/win32_spice_interface.c	/^    gchar vvFileName[1024*2];$/;"	m	struct:SpiceConnectARGS	file:
w	ffmpeg/include/libavcodec/avcodec.h	/^    int w;         \/\/\/< width            of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
w	ffmpeg/include/libavfilter/avfilter.h	/^    int w, h;                   \/\/\/< width and height of the allocated buffer$/;"	m	struct:AVFilterBuffer
w	ffmpeg/include/libavfilter/avfilter.h	/^    int w;                      \/\/\/< agreed upon image width$/;"	m	struct:AVFilterLink
w	ffmpeg/include/libavfilter/avfilter.h	/^    int w;                      \/\/\/< image width$/;"	m	struct:AVFilterBufferRefVideoProps
w	ffmpeg/include/libavutil/motion_vector.h	/^    uint8_t w, h;$/;"	m	struct:AVMotionVector
w	win32/win32_spice_interface_types.h	/^   int w;$/;"	m	struct:SPICE_Invalidate
wait	glib/channel-base.c	/^    SpiceWaitForChannel *wait;$/;"	m	struct:WaitForChannelData	file:
waitFuncs	glib/gio-coroutine.c	/^GSourceFuncs waitFuncs = {$/;"	v
wait_count	spice-common/common/messages.h	/^    uint8_t wait_count;$/;"	m	struct:SpiceMsgWaitForChannels
wait_for_channel	glib/channel-base.c	/^static gboolean wait_for_channel(gpointer data)$/;"	f	file:
wait_for_image	glib/decode-glz.c	/^static gboolean wait_for_image(gpointer data)$/;"	f	file:
wait_for_image_data	glib/decode-glz.c	/^struct wait_for_image_data {$/;"	s	file:
wait_id	glib/gio-coroutine.h	/^    guint wait_id;$/;"	m	struct:_GCoroutine
wait_image	glib/channel-display.c	/^static gboolean wait_image(gpointer data)$/;"	f	file:
wait_list	spice-common/common/messages.h	/^    SpiceWaitForChannel wait_list[0];$/;"	m	struct:SpiceMsgWaitForChannels
wait_migration	glib/spice-channel.c	/^static gboolean wait_migration(gpointer data)$/;"	f	file:
waitcnt	spice-common/common/quic.c	/^    unsigned int waitcnt;$/;"	m	struct:CommonState	file:
warn	spice-common/common/lz.h	/^    SPICE_ATTR_PRINTF(2, 3) void (*warn)(LzUsrContext *usr, const char *fmt, ...);$/;"	m	struct:LzUsrContext
warn	spice-common/common/quic.h	/^    SPICE_ATTR_PRINTF(2, 3) void (*warn)(QuicUsrContext *usr, const char *fmt, ...);$/;"	m	struct:QuicUsrContext
webdav	glib/spice-session-priv.h	/^    PhodavServer      *webdav;$/;"	m	struct:_SpiceSessionPrivate
webdav_handle_msg	glib/channel-webdav.c	/^static void webdav_handle_msg(SpiceChannel *channel, SpiceMsgIn *in)$/;"	f	file:
webdav_magic	glib/spice-session-priv.h	/^    guint8             webdav_magic[16];$/;"	m	struct:_SpiceSessionPrivate
webdav_server_new	glib/channel-webdav.c	/^static PhodavServer* webdav_server_new(SpiceSession *session)$/;"	f	file:
wh	win32/win32-spice-widget-priv.h	/^    gint                    ww, wh, mx, my;$/;"	m	struct:_SpiceDisplayPrivate
what	spice-common/common/messages.h	/^    uint32_t what;$/;"	m	struct:SpiceMsgNotify
whc_free	glib/spice-util.c	/^whc_free (WeakHandlerCtx *ctx)$/;"	f	file:
whc_free	win32/virt-viewer-util.c	/^whc_free(WeakHandlerCtx *ctx)$/;"	f	file:
whc_new	glib/spice-util.c	/^whc_new (GObject *instance,$/;"	f	file:
whc_new	win32/virt-viewer-util.c	/^whc_new(GObject *instance,$/;"	f	file:
while_loop	spice-common/python_modules/codegen.py	/^    def while_loop(self, expr):$/;"	m	class:CodeWriter
whiteness	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLWhiteness whiteness;$/;"	m	union:QXLCompatDrawable::__anon75
whiteness	spice-common/spice-protocol/spice/qxl_dev.h	/^        QXLWhiteness whiteness;$/;"	m	union:QXLDrawable::__anon76
width	examples/test_bmp.c	/^int width ;$/;"	v
width	ffmpeg/include/libavcodec/avcodec.h	/^    int width, height;$/;"	m	struct:AVCodecContext
width	ffmpeg/include/libavcodec/avcodec.h	/^    int width;$/;"	m	struct:AVCodecParserContext
width	ffmpeg/include/libavcodec/avcodec.h	/^    int width;$/;"	m	struct:AVPanScan
width	ffmpeg/include/libavcodec/dv_profile.h	/^    int              width;                 \/* picture width in pixels *\/$/;"	m	struct:AVDVProfile
width	ffmpeg/include/libavcodec/vda.h	/^    int                 width;$/;"	m	struct:vda_context
width	ffmpeg/include/libavdevice/avdevice.h	/^    int width;  \/**< width *\/$/;"	m	struct:AVDeviceRect
width	ffmpeg/include/libavutil/frame.h	/^    int width, height;$/;"	m	struct:AVFrame
width	glib/channel-display-priv.h	/^    int                         width, height, stride, size;$/;"	m	struct:display_surface
width	glib/channel-display.h	/^    gint width;$/;"	m	struct:_SpiceDisplayPrimary
width	glib/channel-display.h	/^    guint width;$/;"	m	struct:_SpiceDisplayMonitorConfig
width	glib/channel-main.c	/^        int                     width;$/;"	m	struct:_SpiceMainChannelPrivate::__anon16	file:
width	glib/decode-glz.c	/^    uint32_t                width;$/;"	m	struct:glz_image_hdr	file:
width	glib/h264_type.h	/^    int width;$/;"	m	struct:_H264StreamInfo
width	spice-common/common/canvas_base.c	/^    int width;$/;"	m	struct:CanvasBase	file:
width	spice-common/common/draw.h	/^    uint16_t width;$/;"	m	struct:SpiceCursorHeader
width	spice-common/common/draw.h	/^    uint16_t width;$/;"	m	struct:SpiceRasterGlyph
width	spice-common/common/draw.h	/^    uint32_t width;$/;"	m	struct:SpiceImageDescriptor
width	spice-common/common/glc.c	/^    int width;$/;"	m	struct:FillMaskInfo	file:
width	spice-common/common/glc.c	/^    int width;$/;"	m	struct:InternaCtx	file:
width	spice-common/common/glc.c	/^    int width;$/;"	m	struct:InternalPat	file:
width	spice-common/common/glc.h	/^    double width;$/;"	m	struct:GLCRect
width	spice-common/common/glc.h	/^    int width;$/;"	m	struct:GLCPImage
width	spice-common/common/glc.h	/^    int width;$/;"	m	struct:GLCRecti
width	spice-common/common/lines.h	/^    int width;$/;"	m	struct:lineGC
width	spice-common/common/lz.c	/^    int width;                       \/\/ the original width (in pixels)$/;"	m	struct:Encoder	file:
width	spice-common/common/messages.h	/^    uint32_t width;$/;"	m	struct:SpiceMsgDisplayHead
width	spice-common/common/messages.h	/^    uint32_t width;$/;"	m	struct:SpiceMsgDisplayStreamDataSized
width	spice-common/common/messages.h	/^    uint32_t width;$/;"	m	struct:SpiceMsgSurfaceCreate
width	spice-common/common/quic.c	/^    unsigned int width;$/;"	m	struct:Encoder	file:
width	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLFIXED width;$/;"	m	struct:QXLLineAttr
width	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t width;$/;"	m	struct:QXLCursorHeader
width	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint16_t width;$/;"	m	struct:QXLRasterGlyph
width	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t width;$/;"	m	struct:QXLHead
width	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t width;$/;"	m	struct:QXLImageDescriptor
width	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t width;$/;"	m	struct:QXLSurface
width	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t width;$/;"	m	struct:QXLSurfaceCreate
width	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t width;$/;"	m	struct:VDAgentMonConfig
width	win32/win32-spice-widget-priv.h	/^    gint                    width, height, stride;$/;"	m	struct:_SpiceDisplayPrivate
width	win32/win32_spice_interface_types.h	/^   int width;$/;"	m	struct:SPICE_CursorSet
width	win32/win32_spice_interface_types.h	/^   int width;$/;"	m	struct:SPICE_SettringChange
widths	spice-common/common/lines.c	/^    int *widths;                \/* pointer to list of widths        *\/$/;"	m	struct:__anon147	file:
win32_io_h	win32/win32_io.h	2;"	d
win32_service_h	win32/win32_service.h	2;"	d
win32_spice_interface_h	win32/win32_spice_interface.h	2;"	d
win32_spice_interface_priv_h	win32/win32_spice_interface_priv.h	2;"	d
win32_spice_interface_types_h	win32/win32_spice_interface_types.h	2;"	d
win32key2spice	win32/win32_io.c	/^int win32key2spice (int keycode)$/;"	f
win_head_dist	glib/decode-glz.c	/^    uint32_t                win_head_dist;$/;"	m	struct:glz_image_hdr	file:
win_mouse	win32/win32-spice-widget-priv.h	/^    int                     win_mouse[3];$/;"	m	struct:_SpiceDisplayPrivate
win_mouse_speed	win32/win32-spice-widget-priv.h	/^    int                     win_mouse_speed;$/;"	m	struct:_SpiceDisplayPrivate
win_usb_driver_handle_reply_cb	glib/win-usb-driver-install.c	/^void win_usb_driver_handle_reply_cb(GObject *gobject,$/;"	f
win_x	win32/win32-spicy.h	/^    gint             win_x;$/;"	m	struct:_SpiceWindow
win_y	win32/win32-spicy.h	/^    gint             win_y;$/;"	m	struct:_SpiceWindow
window	glib/decode-glz.c	/^    SpiceGlzDecoderWindow     *window;$/;"	m	struct:wait_for_image_data	file:
window	glib/decode-glz.c	/^    SpiceGlzDecoderWindow   *window;$/;"	m	struct:GlibGlzDecoder	file:
window	spice-common/common/messages.h	/^    uint32_t window;$/;"	m	struct:SpiceMsgSetAck
window_height	ffmpeg/include/libavdevice/avdevice.h	/^    int window_height;$/;"	m	struct:AVDeviceCapabilitiesQuery
window_width	ffmpeg/include/libavdevice/avdevice.h	/^    int window_width;$/;"	m	struct:AVDeviceCapabilitiesQuery
wins	win32/win32-spicy.h	/^    SpiceWindow     *wins[CHANNELID_MAX * MONITORID_MAX];$/;"	m	struct:spice_connection
wm_trigger	spice-common/common/quic.c	/^    unsigned int wm_trigger;$/;"	m	struct:CommonState	file:
wmidx	spice-common/common/quic.c	/^    unsigned int wmidx;$/;"	m	struct:CommonState	file:
wmileft	spice-common/common/quic.c	/^    unsigned int wmileft;$/;"	m	struct:CommonState	file:
wmimax	spice-common/common/quic.c	/^static int wmimax = DEFwmimax;$/;"	v	file:
wminext	spice-common/common/quic.c	/^static int wminext = DEFwminext;$/;"	v	file:
wnd_proc	glib/win-usb-dev.c	/^static LRESULT CALLBACK wnd_proc(HWND hwnd, UINT message, WPARAM wparam, LPARAM lparam)$/;"	f	file:
wndx	ffmpeg/include/libavutil/fifo.h	/^    uint32_t rndx, wndx;$/;"	m	struct:AVFifoBuffer
wocky_http_proxy_class_init	glib/wocky-http-proxy.c	/^wocky_http_proxy_class_init (WockyHttpProxyClass *class)$/;"	f	file:
wocky_http_proxy_connect	glib/wocky-http-proxy.c	/^wocky_http_proxy_connect (GProxy *proxy,$/;"	f	file:
wocky_http_proxy_connect_async	glib/wocky-http-proxy.c	/^wocky_http_proxy_connect_async (GProxy *proxy,$/;"	f	file:
wocky_http_proxy_connect_finish	glib/wocky-http-proxy.c	/^wocky_http_proxy_connect_finish (GProxy *proxy,$/;"	f	file:
wocky_http_proxy_get_type	glib/wocky-http-proxy.c	44;"	d	file:
wocky_http_proxy_iface_init	glib/wocky-http-proxy.c	/^wocky_http_proxy_iface_init (GProxyInterface *proxy_iface)$/;"	f	file:
wocky_http_proxy_init	glib/wocky-http-proxy.c	/^wocky_http_proxy_init (WockyHttpProxy *proxy)$/;"	f	file:
wocky_http_proxy_supports_hostname	glib/wocky-http-proxy.c	/^wocky_http_proxy_supports_hostname (GProxy *proxy)$/;"	f	file:
wocky_https_proxy_class_init	glib/wocky-http-proxy.c	/^wocky_https_proxy_class_init (WockyHttpsProxyClass *class)$/;"	f	file:
wocky_https_proxy_get_type	glib/wocky-http-proxy.c	526;"	d	file:
wocky_https_proxy_init	glib/wocky-http-proxy.c	/^wocky_https_proxy_init (WockyHttpsProxy *proxy)$/;"	f	file:
workaround	ffmpeg/include/libavcodec/d3d11va.h	/^    uint64_t workaround;$/;"	m	struct:AVD3D11VAContext
workaround	ffmpeg/include/libavcodec/dxva2.h	/^    uint64_t workaround;$/;"	m	struct:dxva_context
workaround_bugs	ffmpeg/include/libavcodec/avcodec.h	/^    int workaround_bugs;$/;"	m	struct:AVCodecContext
wptr	ffmpeg/include/libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
write	spice-common/python_modules/codegen.py	/^    def write(self, s):$/;"	m	class:CodeWriter
write_array_marshaller	spice-common/python_modules/marshal.py	/^def write_array_marshaller(writer, member, array, container_src, scope):$/;"	f
write_array_parser	spice-common/python_modules/demarshal.py	/^def write_array_parser(writer, member, nelements, array, dest, scope):$/;"	f
write_cb	glib/vmcstream.c	/^write_cb(GObject *source_object,$/;"	f	file:
write_channel_enums	spice-common/spice_codegen.py	/^def write_channel_enums(writer, channel, client, describe):$/;"	f
write_channel_parser	spice-common/python_modules/demarshal.py	/^def write_channel_parser(writer, channel, server):$/;"	f
write_channel_type_enum	spice-common/spice_codegen.py	/^def write_channel_type_enum(writer, describe=False):$/;"	f
write_container_marshaller	spice-common/python_modules/marshal.py	/^def write_container_marshaller(writer, container, src):$/;"	f
write_container_parser	spice-common/python_modules/demarshal.py	/^def write_container_parser(writer, container, dest):$/;"	f
write_enums	spice-common/spice_codegen.py	/^def write_enums(writer, describe=False):$/;"	f
write_flag	ffmpeg/include/libavformat/avio.h	/^    int write_flag;         \/**< true if open for writing *\/$/;"	m	struct:AVIOContext
write_full_protocol_parser	spice-common/python_modules/demarshal.py	/^def write_full_protocol_parser(writer, is_server):$/;"	f
write_get_channel_parser	spice-common/python_modules/demarshal.py	/^def write_get_channel_parser(writer, channel_parsers, max_channel, is_server):$/;"	f
write_header	ffmpeg/include/libavformat/avformat.h	/^    int (*write_header)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
write_includes	spice-common/python_modules/demarshal.py	/^def write_includes(writer):$/;"	f
write_includes	spice-common/python_modules/marshal.py	/^def write_includes(writer):$/;"	f
write_int16	spice-common/common/generated_client_demarshallers.c	43;"	d	file:
write_int16	spice-common/common/generated_client_demarshallers.c	60;"	d	file:
write_int16	spice-common/common/generated_client_demarshallers1.c	43;"	d	file:
write_int16	spice-common/common/generated_client_demarshallers1.c	60;"	d	file:
write_int16	spice-common/common/generated_server_demarshallers.c	43;"	d	file:
write_int16	spice-common/common/generated_server_demarshallers.c	60;"	d	file:
write_int16	spice-common/common/marshaller.c	31;"	d	file:
write_int16	spice-common/common/marshaller.c	40;"	d	file:
write_int32	spice-common/common/generated_client_demarshallers.c	47;"	d	file:
write_int32	spice-common/common/generated_client_demarshallers.c	64;"	d	file:
write_int32	spice-common/common/generated_client_demarshallers1.c	47;"	d	file:
write_int32	spice-common/common/generated_client_demarshallers1.c	64;"	d	file:
write_int32	spice-common/common/generated_server_demarshallers.c	47;"	d	file:
write_int32	spice-common/common/generated_server_demarshallers.c	64;"	d	file:
write_int32	spice-common/common/marshaller.c	33;"	d	file:
write_int32	spice-common/common/marshaller.c	42;"	d	file:
write_int64	spice-common/common/generated_client_demarshallers.c	51;"	d	file:
write_int64	spice-common/common/generated_client_demarshallers.c	68;"	d	file:
write_int64	spice-common/common/generated_client_demarshallers1.c	51;"	d	file:
write_int64	spice-common/common/generated_client_demarshallers1.c	68;"	d	file:
write_int64	spice-common/common/generated_server_demarshallers.c	51;"	d	file:
write_int64	spice-common/common/generated_server_demarshallers.c	68;"	d	file:
write_int64	spice-common/common/marshaller.c	35;"	d	file:
write_int64	spice-common/common/marshaller.c	44;"	d	file:
write_int8	spice-common/common/generated_client_demarshallers.c	39;"	d	file:
write_int8	spice-common/common/generated_client_demarshallers.c	56;"	d	file:
write_int8	spice-common/common/generated_client_demarshallers1.c	39;"	d	file:
write_int8	spice-common/common/generated_client_demarshallers1.c	56;"	d	file:
write_int8	spice-common/common/generated_server_demarshallers.c	39;"	d	file:
write_int8	spice-common/common/generated_server_demarshallers.c	56;"	d	file:
write_int8	spice-common/common/marshaller.c	29;"	d	file:
write_int8	spice-common/common/marshaller.c	38;"	d	file:
write_io_word	spice-common/common/quic.c	/^static inline void write_io_word(Encoder *encoder)$/;"	f	file:
write_marshal_ptr_function	spice-common/python_modules/marshal.py	/^def write_marshal_ptr_function(writer, target_type, is_helper=True):$/;"	f
write_member_marshaller	spice-common/python_modules/marshal.py	/^def write_member_marshaller(writer, container, member, src, scope):$/;"	f
write_member_parser	spice-common/python_modules/demarshal.py	/^def write_member_parser(writer, container, member, dest, scope):$/;"	f
write_message_marshaller	spice-common/python_modules/marshal.py	/^def write_message_marshaller(writer, message, is_server, private):$/;"	f
write_msg_parser	spice-common/python_modules/demarshal.py	/^def write_msg_parser(writer, message):$/;"	f
write_nofree	spice-common/python_modules/demarshal.py	/^def write_nofree(writer):$/;"	f
write_packet	ffmpeg/include/libavformat/avformat.h	/^    int (*write_packet)(struct AVFormatContext *, AVPacket *pkt);$/;"	m	struct:AVOutputFormat
write_packet	ffmpeg/include/libavformat/avio.h	/^    int (*write_packet)(void *opaque, uint8_t *buf, int buf_size);$/;"	m	struct:AVIOContext
write_parse_pointer	spice-common/python_modules/demarshal.py	/^def write_parse_pointer(writer, t, at_end, dest, member_name, scope):$/;"	f
write_parse_pointer_core	spice-common/python_modules/demarshal.py	/^def write_parse_pointer_core(writer, target_type, offset, at_end, dest, member_name, scope):$/;"	f
write_parse_ptr_function	spice-common/python_modules/demarshal.py	/^def write_parse_ptr_function(writer, target_type):$/;"	f
write_parse_to_pointer	spice-common/python_modules/demarshal.py	/^def write_parse_to_pointer(writer, t, at_end, dest, member_name, scope):$/;"	f
write_parser_helpers	spice-common/python_modules/demarshal.py	/^def write_parser_helpers(writer):$/;"	f
write_pointer_marshaller	spice-common/python_modules/marshal.py	/^def write_pointer_marshaller(writer, member, src):$/;"	f
write_protocol_marshaller	spice-common/python_modules/marshal.py	/^def write_protocol_marshaller(writer, proto, is_server, private_marshallers):$/;"	f
write_protocol_parser	spice-common/python_modules/demarshal.py	/^def write_protocol_parser(writer, proto, is_server):$/;"	f
write_ptr_info_check	spice-common/python_modules/demarshal.py	/^def write_ptr_info_check(writer):$/;"	f
write_read_primitive	spice-common/python_modules/demarshal.py	/^def write_read_primitive(writer, start, container, name, scope):$/;"	f
write_read_primitive_item	spice-common/python_modules/demarshal.py	/^def write_read_primitive_item(writer, item, scope):$/;"	f
write_switch_marshaller	spice-common/python_modules/marshal.py	/^def write_switch_marshaller(writer, container, switch, src, scope):$/;"	f
write_switch_parser	spice-common/python_modules/demarshal.py	/^def write_switch_parser(writer, container, switch, dest, scope):$/;"	f
write_trailer	ffmpeg/include/libavformat/avformat.h	/^    int (*write_trailer)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
write_trailer	spice-common/python_modules/marshal.py	/^def write_trailer(writer):$/;"	f
write_uint16	spice-common/common/generated_client_demarshallers.c	45;"	d	file:
write_uint16	spice-common/common/generated_client_demarshallers.c	62;"	d	file:
write_uint16	spice-common/common/generated_client_demarshallers1.c	45;"	d	file:
write_uint16	spice-common/common/generated_client_demarshallers1.c	62;"	d	file:
write_uint16	spice-common/common/generated_server_demarshallers.c	45;"	d	file:
write_uint16	spice-common/common/generated_server_demarshallers.c	62;"	d	file:
write_uint16	spice-common/common/marshaller.c	32;"	d	file:
write_uint16	spice-common/common/marshaller.c	41;"	d	file:
write_uint32	spice-common/common/generated_client_demarshallers.c	49;"	d	file:
write_uint32	spice-common/common/generated_client_demarshallers.c	66;"	d	file:
write_uint32	spice-common/common/generated_client_demarshallers1.c	49;"	d	file:
write_uint32	spice-common/common/generated_client_demarshallers1.c	66;"	d	file:
write_uint32	spice-common/common/generated_server_demarshallers.c	49;"	d	file:
write_uint32	spice-common/common/generated_server_demarshallers.c	66;"	d	file:
write_uint32	spice-common/common/marshaller.c	34;"	d	file:
write_uint32	spice-common/common/marshaller.c	43;"	d	file:
write_uint64	spice-common/common/generated_client_demarshallers.c	53;"	d	file:
write_uint64	spice-common/common/generated_client_demarshallers.c	70;"	d	file:
write_uint64	spice-common/common/generated_client_demarshallers1.c	53;"	d	file:
write_uint64	spice-common/common/generated_client_demarshallers1.c	70;"	d	file:
write_uint64	spice-common/common/generated_server_demarshallers.c	53;"	d	file:
write_uint64	spice-common/common/generated_server_demarshallers.c	70;"	d	file:
write_uint64	spice-common/common/marshaller.c	36;"	d	file:
write_uint64	spice-common/common/marshaller.c	45;"	d	file:
write_uint8	spice-common/common/generated_client_demarshallers.c	41;"	d	file:
write_uint8	spice-common/common/generated_client_demarshallers.c	58;"	d	file:
write_uint8	spice-common/common/generated_client_demarshallers1.c	41;"	d	file:
write_uint8	spice-common/common/generated_client_demarshallers1.c	58;"	d	file:
write_uint8	spice-common/common/generated_server_demarshallers.c	41;"	d	file:
write_uint8	spice-common/common/generated_server_demarshallers.c	58;"	d	file:
write_uint8	spice-common/common/marshaller.c	30;"	d	file:
write_uint8	spice-common/common/marshaller.c	39;"	d	file:
write_uncoded_frame	ffmpeg/include/libavformat/avformat.h	/^    int (*write_uncoded_frame)(struct AVFormatContext *, int stream_index,$/;"	m	struct:AVOutputFormat
write_validate_array_item	spice-common/python_modules/demarshal.py	/^def write_validate_array_item(writer, container, item, scope, parent_scope, start,$/;"	f
write_validate_container	spice-common/python_modules/demarshal.py	/^def write_validate_container(writer, prefix, container, start, parent_scope, want_nw_size, want_mem_size, want_extra_size):$/;"	f
write_validate_item	spice-common/python_modules/demarshal.py	/^def write_validate_item(writer, container, item, scope, parent_scope, start,$/;"	f
write_validate_member	spice-common/python_modules/demarshal.py	/^def write_validate_member(writer, mprefix, container, member, parent_scope, start,$/;"	f
write_validate_pointer_item	spice-common/python_modules/demarshal.py	/^def write_validate_pointer_item(writer, container, item, scope, parent_scope, start,$/;"	f
write_validate_primitive_item	spice-common/python_modules/demarshal.py	/^def write_validate_primitive_item(writer, container, item, scope, parent_scope, start,$/;"	f
write_validate_struct_function	spice-common/python_modules/demarshal.py	/^def write_validate_struct_function(writer, struct):$/;"	f
write_validate_struct_item	spice-common/python_modules/demarshal.py	/^def write_validate_struct_item(writer, container, item, scope, parent_scope, start,$/;"	f
write_validate_switch_member	spice-common/python_modules/demarshal.py	/^def write_validate_switch_member(writer, mprefix, container, switch_member, scope, parent_scope, start,$/;"	f
write_write_primitive	spice-common/python_modules/demarshal.py	/^def write_write_primitive(writer, start, container, name, val):$/;"	f
writeln	spice-common/python_modules/codegen.py	/^    def writeln(self, s):$/;"	m	class:CodeWriter
writeout_count	ffmpeg/include/libavformat/avio.h	/^    int writeout_count;$/;"	m	struct:AVIOContext
writer	spice-common/spice_codegen.py	/^writer = codegen.CodeWriter()$/;"	v
ww	win32/win32-spice-widget-priv.h	/^    gint                    ww, wh, mx, my;$/;"	m	struct:_SpiceDisplayPrivate
x	ffmpeg/include/libavcodec/avcodec.h	/^    int x;         \/\/\/< top left corner  of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
x	ffmpeg/include/libavdevice/avdevice.h	/^    int x;      \/**< x coordinate of top left corner *\/$/;"	m	struct:AVDeviceRect
x	glib/channel-display.h	/^    guint x;$/;"	m	struct:_SpiceDisplayMonitorConfig
x	glib/channel-inputs.c	/^    unsigned int                x, y, dpy;$/;"	m	struct:_SpiceInputsChannelPrivate	file:
x	glib/channel-main.c	/^        int                     x;$/;"	m	struct:_SpiceMainChannelPrivate::__anon16	file:
x	spice-common/common/draw.h	/^    SPICE_FIXED28_4 x;$/;"	m	struct:SpicePointFix
x	spice-common/common/draw.h	/^    int16_t x;$/;"	m	struct:SpicePoint16
x	spice-common/common/draw.h	/^    int32_t x;$/;"	m	struct:SpicePoint
x	spice-common/common/draw.h	/^    uint32_t x;$/;"	m	struct:SpiceBitmap
x	spice-common/common/glc.c	/^    double x;$/;"	m	struct:PathPoint	file:
x	spice-common/common/glc.c	/^    double x;$/;"	m	struct:PathStroke	file:
x	spice-common/common/glc.h	/^    double x;$/;"	m	struct:GLCRect
x	spice-common/common/glc.h	/^    int x;$/;"	m	struct:GLCRecti
x	spice-common/common/lines.c	/^    double x, y;$/;"	m	struct:_PolyVertex	file:
x	spice-common/common/lines.c	/^    int x, y;$/;"	m	struct:_LineFace	file:
x	spice-common/common/lines.c	/^    int x;                      \/* starting x coordinate *\/$/;"	m	struct:_PolyEdge	file:
x	spice-common/common/messages.h	/^    uint32_t x;$/;"	m	struct:SpiceMsgDisplayHead
x	spice-common/common/messages.h	/^    uint32_t x;$/;"	m	struct:SpiceMsgcMousePosition
x	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLFIXED x;$/;"	m	struct:QXLPointFix
x	spice-common/spice-protocol/spice/qxl_dev.h	/^    int16_t x;$/;"	m	struct:QXLPoint16
x	spice-common/spice-protocol/spice/qxl_dev.h	/^    int32_t x;$/;"	m	struct:QXLPoint
x	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t x;$/;"	m	struct:QXLBitmap
x	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t x;$/;"	m	struct:QXLHead
x	spice-common/spice-protocol/spice/vd_agent.h	/^    int32_t x;$/;"	m	struct:VDAgentMonConfig
x	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t x;$/;"	m	struct:VDAgentMouseState
x	win32/win32_spice_interface_types.h	/^   int x;$/;"	m	struct:SPICE_CursorMove
x	win32/win32_spice_interface_types.h	/^   int x;$/;"	m	struct:SPICE_Invalidate
x11_accel_denominator	win32/win32-spice-widget-priv.h	/^    int                     x11_accel_denominator;$/;"	m	struct:_SpiceDisplayPrivate
x11_accel_numerator	win32/win32-spice-widget-priv.h	/^    int                     x11_accel_numerator;$/;"	m	struct:_SpiceDisplayPrivate
x11_threshold	win32/win32-spice-widget-priv.h	/^    int                     x11_threshold;$/;"	m	struct:_SpiceDisplayPrivate
x16	spice-common/common/rop3.c	/^ROP3_HANDLERS(PSDPSanaxx, (~(*pat & *src) & *dest) ^ *src ^ *pat, 0x16);$/;"	v
x86	spice-common/common/rop3.c	/^ROP3_HANDLERS(DSPDSoaxx, ((*src | *dest) & *pat) ^ *src ^ *dest, 0x86);$/;"	v
x92	spice-common/common/rop3.c	/^ROP3_HANDLERS(DPSDPoaxx, ((*pat | *dest) & *src) ^ *pat ^ *dest, 0x92);$/;"	v
x94	spice-common/common/rop3.c	/^ROP3_HANDLERS(PSDPSoaxx, ((*src | *pat) & *dest) ^ *src ^ *pat, 0x94);$/;"	v
x97	spice-common/common/rop3.c	/^ROP3_HANDLERS(PSDPSonoxx, (~(*src | *pat) | *dest) ^ *src ^ *pat, 0x97);$/;"	v
x9e	spice-common/common/rop3.c	/^ROP3_HANDLERS(DSPDSaoxx, ((*src & *dest) | *pat) ^ *src ^ *dest, 0x9e);$/;"	v
xRectangle	spice-common/common/lines.c	/^typedef pixman_rectangle32_t xRectangle;$/;"	t	file:
x_dest	spice-common/common/glc.c	/^    int x_dest;$/;"	m	struct:FillMaskInfo	file:
x_display	spice-common/common/ogl_ctx.c	/^    Display *x_display;$/;"	m	struct:OGLCtx	file:
x_mili	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t x_mili;$/;"	m	struct:QXLMode
x_orign	spice-common/common/glc.c	/^    int x_orign;$/;"	m	struct:InternalPat	file:
x_res	spice-common/common/messages.h	/^    uint32_t x_res;$/;"	m	struct:SpiceMsgDisplayMode
x_res	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t x_res;$/;"	m	struct:QXLMode
xa	spice-common/common/lines.c	/^    double xa, ya;$/;"	m	struct:_LineFace	file:
xalloc	spice-common/common/lines.c	64;"	d	file:
xb6	spice-common/common/rop3.c	/^ROP3_HANDLERS(DPSDPaoxx, ((*pat & *dest) | *src) ^ *pat ^ *dest, 0xb6);$/;"	v
xd6	spice-common/common/rop3.c	/^ROP3_HANDLERS(PSDPSaoxx, ((*src & *pat) | *dest) ^ *src ^ *pat, 0xd6);$/;"	v
xfree	spice-common/common/lines.c	66;"	d	file:
ximage	win32/win32-spice-widget-priv.h	/^    XImage                  *ximage;$/;"	m	struct:_SpiceDisplayPrivate
xlatL2U	spice-common/common/quic.c	/^    unsigned int xlatL2U[256];$/;"	m	struct:QuicFamily	file:
xlatU2L	spice-common/common/quic.c	/^    BYTE xlatU2L[256];$/;"	m	struct:QuicFamily	file:
xmit_queue	glib/spice-channel-priv.h	/^    GQueue                      xmit_queue;$/;"	m	struct:_SpiceChannelPrivate
xmit_queue_blocked	glib/spice-channel-priv.h	/^    gboolean                    xmit_queue_blocked;$/;"	m	struct:_SpiceChannelPrivate
xmit_queue_lock	glib/spice-channel-priv.h	/^    STATIC_MUTEX                xmit_queue_lock;$/;"	m	struct:_SpiceChannelPrivate
xmit_queue_wakeup_id	glib/spice-channel-priv.h	/^    guint                       xmit_queue_wakeup_id;$/;"	m	struct:_SpiceChannelPrivate
xrealloc	spice-common/common/lines.c	65;"	d	file:
xres	spice-common/spice-protocol/spice/qxl_windows.h	/^    uint32_t xres;$/;"	m	struct:QXLEscapeSetCustomDisplay
xvmc_acceleration	ffmpeg/include/libavcodec/avcodec.h	/^    attribute_deprecated int xvmc_acceleration;$/;"	m	struct:AVCodecContext
xvmc_id	ffmpeg/include/libavcodec/xvmc.h	/^    int             xvmc_id;$/;"	m	struct:xvmc_pix_fmt
xvmc_pix_fmt	ffmpeg/include/libavcodec/xvmc.h	/^attribute_deprecated struct xvmc_pix_fmt {$/;"	s
y	ffmpeg/include/libavcodec/avcodec.h	/^    int y;         \/\/\/< top left corner  of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
y	ffmpeg/include/libavdevice/avdevice.h	/^    int y;      \/**< y coordinate of top left corner *\/$/;"	m	struct:AVDeviceRect
y	glib/channel-display.h	/^    guint y;$/;"	m	struct:_SpiceDisplayMonitorConfig
y	glib/channel-inputs.c	/^    unsigned int                x, y, dpy;$/;"	m	struct:_SpiceInputsChannelPrivate	file:
y	glib/channel-main.c	/^        int                     y;$/;"	m	struct:_SpiceMainChannelPrivate::__anon16	file:
y	spice-common/common/draw.h	/^    SPICE_FIXED28_4 y;$/;"	m	struct:SpicePointFix
y	spice-common/common/draw.h	/^    int16_t y;$/;"	m	struct:SpicePoint16
y	spice-common/common/draw.h	/^    int32_t y;$/;"	m	struct:SpicePoint
y	spice-common/common/draw.h	/^    uint32_t y;$/;"	m	struct:SpiceBitmap
y	spice-common/common/glc.c	/^    double y;$/;"	m	struct:PathPoint	file:
y	spice-common/common/glc.c	/^    double y;$/;"	m	struct:PathStroke	file:
y	spice-common/common/glc.h	/^    double y;$/;"	m	struct:GLCRect
y	spice-common/common/glc.h	/^    int y;$/;"	m	struct:GLCRecti
y	spice-common/common/lines.c	/^    double x, y;$/;"	m	struct:_PolyVertex	file:
y	spice-common/common/lines.c	/^    int x, y;$/;"	m	struct:_LineFace	file:
y	spice-common/common/messages.h	/^    uint32_t y;$/;"	m	struct:SpiceMsgDisplayHead
y	spice-common/common/messages.h	/^    uint32_t y;$/;"	m	struct:SpiceMsgcMousePosition
y	spice-common/spice-protocol/spice/qxl_dev.h	/^    QXLFIXED y;$/;"	m	struct:QXLPointFix
y	spice-common/spice-protocol/spice/qxl_dev.h	/^    int16_t y;$/;"	m	struct:QXLPoint16
y	spice-common/spice-protocol/spice/qxl_dev.h	/^    int32_t y;$/;"	m	struct:QXLPoint
y	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t y;$/;"	m	struct:QXLBitmap
y	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t y;$/;"	m	struct:QXLHead
y	spice-common/spice-protocol/spice/vd_agent.h	/^    int32_t y;$/;"	m	struct:VDAgentMonConfig
y	spice-common/spice-protocol/spice/vd_agent.h	/^    uint32_t y;$/;"	m	struct:VDAgentMouseState
y	win32/win32_spice_interface_types.h	/^   int y;$/;"	m	struct:SPICE_CursorMove
y	win32/win32_spice_interface_types.h	/^   int y;$/;"	m	struct:SPICE_Invalidate
y_dest	spice-common/common/glc.c	/^    int y_dest;$/;"	m	struct:FillMaskInfo	file:
y_mili	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t y_mili;$/;"	m	struct:QXLMode
y_orign	spice-common/common/glc.c	/^    int y_orign;$/;"	m	struct:InternalPat	file:
y_res	spice-common/common/messages.h	/^    uint32_t y_res;$/;"	m	struct:SpiceMsgDisplayMode
y_res	spice-common/spice-protocol/spice/qxl_dev.h	/^    uint32_t y_res;$/;"	m	struct:QXLMode
ya	spice-common/common/lines.c	/^    double xa, ya;$/;"	m	struct:_LineFace	file:
ymax	spice-common/common/lines.c	/^    int ymin, ymax;             \/* Min, max y values encountered        *\/$/;"	m	struct:__anon148	file:
ymin	spice-common/common/lines.c	/^    int ymin, ymax;             \/* Min, max y values encountered        *\/$/;"	m	struct:__anon148	file:
yres	spice-common/spice-protocol/spice/qxl_windows.h	/^    uint32_t yres;$/;"	m	struct:QXLEscapeSetCustomDisplay
yuvframe	glib/h264_decoder.h	/^   AVFrame *yuvframe;$/;"	m	struct:_H264Decoder
z	spice-common/common/glc.c	/^    double z;$/;"	m	struct:PathPoint	file:
zeroLUT	spice-common/common/quic.c	/^static int zeroLUT[256]; \/* table to find out number of leading zeros *\/$/;"	v	file:
zlib	spice-common/common/canvas_base.c	/^    SpiceZlibDecoder* zlib;$/;"	m	struct:CanvasBase	file:
zlib_decoder	glib/channel-display-priv.h	/^    SpiceZlibDecoder            *zlib_decoder;$/;"	m	struct:display_surface
zlib_decoder_destroy	glib/decode-zlib.c	/^void zlib_decoder_destroy(SpiceZlibDecoder *decoder)$/;"	f
zlib_decoder_new	glib/decode-zlib.c	/^SpiceZlibDecoder *zlib_decoder_new(void)$/;"	f
zlib_decoder_ops	glib/decode-zlib.c	/^static SpiceZlibDecoderOps zlib_decoder_ops = {$/;"	v	file:
zlib_glz	spice-common/common/draw.h	/^        SpiceZlibGlzRGBData zlib_glz;$/;"	m	union:SpiceImage::__anon153
zoom_level	win32/win32-spice-widget-priv.h	/^    gint                    zoom_level;$/;"	m	struct:_SpiceDisplayPrivate
